
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         000294fc  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00004834  900297a0  900297a0  0002d7a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002f8  9002dfd4  9002dfd4  00031fd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002e2cc  9002e2cc  0008d1a0  2**0
                  CONTENTS
  6 .ARM          00000008  9002e2cc  9002e2cc  000322cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002e2d4  9002e2d4  0008d1a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002e2d4  9002e2d4  000322d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002e2ec  9002e2ec  000322ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000178  24000000  9002e2f4  00033000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_ScratchbufferA 00000100  24000180  9002e46c  00033180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferB 00000100  24000280  9002e56c  00033280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0002259c  24000380  9002e66c  00033380  2**3
                  ALLOC
 14 ._user_heap_stack 00002004  2402291c  9002e66c  0003391c  2**0
                  ALLOC
 15 .ARM.attributes 0000002e  00000000  00000000  0008d1a0  2**0
                  CONTENTS, READONLY
 16 FontFlashSection 00007404  90200000  90200000  00034000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TextFlashSection 0000009c  90207404  90207404  0003b404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 ExtFlashSection 00051d00  902074a0  902074a0  0003b4a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  0008e000  2**2
                  ALLOC
 20 .debug_line   0006fa8a  00000000  00000000  0008d1ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  000fcc58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   000cc5ed  00000000  00000000  000fccbe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 00015cc6  00000000  00000000  001c92ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00003648  00000000  00000000  001def78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a1cec  00000000  00000000  001e25c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 00006882  00000000  00000000  003842ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  000492f9  00000000  00000000  0038ab2e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  003d3e27  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000a870  00000000  00000000  003d3eec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 00031b8b  00000000  00000000  003de75c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000380 	.word	0x24000380
900002bc:	00000000 	.word	0x00000000
900002c0:	90029784 	.word	0x90029784

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24000384 	.word	0x24000384
900002dc:	90029784 	.word	0x90029784

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b9b5 	b.w	90000a84 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f84d 	bl	900007c8 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f840 	bl	900007c8 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f82f 	bl	900007c8 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f821 	bl	900007c8 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__aeabi_uldivmod>:
90000798:	b953      	cbnz	r3, 900007b0 <__aeabi_uldivmod+0x18>
9000079a:	b94a      	cbnz	r2, 900007b0 <__aeabi_uldivmod+0x18>
9000079c:	2900      	cmp	r1, #0
9000079e:	bf08      	it	eq
900007a0:	2800      	cmpeq	r0, #0
900007a2:	bf1c      	itt	ne
900007a4:	f04f 31ff 	movne.w	r1, #4294967295
900007a8:	f04f 30ff 	movne.w	r0, #4294967295
900007ac:	f000 b96a 	b.w	90000a84 <__aeabi_idiv0>
900007b0:	f1ad 0c08 	sub.w	ip, sp, #8
900007b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900007b8:	f000 f806 	bl	900007c8 <__udivmoddi4>
900007bc:	f8dd e004 	ldr.w	lr, [sp, #4]
900007c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900007c4:	b004      	add	sp, #16
900007c6:	4770      	bx	lr

900007c8 <__udivmoddi4>:
900007c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007cc:	9d08      	ldr	r5, [sp, #32]
900007ce:	460c      	mov	r4, r1
900007d0:	2b00      	cmp	r3, #0
900007d2:	d14e      	bne.n	90000872 <__udivmoddi4+0xaa>
900007d4:	4694      	mov	ip, r2
900007d6:	458c      	cmp	ip, r1
900007d8:	4686      	mov	lr, r0
900007da:	fab2 f282 	clz	r2, r2
900007de:	d962      	bls.n	900008a6 <__udivmoddi4+0xde>
900007e0:	b14a      	cbz	r2, 900007f6 <__udivmoddi4+0x2e>
900007e2:	f1c2 0320 	rsb	r3, r2, #32
900007e6:	4091      	lsls	r1, r2
900007e8:	fa20 f303 	lsr.w	r3, r0, r3
900007ec:	fa0c fc02 	lsl.w	ip, ip, r2
900007f0:	4319      	orrs	r1, r3
900007f2:	fa00 fe02 	lsl.w	lr, r0, r2
900007f6:	ea4f 471c 	mov.w	r7, ip, lsr #16
900007fa:	fa1f f68c 	uxth.w	r6, ip
900007fe:	fbb1 f4f7 	udiv	r4, r1, r7
90000802:	ea4f 431e 	mov.w	r3, lr, lsr #16
90000806:	fb07 1114 	mls	r1, r7, r4, r1
9000080a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000080e:	fb04 f106 	mul.w	r1, r4, r6
90000812:	4299      	cmp	r1, r3
90000814:	d90a      	bls.n	9000082c <__udivmoddi4+0x64>
90000816:	eb1c 0303 	adds.w	r3, ip, r3
9000081a:	f104 30ff 	add.w	r0, r4, #4294967295
9000081e:	f080 8112 	bcs.w	90000a46 <__udivmoddi4+0x27e>
90000822:	4299      	cmp	r1, r3
90000824:	f240 810f 	bls.w	90000a46 <__udivmoddi4+0x27e>
90000828:	3c02      	subs	r4, #2
9000082a:	4463      	add	r3, ip
9000082c:	1a59      	subs	r1, r3, r1
9000082e:	fa1f f38e 	uxth.w	r3, lr
90000832:	fbb1 f0f7 	udiv	r0, r1, r7
90000836:	fb07 1110 	mls	r1, r7, r0, r1
9000083a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000083e:	fb00 f606 	mul.w	r6, r0, r6
90000842:	429e      	cmp	r6, r3
90000844:	d90a      	bls.n	9000085c <__udivmoddi4+0x94>
90000846:	eb1c 0303 	adds.w	r3, ip, r3
9000084a:	f100 31ff 	add.w	r1, r0, #4294967295
9000084e:	f080 80fc 	bcs.w	90000a4a <__udivmoddi4+0x282>
90000852:	429e      	cmp	r6, r3
90000854:	f240 80f9 	bls.w	90000a4a <__udivmoddi4+0x282>
90000858:	4463      	add	r3, ip
9000085a:	3802      	subs	r0, #2
9000085c:	1b9b      	subs	r3, r3, r6
9000085e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90000862:	2100      	movs	r1, #0
90000864:	b11d      	cbz	r5, 9000086e <__udivmoddi4+0xa6>
90000866:	40d3      	lsrs	r3, r2
90000868:	2200      	movs	r2, #0
9000086a:	e9c5 3200 	strd	r3, r2, [r5]
9000086e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000872:	428b      	cmp	r3, r1
90000874:	d905      	bls.n	90000882 <__udivmoddi4+0xba>
90000876:	b10d      	cbz	r5, 9000087c <__udivmoddi4+0xb4>
90000878:	e9c5 0100 	strd	r0, r1, [r5]
9000087c:	2100      	movs	r1, #0
9000087e:	4608      	mov	r0, r1
90000880:	e7f5      	b.n	9000086e <__udivmoddi4+0xa6>
90000882:	fab3 f183 	clz	r1, r3
90000886:	2900      	cmp	r1, #0
90000888:	d146      	bne.n	90000918 <__udivmoddi4+0x150>
9000088a:	42a3      	cmp	r3, r4
9000088c:	d302      	bcc.n	90000894 <__udivmoddi4+0xcc>
9000088e:	4290      	cmp	r0, r2
90000890:	f0c0 80f0 	bcc.w	90000a74 <__udivmoddi4+0x2ac>
90000894:	1a86      	subs	r6, r0, r2
90000896:	eb64 0303 	sbc.w	r3, r4, r3
9000089a:	2001      	movs	r0, #1
9000089c:	2d00      	cmp	r5, #0
9000089e:	d0e6      	beq.n	9000086e <__udivmoddi4+0xa6>
900008a0:	e9c5 6300 	strd	r6, r3, [r5]
900008a4:	e7e3      	b.n	9000086e <__udivmoddi4+0xa6>
900008a6:	2a00      	cmp	r2, #0
900008a8:	f040 8090 	bne.w	900009cc <__udivmoddi4+0x204>
900008ac:	eba1 040c 	sub.w	r4, r1, ip
900008b0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900008b4:	fa1f f78c 	uxth.w	r7, ip
900008b8:	2101      	movs	r1, #1
900008ba:	fbb4 f6f8 	udiv	r6, r4, r8
900008be:	ea4f 431e 	mov.w	r3, lr, lsr #16
900008c2:	fb08 4416 	mls	r4, r8, r6, r4
900008c6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008ca:	fb07 f006 	mul.w	r0, r7, r6
900008ce:	4298      	cmp	r0, r3
900008d0:	d908      	bls.n	900008e4 <__udivmoddi4+0x11c>
900008d2:	eb1c 0303 	adds.w	r3, ip, r3
900008d6:	f106 34ff 	add.w	r4, r6, #4294967295
900008da:	d202      	bcs.n	900008e2 <__udivmoddi4+0x11a>
900008dc:	4298      	cmp	r0, r3
900008de:	f200 80cd 	bhi.w	90000a7c <__udivmoddi4+0x2b4>
900008e2:	4626      	mov	r6, r4
900008e4:	1a1c      	subs	r4, r3, r0
900008e6:	fa1f f38e 	uxth.w	r3, lr
900008ea:	fbb4 f0f8 	udiv	r0, r4, r8
900008ee:	fb08 4410 	mls	r4, r8, r0, r4
900008f2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008f6:	fb00 f707 	mul.w	r7, r0, r7
900008fa:	429f      	cmp	r7, r3
900008fc:	d908      	bls.n	90000910 <__udivmoddi4+0x148>
900008fe:	eb1c 0303 	adds.w	r3, ip, r3
90000902:	f100 34ff 	add.w	r4, r0, #4294967295
90000906:	d202      	bcs.n	9000090e <__udivmoddi4+0x146>
90000908:	429f      	cmp	r7, r3
9000090a:	f200 80b0 	bhi.w	90000a6e <__udivmoddi4+0x2a6>
9000090e:	4620      	mov	r0, r4
90000910:	1bdb      	subs	r3, r3, r7
90000912:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
90000916:	e7a5      	b.n	90000864 <__udivmoddi4+0x9c>
90000918:	f1c1 0620 	rsb	r6, r1, #32
9000091c:	408b      	lsls	r3, r1
9000091e:	fa22 f706 	lsr.w	r7, r2, r6
90000922:	431f      	orrs	r7, r3
90000924:	fa20 fc06 	lsr.w	ip, r0, r6
90000928:	fa04 f301 	lsl.w	r3, r4, r1
9000092c:	ea43 030c 	orr.w	r3, r3, ip
90000930:	40f4      	lsrs	r4, r6
90000932:	fa00 f801 	lsl.w	r8, r0, r1
90000936:	0c38      	lsrs	r0, r7, #16
90000938:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000093c:	fbb4 fef0 	udiv	lr, r4, r0
90000940:	fa1f fc87 	uxth.w	ip, r7
90000944:	fb00 441e 	mls	r4, r0, lr, r4
90000948:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
9000094c:	fb0e f90c 	mul.w	r9, lr, ip
90000950:	45a1      	cmp	r9, r4
90000952:	fa02 f201 	lsl.w	r2, r2, r1
90000956:	d90a      	bls.n	9000096e <__udivmoddi4+0x1a6>
90000958:	193c      	adds	r4, r7, r4
9000095a:	f10e 3aff 	add.w	sl, lr, #4294967295
9000095e:	f080 8084 	bcs.w	90000a6a <__udivmoddi4+0x2a2>
90000962:	45a1      	cmp	r9, r4
90000964:	f240 8081 	bls.w	90000a6a <__udivmoddi4+0x2a2>
90000968:	f1ae 0e02 	sub.w	lr, lr, #2
9000096c:	443c      	add	r4, r7
9000096e:	eba4 0409 	sub.w	r4, r4, r9
90000972:	fa1f f983 	uxth.w	r9, r3
90000976:	fbb4 f3f0 	udiv	r3, r4, r0
9000097a:	fb00 4413 	mls	r4, r0, r3, r4
9000097e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
90000982:	fb03 fc0c 	mul.w	ip, r3, ip
90000986:	45a4      	cmp	ip, r4
90000988:	d907      	bls.n	9000099a <__udivmoddi4+0x1d2>
9000098a:	193c      	adds	r4, r7, r4
9000098c:	f103 30ff 	add.w	r0, r3, #4294967295
90000990:	d267      	bcs.n	90000a62 <__udivmoddi4+0x29a>
90000992:	45a4      	cmp	ip, r4
90000994:	d965      	bls.n	90000a62 <__udivmoddi4+0x29a>
90000996:	3b02      	subs	r3, #2
90000998:	443c      	add	r4, r7
9000099a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
9000099e:	fba0 9302 	umull	r9, r3, r0, r2
900009a2:	eba4 040c 	sub.w	r4, r4, ip
900009a6:	429c      	cmp	r4, r3
900009a8:	46ce      	mov	lr, r9
900009aa:	469c      	mov	ip, r3
900009ac:	d351      	bcc.n	90000a52 <__udivmoddi4+0x28a>
900009ae:	d04e      	beq.n	90000a4e <__udivmoddi4+0x286>
900009b0:	b155      	cbz	r5, 900009c8 <__udivmoddi4+0x200>
900009b2:	ebb8 030e 	subs.w	r3, r8, lr
900009b6:	eb64 040c 	sbc.w	r4, r4, ip
900009ba:	fa04 f606 	lsl.w	r6, r4, r6
900009be:	40cb      	lsrs	r3, r1
900009c0:	431e      	orrs	r6, r3
900009c2:	40cc      	lsrs	r4, r1
900009c4:	e9c5 6400 	strd	r6, r4, [r5]
900009c8:	2100      	movs	r1, #0
900009ca:	e750      	b.n	9000086e <__udivmoddi4+0xa6>
900009cc:	f1c2 0320 	rsb	r3, r2, #32
900009d0:	fa20 f103 	lsr.w	r1, r0, r3
900009d4:	fa0c fc02 	lsl.w	ip, ip, r2
900009d8:	fa24 f303 	lsr.w	r3, r4, r3
900009dc:	4094      	lsls	r4, r2
900009de:	430c      	orrs	r4, r1
900009e0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900009e4:	fa00 fe02 	lsl.w	lr, r0, r2
900009e8:	fa1f f78c 	uxth.w	r7, ip
900009ec:	fbb3 f0f8 	udiv	r0, r3, r8
900009f0:	fb08 3110 	mls	r1, r8, r0, r3
900009f4:	0c23      	lsrs	r3, r4, #16
900009f6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900009fa:	fb00 f107 	mul.w	r1, r0, r7
900009fe:	4299      	cmp	r1, r3
90000a00:	d908      	bls.n	90000a14 <__udivmoddi4+0x24c>
90000a02:	eb1c 0303 	adds.w	r3, ip, r3
90000a06:	f100 36ff 	add.w	r6, r0, #4294967295
90000a0a:	d22c      	bcs.n	90000a66 <__udivmoddi4+0x29e>
90000a0c:	4299      	cmp	r1, r3
90000a0e:	d92a      	bls.n	90000a66 <__udivmoddi4+0x29e>
90000a10:	3802      	subs	r0, #2
90000a12:	4463      	add	r3, ip
90000a14:	1a5b      	subs	r3, r3, r1
90000a16:	b2a4      	uxth	r4, r4
90000a18:	fbb3 f1f8 	udiv	r1, r3, r8
90000a1c:	fb08 3311 	mls	r3, r8, r1, r3
90000a20:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
90000a24:	fb01 f307 	mul.w	r3, r1, r7
90000a28:	42a3      	cmp	r3, r4
90000a2a:	d908      	bls.n	90000a3e <__udivmoddi4+0x276>
90000a2c:	eb1c 0404 	adds.w	r4, ip, r4
90000a30:	f101 36ff 	add.w	r6, r1, #4294967295
90000a34:	d213      	bcs.n	90000a5e <__udivmoddi4+0x296>
90000a36:	42a3      	cmp	r3, r4
90000a38:	d911      	bls.n	90000a5e <__udivmoddi4+0x296>
90000a3a:	3902      	subs	r1, #2
90000a3c:	4464      	add	r4, ip
90000a3e:	1ae4      	subs	r4, r4, r3
90000a40:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
90000a44:	e739      	b.n	900008ba <__udivmoddi4+0xf2>
90000a46:	4604      	mov	r4, r0
90000a48:	e6f0      	b.n	9000082c <__udivmoddi4+0x64>
90000a4a:	4608      	mov	r0, r1
90000a4c:	e706      	b.n	9000085c <__udivmoddi4+0x94>
90000a4e:	45c8      	cmp	r8, r9
90000a50:	d2ae      	bcs.n	900009b0 <__udivmoddi4+0x1e8>
90000a52:	ebb9 0e02 	subs.w	lr, r9, r2
90000a56:	eb63 0c07 	sbc.w	ip, r3, r7
90000a5a:	3801      	subs	r0, #1
90000a5c:	e7a8      	b.n	900009b0 <__udivmoddi4+0x1e8>
90000a5e:	4631      	mov	r1, r6
90000a60:	e7ed      	b.n	90000a3e <__udivmoddi4+0x276>
90000a62:	4603      	mov	r3, r0
90000a64:	e799      	b.n	9000099a <__udivmoddi4+0x1d2>
90000a66:	4630      	mov	r0, r6
90000a68:	e7d4      	b.n	90000a14 <__udivmoddi4+0x24c>
90000a6a:	46d6      	mov	lr, sl
90000a6c:	e77f      	b.n	9000096e <__udivmoddi4+0x1a6>
90000a6e:	4463      	add	r3, ip
90000a70:	3802      	subs	r0, #2
90000a72:	e74d      	b.n	90000910 <__udivmoddi4+0x148>
90000a74:	4606      	mov	r6, r0
90000a76:	4623      	mov	r3, r4
90000a78:	4608      	mov	r0, r1
90000a7a:	e70f      	b.n	9000089c <__udivmoddi4+0xd4>
90000a7c:	3e02      	subs	r6, #2
90000a7e:	4463      	add	r3, ip
90000a80:	e730      	b.n	900008e4 <__udivmoddi4+0x11c>
90000a82:	bf00      	nop

90000a84 <__aeabi_idiv0>:
90000a84:	4770      	bx	lr
90000a86:	bf00      	nop

90000a88 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000a88:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000ac0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a8c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a8e:	e003      	b.n	90000a98 <LoopCopyDataInit>

90000a90 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a90:	4b0c      	ldr	r3, [pc, #48]	@ (90000ac4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a92:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a94:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a96:	3104      	adds	r1, #4

90000a98 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a98:	480b      	ldr	r0, [pc, #44]	@ (90000ac8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a9a:	4b0c      	ldr	r3, [pc, #48]	@ (90000acc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a9c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a9e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000aa0:	d3f6      	bcc.n	90000a90 <CopyDataInit>
  ldr  r2, =_sbss
90000aa2:	4a0b      	ldr	r2, [pc, #44]	@ (90000ad0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000aa4:	e002      	b.n	90000aac <LoopFillZerobss>

90000aa6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000aa6:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000aa8:	f842 3b04 	str.w	r3, [r2], #4

90000aac <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000aac:	4b09      	ldr	r3, [pc, #36]	@ (90000ad4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000aae:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000ab0:	d3f9      	bcc.n	90000aa6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000ab2:	f006 fccb 	bl	9000744c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000ab6:	f028 f989 	bl	90028dcc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000aba:	f002 ff1d 	bl	900038f8 <main>
  bx  lr    
90000abe:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000ac0:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000ac4:	9002e2f4 	.word	0x9002e2f4
  ldr  r0, =_sdata
90000ac8:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000acc:	24000178 	.word	0x24000178
  ldr  r2, =_sbss
90000ad0:	24000380 	.word	0x24000380
  ldr  r3, = _ebss
90000ad4:	2402291c 	.word	0x2402291c

90000ad8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000ad8:	e7fe      	b.n	90000ad8 <ADC3_IRQHandler>
	...

90000adc <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000adc:	4770      	bx	lr
90000ade:	bf00      	nop

90000ae0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000ae0:	4770      	bx	lr
90000ae2:	bf00      	nop

90000ae4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000ae4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000ae6:	f002 f91d 	bl	90002d24 <touchgfx_components_init>
    touchgfx_init();
}
90000aea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000aee:	f002 b89b 	b.w	90002c28 <touchgfx_init>
90000af2:	bf00      	nop

90000af4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000af4:	f002 b918 	b.w	90002d28 <touchgfx_taskEntry>

90000af8 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000af8:	6840      	ldr	r0, [r0, #4]
    }
90000afa:	4770      	bx	lr

90000afc <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000afc:	6041      	str	r1, [r0, #4]
    }
90000afe:	4770      	bx	lr

90000b00 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b00:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b04:	4b08      	ldr	r3, [pc, #32]	@ (90000b28 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000b06:	4a09      	ldr	r2, [pc, #36]	@ (90000b2c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b08:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000b0c:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000b10:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b14:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000b18:	430a      	orrs	r2, r1
90000b1a:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000b1e:	681a      	ldr	r2, [r3, #0]
90000b20:	f042 0201 	orr.w	r2, r2, #1
90000b24:	601a      	str	r2, [r3, #0]
}
90000b26:	4770      	bx	lr
90000b28:	e0001000 	.word	0xe0001000
90000b2c:	c5acce55 	.word	0xc5acce55

90000b30 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b30:	1a52      	subs	r2, r2, r1
90000b32:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b36:	fbb2 f0f3 	udiv	r0, r2, r3
90000b3a:	4770      	bx	lr

90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b3c:	4b01      	ldr	r3, [pc, #4]	@ (90000b44 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b3e:	6858      	ldr	r0, [r3, #4]
}
90000b40:	4770      	bx	lr
90000b42:	bf00      	nop
90000b44:	e0001000 	.word	0xe0001000

90000b48 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b48:	4770      	bx	lr
90000b4a:	bf00      	nop

90000b4c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b4c:	b510      	push	{r4, lr}
90000b4e:	4604      	mov	r4, r0
90000b50:	210c      	movs	r1, #12
90000b52:	f027 fa6d 	bl	90028030 <_ZdlPvj>
90000b56:	4620      	mov	r0, r4
90000b58:	bd10      	pop	{r4, pc}
90000b5a:	bf00      	nop

90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b5c:	6803      	ldr	r3, [r0, #0]
90000b5e:	4a0c      	ldr	r2, [pc, #48]	@ (90000b90 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b60:	691b      	ldr	r3, [r3, #16]
{
90000b62:	b510      	push	{r4, lr}
90000b64:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000b66:	b149      	cbz	r1, 90000b7c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b68:	4293      	cmp	r3, r2
90000b6a:	d10d      	bne.n	90000b88 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000b6c:	4b09      	ldr	r3, [pc, #36]	@ (90000b94 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b6e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b70:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000b72:	6863      	ldr	r3, [r4, #4]
90000b74:	1a9b      	subs	r3, r3, r2
90000b76:	4403      	add	r3, r0
90000b78:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000b7a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000b7c:	4293      	cmp	r3, r2
90000b7e:	d105      	bne.n	90000b8c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000b80:	4b04      	ldr	r3, [pc, #16]	@ (90000b94 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b82:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000b84:	60a0      	str	r0, [r4, #8]
}
90000b86:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b88:	4798      	blx	r3
90000b8a:	e7f1      	b.n	90000b70 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b8c:	4798      	blx	r3
90000b8e:	e7f9      	b.n	90000b84 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b90:	90000b3d 	.word	0x90000b3d
90000b94:	e0001000 	.word	0xe0001000

90000b98 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b98:	4770      	bx	lr
90000b9a:	bf00      	nop
90000b9c:	0000      	movs	r0, r0
	...

90000ba0 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000ba0:	b500      	push	{lr}
90000ba2:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000ba4:	2208      	movs	r2, #8
90000ba6:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000ba8:	2000      	movs	r0, #0
90000baa:	4669      	mov	r1, sp
    hTS.Width = 480;
90000bac:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000bc8 <_ZN20STM32TouchController4initEv+0x28>
90000bb0:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000bb4:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000bb8:	f006 fb5a 	bl	90007270 <BSP_TS_Init>
}
90000bbc:	b005      	add	sp, #20
90000bbe:	f85d fb04 	ldr.w	pc, [sp], #4
90000bc2:	bf00      	nop
90000bc4:	f3af 8000 	nop.w
90000bc8:	000001e0 	.word	0x000001e0
90000bcc:	00000110 	.word	0x00000110

90000bd0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000bd0:	b530      	push	{r4, r5, lr}
90000bd2:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000bd4:	2000      	movs	r0, #0
{
90000bd6:	460d      	mov	r5, r1
90000bd8:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000bda:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000bdc:	9001      	str	r0, [sp, #4]
90000bde:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000be2:	f006 fbd3 	bl	9000738c <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000be6:	9801      	ldr	r0, [sp, #4]
90000be8:	b120      	cbz	r0, 90000bf4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000bea:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000bec:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000bf0:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000bf2:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000bf4:	b005      	add	sp, #20
90000bf6:	bd30      	pop	{r4, r5, pc}

90000bf8 <_ZN20STM32TouchControllerD0Ev>:
90000bf8:	b510      	push	{r4, lr}
90000bfa:	4604      	mov	r4, r0
90000bfc:	2104      	movs	r1, #4
90000bfe:	f027 fa17 	bl	90028030 <_ZdlPvj>
90000c02:	4620      	mov	r0, r4
90000c04:	bd10      	pop	{r4, pc}
90000c06:	bf00      	nop

90000c08 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
90000c08:	b508      	push	{r3, lr}
    for (int id = 0; id <= 4; id++)
90000c0a:	2300      	movs	r3, #0
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000c0c:	2b03      	cmp	r3, #3
90000c0e:	d82b      	bhi.n	90000c68 <_ZN8touchgfx4GPIO4initEv+0x60>
90000c10:	e8df f003 	tbb	[pc, r3]
90000c14:	020c1620 	.word	0x020c1620
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000c18:	2140      	movs	r1, #64	@ 0x40
90000c1a:	4814      	ldr	r0, [pc, #80]	@ (90000c6c <_ZN8touchgfx4GPIO4initEv+0x64>)
90000c1c:	f007 f920 	bl	90007e60 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c20:	2801      	cmp	r0, #1
90000c22:	d101      	bne.n	90000c28 <_ZN8touchgfx4GPIO4initEv+0x20>
            GPIO_InvertedLevels[id] = 1;
90000c24:	4b12      	ldr	r3, [pc, #72]	@ (90000c70 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c26:	60d8      	str	r0, [r3, #12]
    for (int id = 0; id <= 4; id++)
90000c28:	2304      	movs	r3, #4
90000c2a:	e7ef      	b.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000c2c:	2140      	movs	r1, #64	@ 0x40
90000c2e:	4811      	ldr	r0, [pc, #68]	@ (90000c74 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c30:	f007 f916 	bl	90007e60 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c34:	2801      	cmp	r0, #1
90000c36:	d101      	bne.n	90000c3c <_ZN8touchgfx4GPIO4initEv+0x34>
            GPIO_InvertedLevels[id] = 1;
90000c38:	4b0d      	ldr	r3, [pc, #52]	@ (90000c70 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c3a:	6098      	str	r0, [r3, #8]
    for (int id = 0; id <= 4; id++)
90000c3c:	2303      	movs	r3, #3
90000c3e:	e7e5      	b.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c40:	2180      	movs	r1, #128	@ 0x80
90000c42:	480c      	ldr	r0, [pc, #48]	@ (90000c74 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c44:	f007 f90c 	bl	90007e60 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c48:	2801      	cmp	r0, #1
90000c4a:	d101      	bne.n	90000c50 <_ZN8touchgfx4GPIO4initEv+0x48>
            GPIO_InvertedLevels[id] = 1;
90000c4c:	4b08      	ldr	r3, [pc, #32]	@ (90000c70 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c4e:	6058      	str	r0, [r3, #4]
    for (int id = 0; id <= 4; id++)
90000c50:	2302      	movs	r3, #2
90000c52:	e7db      	b.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c54:	2108      	movs	r1, #8
90000c56:	4808      	ldr	r0, [pc, #32]	@ (90000c78 <_ZN8touchgfx4GPIO4initEv+0x70>)
90000c58:	f007 f902 	bl	90007e60 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c5c:	2801      	cmp	r0, #1
90000c5e:	d101      	bne.n	90000c64 <_ZN8touchgfx4GPIO4initEv+0x5c>
            GPIO_InvertedLevels[id] = 1;
90000c60:	4b03      	ldr	r3, [pc, #12]	@ (90000c70 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c62:	6018      	str	r0, [r3, #0]
    for (int id = 0; id <= 4; id++)
90000c64:	2301      	movs	r3, #1
90000c66:	e7d1      	b.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x4>
}
90000c68:	bd08      	pop	{r3, pc}
90000c6a:	bf00      	nop
90000c6c:	58020000 	.word	0x58020000
90000c70:	2400039c 	.word	0x2400039c
90000c74:	58020400 	.word	0x58020400
90000c78:	58021800 	.word	0x58021800

90000c7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c7c:	2803      	cmp	r0, #3
90000c7e:	d827      	bhi.n	90000cd0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c80:	e8df f000 	tbb	[pc, r0]
90000c84:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000c88:	4b12      	ldr	r3, [pc, #72]	@ (90000cd4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c8a:	2140      	movs	r1, #64	@ 0x40
90000c8c:	4812      	ldr	r0, [pc, #72]	@ (90000cd8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000c8e:	68da      	ldr	r2, [r3, #12]
90000c90:	fab2 f282 	clz	r2, r2
90000c94:	0952      	lsrs	r2, r2, #5
90000c96:	f007 b8e9 	b.w	90007e6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000c9a:	4b0e      	ldr	r3, [pc, #56]	@ (90000cd4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c9c:	2140      	movs	r1, #64	@ 0x40
90000c9e:	480f      	ldr	r0, [pc, #60]	@ (90000cdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000ca0:	689a      	ldr	r2, [r3, #8]
90000ca2:	fab2 f282 	clz	r2, r2
90000ca6:	0952      	lsrs	r2, r2, #5
90000ca8:	f007 b8e0 	b.w	90007e6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000cac:	4b09      	ldr	r3, [pc, #36]	@ (90000cd4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cae:	2180      	movs	r1, #128	@ 0x80
90000cb0:	480a      	ldr	r0, [pc, #40]	@ (90000cdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000cb2:	685a      	ldr	r2, [r3, #4]
90000cb4:	fab2 f282 	clz	r2, r2
90000cb8:	0952      	lsrs	r2, r2, #5
90000cba:	f007 b8d7 	b.w	90007e6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000cbe:	4b05      	ldr	r3, [pc, #20]	@ (90000cd4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cc0:	2108      	movs	r1, #8
90000cc2:	4807      	ldr	r0, [pc, #28]	@ (90000ce0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000cc4:	681a      	ldr	r2, [r3, #0]
90000cc6:	fab2 f282 	clz	r2, r2
90000cca:	0952      	lsrs	r2, r2, #5
90000ccc:	f007 b8ce 	b.w	90007e6c <HAL_GPIO_WritePin>
}
90000cd0:	4770      	bx	lr
90000cd2:	bf00      	nop
90000cd4:	2400039c 	.word	0x2400039c
90000cd8:	58020000 	.word	0x58020000
90000cdc:	58020400 	.word	0x58020400
90000ce0:	58021800 	.word	0x58021800

90000ce4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000ce4:	2803      	cmp	r0, #3
90000ce6:	d827      	bhi.n	90000d38 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000ce8:	e8df f000 	tbb	[pc, r0]
90000cec:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cf0:	4b12      	ldr	r3, [pc, #72]	@ (90000d3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cf2:	2140      	movs	r1, #64	@ 0x40
90000cf4:	4812      	ldr	r0, [pc, #72]	@ (90000d40 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000cf6:	68da      	ldr	r2, [r3, #12]
90000cf8:	3a00      	subs	r2, #0
90000cfa:	bf18      	it	ne
90000cfc:	2201      	movne	r2, #1
90000cfe:	f007 b8b5 	b.w	90007e6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000d02:	4b0e      	ldr	r3, [pc, #56]	@ (90000d3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d04:	2140      	movs	r1, #64	@ 0x40
90000d06:	480f      	ldr	r0, [pc, #60]	@ (90000d44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000d08:	689a      	ldr	r2, [r3, #8]
90000d0a:	3a00      	subs	r2, #0
90000d0c:	bf18      	it	ne
90000d0e:	2201      	movne	r2, #1
90000d10:	f007 b8ac 	b.w	90007e6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000d14:	4b09      	ldr	r3, [pc, #36]	@ (90000d3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d16:	2180      	movs	r1, #128	@ 0x80
90000d18:	480a      	ldr	r0, [pc, #40]	@ (90000d44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000d1a:	685a      	ldr	r2, [r3, #4]
90000d1c:	3a00      	subs	r2, #0
90000d1e:	bf18      	it	ne
90000d20:	2201      	movne	r2, #1
90000d22:	f007 b8a3 	b.w	90007e6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000d26:	4b05      	ldr	r3, [pc, #20]	@ (90000d3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d28:	2108      	movs	r1, #8
90000d2a:	4807      	ldr	r0, [pc, #28]	@ (90000d48 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000d2c:	681a      	ldr	r2, [r3, #0]
90000d2e:	3a00      	subs	r2, #0
90000d30:	bf18      	it	ne
90000d32:	2201      	movne	r2, #1
90000d34:	f007 b89a 	b.w	90007e6c <HAL_GPIO_WritePin>
}
90000d38:	4770      	bx	lr
90000d3a:	bf00      	nop
90000d3c:	2400039c 	.word	0x2400039c
90000d40:	58020000 	.word	0x58020000
90000d44:	58020400 	.word	0x58020400
90000d48:	58021800 	.word	0x58021800

90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d4c:	2803      	cmp	r0, #3
90000d4e:	d813      	bhi.n	90000d78 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d50:	e8df f000 	tbb	[pc, r0]
90000d54:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d58:	2140      	movs	r1, #64	@ 0x40
90000d5a:	4808      	ldr	r0, [pc, #32]	@ (90000d7c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d5c:	f007 b88a 	b.w	90007e74 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d60:	2140      	movs	r1, #64	@ 0x40
90000d62:	4807      	ldr	r0, [pc, #28]	@ (90000d80 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d64:	f007 b886 	b.w	90007e74 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d68:	2180      	movs	r1, #128	@ 0x80
90000d6a:	4805      	ldr	r0, [pc, #20]	@ (90000d80 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d6c:	f007 b882 	b.w	90007e74 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d70:	2108      	movs	r1, #8
90000d72:	4804      	ldr	r0, [pc, #16]	@ (90000d84 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d74:	f007 b87e 	b.w	90007e74 <HAL_GPIO_TogglePin>
}
90000d78:	4770      	bx	lr
90000d7a:	bf00      	nop
90000d7c:	58020000 	.word	0x58020000
90000d80:	58020400 	.word	0x58020400
90000d84:	58021800 	.word	0x58021800

90000d88 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d88:	2000      	movs	r0, #0
90000d8a:	4770      	bx	lr

90000d8c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d8c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d8e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d92:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d96:	4770      	bx	lr

90000d98 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d98:	2000      	movs	r0, #0
90000d9a:	4770      	bx	lr

90000d9c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d9c:	1e0a      	subs	r2, r1, #0
90000d9e:	4b03      	ldr	r3, [pc, #12]	@ (90000dac <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000da0:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000da2:	bf18      	it	ne
90000da4:	2201      	movne	r2, #1
90000da6:	701a      	strb	r2, [r3, #0]
    }
90000da8:	4770      	bx	lr
90000daa:	bf00      	nop
90000dac:	24021bdb 	.word	0x24021bdb

90000db0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000db0:	2000      	movs	r0, #0
90000db2:	4770      	bx	lr

90000db4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000db4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000db6:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000db8:	b103      	cbz	r3, 90000dbc <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000dba:	4718      	bx	r3
        }
    }
90000dbc:	4770      	bx	lr
90000dbe:	bf00      	nop

90000dc0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000dc0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000dc4:	4770      	bx	lr
90000dc6:	bf00      	nop

90000dc8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000dc8:	4770      	bx	lr
90000dca:	bf00      	nop

90000dcc <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000dcc:	b510      	push	{r4, lr}
90000dce:	4604      	mov	r4, r0
        swapFrameBuffers();
90000dd0:	f00f ffb8 	bl	90010d44 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000dd4:	6823      	ldr	r3, [r4, #0]
90000dd6:	4620      	mov	r0, r4
90000dd8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90000ddc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000de0:	4718      	bx	r3
90000de2:	bf00      	nop

90000de4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000de4:	f002 b8b6 	b.w	90002f54 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000de8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000de8:	f002 b8ba 	b.w	90002f60 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dec <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dec:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dee:	f002 f955 	bl	9000309c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000df2:	4812      	ldr	r0, [pc, #72]	@ (90000e3c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000df4:	2300      	movs	r3, #0
90000df6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dfa:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dfe:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e02:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000e06:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e0a:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000e0e:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e12:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e16:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e18:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000e1c:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e1e:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000e22:	1c5a      	adds	r2, r3, #1
90000e24:	d1f8      	bne.n	90000e18 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000e26:	f1ac 0c20 	sub.w	ip, ip, #32
90000e2a:	f11c 0f20 	cmn.w	ip, #32
90000e2e:	d1f0      	bne.n	90000e12 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e34:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e38:	bd10      	pop	{r4, pc}
90000e3a:	bf00      	nop
90000e3c:	e000ed00 	.word	0xe000ed00

90000e40 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e40:	f002 b864 	b.w	90002f0c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e44 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e44:	f002 b9ac 	b.w	900031a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e48 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e48:	f002 b996 	b.w	90003178 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e4c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e4c:	f002 b868 	b.w	90002f20 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e50:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e52:	4b09      	ldr	r3, [pc, #36]	@ (90000e78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e54:	881b      	ldrh	r3, [r3, #0]
90000e56:	428b      	cmp	r3, r1
90000e58:	d808      	bhi.n	90000e6c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e5a:	4b08      	ldr	r3, [pc, #32]	@ (90000e7c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e5c:	881b      	ldrh	r3, [r3, #0]
90000e5e:	4293      	cmp	r3, r2
90000e60:	d804      	bhi.n	90000e6c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e62:	4807      	ldr	r0, [pc, #28]	@ (90000e80 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e64:	4b07      	ldr	r3, [pc, #28]	@ (90000e84 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e66:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e68:	801a      	strh	r2, [r3, #0]
    }
90000e6a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e6c:	4b06      	ldr	r3, [pc, #24]	@ (90000e88 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e6e:	219e      	movs	r1, #158	@ 0x9e
90000e70:	4a06      	ldr	r2, [pc, #24]	@ (90000e8c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e72:	4807      	ldr	r0, [pc, #28]	@ (90000e90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e74:	f027 fc54 	bl	90028720 <__assert_func>
90000e78:	24021bd0 	.word	0x24021bd0
90000e7c:	24021bd2 	.word	0x24021bd2
90000e80:	24021bd6 	.word	0x24021bd6
90000e84:	24021bd8 	.word	0x24021bd8
90000e88:	90029820 	.word	0x90029820
90000e8c:	90029884 	.word	0x90029884
90000e90:	900298c8 	.word	0x900298c8

90000e94 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e94:	f00f bad2 	b.w	9001043c <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e98 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e98:	f00f b9a6 	b.w	900101e8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e9c <_ZN11TouchGFXHALD0Ev>:
90000e9c:	b510      	push	{r4, lr}
90000e9e:	4604      	mov	r4, r0
90000ea0:	2188      	movs	r1, #136	@ 0x88
90000ea2:	f027 f8c5 	bl	90028030 <_ZdlPvj>
90000ea6:	4620      	mov	r0, r4
90000ea8:	bd10      	pop	{r4, pc}
90000eaa:	bf00      	nop

90000eac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000eac:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000eb0:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90000eb4:	4b0b      	ldr	r3, [pc, #44]	@ (90000ee4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000eb6:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000eb8:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000eba:	d00b      	beq.n	90000ed4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000ebc:	b94a      	cbnz	r2, 90000ed2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000ebe:	4a0a      	ldr	r2, [pc, #40]	@ (90000ee8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000ec0:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ec4:	4909      	ldr	r1, [pc, #36]	@ (90000eec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ec6:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000ec8:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ecc:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000ece:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ed0:	8013      	strh	r3, [r2, #0]
        }
    }
90000ed2:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000ed4:	2a00      	cmp	r2, #0
90000ed6:	d0fc      	beq.n	90000ed2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ed8:	4a03      	ldr	r2, [pc, #12]	@ (90000ee8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000eda:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ede:	4903      	ldr	r1, [pc, #12]	@ (90000eec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000ee0:	e7f1      	b.n	90000ec6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000ee2:	bf00      	nop
90000ee4:	24021bd4 	.word	0x24021bd4
90000ee8:	24021bd2 	.word	0x24021bd2
90000eec:	24021bd0 	.word	0x24021bd0

90000ef0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ef0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ef2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ef6:	b118      	cbz	r0, 90000f00 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ef8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000efa:	6803      	ldr	r3, [r0, #0]
90000efc:	681b      	ldr	r3, [r3, #0]
90000efe:	4718      	bx	r3
    }
90000f00:	4770      	bx	lr
90000f02:	bf00      	nop

90000f04 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000f04:	6840      	ldr	r0, [r0, #4]
90000f06:	4a04      	ldr	r2, [pc, #16]	@ (90000f18 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000f08:	6803      	ldr	r3, [r0, #0]
90000f0a:	699b      	ldr	r3, [r3, #24]
90000f0c:	4293      	cmp	r3, r2
90000f0e:	d101      	bne.n	90000f14 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000f10:	2000      	movs	r0, #0
90000f12:	4770      	bx	lr
        return dma.getDMAType();
90000f14:	4718      	bx	r3
90000f16:	bf00      	nop
90000f18:	90000d89 	.word	0x90000d89

90000f1c <_ZN11TouchGFXHAL10initializeEv>:
{
90000f1c:	b538      	push	{r3, r4, r5, lr}
90000f1e:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f20:	f002 fac0 	bl	900034a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f24:	4a0b      	ldr	r2, [pc, #44]	@ (90000f54 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000f26:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f28:	490b      	ldr	r1, [pc, #44]	@ (90000f58 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000f2a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90000f2e:	4293      	cmp	r3, r2
90000f30:	d10d      	bne.n	90000f4e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f32:	4b0a      	ldr	r3, [pc, #40]	@ (90000f5c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f34:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f36:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f38:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f3a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90000f3e:	4628      	mov	r0, r5
90000f40:	f7ff fdde 	bl	90000b00 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f44:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f46:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f48:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f4c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f4e:	4620      	mov	r0, r4
90000f50:	4798      	blx	r3
90000f52:	e7f2      	b.n	90000f3a <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f54:	90000d9d 	.word	0x90000d9d
90000f58:	d0000000 	.word	0xd0000000
90000f5c:	24021bdb 	.word	0x24021bdb

90000f60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f60:	b1a9      	cbz	r1, 90000f8e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f62:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f64:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f66:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f68:	bf18      	it	ne
90000f6a:	2201      	movne	r2, #1
90000f6c:	490c      	ldr	r1, [pc, #48]	@ (90000fa0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f6e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f70:	6802      	ldr	r2, [r0, #0]
90000f72:	490c      	ldr	r1, [pc, #48]	@ (90000fa4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f74:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90000f78:	428a      	cmp	r2, r1
90000f7a:	d106      	bne.n	90000f8a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f7c:	1e19      	subs	r1, r3, #0
90000f7e:	4a0a      	ldr	r2, [pc, #40]	@ (90000fa8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f80:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f82:	bf18      	it	ne
90000f84:	2101      	movne	r1, #1
90000f86:	7011      	strb	r1, [r2, #0]
90000f88:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f8a:	4619      	mov	r1, r3
90000f8c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f8e:	4b07      	ldr	r3, [pc, #28]	@ (90000fac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f90:	f240 21d2 	movw	r1, #722	@ 0x2d2
90000f94:	4a06      	ldr	r2, [pc, #24]	@ (90000fb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f96:	4807      	ldr	r0, [pc, #28]	@ (90000fb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f98:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f9a:	f027 fbc1 	bl	90028720 <__assert_func>
90000f9e:	bf00      	nop
90000fa0:	24021bda 	.word	0x24021bda
90000fa4:	90000d9d 	.word	0x90000d9d
90000fa8:	24021bdb 	.word	0x24021bdb
90000fac:	90029910 	.word	0x90029910
90000fb0:	90029948 	.word	0x90029948
90000fb4:	900298c8 	.word	0x900298c8

90000fb8 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000fb8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000fba:	6803      	ldr	r3, [r0, #0]
{
90000fbc:	4604      	mov	r4, r0
90000fbe:	4d14      	ldr	r5, [pc, #80]	@ (90001010 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000fc0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90000fc4:	4798      	blx	r3
    enableInterrupts();
90000fc6:	6823      	ldr	r3, [r4, #0]
90000fc8:	4620      	mov	r0, r4
90000fca:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90000fcc:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000fce:	f001 f9ed 	bl	900023ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fd2:	6823      	ldr	r3, [r4, #0]
90000fd4:	4620      	mov	r0, r4
90000fd6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fd8:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000fda:	2201      	movs	r2, #1
90000fdc:	2180      	movs	r1, #128	@ 0x80
90000fde:	480d      	ldr	r0, [pc, #52]	@ (90001014 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fe0:	f006 ff44 	bl	90007e6c <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fe4:	2201      	movs	r2, #1
90000fe6:	480c      	ldr	r0, [pc, #48]	@ (90001018 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fe8:	4611      	mov	r1, r2
90000fea:	f006 ff3f 	bl	90007e6c <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fee:	f001 f9dd 	bl	900023ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000ff2:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000ff4:	4620      	mov	r0, r4
90000ff6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000ff8:	42ab      	cmp	r3, r5
90000ffa:	d107      	bne.n	9000100c <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000ffc:	f00f fea2 	bl	90010d44 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90001000:	6823      	ldr	r3, [r4, #0]
90001002:	4620      	mov	r0, r4
90001004:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90001008:	4798      	blx	r3
    }
9000100a:	e7f0      	b.n	90000fee <_ZN11TouchGFXHAL9taskEntryEv+0x36>
9000100c:	4798      	blx	r3
9000100e:	e7ee      	b.n	90000fee <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001010:	90000dcd 	.word	0x90000dcd
90001014:	58020c00 	.word	0x58020c00
90001018:	58022800 	.word	0x58022800

9000101c <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
9000101c:	4601      	mov	r1, r0
    {
9000101e:	b508      	push	{r3, lr}
        return instance;
90001020:	4b05      	ldr	r3, [pc, #20]	@ (90001038 <IdleTaskHook+0x1c>)
90001022:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90001024:	b121      	cbz	r1, 90001030 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90001026:	2101      	movs	r1, #1
90001028:	f00f fea6 	bl	90010d78 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
9000102c:	2001      	movs	r0, #1
9000102e:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001030:	f00f fea2 	bl	90010d78 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001034:	2001      	movs	r0, #1
90001036:	bd08      	pop	{r3, pc}
90001038:	24021bdc 	.word	0x24021bdc

9000103c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000103c:	6940      	ldr	r0, [r0, #20]
9000103e:	4770      	bx	lr

90001040 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001040:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001044:	4770      	bx	lr
90001046:	bf00      	nop

90001048 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001048:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000104a:	b10b      	cbz	r3, 90001050 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000104c:	2001      	movs	r0, #1
}
9000104e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001050:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001052:	3800      	subs	r0, #0
90001054:	bf18      	it	ne
90001056:	2001      	movne	r0, #1
90001058:	4770      	bx	lr
9000105a:	bf00      	nop

9000105c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000105c:	6880      	ldr	r0, [r0, #8]
9000105e:	4770      	bx	lr

90001060 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001060:	4770      	bx	lr
90001062:	bf00      	nop

90001064 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001064:	3004      	adds	r0, #4
{
90001066:	468c      	mov	ip, r1
    *data = videoInfo;
90001068:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000106a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000106e:	4770      	bx	lr

90001070 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001070:	4770      	bx	lr
90001072:	bf00      	nop

90001074 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001074:	b508      	push	{r3, lr}
    assert(0);
90001076:	4a03      	ldr	r2, [pc, #12]	@ (90001084 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001078:	f240 11f3 	movw	r1, #499	@ 0x1f3
9000107c:	4b02      	ldr	r3, [pc, #8]	@ (90001088 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000107e:	4803      	ldr	r0, [pc, #12]	@ (9000108c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001080:	f027 fb4e 	bl	90028720 <__assert_func>
90001084:	90029a74 	.word	0x90029a74
90001088:	90029a70 	.word	0x90029a70
9000108c:	90029ad0 	.word	0x90029ad0

90001090 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001090:	b510      	push	{r4, lr}
90001092:	4604      	mov	r4, r0
90001094:	2148      	movs	r1, #72	@ 0x48
90001096:	f026 ffcb 	bl	90028030 <_ZdlPvj>
9000109a:	4620      	mov	r0, r4
9000109c:	bd10      	pop	{r4, pc}
9000109e:	bf00      	nop

900010a0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
900010a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
900010a2:	6803      	ldr	r3, [r0, #0]
900010a4:	2901      	cmp	r1, #1
900010a6:	4d30      	ldr	r5, [pc, #192]	@ (90001168 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
900010a8:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
900010aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900010ac:	bf38      	it	cc
900010ae:	2101      	movcc	r1, #1
900010b0:	42ab      	cmp	r3, r5
900010b2:	460e      	mov	r6, r1
900010b4:	d13f      	bne.n	90001136 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
900010b6:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
900010b8:	42a9      	cmp	r1, r5
900010ba:	d947      	bls.n	9000114c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010bc:	1e6b      	subs	r3, r5, #1
900010be:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010c0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010c2:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010c6:	b338      	cbz	r0, 90001118 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010c8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010ca:	2b0f      	cmp	r3, #15
900010cc:	d940      	bls.n	90001150 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010ce:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010d0:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010d4:	68db      	ldr	r3, [r3, #12]
900010d6:	4631      	mov	r1, r6
900010d8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010da:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010dc:	2210      	movs	r2, #16
900010de:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010e0:	6803      	ldr	r3, [r0, #0]
900010e2:	691b      	ldr	r3, [r3, #16]
900010e4:	4798      	blx	r3
900010e6:	b198      	cbz	r0, 90001110 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010e8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ea:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010ec:	b1a3      	cbz	r3, 90001118 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010ee:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010f0:	7a93      	ldrb	r3, [r2, #10]
900010f2:	7a51      	ldrb	r1, [r2, #9]
900010f4:	041b      	lsls	r3, r3, #16
900010f6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010fa:	7a11      	ldrb	r1, [r2, #8]
900010fc:	7ad2      	ldrb	r2, [r2, #11]
900010fe:	430b      	orrs	r3, r1
90001100:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001104:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90001106:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001108:	3a04      	subs	r2, #4
9000110a:	441a      	add	r2, r3
9000110c:	61a2      	str	r2, [r4, #24]
}
9000110e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001110:	230d      	movs	r3, #13
90001112:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001116:	e7e7      	b.n	900010e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001118:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000111c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000111e:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001120:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
90001122:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001124:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001126:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001128:	041b      	lsls	r3, r3, #16
9000112a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000112e:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001130:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001134:	e7e6      	b.n	90001104 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90001136:	4798      	blx	r3
90001138:	4286      	cmp	r6, r0
9000113a:	d907      	bls.n	9000114c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
9000113c:	6823      	ldr	r3, [r4, #0]
9000113e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001140:	42ab      	cmp	r3, r5
90001142:	d00e      	beq.n	90001162 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001144:	4620      	mov	r0, r4
90001146:	4798      	blx	r3
90001148:	4605      	mov	r5, r0
9000114a:	e7b7      	b.n	900010bc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000114c:	4635      	mov	r5, r6
9000114e:	e7b5      	b.n	900010bc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001150:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001152:	4b06      	ldr	r3, [pc, #24]	@ (9000116c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001154:	4a06      	ldr	r2, [pc, #24]	@ (90001170 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001156:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001158:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000115c:	4805      	ldr	r0, [pc, #20]	@ (90001174 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000115e:	f027 fadf 	bl	90028720 <__assert_func>
    return videoInfo.number_of_frames;
90001162:	68a5      	ldr	r5, [r4, #8]
90001164:	e7aa      	b.n	900010bc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001166:	bf00      	nop
90001168:	9000105d 	.word	0x9000105d
9000116c:	90029b28 	.word	0x90029b28
90001170:	90029b3c 	.word	0x90029b3c
90001174:	90029ad0 	.word	0x90029ad0

90001178 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001178:	6943      	ldr	r3, [r0, #20]
{
9000117a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000117e:	2b00      	cmp	r3, #0
90001180:	f000 80c1 	beq.w	90001306 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001184:	4605      	mov	r5, r0
    if (reader != 0)
90001186:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001188:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000118a:	2800      	cmp	r0, #0
9000118c:	f000 80a1 	beq.w	900012d2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001190:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001192:	2b07      	cmp	r3, #7
90001194:	f240 80ac 	bls.w	900012f0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001198:	6803      	ldr	r3, [r0, #0]
9000119a:	4621      	mov	r1, r4
9000119c:	68db      	ldr	r3, [r3, #12]
9000119e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011a0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011a2:	2208      	movs	r2, #8
900011a4:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011a6:	6803      	ldr	r3, [r0, #0]
900011a8:	691b      	ldr	r3, [r3, #16]
900011aa:	4798      	blx	r3
900011ac:	2800      	cmp	r0, #0
900011ae:	f000 808c 	beq.w	900012ca <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011b2:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
900011b4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011b6:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
900011b8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011ba:	2800      	cmp	r0, #0
900011bc:	f000 808b 	beq.w	900012d6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011c0:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011c2:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011c4:	18a1      	adds	r1, r4, r2
900011c6:	5ca2      	ldrb	r2, [r4, r2]
900011c8:	788c      	ldrb	r4, [r1, #2]
900011ca:	784e      	ldrb	r6, [r1, #1]
900011cc:	0424      	lsls	r4, r4, #16
900011ce:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011d2:	4314      	orrs	r4, r2
900011d4:	78ca      	ldrb	r2, [r1, #3]
900011d6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011da:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011dc:	f243 0630 	movw	r6, #12336	@ 0x3030
900011e0:	e03a      	b.n	90001258 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011e2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011e4:	2b07      	cmp	r3, #7
900011e6:	f240 8083 	bls.w	900012f0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ea:	6803      	ldr	r3, [r0, #0]
900011ec:	4621      	mov	r1, r4
900011ee:	68db      	ldr	r3, [r3, #12]
900011f0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011f2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011f4:	2208      	movs	r2, #8
900011f6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011f8:	6803      	ldr	r3, [r0, #0]
900011fa:	691b      	ldr	r3, [r3, #16]
900011fc:	4798      	blx	r3
900011fe:	b908      	cbnz	r0, 90001204 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90001200:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
90001204:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90001206:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90001208:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000120a:	2800      	cmp	r0, #0
9000120c:	d079      	beq.n	90001302 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
9000120e:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001210:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001212:	18ca      	adds	r2, r1, r3
90001214:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001216:	7994      	ldrb	r4, [r2, #6]
90001218:	f892 a005 	ldrb.w	sl, [r2, #5]
9000121c:	0424      	lsls	r4, r4, #16
9000121e:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001222:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001226:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
9000122a:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000122c:	f892 8003 	ldrb.w	r8, [r2, #3]
90001230:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001234:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001238:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000123c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001240:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001244:	f246 3164 	movw	r1, #25444	@ 0x6364
90001248:	42b3      	cmp	r3, r6
9000124a:	bf08      	it	eq
9000124c:	428a      	cmpeq	r2, r1
9000124e:	bf0c      	ite	eq
90001250:	2301      	moveq	r3, #1
90001252:	2300      	movne	r3, #0
90001254:	d036      	beq.n	900012c4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001256:	69ab      	ldr	r3, [r5, #24]
90001258:	441c      	add	r4, r3
9000125a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000125c:	f104 0208 	add.w	r2, r4, #8
90001260:	429a      	cmp	r2, r3
90001262:	d22a      	bcs.n	900012ba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001264:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001266:	3409      	adds	r4, #9
        frameNumber++;
90001268:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000126a:	f024 0401 	bic.w	r4, r4, #1
9000126e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001272:	2800      	cmp	r0, #0
90001274:	d1b5      	bne.n	900011e2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001276:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001278:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000127a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000127e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001282:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001284:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001288:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000128c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001290:	188c      	adds	r4, r1, r2
        val |= d[0];
90001292:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001294:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001296:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000129a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000129e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
900012a2:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
900012a6:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
900012aa:	0424      	lsls	r4, r4, #16
900012ac:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
900012b0:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
900012b4:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
900012b8:	e7c4      	b.n	90001244 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
900012ba:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
900012bc:	6a2a      	ldr	r2, [r5, #32]
    return false;
900012be:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012c0:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012c4:	4618      	mov	r0, r3
900012c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012ca:	230d      	movs	r3, #13
900012cc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012d0:	e76f      	b.n	900011b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012d2:	1d22      	adds	r2, r4, #4
900012d4:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012d6:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012d8:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012da:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012dc:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012de:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012e0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012e2:	0424      	lsls	r4, r4, #16
900012e4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012e8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ea:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012ee:	e774      	b.n	900011da <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012f0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012f2:	4b08      	ldr	r3, [pc, #32]	@ (90001314 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012f4:	4a08      	ldr	r2, [pc, #32]	@ (90001318 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012f6:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012f8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012fc:	4807      	ldr	r0, [pc, #28]	@ (9000131c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012fe:	f027 fa0f 	bl	90028720 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90001302:	461c      	mov	r4, r3
90001304:	e7b7      	b.n	90001276 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001306:	4b06      	ldr	r3, [pc, #24]	@ (90001320 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
90001308:	21f5      	movs	r1, #245	@ 0xf5
9000130a:	4a06      	ldr	r2, [pc, #24]	@ (90001324 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
9000130c:	4803      	ldr	r0, [pc, #12]	@ (9000131c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
9000130e:	f027 fa07 	bl	90028720 <__assert_func>
90001312:	bf00      	nop
90001314:	90029b28 	.word	0x90029b28
90001318:	90029b3c 	.word	0x90029b3c
9000131c:	90029ad0 	.word	0x90029ad0
90001320:	90029b80 	.word	0x90029b80
90001324:	90029bcc 	.word	0x90029bcc

90001328 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001328:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000132a:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000132c:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000132e:	4b0e      	ldr	r3, [pc, #56]	@ (90001368 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001330:	2001      	movs	r0, #1
90001332:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001334:	63e2      	str	r2, [r4, #60]	@ 0x3c
90001336:	6023      	str	r3, [r4, #0]
90001338:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000133c:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001340:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001344:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001348:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000134c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001350:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001354:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001358:	f00b fece 	bl	9000d0f8 <osSemaphoreNew>
9000135c:	4b03      	ldr	r3, [pc, #12]	@ (9000136c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000135e:	4602      	mov	r2, r0
}
90001360:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001362:	601a      	str	r2, [r3, #0]
}
90001364:	bd10      	pop	{r4, pc}
90001366:	bf00      	nop
90001368:	90029d24 	.word	0x90029d24
9000136c:	240003f4 	.word	0x240003f4

90001370 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001370:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001374:	2100      	movs	r1, #0
    if (reader != 0)
90001376:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001378:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000137a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000137c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001380:	2e00      	cmp	r6, #0
90001382:	f000 81b3 	beq.w	900016ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001386:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001388:	2b47      	cmp	r3, #71	@ 0x47
9000138a:	f240 8270 	bls.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000138e:	6833      	ldr	r3, [r6, #0]
90001390:	4630      	mov	r0, r6
90001392:	68db      	ldr	r3, [r3, #12]
90001394:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001396:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001398:	2248      	movs	r2, #72	@ 0x48
9000139a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000139c:	6803      	ldr	r3, [r0, #0]
9000139e:	691b      	ldr	r3, [r3, #16]
900013a0:	4798      	blx	r3
900013a2:	2800      	cmp	r0, #0
900013a4:	f000 80b7 	beq.w	90001516 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
900013a8:	2300      	movs	r3, #0
    if (reader != 0)
900013aa:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900013ac:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900013ae:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
900013b0:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
900013b2:	2e00      	cmp	r6, #0
900013b4:	f000 819b 	beq.w	900016ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013b8:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900013bc:	2204      	movs	r2, #4
900013be:	49c3      	ldr	r1, [pc, #780]	@ (900016cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013c0:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013c4:	4620      	mov	r0, r4
900013c6:	f027 fc4f 	bl	90028c68 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013ca:	2800      	cmp	r0, #0
900013cc:	f040 825f 	bne.w	9000188e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013d0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013d4:	2204      	movs	r2, #4
900013d6:	49be      	ldr	r1, [pc, #760]	@ (900016d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013d8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013da:	4448      	add	r0, r9
900013dc:	f027 fc44 	bl	90028c68 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013e0:	2800      	cmp	r0, #0
900013e2:	f040 8268 	bne.w	900018b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013e6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ea:	2204      	movs	r2, #4
900013ec:	49b9      	ldr	r1, [pc, #740]	@ (900016d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013ee:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013f2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013f6:	f027 fc37 	bl	90028c68 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013fa:	4680      	mov	r8, r0
900013fc:	2800      	cmp	r0, #0
900013fe:	f040 8250 	bne.w	900018a2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001402:	7ca3      	ldrb	r3, [r4, #18]
90001404:	7c62      	ldrb	r2, [r4, #17]
90001406:	041b      	lsls	r3, r3, #16
90001408:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9000140c:	7c22      	ldrb	r2, [r4, #16]
9000140e:	4313      	orrs	r3, r2
90001410:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
90001412:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
90001416:	f000 8233 	beq.w	90001880 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
9000141a:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000141e:	2204      	movs	r2, #4
90001420:	49ad      	ldr	r1, [pc, #692]	@ (900016d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
90001422:	4448      	add	r0, r9
90001424:	f027 fc20 	bl	90028c68 <strncmp>
    if (compare(offset, "hdrl", 4))
90001428:	2800      	cmp	r0, #0
9000142a:	d078      	beq.n	9000151e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000142c:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000142e:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001432:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001436:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001438:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000143a:	2204      	movs	r2, #4
9000143c:	49a7      	ldr	r1, [pc, #668]	@ (900016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000143e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001440:	f027 fc12 	bl	90028c68 <strncmp>
    if (compare(offset, "avih", 4))
90001444:	2800      	cmp	r0, #0
90001446:	f000 80e6 	beq.w	90001616 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000144a:	2307      	movs	r3, #7
9000144c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001450:	f1ba 0f00 	cmp.w	sl, #0
90001454:	f000 8190 	beq.w	90001778 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001458:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000145a:	2b0b      	cmp	r3, #11
9000145c:	f240 8207 	bls.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001460:	f8da 3000 	ldr.w	r3, [sl]
90001464:	4621      	mov	r1, r4
90001466:	4650      	mov	r0, sl
90001468:	68db      	ldr	r3, [r3, #12]
9000146a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000146c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000146e:	220c      	movs	r2, #12
90001470:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001472:	6803      	ldr	r3, [r0, #0]
90001474:	691b      	ldr	r3, [r3, #16]
90001476:	4798      	blx	r3
90001478:	2800      	cmp	r0, #0
9000147a:	f000 8121 	beq.w	900016c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000147e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001482:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001484:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001486:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000148a:	f04f 090d 	mov.w	r9, #13
9000148e:	e003      	b.n	90001498 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001490:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001494:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001496:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001498:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000149c:	2e00      	cmp	r6, #0
9000149e:	d052      	beq.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014a0:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
900014a2:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014a4:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900014a6:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014a8:	1afb      	subs	r3, r7, r3
900014aa:	4418      	add	r0, r3
    return strncmp(src, str, num);
900014ac:	f027 fbdc 	bl	90028c68 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014b0:	2800      	cmp	r0, #0
900014b2:	d051      	beq.n	90001558 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
900014b4:	f1ba 0f00 	cmp.w	sl, #0
900014b8:	f040 80a8 	bne.w	9000160c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
900014bc:	6aab      	ldr	r3, [r5, #40]	@ 0x28
900014be:	42a3      	cmp	r3, r4
900014c0:	d94d      	bls.n	9000155e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014c2:	3404      	adds	r4, #4
    if (reader != 0)
900014c4:	b386      	cbz	r6, 90001528 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014c6:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014c8:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014cc:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014ce:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014d0:	eb01 0204 	add.w	r2, r1, r4
900014d4:	5d09      	ldrb	r1, [r1, r4]
900014d6:	7894      	ldrb	r4, [r2, #2]
900014d8:	7850      	ldrb	r0, [r2, #1]
900014da:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014de:	78d2      	ldrb	r2, [r2, #3]
900014e0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014e4:	ea44 0401 	orr.w	r4, r4, r1
900014e8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014ec:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014ee:	f240 81be 	bls.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014f2:	6833      	ldr	r3, [r6, #0]
900014f4:	4621      	mov	r1, r4
900014f6:	4630      	mov	r0, r6
900014f8:	68db      	ldr	r3, [r3, #12]
900014fa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014fc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014fe:	220c      	movs	r2, #12
90001500:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001502:	6803      	ldr	r3, [r0, #0]
90001504:	691b      	ldr	r3, [r3, #16]
90001506:	4798      	blx	r3
90001508:	2800      	cmp	r0, #0
9000150a:	d1c1      	bne.n	90001490 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
9000150c:	f04f 0a0d 	mov.w	sl, #13
90001510:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
90001514:	e7be      	b.n	90001494 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
90001516:	230d      	movs	r3, #13
90001518:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
9000151c:	e744      	b.n	900013a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
9000151e:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001522:	f04f 0801 	mov.w	r8, #1
90001526:	e786      	b.n	90001436 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
90001528:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
9000152a:	1913      	adds	r3, r2, r4
        val |= d[0];
9000152c:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
9000152e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001530:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001532:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001534:	0424      	lsls	r4, r4, #16
90001536:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000153a:	4314      	orrs	r4, r2
        val |= d[3] << 24;
9000153c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001540:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001542:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001546:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001548:	2204      	movs	r2, #4
9000154a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000154c:	2600      	movs	r6, #0
9000154e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001550:	f027 fb8a 	bl	90028c68 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001554:	2800      	cmp	r0, #0
90001556:	d1ad      	bne.n	900014b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001558:	f1ba 0f00 	cmp.w	sl, #0
9000155c:	d156      	bne.n	9000160c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000155e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001562:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001564:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001566:	2e00      	cmp	r6, #0
90001568:	f000 8118 	beq.w	9000179c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000156c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000156e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001570:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001574:	f104 0e02 	add.w	lr, r4, #2
90001578:	f104 0c01 	add.w	ip, r4, #1
9000157c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001580:	1ce0      	adds	r0, r4, #3
90001582:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001586:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001588:	f811 900c 	ldrb.w	r9, [r1, ip]
9000158c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001590:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001594:	ea43 0308 	orr.w	r3, r3, r8
90001598:	f811 8000 	ldrb.w	r8, [r1, r0]
9000159c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015a0:	443b      	add	r3, r7
900015a2:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015a4:	f811 300e 	ldrb.w	r3, [r1, lr]
900015a8:	f811 e00c 	ldrb.w	lr, [r1, ip]
900015ac:	f811 c004 	ldrb.w	ip, [r1, r4]
900015b0:	ea4f 4403 	mov.w	r4, r3, lsl #16
900015b4:	5c09      	ldrb	r1, [r1, r0]
900015b6:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
900015ba:	ea44 040c 	orr.w	r4, r4, ip
900015be:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015c2:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015c4:	f240 8153 	bls.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015c8:	6833      	ldr	r3, [r6, #0]
900015ca:	4621      	mov	r1, r4
900015cc:	4630      	mov	r0, r6
900015ce:	68db      	ldr	r3, [r3, #12]
900015d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015d2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015d4:	2204      	movs	r2, #4
900015d6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015d8:	6803      	ldr	r3, [r0, #0]
900015da:	691b      	ldr	r3, [r3, #16]
900015dc:	4798      	blx	r3
900015de:	2800      	cmp	r0, #0
900015e0:	f000 80cd 	beq.w	9000177e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015e4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015e6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015e8:	2b00      	cmp	r3, #0
900015ea:	f000 816e 	beq.w	900018ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015ee:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015f0:	2204      	movs	r2, #4
900015f2:	493b      	ldr	r1, [pc, #236]	@ (900016e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015f4:	f027 fb38 	bl	90028c68 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015f8:	2800      	cmp	r0, #0
900015fa:	f040 80ca 	bne.w	90001792 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015fe:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
90001600:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
90001602:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001604:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001606:	622b      	str	r3, [r5, #32]
}
90001608:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
9000160c:	230a      	movs	r3, #10
9000160e:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001612:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
90001616:	f1b8 0f00 	cmp.w	r8, #0
9000161a:	f43f af19 	beq.w	90001450 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
9000161e:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
90001622:	f1ba 0f00 	cmp.w	sl, #0
90001626:	f000 80d4 	beq.w	900017d2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
9000162a:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000162c:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001630:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001632:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001634:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001638:	f812 8001 	ldrb.w	r8, [r2, r1]
9000163c:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001640:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001644:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001648:	4438      	add	r0, r7
9000164a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000164c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001650:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001652:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001656:	041b      	lsls	r3, r3, #16
90001658:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000165c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001660:	ea43 0308 	orr.w	r3, r3, r8
90001664:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001668:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000166a:	fbac c303 	umull	ip, r3, ip, r3
9000166e:	099b      	lsrs	r3, r3, #6
90001670:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001672:	78bb      	ldrb	r3, [r7, #2]
90001674:	f897 e001 	ldrb.w	lr, [r7, #1]
90001678:	041b      	lsls	r3, r3, #16
9000167a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000167e:	78ff      	ldrb	r7, [r7, #3]
90001680:	1850      	adds	r0, r2, r1
90001682:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001686:	ea43 030c 	orr.w	r3, r3, ip
9000168a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000168e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001690:	7883      	ldrb	r3, [r0, #2]
90001692:	7847      	ldrb	r7, [r0, #1]
90001694:	041b      	lsls	r3, r3, #16
90001696:	5c51      	ldrb	r1, [r2, r1]
90001698:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000169c:	430b      	orrs	r3, r1
9000169e:	78c1      	ldrb	r1, [r0, #3]
900016a0:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
900016a4:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
900016a6:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900016a8:	788b      	ldrb	r3, [r1, #2]
900016aa:	7848      	ldrb	r0, [r1, #1]
900016ac:	041b      	lsls	r3, r3, #16
900016ae:	5d92      	ldrb	r2, [r2, r6]
900016b0:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900016b4:	4313      	orrs	r3, r2
900016b6:	78ca      	ldrb	r2, [r1, #3]
900016b8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900016bc:	612b      	str	r3, [r5, #16]
    if (reader != 0)
900016be:	e6cb      	b.n	90001458 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016c0:	230d      	movs	r3, #13
900016c2:	469a      	mov	sl, r3
900016c4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016c8:	e6db      	b.n	90001482 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016ca:	bf00      	nop
900016cc:	90029c00 	.word	0x90029c00
900016d0:	90029cb8 	.word	0x90029cb8
900016d4:	90029cb0 	.word	0x90029cb0
900016d8:	90029c84 	.word	0x90029c84
900016dc:	90029c98 	.word	0x90029c98
900016e0:	90029ca8 	.word	0x90029ca8
900016e4:	90029ca0 	.word	0x90029ca0
900016e8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016ec:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016ee:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016f2:	2204      	movs	r2, #4
900016f4:	4976      	ldr	r1, [pc, #472]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016f6:	eb09 0007 	add.w	r0, r9, r7
900016fa:	f027 fab5 	bl	90028c68 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016fe:	2800      	cmp	r0, #0
90001700:	f040 80c5 	bne.w	9000188e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
90001704:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001708:	2204      	movs	r2, #4
9000170a:	4972      	ldr	r1, [pc, #456]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
9000170c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000170e:	4448      	add	r0, r9
90001710:	f027 faaa 	bl	90028c68 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001714:	2800      	cmp	r0, #0
90001716:	f040 80ce 	bne.w	900018b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
9000171a:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
9000171e:	2204      	movs	r2, #4
90001720:	496d      	ldr	r1, [pc, #436]	@ (900018d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90001722:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
90001726:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000172a:	f027 fa9d 	bl	90028c68 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000172e:	4680      	mov	r8, r0
90001730:	2800      	cmp	r0, #0
90001732:	f040 80b6 	bne.w	900018a2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001736:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000173a:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
9000173e:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001742:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001744:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001746:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001748:	0424      	lsls	r4, r4, #16
9000174a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000174e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001750:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001754:	f000 8094 	beq.w	90001880 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001758:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000175c:	2204      	movs	r2, #4
9000175e:	495f      	ldr	r1, [pc, #380]	@ (900018dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001760:	4448      	add	r0, r9
90001762:	f027 fa81 	bl	90028c68 <strncmp>
    if (compare(offset, "hdrl", 4))
90001766:	b970      	cbnz	r0, 90001786 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001768:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000176c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001770:	4448      	add	r0, r9
90001772:	f04f 0a00 	mov.w	sl, #0
90001776:	e65f      	b.n	90001438 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001778:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000177c:	e683      	b.n	90001486 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000177e:	230d      	movs	r3, #13
90001780:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001784:	e72e      	b.n	900015e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001786:	2306      	movs	r3, #6
    offset += 4;
90001788:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000178c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001790:	e7ee      	b.n	90001770 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001792:	230b      	movs	r3, #11
90001794:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001798:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000179c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000179e:	1902      	adds	r2, r0, r4
        val |= d[0];
900017a0:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017a2:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017a4:	7893      	ldrb	r3, [r2, #2]
900017a6:	041b      	lsls	r3, r3, #16
900017a8:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900017ac:	430b      	orrs	r3, r1
        val |= d[3] << 24;
900017ae:	78d1      	ldrb	r1, [r2, #3]
900017b0:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900017b4:	443b      	add	r3, r7
900017b6:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
900017b8:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017ba:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017bc:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900017be:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017c0:	0424      	lsls	r4, r4, #16
900017c2:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017c6:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017c8:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017cc:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017ce:	4420      	add	r0, r4
900017d0:	e70e      	b.n	900015f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017d2:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017d4:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017d8:	f8df e124 	ldr.w	lr, [pc, #292]	@ 90001900 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017dc:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017e0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017e4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017e8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017ec:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017ee:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017f2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017f6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017fa:	041b      	lsls	r3, r3, #16
900017fc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001800:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
90001804:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
90001808:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000180c:	fbae e303 	umull	lr, r3, lr, r3
90001810:	099b      	lsrs	r3, r3, #6
90001812:	606b      	str	r3, [r5, #4]
        val |= d[0];
90001814:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
90001818:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
9000181c:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000181e:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001820:	041b      	lsls	r3, r3, #16
90001822:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001826:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
9000182a:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
9000182e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001832:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001834:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001836:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000183a:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
9000183e:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001842:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001846:	041b      	lsls	r3, r3, #16
90001848:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000184c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001850:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001854:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001856:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001858:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000185a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000185c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000185e:	041b      	lsls	r3, r3, #16
90001860:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001864:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001866:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000186a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000186c:	e60b      	b.n	90001486 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000186e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001870:	4b1b      	ldr	r3, [pc, #108]	@ (900018e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001872:	4a1c      	ldr	r2, [pc, #112]	@ (900018e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001874:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001876:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000187a:	481b      	ldr	r0, [pc, #108]	@ (900018e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000187c:	f026 ff50 	bl	90028720 <__assert_func>
    assert(aviListSize);
90001880:	4b1a      	ldr	r3, [pc, #104]	@ (900018ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001882:	f44f 71a9 	mov.w	r1, #338	@ 0x152
90001886:	4a1a      	ldr	r2, [pc, #104]	@ (900018f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001888:	4817      	ldr	r0, [pc, #92]	@ (900018e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000188a:	f026 ff49 	bl	90028720 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000188e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001890:	4b18      	ldr	r3, [pc, #96]	@ (900018f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001892:	4a17      	ldr	r2, [pc, #92]	@ (900018f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001894:	f240 113d 	movw	r1, #317	@ 0x13d
        lastError = AVI_ERROR_NOT_RIFF;
90001898:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000189c:	4812      	ldr	r0, [pc, #72]	@ (900018e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000189e:	f026 ff3f 	bl	90028720 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018a2:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900018a4:	4b14      	ldr	r3, [pc, #80]	@ (900018f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
900018a6:	4a12      	ldr	r2, [pc, #72]	@ (900018f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018a8:	f44f 71a6 	mov.w	r1, #332	@ 0x14c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018ac:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
900018b0:	480d      	ldr	r0, [pc, #52]	@ (900018e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018b2:	f026 ff35 	bl	90028720 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018b6:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900018b8:	4b10      	ldr	r3, [pc, #64]	@ (900018fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
900018ba:	4a0d      	ldr	r2, [pc, #52]	@ (900018f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018bc:	f240 1145 	movw	r1, #325	@ 0x145
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018c0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018c4:	4808      	ldr	r0, [pc, #32]	@ (900018e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018c6:	f026 ff2b 	bl	90028720 <__assert_func>
        src = (const char*)movieData + offset;
900018ca:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018cc:	4420      	add	r0, r4
900018ce:	e68f      	b.n	900015f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018d0:	90029c00 	.word	0x90029c00
900018d4:	90029cb8 	.word	0x90029cb8
900018d8:	90029cb0 	.word	0x90029cb0
900018dc:	90029c84 	.word	0x90029c84
900018e0:	90029b28 	.word	0x90029b28
900018e4:	90029b3c 	.word	0x90029b3c
900018e8:	90029ad0 	.word	0x90029ad0
900018ec:	90029c8c 	.word	0x90029c8c
900018f0:	90029c24 	.word	0x90029c24
900018f4:	90029c08 	.word	0x90029c08
900018f8:	90029c6c 	.word	0x90029c6c
900018fc:	90029c54 	.word	0x90029c54
90001900:	10624dd3 	.word	0x10624dd3

90001904 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
90001904:	b410      	push	{r4}
    reader = 0; /* not using reader */
90001906:	2400      	movs	r4, #0
    movieLength = length;
90001908:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
9000190c:	6304      	str	r4, [r0, #48]	@ 0x30
}
9000190e:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
90001912:	f7ff bd2d 	b.w	90001370 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
90001916:	bf00      	nop

90001918 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001918:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
9000191a:	680b      	ldr	r3, [r1, #0]
{
9000191c:	4604      	mov	r4, r0
    movieData = 0;
9000191e:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001920:	4608      	mov	r0, r1
90001922:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90001924:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90001928:	4798      	blx	r3
9000192a:	4603      	mov	r3, r0
    readVideoHeader();
9000192c:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
9000192e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001934:	f7ff bd1c 	b.w	90001370 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001938 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001938:	b5f0      	push	{r4, r5, r6, r7, lr}
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
9000193a:	2400      	movs	r4, #0
9000193c:	4d20      	ldr	r5, [pc, #128]	@ (900019c0 <JPEG_Decode_DMA+0x88>)
    {
9000193e:	461e      	mov	r6, r3
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
90001940:	4b20      	ldr	r3, [pc, #128]	@ (900019c4 <JPEG_Decode_DMA+0x8c>)
        JPEG_output_is_paused = 0;
90001942:	602c      	str	r4, [r5, #0]
    {
90001944:	b083      	sub	sp, #12
        JPEG_OUT_Read_BufferIndex = 0;
90001946:	4d20      	ldr	r5, [pc, #128]	@ (900019c8 <JPEG_Decode_DMA+0x90>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001948:	4f20      	ldr	r7, [pc, #128]	@ (900019cc <JPEG_Decode_DMA+0x94>)
        JPEG_OUT_Read_BufferIndex = 0;
9000194a:	602c      	str	r4, [r5, #0]
        MCU_BlockIndex = 0;
9000194c:	4d20      	ldr	r5, [pc, #128]	@ (900019d0 <JPEG_Decode_DMA+0x98>)
        JPEG_OUT_Write_BufferIndex = 0;
9000194e:	601c      	str	r4, [r3, #0]
        MCU_BlockIndex = 0;
90001950:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001952:	4d20      	ldr	r5, [pc, #128]	@ (900019d4 <JPEG_Decode_DMA+0x9c>)
90001954:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001956:	68fd      	ldr	r5, [r7, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001958:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000195a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000195e:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001960:	ebb7 0c04 	subs.w	ip, r7, r4
        FrameBufferAddress = output;
90001964:	4f1c      	ldr	r7, [pc, #112]	@ (900019d8 <JPEG_Decode_DMA+0xa0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001966:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000196a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000196e:	bf18      	it	ne
90001970:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001974:	9500      	str	r5, [sp, #0]
        FrameBufferAddress = output;
90001976:	603e      	str	r6, [r7, #0]
        JPEG_InputImageIndex = 0;
90001978:	4e18      	ldr	r6, [pc, #96]	@ (900019dc <JPEG_Decode_DMA+0xa4>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000197a:	4d19      	ldr	r5, [pc, #100]	@ (900019e0 <JPEG_Decode_DMA+0xa8>)
        JPEG_InputImageIndex = 0;
9000197c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000197e:	4e19      	ldr	r6, [pc, #100]	@ (900019e4 <JPEG_Decode_DMA+0xac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001980:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001984:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageAddress = (uint32_t)input;
90001988:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000198a:	4e17      	ldr	r6, [pc, #92]	@ (900019e8 <JPEG_Decode_DMA+0xb0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000198c:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000198e:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001990:	2201      	movs	r2, #1
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001992:	702c      	strb	r4, [r5, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001994:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001996:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000199a:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000199c:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000199e:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019a0:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
900019a2:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
900019a4:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
900019a8:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
900019ac:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
900019b0:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019b4:	f007 fc40 	bl	90009238 <HAL_JPEG_Decode_DMA>

        return 0;
    }
900019b8:	4620      	mov	r0, r4
900019ba:	b003      	add	sp, #12
900019bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
900019be:	bf00      	nop
900019c0:	24006010 	.word	0x24006010
900019c4:	24006004 	.word	0x24006004
900019c8:	240003f0 	.word	0x240003f0
900019cc:	240003ac 	.word	0x240003ac
900019d0:	240003f8 	.word	0x240003f8
900019d4:	24006000 	.word	0x24006000
900019d8:	24006024 	.word	0x24006024
900019dc:	24006020 	.word	0x24006020
900019e0:	24000004 	.word	0x24000004
900019e4:	24006018 	.word	0x24006018
900019e8:	2400601c 	.word	0x2400601c

900019ec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019f0:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019f2:	2402      	movs	r4, #2
900019f4:	483d      	ldr	r0, [pc, #244]	@ (90001aec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x100>)
900019f6:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019f8:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019fa:	0725      	lsls	r5, r4, #28
900019fc:	d002      	beq.n	90001a04 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019fe:	f024 040f 	bic.w	r4, r4, #15
90001a02:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001a04:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a06:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
90001a08:	4d39      	ldr	r5, [pc, #228]	@ (90001af0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a0a:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001a0c:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
90001a10:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90001b0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>
90001a14:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a16:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a18:	4f36      	ldr	r7, [pc, #216]	@ (90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a1a:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a1e:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 90001b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>
90001a22:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90001b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a26:	bf18      	it	ne
90001a28:	f1c4 0410 	rsbne	r4, r4, #16
90001a2c:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a2e:	4832      	ldr	r0, [pc, #200]	@ (90001af8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a30:	f7ff ff82 	bl	90001938 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a34:	4c31      	ldr	r4, [pc, #196]	@ (90001afc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a36:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a38:	4e31      	ldr	r6, [pc, #196]	@ (90001b00 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a3a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a3c:	f8da 3000 	ldr.w	r3, [sl]
90001a40:	b10b      	cbz	r3, 90001a46 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5a>
90001a42:	6833      	ldr	r3, [r6, #0]
90001a44:	bb6b      	cbnz	r3, 90001aa2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a46:	6828      	ldr	r0, [r5, #0]
90001a48:	7a03      	ldrb	r3, [r0, #8]
90001a4a:	b93b      	cbnz	r3, 90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
90001a4c:	4b2d      	ldr	r3, [pc, #180]	@ (90001b04 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a4e:	681b      	ldr	r3, [r3, #0]
90001a50:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a54:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a58:	2b01      	cmp	r3, #1
90001a5a:	d03b      	beq.n	90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe8>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a5c:	683b      	ldr	r3, [r7, #0]
90001a5e:	2b01      	cmp	r3, #1
90001a60:	d00d      	beq.n	90001a7e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x92>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a62:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a64:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a66:	6823      	ldr	r3, [r4, #0]
90001a68:	2b02      	cmp	r3, #2
90001a6a:	d024      	beq.n	90001ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xca>
        } while (JpegProcessing_End != 1);
90001a6c:	6823      	ldr	r3, [r4, #0]
90001a6e:	2b01      	cmp	r3, #1
90001a70:	d1e4      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a72:	2300      	movs	r3, #0
90001a74:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a78:	6033      	str	r3, [r6, #0]
}
90001a7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a7e:	f8d9 3000 	ldr.w	r3, [r9]
90001a82:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a86:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a8a:	2b00      	cmp	r3, #0
90001a8c:	d1e9      	bne.n	90001a62 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
90001a8e:	f8da 3000 	ldr.w	r3, [sl]
90001a92:	2b00      	cmp	r3, #0
90001a94:	d1e5      	bne.n	90001a62 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a96:	2102      	movs	r1, #2
90001a98:	4817      	ldr	r0, [pc, #92]	@ (90001af8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_output_is_paused = 0;
90001a9a:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a9c:	f007 fd7c 	bl	90009598 <HAL_JPEG_Resume>
90001aa0:	e7df      	b.n	90001a62 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001aa2:	4815      	ldr	r0, [pc, #84]	@ (90001af8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001aa4:	f008 fb36 	bl	9000a114 <HAL_JPEG_GetState>
90001aa8:	2804      	cmp	r0, #4
90001aaa:	d01a      	beq.n	90001ae2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf6>
        return 1;
90001aac:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001aae:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001ab0:	6823      	ldr	r3, [r4, #0]
90001ab2:	2b02      	cmp	r3, #2
90001ab4:	d1da      	bne.n	90001a6c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x80>
                SEM_WAIT(semDecodingDone);
90001ab6:	4b14      	ldr	r3, [pc, #80]	@ (90001b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001ab8:	f04f 31ff 	mov.w	r1, #4294967295
90001abc:	6818      	ldr	r0, [r3, #0]
90001abe:	f00b fb67 	bl	9000d190 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001ac2:	6823      	ldr	r3, [r4, #0]
90001ac4:	2b01      	cmp	r3, #1
90001ac6:	d1b9      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001ac8:	2300      	movs	r3, #0
90001aca:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001ace:	6033      	str	r3, [r6, #0]
}
90001ad0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ad4:	6833      	ldr	r3, [r6, #0]
90001ad6:	2b00      	cmp	r3, #0
90001ad8:	d1c0      	bne.n	90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
        DMA2D_reference->start();
90001ada:	6803      	ldr	r3, [r0, #0]
90001adc:	691b      	ldr	r3, [r3, #16]
90001ade:	4798      	blx	r3
90001ae0:	e7bc      	b.n	90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
            HAL_JPEG_Abort(hjpeg);
90001ae2:	4805      	ldr	r0, [pc, #20]	@ (90001af8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001ae4:	f007 fc26 	bl	90009334 <HAL_JPEG_Abort>
90001ae8:	e7e0      	b.n	90001aac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90001aea:	bf00      	nop
90001aec:	240003ac 	.word	0x240003ac
90001af0:	24006008 	.word	0x24006008
90001af4:	24006010 	.word	0x24006010
90001af8:	240079cc 	.word	0x240079cc
90001afc:	2400600c 	.word	0x2400600c
90001b00:	240003ec 	.word	0x240003ec
90001b04:	240003f0 	.word	0x240003f0
90001b08:	240003f4 	.word	0x240003f4
90001b0c:	24006014 	.word	0x24006014
90001b10:	24006004 	.word	0x24006004
90001b14:	24000004 	.word	0x24000004

90001b18 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b18:	6943      	ldr	r3, [r0, #20]
{
90001b1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b1e:	2b00      	cmp	r3, #0
90001b20:	f000 80ad 	beq.w	90001c7e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b24:	4604      	mov	r4, r0
    if (reader != 0)
90001b26:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b28:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b2a:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d05f      	beq.n	90001bf0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b30:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b32:	2b07      	cmp	r3, #7
90001b34:	f240 80a9 	bls.w	90001c8a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b38:	6803      	ldr	r3, [r0, #0]
90001b3a:	4629      	mov	r1, r5
90001b3c:	68db      	ldr	r3, [r3, #12]
90001b3e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b40:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b42:	2208      	movs	r2, #8
90001b44:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b46:	6803      	ldr	r3, [r0, #0]
90001b48:	691b      	ldr	r3, [r3, #16]
90001b4a:	4798      	blx	r3
90001b4c:	2800      	cmp	r0, #0
90001b4e:	d04a      	beq.n	90001be6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b50:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b52:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b54:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b58:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b5a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b5c:	2800      	cmp	r0, #0
90001b5e:	d046      	beq.n	90001bee <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b60:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b62:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b66:	1b52      	subs	r2, r2, r5
90001b68:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b6a:	eb03 070c 	add.w	r7, r3, ip
90001b6e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b72:	eb03 0805 	add.w	r8, r3, r5
90001b76:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b7a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b7e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b82:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b86:	78bd      	ldrb	r5, [r7, #2]
90001b88:	78ff      	ldrb	r7, [r7, #3]
90001b8a:	042d      	lsls	r5, r5, #16
90001b8c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b90:	ea45 050e 	orr.w	r5, r5, lr
90001b94:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b98:	189f      	adds	r7, r3, r2
90001b9a:	5c9b      	ldrb	r3, [r3, r2]
90001b9c:	787a      	ldrb	r2, [r7, #1]
90001b9e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001ba2:	eb01 0e05 	add.w	lr, r1, r5
90001ba6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001ba8:	f10e 0208 	add.w	r2, lr, #8
90001bac:	429a      	cmp	r2, r3
90001bae:	d213      	bcs.n	90001bd8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001bb0:	f243 0330 	movw	r3, #12336	@ 0x3030
90001bb4:	459c      	cmp	ip, r3
90001bb6:	d138      	bne.n	90001c2a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001bb8:	f246 3364 	movw	r3, #25444	@ 0x6364
90001bbc:	429f      	cmp	r7, r3
90001bbe:	d134      	bne.n	90001c2a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001bc0:	2d00      	cmp	r5, #0
90001bc2:	d136      	bne.n	90001c32 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bc4:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bc6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bc8:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bcc:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bce:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bd0:	d002      	beq.n	90001bd8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bd2:	2001      	movs	r0, #1
}
90001bd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bd8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bda:	6a23      	ldr	r3, [r4, #32]
90001bdc:	2000      	movs	r0, #0
        frameNumber = 1;
90001bde:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
90001be0:	61a3      	str	r3, [r4, #24]
}
90001be2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001be6:	230d      	movs	r3, #13
90001be8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bec:	e7b0      	b.n	90001b50 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001bee:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bf0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bf2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bf4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bf6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bf8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bfa:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bfe:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001c00:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001c02:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001c04:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001c08:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001c0a:	181a      	adds	r2, r3, r0
        val |= d[0];
90001c0c:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001c0e:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001c12:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001c16:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001c18:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001c1a:	042d      	lsls	r5, r5, #16
90001c1c:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c20:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c22:	2000      	movs	r0, #0
90001c24:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c28:	e7bb      	b.n	90001ba2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c2a:	2d00      	cmp	r5, #0
90001c2c:	bf18      	it	ne
90001c2e:	4672      	movne	r2, lr
90001c30:	e7c8      	b.n	90001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c32:	f101 0708 	add.w	r7, r1, #8
90001c36:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c38:	b1f0      	cbz	r0, 90001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c3a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c3c:	429d      	cmp	r5, r3
90001c3e:	d824      	bhi.n	90001c8a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c40:	6803      	ldr	r3, [r0, #0]
90001c42:	4639      	mov	r1, r7
90001c44:	68db      	ldr	r3, [r3, #12]
90001c46:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c48:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c4a:	462a      	mov	r2, r5
90001c4c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c4e:	6803      	ldr	r3, [r0, #0]
90001c50:	691b      	ldr	r3, [r3, #16]
90001c52:	4798      	blx	r3
90001c54:	b910      	cbnz	r0, 90001c5c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c56:	230d      	movs	r3, #13
90001c58:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c5c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c5e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c60:	b126      	cbz	r6, 90001c6c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c62:	4633      	mov	r3, r6
90001c64:	462a      	mov	r2, r5
90001c66:	4620      	mov	r0, r4
90001c68:	f7ff fec0 	bl	900019ec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c6c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c70:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c72:	442a      	add	r2, r5
            frameNumber++;
90001c74:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c76:	e7a5      	b.n	90001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c78:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c7a:	4439      	add	r1, r7
90001c7c:	e7f0      	b.n	90001c60 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c7e:	4b07      	ldr	r3, [pc, #28]	@ (90001c9c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c80:	21c1      	movs	r1, #193	@ 0xc1
90001c82:	4a07      	ldr	r2, [pc, #28]	@ (90001ca0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c84:	4807      	ldr	r0, [pc, #28]	@ (90001ca4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c86:	f026 fd4b 	bl	90028720 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c8a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c8c:	4b06      	ldr	r3, [pc, #24]	@ (90001ca8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c8e:	4a07      	ldr	r2, [pc, #28]	@ (90001cac <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c90:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c92:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c96:	4803      	ldr	r0, [pc, #12]	@ (90001ca4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c98:	f026 fd42 	bl	90028720 <__assert_func>
90001c9c:	90029b80 	.word	0x90029b80
90001ca0:	90029cc0 	.word	0x90029cc0
90001ca4:	90029ad0 	.word	0x90029ad0
90001ca8:	90029b28 	.word	0x90029b28
90001cac:	90029b3c 	.word	0x90029b3c

90001cb0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001cb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001cb4:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001cb6:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001cba:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001cbc:	460e      	mov	r6, r1
90001cbe:	4690      	mov	r8, r2
90001cc0:	461f      	mov	r7, r3
    if (reader != 0)
90001cc2:	2800      	cmp	r0, #0
90001cc4:	f000 80f5 	beq.w	90001eb2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        if (length > aviBufferLength)
90001cc8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001cca:	2b07      	cmp	r3, #7
90001ccc:	f240 8106 	bls.w	90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001cd0:	6803      	ldr	r3, [r0, #0]
90001cd2:	4649      	mov	r1, r9
90001cd4:	68db      	ldr	r3, [r3, #12]
90001cd6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cd8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cda:	2208      	movs	r2, #8
90001cdc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cde:	6803      	ldr	r3, [r0, #0]
90001ce0:	691b      	ldr	r3, [r3, #16]
90001ce2:	4798      	blx	r3
90001ce4:	2800      	cmp	r0, #0
90001ce6:	f000 80af 	beq.w	90001e48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cea:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001cec:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cee:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cf0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cf4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cf8:	2800      	cmp	r0, #0
90001cfa:	f000 80f8 	beq.w	90001eee <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23e>
        const uint32_t index = offset - aviBufferStartOffset;
90001cfe:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d02:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001d04:	1899      	adds	r1, r3, r2
90001d06:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001d08:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d0a:	f891 9002 	ldrb.w	r9, [r1, #2]
90001d0e:	f891 c001 	ldrb.w	ip, [r1, #1]
90001d12:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001d16:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001d1a:	ea49 0902 	orr.w	r9, r9, r2
90001d1e:	78ca      	ldrb	r2, [r1, #3]
90001d20:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d24:	454b      	cmp	r3, r9
90001d26:	f0c0 80d9 	bcc.w	90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001d2a:	6803      	ldr	r3, [r0, #0]
90001d2c:	4629      	mov	r1, r5
90001d2e:	68db      	ldr	r3, [r3, #12]
90001d30:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d34:	464a      	mov	r2, r9
90001d36:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d38:	6803      	ldr	r3, [r0, #0]
90001d3a:	691b      	ldr	r3, [r3, #16]
90001d3c:	4798      	blx	r3
90001d3e:	2800      	cmp	r0, #0
90001d40:	d07e      	beq.n	90001e40 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x190>
        return aviBuffer;
90001d42:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d44:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d46:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d4a:	2302      	movs	r3, #2
90001d4c:	4869      	ldr	r0, [pc, #420]	@ (90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d4e:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d52:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d54:	d16f      	bne.n	90001e36 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x186>
90001d56:	4662      	mov	r2, ip
90001d58:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d5a:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d5c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d5e:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d60:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d64:	60c3      	str	r3, [r0, #12]
90001d66:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d68:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d6c:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d6e:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d70:	6143      	str	r3, [r0, #20]
90001d72:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d74:	f003 030f 	and.w	r3, r3, #15
90001d78:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d7a:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d7c:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d7e:	b236      	sxth	r6, r6
90001d80:	bf28      	it	cs
90001d82:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d84:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d88:	f002 020f 	and.w	r2, r2, #15
90001d8c:	f8df a194 	ldr.w	sl, [pc, #404]	@ 90001f24 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d90:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d94:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d96:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d98:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d9a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d9c:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001da0:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90001f28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001da4:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001da6:	eba3 030c 	sub.w	r3, r3, ip
90001daa:	62c3      	str	r3, [r0, #44]	@ 0x2c
90001dac:	6923      	ldr	r3, [r4, #16]
90001dae:	429e      	cmp	r6, r3
90001db0:	bf28      	it	cs
90001db2:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001db4:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001db8:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001dbc:	bf18      	it	ne
90001dbe:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001dc2:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dc4:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dc8:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001dca:	6385      	str	r5, [r0, #56]	@ 0x38
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dcc:	4643      	mov	r3, r8
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dce:	bf18      	it	ne
90001dd0:	f1c6 0610 	rsbne	r6, r6, #16
    DMA2D_reference = dma;
90001dd4:	4d48      	ldr	r5, [pc, #288]	@ (90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dd6:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dda:	63c6      	str	r6, [r0, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001ddc:	4847      	ldr	r0, [pc, #284]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001dde:	f7ff fdab 	bl	90001938 <JPEG_Decode_DMA>
    FrameBufferWidth = framebuffer_width;
90001de2:	4b47      	ldr	r3, [pc, #284]	@ (90001f00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    DMA2D_reference = dma;
90001de4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    FrameBufferWidth = framebuffer_width;
90001de6:	601f      	str	r7, [r3, #0]
90001de8:	4e46      	ldr	r6, [pc, #280]	@ (90001f04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
90001dea:	4c47      	ldr	r4, [pc, #284]	@ (90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dec:	4f47      	ldr	r7, [pc, #284]	@ (90001f0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
    DMA2D_reference = dma;
90001dee:	602a      	str	r2, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001df0:	f8da 3000 	ldr.w	r3, [sl]
90001df4:	b113      	cbz	r3, 90001dfc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x14c>
90001df6:	6833      	ldr	r3, [r6, #0]
90001df8:	2b00      	cmp	r3, #0
90001dfa:	d13b      	bne.n	90001e74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001dfc:	6828      	ldr	r0, [r5, #0]
90001dfe:	7a03      	ldrb	r3, [r0, #8]
90001e00:	b93b      	cbnz	r3, 90001e12 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
90001e02:	4b43      	ldr	r3, [pc, #268]	@ (90001f10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001e04:	681b      	ldr	r3, [r3, #0]
90001e06:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e0a:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e0e:	2b01      	cmp	r3, #1
90001e10:	d044      	beq.n	90001e9c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e12:	683b      	ldr	r3, [r7, #0]
90001e14:	2b01      	cmp	r3, #1
90001e16:	d01b      	beq.n	90001e50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    return 2;
90001e18:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e1a:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e1c:	6823      	ldr	r3, [r4, #0]
90001e1e:	2b02      	cmp	r3, #2
90001e20:	d032      	beq.n	90001e88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
    } while (JpegProcessing_End != 1);
90001e22:	6823      	ldr	r3, [r4, #0]
90001e24:	2b01      	cmp	r3, #1
90001e26:	d1e3      	bne.n	90001df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    Jpeg_HWDecodingEnd = 0;
90001e28:	2300      	movs	r3, #0
}
90001e2a:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e2c:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e30:	6033      	str	r3, [r6, #0]
}
90001e32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e36:	f02c 030f 	bic.w	r3, ip, #15
90001e3a:	3310      	adds	r3, #16
90001e3c:	461a      	mov	r2, r3
90001e3e:	e78c      	b.n	90001d5a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xaa>
            lastError = AVI_ERROR_EOF_REACHED;
90001e40:	230d      	movs	r3, #13
90001e42:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e46:	e77c      	b.n	90001d42 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x92>
90001e48:	230d      	movs	r3, #13
90001e4a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e4e:	e74c      	b.n	90001cea <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e50:	f8d9 3000 	ldr.w	r3, [r9]
90001e54:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e58:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e5c:	2b00      	cmp	r3, #0
90001e5e:	d1db      	bne.n	90001e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
90001e60:	f8da 3000 	ldr.w	r3, [sl]
90001e64:	2b00      	cmp	r3, #0
90001e66:	d1d7      	bne.n	90001e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e68:	2102      	movs	r1, #2
90001e6a:	4824      	ldr	r0, [pc, #144]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
        JPEG_output_is_paused = 0;
90001e6c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e6e:	f007 fb93 	bl	90009598 <HAL_JPEG_Resume>
90001e72:	e7d1      	b.n	90001e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e74:	4821      	ldr	r0, [pc, #132]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e76:	f008 f94d 	bl	9000a114 <HAL_JPEG_GetState>
90001e7a:	2804      	cmp	r0, #4
90001e7c:	d015      	beq.n	90001eaa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        return 1;
90001e7e:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e80:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e82:	6823      	ldr	r3, [r4, #0]
90001e84:	2b02      	cmp	r3, #2
90001e86:	d1cc      	bne.n	90001e22 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x172>
            SEM_WAIT(semDecodingDone);
90001e88:	4b22      	ldr	r3, [pc, #136]	@ (90001f14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
90001e8a:	f04f 31ff 	mov.w	r1, #4294967295
90001e8e:	6818      	ldr	r0, [r3, #0]
90001e90:	f00b f97e 	bl	9000d190 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e94:	6823      	ldr	r3, [r4, #0]
90001e96:	2b01      	cmp	r3, #1
90001e98:	d1aa      	bne.n	90001df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
90001e9a:	e7c5      	b.n	90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x178>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e9c:	6833      	ldr	r3, [r6, #0]
90001e9e:	2b00      	cmp	r3, #0
90001ea0:	d1b7      	bne.n	90001e12 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
        DMA2D_reference->start();
90001ea2:	6803      	ldr	r3, [r0, #0]
90001ea4:	691b      	ldr	r3, [r3, #16]
90001ea6:	4798      	blx	r3
90001ea8:	e7b3      	b.n	90001e12 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
            HAL_JPEG_Abort(hjpeg);
90001eaa:	4814      	ldr	r0, [pc, #80]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001eac:	f007 fa42 	bl	90009334 <HAL_JPEG_Abort>
90001eb0:	e7e5      	b.n	90001e7e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001eb2:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001eb6:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001eb8:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001ebc:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001ebe:	4401      	add	r1, r0
        val |= d[0];
90001ec0:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001ec2:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ec4:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ec8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001eca:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001ece:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001ed2:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001ed6:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001eda:	e734      	b.n	90001d46 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x96>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001edc:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001ede:	4b0e      	ldr	r3, [pc, #56]	@ (90001f18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001ee0:	4a0e      	ldr	r2, [pc, #56]	@ (90001f1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001ee2:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ee4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001ee8:	480d      	ldr	r0, [pc, #52]	@ (90001f20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eea:	f026 fc19 	bl	90028720 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001eee:	4691      	mov	r9, r2
90001ef0:	e7e1      	b.n	90001eb6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x206>
90001ef2:	bf00      	nop
90001ef4:	240003ac 	.word	0x240003ac
90001ef8:	24006008 	.word	0x24006008
90001efc:	240079cc 	.word	0x240079cc
90001f00:	24005ffc 	.word	0x24005ffc
90001f04:	240003ec 	.word	0x240003ec
90001f08:	2400600c 	.word	0x2400600c
90001f0c:	24006010 	.word	0x24006010
90001f10:	240003f0 	.word	0x240003f0
90001f14:	240003f4 	.word	0x240003f4
90001f18:	90029b28 	.word	0x90029b28
90001f1c:	90029b3c 	.word	0x90029b3c
90001f20:	90029ad0 	.word	0x90029ad0
90001f24:	24006014 	.word	0x24006014
90001f28:	24006004 	.word	0x24006004
90001f2c:	24000004 	.word	0x24000004

90001f30 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f30:	684b      	ldr	r3, [r1, #4]
90001f32:	2b01      	cmp	r3, #1
90001f34:	d015      	beq.n	90001f62 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f36:	2b02      	cmp	r3, #2
90001f38:	d00b      	beq.n	90001f52 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f3a:	b94b      	cbnz	r3, 90001f50 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f3c:	68cb      	ldr	r3, [r1, #12]
90001f3e:	0758      	lsls	r0, r3, #29
90001f40:	d11e      	bne.n	90001f80 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f42:	688b      	ldr	r3, [r1, #8]
90001f44:	075a      	lsls	r2, r3, #29
90001f46:	d003      	beq.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f48:	f023 0307 	bic.w	r3, r3, #7
90001f4c:	3308      	adds	r3, #8
90001f4e:	608b      	str	r3, [r1, #8]
    }
90001f50:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f52:	68cb      	ldr	r3, [r1, #12]
90001f54:	071a      	lsls	r2, r3, #28
90001f56:	d0f4      	beq.n	90001f42 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f58:	f023 030f 	bic.w	r3, r3, #15
90001f5c:	3310      	adds	r3, #16
90001f5e:	60cb      	str	r3, [r1, #12]
90001f60:	e7ef      	b.n	90001f42 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f62:	68cb      	ldr	r3, [r1, #12]
90001f64:	071a      	lsls	r2, r3, #28
90001f66:	d003      	beq.n	90001f70 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f68:	f023 030f 	bic.w	r3, r3, #15
90001f6c:	3310      	adds	r3, #16
90001f6e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f70:	688b      	ldr	r3, [r1, #8]
90001f72:	0718      	lsls	r0, r3, #28
90001f74:	d0ec      	beq.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f76:	f023 030f 	bic.w	r3, r3, #15
90001f7a:	3310      	adds	r3, #16
90001f7c:	608b      	str	r3, [r1, #8]
90001f7e:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f80:	f023 0307 	bic.w	r3, r3, #7
90001f84:	3308      	adds	r3, #8
90001f86:	60cb      	str	r3, [r1, #12]
90001f88:	e7db      	b.n	90001f42 <HAL_JPEG_InfoReadyCallback+0x12>
90001f8a:	bf00      	nop

90001f8c <HAL_JPEG_GetDataCallback>:
    {
90001f8c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f8e:	4c0c      	ldr	r4, [pc, #48]	@ (90001fc0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f90:	4a0c      	ldr	r2, [pc, #48]	@ (90001fc4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f92:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f94:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f96:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f98:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f9a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f9c:	d302      	bcc.n	90001fa4 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f9e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001fa2:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001fa4:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fa6:	4b08      	ldr	r3, [pc, #32]	@ (90001fc8 <HAL_JPEG_GetDataCallback+0x3c>)
90001fa8:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001faa:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fae:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fb0:	bf28      	it	cs
90001fb2:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001fb6:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fba:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fbc:	f007 b9b2 	b.w	90009324 <HAL_JPEG_ConfigInputBuffer>
90001fc0:	24006020 	.word	0x24006020
90001fc4:	2400601c 	.word	0x2400601c
90001fc8:	24006018 	.word	0x24006018

90001fcc <HAL_JPEG_DataReadyCallback>:
    {
90001fcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fd0:	4e4a      	ldr	r6, [pc, #296]	@ (900020fc <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fd2:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fd4:	4f4a      	ldr	r7, [pc, #296]	@ (90002100 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fd6:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fd8:	4d4a      	ldr	r5, [pc, #296]	@ (90002104 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001fda:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fdc:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fde:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fe2:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fe4:	4b48      	ldr	r3, [pc, #288]	@ (90002108 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fe6:	4c49      	ldr	r4, [pc, #292]	@ (9000210c <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fe8:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fea:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fec:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001ff0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001ff4:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001ff8:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001ffa:	4d45      	ldr	r5, [pc, #276]	@ (90002110 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001ffc:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001ffe:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002002:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90002006:	697b      	ldr	r3, [r7, #20]
90002008:	428b      	cmp	r3, r1
9000200a:	d260      	bcs.n	900020ce <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000200c:	6821      	ldr	r1, [r4, #0]
9000200e:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002010:	6823      	ldr	r3, [r4, #0]
90002012:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002014:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002018:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000201c:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002020:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002022:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002026:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000202a:	6823      	ldr	r3, [r4, #0]
9000202c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002030:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002034:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002036:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002038:	b12b      	cbz	r3, 90002046 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000203a:	6823      	ldr	r3, [r4, #0]
9000203c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002040:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002044:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002046:	6832      	ldr	r2, [r6, #0]
90002048:	69bb      	ldr	r3, [r7, #24]
9000204a:	4293      	cmp	r3, r2
9000204c:	d922      	bls.n	90002094 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000204e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002050:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002052:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002056:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002058:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000205c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000205e:	2200      	movs	r2, #0
90002060:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002062:	6823      	ldr	r3, [r4, #0]
90002064:	2b01      	cmp	r3, #1
90002066:	d900      	bls.n	9000206a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002068:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000206a:	6823      	ldr	r3, [r4, #0]
9000206c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002070:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002074:	2b00      	cmp	r3, #0
90002076:	d138      	bne.n	900020ea <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002078:	6823      	ldr	r3, [r4, #0]
9000207a:	4640      	mov	r0, r8
9000207c:	68fa      	ldr	r2, [r7, #12]
9000207e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002082:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002086:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000208a:	01d2      	lsls	r2, r2, #7
9000208c:	6859      	ldr	r1, [r3, #4]
9000208e:	f007 f94d 	bl	9000932c <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
90002092:	69bb      	ldr	r3, [r7, #24]
90002094:	6832      	ldr	r2, [r6, #0]
90002096:	429a      	cmp	r2, r3
90002098:	d20b      	bcs.n	900020b2 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
9000209a:	4b1e      	ldr	r3, [pc, #120]	@ (90002114 <HAL_JPEG_DataReadyCallback+0x148>)
9000209c:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000209e:	7a1b      	ldrb	r3, [r3, #8]
900020a0:	b10b      	cbz	r3, 900020a6 <HAL_JPEG_DataReadyCallback+0xda>
    }
900020a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
900020a6:	4b1c      	ldr	r3, [pc, #112]	@ (90002118 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
900020a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
900020ac:	6818      	ldr	r0, [r3, #0]
900020ae:	f00b b8a1 	b.w	9000d1f4 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020b2:	6823      	ldr	r3, [r4, #0]
900020b4:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
900020b6:	4919      	ldr	r1, [pc, #100]	@ (9000211c <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020b8:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020ba:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
900020be:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020c0:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020c2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020c6:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020c8:	f007 f8f4 	bl	900092b4 <HAL_JPEG_Pause>
900020cc:	e7e5      	b.n	9000209a <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020ce:	6823      	ldr	r3, [r4, #0]
900020d0:	68fa      	ldr	r2, [r7, #12]
900020d2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020da:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020de:	01d2      	lsls	r2, r2, #7
900020e0:	6859      	ldr	r1, [r3, #4]
    }
900020e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020e6:	f007 b921 	b.w	9000932c <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ea:	2102      	movs	r1, #2
900020ec:	4640      	mov	r0, r8
900020ee:	f007 f8e1 	bl	900092b4 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020f2:	4b0b      	ldr	r3, [pc, #44]	@ (90002120 <HAL_JPEG_DataReadyCallback+0x154>)
900020f4:	2201      	movs	r2, #1
900020f6:	601a      	str	r2, [r3, #0]
900020f8:	e7be      	b.n	90002078 <HAL_JPEG_DataReadyCallback+0xac>
900020fa:	bf00      	nop
900020fc:	24006000 	.word	0x24006000
90002100:	240003ac 	.word	0x240003ac
90002104:	24006024 	.word	0x24006024
90002108:	24005ffc 	.word	0x24005ffc
9000210c:	24006004 	.word	0x24006004
90002110:	24000004 	.word	0x24000004
90002114:	24006008 	.word	0x24006008
90002118:	240003f4 	.word	0x240003f4
9000211c:	24006014 	.word	0x24006014
90002120:	24006010 	.word	0x24006010

90002124 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002124:	b672      	cpsid	i
        while (1)
90002126:	e7fe      	b.n	90002126 <HAL_JPEG_ErrorCallback+0x2>

90002128 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002128:	4b01      	ldr	r3, [pc, #4]	@ (90002130 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000212a:	2201      	movs	r2, #1
9000212c:	601a      	str	r2, [r3, #0]
    }
9000212e:	4770      	bx	lr
90002130:	24006014 	.word	0x24006014

90002134 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002134:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002136:	4f1e      	ldr	r7, [pc, #120]	@ (900021b0 <DMA2D_CopyBuffer+0x7c>)
90002138:	6903      	ldr	r3, [r0, #16]
9000213a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000213c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000213e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002142:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002144:	4e1b      	ldr	r6, [pc, #108]	@ (900021b4 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002146:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000214a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000214e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002152:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002156:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002158:	bf18      	it	ne
9000215a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000215e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002160:	6939      	ldr	r1, [r7, #16]
90002162:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002166:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000216a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000216e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002170:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002172:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002174:	7e81      	ldrb	r1, [r0, #26]
90002176:	b1b9      	cbz	r1, 900021a8 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002178:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
9000217a:	f1c1 0110 	rsb	r1, r1, #16
9000217e:	4321      	orrs	r1, r4
90002180:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002182:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002184:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002188:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000218c:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000218e:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002192:	4809      	ldr	r0, [pc, #36]	@ (900021b8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002194:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002196:	4b07      	ldr	r3, [pc, #28]	@ (900021b4 <DMA2D_CopyBuffer+0x80>)
90002198:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
9000219a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000219c:	4a07      	ldr	r2, [pc, #28]	@ (900021bc <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000219e:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021a0:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021a2:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900021a4:	6018      	str	r0, [r3, #0]
}
900021a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
900021a8:	f044 0410 	orr.w	r4, r4, #16
900021ac:	6474      	str	r4, [r6, #68]	@ 0x44
900021ae:	e7e8      	b.n	90002182 <DMA2D_CopyBuffer+0x4e>
900021b0:	240003ac 	.word	0x240003ac
900021b4:	52001000 	.word	0x52001000
900021b8:	00012301 	.word	0x00012301
900021bc:	ff09000b 	.word	0xff09000b

900021c0 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021c0:	6902      	ldr	r2, [r0, #16]
{
900021c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021c6:	4605      	mov	r5, r0
900021c8:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021ca:	2a00      	cmp	r2, #0
900021cc:	d165      	bne.n	9000229a <DMA2D_CropBuffer+0xda>
900021ce:	4b35      	ldr	r3, [pc, #212]	@ (900022a4 <DMA2D_CropBuffer+0xe4>)
900021d0:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021d4:	f1cc 0010 	rsb	r0, ip, #16
900021d8:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021da:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021dc:	3901      	subs	r1, #1
900021de:	428a      	cmp	r2, r1
900021e0:	d102      	bne.n	900021e8 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021e2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021e4:	1a41      	subs	r1, r0, r1
900021e6:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021e8:	7e6e      	ldrb	r6, [r5, #25]
900021ea:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021ec:	2e00      	cmp	r6, #0
900021ee:	d051      	beq.n	90002294 <DMA2D_CropBuffer+0xd4>
900021f0:	f1c7 0110 	rsb	r1, r7, #16
900021f4:	46b8      	mov	r8, r7
900021f6:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021f8:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021fc:	f1be 0f00 	cmp.w	lr, #0
90002200:	d002      	beq.n	90002208 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002202:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90002204:	1b09      	subs	r1, r1, r4
90002206:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002208:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000220c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000220e:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002212:	4413      	add	r3, r2
    job.MCU_drawn++;
90002214:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
90002216:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
9000221a:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000221c:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
90002220:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002224:	0052      	lsls	r2, r2, #1
90002226:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000222a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000222e:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002232:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002234:	b107      	cbz	r7, 90002238 <DMA2D_CropBuffer+0x78>
90002236:	b90e      	cbnz	r6, 9000223c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002238:	2300      	movs	r3, #0
9000223a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000223c:	4b1a      	ldr	r3, [pc, #104]	@ (900022a8 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000223e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002240:	4f1a      	ldr	r7, [pc, #104]	@ (900022ac <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002242:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002244:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002246:	4a1a      	ldr	r2, [pc, #104]	@ (900022b0 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002248:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000224a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000224e:	6810      	ldr	r0, [r2, #0]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002250:	2201      	movs	r2, #1
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002252:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002254:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002258:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000225c:	9302      	str	r3, [sp, #8]
    DMA2D_reference->addToQueue(blitOp);
9000225e:	6803      	ldr	r3, [r0, #0]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002260:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002264:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002266:	9201      	str	r2, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002268:	685b      	ldr	r3, [r3, #4]
9000226a:	9604      	str	r6, [sp, #16]
9000226c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000226e:	4b11      	ldr	r3, [pc, #68]	@ (900022b4 <DMA2D_CropBuffer+0xf4>)
90002270:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002272:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002274:	4810      	ldr	r0, [pc, #64]	@ (900022b8 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002276:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002278:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000227c:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000227e:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002280:	490e      	ldr	r1, [pc, #56]	@ (900022bc <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
90002282:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002284:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002286:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002288:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000228a:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000228c:	6019      	str	r1, [r3, #0]
}
9000228e:	b00a      	add	sp, #40	@ 0x28
90002290:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002294:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002296:	46b0      	mov	r8, r6
90002298:	e7ae      	b.n	900021f8 <DMA2D_CropBuffer+0x38>
9000229a:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000229c:	f04f 0c00 	mov.w	ip, #0
900022a0:	4b00      	ldr	r3, [pc, #0]	@ (900022a4 <DMA2D_CropBuffer+0xe4>)
900022a2:	e79a      	b.n	900021da <DMA2D_CropBuffer+0x1a>
900022a4:	240003ac 	.word	0x240003ac
900022a8:	01e00010 	.word	0x01e00010
900022ac:	240003fc 	.word	0x240003fc
900022b0:	24006008 	.word	0x24006008
900022b4:	52001000 	.word	0x52001000
900022b8:	ff09000b 	.word	0xff09000b
900022bc:	00012301 	.word	0x00012301

900022c0 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022c0:	4b0d      	ldr	r3, [pc, #52]	@ (900022f8 <DMA2D_ExternalJobCompleted+0x38>)
900022c2:	6902      	ldr	r2, [r0, #16]
900022c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022c6:	429a      	cmp	r2, r3
900022c8:	d000      	beq.n	900022cc <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022ca:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022cc:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022ce:	4b0b      	ldr	r3, [pc, #44]	@ (900022fc <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022d0:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022d2:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022d4:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022d6:	3101      	adds	r1, #1
        job.DoCropping = false;
900022d8:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022da:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022dc:	6819      	ldr	r1, [r3, #0]
900022de:	2901      	cmp	r1, #1
900022e0:	d900      	bls.n	900022e4 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022e2:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022e4:	7e83      	ldrb	r3, [r0, #26]
900022e6:	b113      	cbz	r3, 900022ee <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022e8:	4b05      	ldr	r3, [pc, #20]	@ (90002300 <DMA2D_ExternalJobCompleted+0x40>)
900022ea:	2201      	movs	r2, #1
900022ec:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022ee:	4b05      	ldr	r3, [pc, #20]	@ (90002304 <DMA2D_ExternalJobCompleted+0x44>)
900022f0:	6818      	ldr	r0, [r3, #0]
900022f2:	f00a bf7f 	b.w	9000d1f4 <osSemaphoreRelease>
900022f6:	bf00      	nop
900022f8:	240003ac 	.word	0x240003ac
900022fc:	240003f0 	.word	0x240003f0
90002300:	240003ec 	.word	0x240003ec
90002304:	240003f4 	.word	0x240003f4

90002308 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90002308:	2101      	movs	r1, #1
9000230a:	2200      	movs	r2, #0
{
9000230c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000230e:	4608      	mov	r0, r1
90002310:	f00a fef2 	bl	9000d0f8 <osSemaphoreNew>
90002314:	4b0b      	ldr	r3, [pc, #44]	@ (90002344 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90002316:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002318:	b140      	cbz	r0, 9000232c <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
9000231a:	2200      	movs	r2, #0
9000231c:	2104      	movs	r1, #4
9000231e:	2001      	movs	r0, #1
90002320:	f00a ff92 	bl	9000d248 <osMessageQueueNew>
90002324:	4b08      	ldr	r3, [pc, #32]	@ (90002348 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002326:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002328:	b130      	cbz	r0, 90002338 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
9000232a:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
9000232c:	4b07      	ldr	r3, [pc, #28]	@ (9000234c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000232e:	2128      	movs	r1, #40	@ 0x28
90002330:	4a07      	ldr	r2, [pc, #28]	@ (90002350 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002332:	4808      	ldr	r0, [pc, #32]	@ (90002354 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002334:	f026 f9f4 	bl	90028720 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002338:	4b07      	ldr	r3, [pc, #28]	@ (90002358 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000233a:	212c      	movs	r1, #44	@ 0x2c
9000233c:	4a04      	ldr	r2, [pc, #16]	@ (90002350 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000233e:	4805      	ldr	r0, [pc, #20]	@ (90002354 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002340:	f026 f9ee 	bl	90028720 <__assert_func>
90002344:	2400602c 	.word	0x2400602c
90002348:	24006028 	.word	0x24006028
9000234c:	90029d60 	.word	0x90029d60
90002350:	90029dac 	.word	0x90029dac
90002354:	90029ddc 	.word	0x90029ddc
90002358:	90029e2c 	.word	0x90029e2c

9000235c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000235c:	4b02      	ldr	r3, [pc, #8]	@ (90002368 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000235e:	f04f 31ff 	mov.w	r1, #4294967295
90002362:	6818      	ldr	r0, [r3, #0]
90002364:	f00a bf14 	b.w	9000d190 <osSemaphoreAcquire>
90002368:	2400602c 	.word	0x2400602c

9000236c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000236c:	4b01      	ldr	r3, [pc, #4]	@ (90002374 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000236e:	6818      	ldr	r0, [r3, #0]
90002370:	f00a bf40 	b.w	9000d1f4 <osSemaphoreRelease>
90002374:	2400602c 	.word	0x2400602c

90002378 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002378:	4b02      	ldr	r3, [pc, #8]	@ (90002384 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
9000237a:	2100      	movs	r1, #0
9000237c:	6818      	ldr	r0, [r3, #0]
9000237e:	f00a bf07 	b.w	9000d190 <osSemaphoreAcquire>
90002382:	bf00      	nop
90002384:	2400602c 	.word	0x2400602c

90002388 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002388:	4b01      	ldr	r3, [pc, #4]	@ (90002390 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
9000238a:	6818      	ldr	r0, [r3, #0]
9000238c:	f00a bf32 	b.w	9000d1f4 <osSemaphoreRelease>
90002390:	2400602c 	.word	0x2400602c

90002394 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002394:	4803      	ldr	r0, [pc, #12]	@ (900023a4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002396:	2300      	movs	r3, #0
90002398:	4903      	ldr	r1, [pc, #12]	@ (900023a8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
9000239a:	461a      	mov	r2, r3
9000239c:	6800      	ldr	r0, [r0, #0]
9000239e:	f00a bf8f 	b.w	9000d2c0 <osMessageQueuePut>
900023a2:	bf00      	nop
900023a4:	24006028 	.word	0x24006028
900023a8:	2400003c 	.word	0x2400003c

900023ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900023ac:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023ae:	2300      	movs	r3, #0
{
900023b0:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023b2:	4c07      	ldr	r4, [pc, #28]	@ (900023d0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900023b4:	461a      	mov	r2, r3
900023b6:	a901      	add	r1, sp, #4
900023b8:	6820      	ldr	r0, [r4, #0]
900023ba:	f00a ffbd 	bl	9000d338 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900023be:	f04f 33ff 	mov.w	r3, #4294967295
900023c2:	2200      	movs	r2, #0
900023c4:	a901      	add	r1, sp, #4
900023c6:	6820      	ldr	r0, [r4, #0]
900023c8:	f00a ffb6 	bl	9000d338 <osMessageQueueGet>
}
900023cc:	b002      	add	sp, #8
900023ce:	bd10      	pop	{r4, pc}
900023d0:	24006028 	.word	0x24006028

900023d4 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023d4:	6803      	ldr	r3, [r0, #0]
900023d6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023d8:	4718      	bx	r3
900023da:	bf00      	nop

900023dc <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023dc:	2001      	movs	r0, #1
900023de:	4770      	bx	lr

900023e0 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023e0:	e7fe      	b.n	900023e0 <DMA2D_XferErrorCallback>
900023e2:	bf00      	nop

900023e4 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023e4:	4905      	ldr	r1, [pc, #20]	@ (900023fc <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023e6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023ea:	4b05      	ldr	r3, [pc, #20]	@ (90002400 <_ZN8STM32DMAD1Ev+0x1c>)
900023ec:	6001      	str	r1, [r0, #0]
900023ee:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023f6:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023fa:	4770      	bx	lr
900023fc:	90029fd4 	.word	0x90029fd4
90002400:	e000e100 	.word	0xe000e100

90002404 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002404:	4b11      	ldr	r3, [pc, #68]	@ (9000244c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002406:	4912      	ldr	r1, [pc, #72]	@ (90002450 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002408:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
9000240c:	4811      	ldr	r0, [pc, #68]	@ (90002454 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000240e:	f042 0210 	orr.w	r2, r2, #16
{
90002412:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002414:	4c10      	ldr	r4, [pc, #64]	@ (90002458 <_ZN8STM32DMA10initializeEv+0x54>)
{
90002416:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
90002418:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000241c:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90002420:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002424:	f002 0210 	and.w	r2, r2, #16
90002428:	9201      	str	r2, [sp, #4]
9000242a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000242c:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000242e:	f042 0210 	orr.w	r2, r2, #16
90002432:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002434:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002436:	f022 0210 	bic.w	r2, r2, #16
9000243a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000243c:	4b07      	ldr	r3, [pc, #28]	@ (9000245c <_ZN8STM32DMA10initializeEv+0x58>)
9000243e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002442:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002444:	b003      	add	sp, #12
90002446:	f85d 4b04 	ldr.w	r4, [sp], #4
9000244a:	4770      	bx	lr
9000244c:	58024400 	.word	0x58024400
90002450:	24007a24 	.word	0x24007a24
90002454:	900023e1 	.word	0x900023e1
90002458:	9000282d 	.word	0x9000282d
9000245c:	e000e100 	.word	0xe000e100

90002460 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002460:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002464:	4770      	bx	lr
90002466:	bf00      	nop

90002468 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002468:	4909      	ldr	r1, [pc, #36]	@ (90002490 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000246a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000246e:	4b09      	ldr	r3, [pc, #36]	@ (90002494 <_ZN8STM32DMAD0Ev+0x2c>)
90002470:	b510      	push	{r4, lr}
90002472:	6001      	str	r1, [r0, #0]
90002474:	4604      	mov	r4, r0
90002476:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000247a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000247e:	f3bf 8f6f 	isb	sy
}
90002482:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002486:	f025 fdd3 	bl	90028030 <_ZdlPvj>
9000248a:	4620      	mov	r0, r4
9000248c:	bd10      	pop	{r4, pc}
9000248e:	bf00      	nop
90002490:	90029fd4 	.word	0x90029fd4
90002494:	e000e100 	.word	0xe000e100

90002498 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002498:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
9000249c:	b510      	push	{r4, lr}
9000249e:	4604      	mov	r4, r0
        if (!started_by_external_job)
900024a0:	b963      	cbnz	r3, 900024bc <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
900024a2:	6803      	ldr	r3, [r0, #0]
900024a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900024a6:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024a8:	4924      	ldr	r1, [pc, #144]	@ (9000253c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
900024aa:	4a25      	ldr	r2, [pc, #148]	@ (90002540 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024ac:	680b      	ldr	r3, [r1, #0]
900024ae:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024b2:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900024b6:	2b01      	cmp	r3, #1
900024b8:	d015      	beq.n	900024e6 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
900024ba:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
900024bc:	7a03      	ldrb	r3, [r0, #8]
900024be:	2b00      	cmp	r3, #0
900024c0:	d12b      	bne.n	9000251a <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
900024c2:	6860      	ldr	r0, [r4, #4]
900024c4:	6803      	ldr	r3, [r0, #0]
900024c6:	681b      	ldr	r3, [r3, #0]
900024c8:	4798      	blx	r3
900024ca:	4603      	mov	r3, r0
900024cc:	2800      	cmp	r0, #0
900024ce:	d1f4      	bne.n	900024ba <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024d0:	7a62      	ldrb	r2, [r4, #9]
900024d2:	2a00      	cmp	r2, #0
900024d4:	d0f1      	beq.n	900024ba <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024d6:	6822      	ldr	r2, [r4, #0]
900024d8:	4620      	mov	r0, r4
                started_by_external_job = false;
900024da:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024de:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024e4:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024e6:	4817      	ldr	r0, [pc, #92]	@ (90002544 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024e8:	6800      	ldr	r0, [r0, #0]
900024ea:	2800      	cmp	r0, #0
900024ec:	d1e5      	bne.n	900024ba <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024ee:	7a20      	ldrb	r0, [r4, #8]
900024f0:	2800      	cmp	r0, #0
900024f2:	d1e2      	bne.n	900024ba <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024f4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024f6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024fa:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024fe:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002500:	eb02 0080 	add.w	r0, r2, r0, lsl #2
90002504:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002506:	6808      	ldr	r0, [r1, #0]
90002508:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
9000250c:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002510:	b17b      	cbz	r3, 90002532 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
90002512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002516:	f7ff be53 	b.w	900021c0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000251a:	4b08      	ldr	r3, [pc, #32]	@ (9000253c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
9000251c:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000251e:	4808      	ldr	r0, [pc, #32]	@ (90002540 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002520:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002522:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002524:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002528:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000252c:	f7ff fec8 	bl	900022c0 <DMA2D_ExternalJobCompleted>
90002530:	e7c7      	b.n	900024c2 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002532:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002536:	f7ff bdfd 	b.w	90002134 <DMA2D_CopyBuffer>
9000253a:	bf00      	nop
9000253c:	240003f0 	.word	0x240003f0
90002540:	24000004 	.word	0x24000004
90002544:	240003ec 	.word	0x240003ec

90002548 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002548:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000254a:	7f8b      	ldrb	r3, [r1, #30]
9000254c:	2b0a      	cmp	r3, #10
9000254e:	d83d      	bhi.n	900025cc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002550:	e8df f003 	tbb	[pc, r3]
90002554:	3c2a063a 	.word	0x3c2a063a
90002558:	063c3c3c 	.word	0x063c3c3c
9000255c:	0606      	.short	0x0606
9000255e:	06          	.byte	0x06
9000255f:	00          	.byte	0x00
90002560:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002562:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002566:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002568:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000256a:	4b1b      	ldr	r3, [pc, #108]	@ (900025d8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000256c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002570:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002572:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002576:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002578:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000257a:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257c:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000257e:	680e      	ldr	r6, [r1, #0]
        return color;
90002580:	68c8      	ldr	r0, [r1, #12]
90002582:	2e08      	cmp	r6, #8
90002584:	d012      	beq.n	900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002586:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002588:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000258a:	0941      	lsrs	r1, r0, #5
9000258c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002590:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002594:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002596:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000259a:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000259c:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000259e:	490f      	ldr	r1, [pc, #60]	@ (900025dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025a0:	4302      	orrs	r2, r0
900025a2:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025a4:	6019      	str	r1, [r3, #0]
    }
}
900025a6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
900025a8:	2400      	movs	r4, #0
900025aa:	e7da      	b.n	90002562 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025ac:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025ae:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900025b0:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025b2:	4a0b      	ldr	r2, [pc, #44]	@ (900025e0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
900025b4:	7f09      	ldrb	r1, [r1, #28]
900025b6:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025ba:	490a      	ldr	r1, [pc, #40]	@ (900025e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025bc:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900025be:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025c0:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025c2:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025c4:	6019      	str	r1, [r3, #0]
}
900025c6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900025c8:	2402      	movs	r4, #2
900025ca:	e7ca      	b.n	90002562 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900025cc:	4b06      	ldr	r3, [pc, #24]	@ (900025e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
900025ce:	2191      	movs	r1, #145	@ 0x91
900025d0:	4a06      	ldr	r2, [pc, #24]	@ (900025ec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025d2:	4807      	ldr	r0, [pc, #28]	@ (900025f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025d4:	f026 f8a4 	bl	90028720 <__assert_func>
900025d8:	52001000 	.word	0x52001000
900025dc:	00032301 	.word	0x00032301
900025e0:	00010009 	.word	0x00010009
900025e4:	00022301 	.word	0x00022301
900025e8:	90029e70 	.word	0x90029e70
900025ec:	90029e8c 	.word	0x90029e8c
900025f0:	90029ed8 	.word	0x90029ed8

900025f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025f6:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025fa:	f1be 0f0b 	cmp.w	lr, #11
900025fe:	f200 80ac 	bhi.w	9000275a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
90002602:	e8df f00e 	tbb	[pc, lr]
90002606:	605b      	.short	0x605b
90002608:	aaaaaa46 	.word	0xaaaaaa46
9000260c:	060606aa 	.word	0x060606aa
90002610:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
90002612:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90002614:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90002618:	f1bc 0f0b 	cmp.w	ip, #11
9000261c:	f200 809d 	bhi.w	9000275a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
90002620:	e8df f00c 	tbb	[pc, ip]
90002624:	9b0d494e 	.word	0x9b0d494e
90002628:	069b9b9b 	.word	0x069b9b9b
9000262c:	06060606 	.word	0x06060606
    switch (format)
90002630:	f1bc 0f0b 	cmp.w	ip, #11
90002634:	f000 8097 	beq.w	90002766 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
90002638:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000263a:	2701      	movs	r7, #1
9000263c:	e001      	b.n	90002642 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000263e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002640:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002642:	8a8b      	ldrh	r3, [r1, #20]
90002644:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002646:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002648:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000264a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000264c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000264e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002652:	4b4b      	ldr	r3, [pc, #300]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002654:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002656:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002658:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000265a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000265c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000265e:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002660:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002662:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002664:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002666:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002668:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000266a:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000266c:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90002670:	d02e      	beq.n	900026d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90002672:	d810      	bhi.n	90002696 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002674:	2a20      	cmp	r2, #32
90002676:	d028      	beq.n	900026ca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90002678:	2a40      	cmp	r2, #64	@ 0x40
9000267a:	d026      	beq.n	900026ca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000267c:	2a04      	cmp	r2, #4
9000267e:	d15a      	bne.n	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002680:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002682:	4a40      	ldr	r2, [pc, #256]	@ (90002784 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002684:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90002688:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000268a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000268c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000268e:	601a      	str	r2, [r3, #0]
}
90002690:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002692:	2600      	movs	r6, #0
90002694:	e7be      	b.n	90002614 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002696:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000269a:	d059      	beq.n	90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
9000269c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
900026a0:	d149      	bne.n	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a2:	4a39      	ldr	r2, [pc, #228]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
900026a4:	4302      	orrs	r2, r0
900026a6:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026a8:	4a36      	ldr	r2, [pc, #216]	@ (90002784 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026aa:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900026ac:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026ae:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026b0:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026b2:	601a      	str	r2, [r3, #0]
}
900026b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
900026b6:	2401      	movs	r4, #1
900026b8:	4627      	mov	r7, r4
900026ba:	e7c2      	b.n	90002642 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
900026bc:	2602      	movs	r6, #2
900026be:	e7a9      	b.n	90002614 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
900026c0:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900026c2:	4627      	mov	r7, r4
900026c4:	e7bd      	b.n	90002642 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
900026c6:	2601      	movs	r6, #1
900026c8:	e7a4      	b.n	90002614 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ca:	4330      	orrs	r0, r6
900026cc:	4b2c      	ldr	r3, [pc, #176]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026ce:	e7d8      	b.n	90002682 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026d0:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d2:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026d4:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026da:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900026dc:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026de:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026e0:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026e2:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026e4:	b9b1      	cbnz	r1, 90002714 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026e6:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900026e8:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ea:	69d8      	ldr	r0, [r3, #28]
900026ec:	4a27      	ldr	r2, [pc, #156]	@ (9000278c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026ee:	3901      	subs	r1, #1
900026f0:	4002      	ands	r2, r0
900026f2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026f6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026f8:	4a21      	ldr	r2, [pc, #132]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026fa:	69d3      	ldr	r3, [r2, #28]
900026fc:	f043 0320 	orr.w	r3, r3, #32
90002700:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90002702:	69d3      	ldr	r3, [r2, #28]
90002704:	069b      	lsls	r3, r3, #26
90002706:	d4fc      	bmi.n	90002702 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90002708:	2310      	movs	r3, #16
9000270a:	6093      	str	r3, [r2, #8]
            if (blend)
9000270c:	b317      	cbz	r7, 90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000270e:	4b1d      	ldr	r3, [pc, #116]	@ (90002784 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
90002710:	6013      	str	r3, [r2, #0]
}
90002712:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90002714:	2901      	cmp	r1, #1
90002716:	d12c      	bne.n	90002772 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002718:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
9000271a:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
9000271c:	69d8      	ldr	r0, [r3, #28]
9000271e:	4a1b      	ldr	r2, [pc, #108]	@ (9000278c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
90002720:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90002724:	bf18      	it	ne
90002726:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002728:	4002      	ands	r2, r0
9000272a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000272e:	f042 0210 	orr.w	r2, r2, #16
90002732:	61da      	str	r2, [r3, #28]
                break;
90002734:	e7e0      	b.n	900026f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
90002736:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002738:	ea46 0600 	orr.w	r6, r6, r0
9000273c:	4b10      	ldr	r3, [pc, #64]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000273e:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002742:	bf14      	ite	ne
90002744:	4a12      	ldrne	r2, [pc, #72]	@ (90002790 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002746:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000274a:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000274c:	601a      	str	r2, [r3, #0]
}
9000274e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002750:	4a10      	ldr	r2, [pc, #64]	@ (90002794 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002752:	e7a7      	b.n	900026a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002754:	4b0e      	ldr	r3, [pc, #56]	@ (90002790 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002756:	6013      	str	r3, [r2, #0]
}
90002758:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000275a:	4b0f      	ldr	r3, [pc, #60]	@ (90002798 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000275c:	2170      	movs	r1, #112	@ 0x70
9000275e:	4a0f      	ldr	r2, [pc, #60]	@ (9000279c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002760:	480f      	ldr	r0, [pc, #60]	@ (900027a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002762:	f025 ffdd 	bl	90028720 <__assert_func>
        assert(0 && "Unsupported Format!");
90002766:	4b0c      	ldr	r3, [pc, #48]	@ (90002798 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002768:	2191      	movs	r1, #145	@ 0x91
9000276a:	4a0e      	ldr	r2, [pc, #56]	@ (900027a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000276c:	480c      	ldr	r0, [pc, #48]	@ (900027a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000276e:	f025 ffd7 	bl	90028720 <__assert_func>
                assert(0 && "Unsupported format");
90002772:	4b0d      	ldr	r3, [pc, #52]	@ (900027a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002774:	f240 111b 	movw	r1, #283	@ 0x11b
90002778:	4a0c      	ldr	r2, [pc, #48]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000277a:	4809      	ldr	r0, [pc, #36]	@ (900027a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000277c:	f025 ffd0 	bl	90028720 <__assert_func>
90002780:	52001000 	.word	0x52001000
90002784:	00022301 	.word	0x00022301
90002788:	00020009 	.word	0x00020009
9000278c:	ffff00ef 	.word	0xffff00ef
90002790:	00012301 	.word	0x00012301
90002794:	0002000a 	.word	0x0002000a
90002798:	90029e70 	.word	0x90029e70
9000279c:	90029f24 	.word	0x90029f24
900027a0:	90029ed8 	.word	0x90029ed8
900027a4:	90029e8c 	.word	0x90029e8c
900027a8:	90029f70 	.word	0x90029f70
900027ac:	90029f8c 	.word	0x90029f8c

900027b0 <_ZN8STM32DMA5startEv>:
    virtual void start()
900027b0:	b510      	push	{r4, lr}
900027b2:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
900027b4:	6840      	ldr	r0, [r0, #4]
900027b6:	6803      	ldr	r3, [r0, #0]
900027b8:	681b      	ldr	r3, [r3, #0]
900027ba:	4798      	blx	r3
900027bc:	b958      	cbnz	r0, 900027d6 <_ZN8STM32DMA5startEv+0x26>
900027be:	7a63      	ldrb	r3, [r4, #9]
900027c0:	b14b      	cbz	r3, 900027d6 <_ZN8STM32DMA5startEv+0x26>
900027c2:	7a23      	ldrb	r3, [r4, #8]
900027c4:	bb3b      	cbnz	r3, 90002816 <_ZN8STM32DMA5startEv+0x66>
            execute();
900027c6:	6822      	ldr	r2, [r4, #0]
900027c8:	4620      	mov	r0, r4
            started_by_external_job = false;
900027ca:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
900027ce:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027d4:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027d6:	4913      	ldr	r1, [pc, #76]	@ (90002824 <_ZN8STM32DMA5startEv+0x74>)
900027d8:	4a13      	ldr	r2, [pc, #76]	@ (90002828 <_ZN8STM32DMA5startEv+0x78>)
900027da:	680b      	ldr	r3, [r1, #0]
900027dc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027e0:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027e4:	2b01      	cmp	r3, #1
900027e6:	d000      	beq.n	900027ea <_ZN8STM32DMA5startEv+0x3a>
    }
900027e8:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ea:	7a20      	ldrb	r0, [r4, #8]
900027ec:	2800      	cmp	r0, #0
900027ee:	d1fb      	bne.n	900027e8 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027f0:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027f2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027f6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027fa:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027fc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
90002800:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002802:	6808      	ldr	r0, [r1, #0]
90002804:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002808:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000280c:	b133      	cbz	r3, 9000281c <_ZN8STM32DMA5startEv+0x6c>
    }
9000280e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002812:	f7ff bcd5 	b.w	900021c0 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002816:	4b03      	ldr	r3, [pc, #12]	@ (90002824 <_ZN8STM32DMA5startEv+0x74>)
90002818:	681b      	ldr	r3, [r3, #0]
    }
9000281a:	bd10      	pop	{r4, pc}
9000281c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002820:	f7ff bc88 	b.w	90002134 <DMA2D_CopyBuffer>
90002824:	240003f0 	.word	0x240003f0
90002828:	24000004 	.word	0x24000004

9000282c <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
9000282c:	4b2c      	ldr	r3, [pc, #176]	@ (900028e0 <DMA2D_XferCpltCallback+0xb4>)
9000282e:	492d      	ldr	r1, [pc, #180]	@ (900028e4 <DMA2D_XferCpltCallback+0xb8>)
90002830:	681b      	ldr	r3, [r3, #0]
    {
90002832:	b510      	push	{r4, lr}
90002834:	685c      	ldr	r4, [r3, #4]
90002836:	6823      	ldr	r3, [r4, #0]
90002838:	695a      	ldr	r2, [r3, #20]
9000283a:	428a      	cmp	r2, r1
9000283c:	d122      	bne.n	90002884 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000283e:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002842:	b192      	cbz	r2, 9000286a <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002844:	7a23      	ldrb	r3, [r4, #8]
90002846:	2b00      	cmp	r3, #0
90002848:	d13a      	bne.n	900028c0 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000284a:	6860      	ldr	r0, [r4, #4]
9000284c:	6803      	ldr	r3, [r0, #0]
9000284e:	681b      	ldr	r3, [r3, #0]
90002850:	4798      	blx	r3
90002852:	4603      	mov	r3, r0
90002854:	b9a8      	cbnz	r0, 90002882 <DMA2D_XferCpltCallback+0x56>
90002856:	7a62      	ldrb	r2, [r4, #9]
90002858:	b19a      	cbz	r2, 90002882 <DMA2D_XferCpltCallback+0x56>
                execute();
9000285a:	6822      	ldr	r2, [r4, #0]
9000285c:	4620      	mov	r0, r4
                started_by_external_job = false;
9000285e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002862:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002868:	4718      	bx	r3
            executeCompleted();
9000286a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000286c:	4620      	mov	r0, r4
9000286e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002870:	491d      	ldr	r1, [pc, #116]	@ (900028e8 <DMA2D_XferCpltCallback+0xbc>)
90002872:	4a1e      	ldr	r2, [pc, #120]	@ (900028ec <DMA2D_XferCpltCallback+0xc0>)
90002874:	680b      	ldr	r3, [r1, #0]
90002876:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000287a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000287e:	2b01      	cmp	r3, #1
90002880:	d004      	beq.n	9000288c <DMA2D_XferCpltCallback+0x60>
90002882:	bd10      	pop	{r4, pc}
90002884:	4620      	mov	r0, r4
90002886:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000288a:	4710      	bx	r2
9000288c:	4818      	ldr	r0, [pc, #96]	@ (900028f0 <DMA2D_XferCpltCallback+0xc4>)
9000288e:	6800      	ldr	r0, [r0, #0]
90002890:	2800      	cmp	r0, #0
90002892:	d1f6      	bne.n	90002882 <DMA2D_XferCpltCallback+0x56>
90002894:	7a20      	ldrb	r0, [r4, #8]
90002896:	2800      	cmp	r0, #0
90002898:	d1f3      	bne.n	90002882 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000289a:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000289c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028a0:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900028a4:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028a6:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900028aa:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ac:	6808      	ldr	r0, [r1, #0]
900028ae:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900028b2:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028b6:	b17b      	cbz	r3, 900028d8 <DMA2D_XferCpltCallback+0xac>
900028b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028bc:	f7ff bc80 	b.w	900021c0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028c0:	4b09      	ldr	r3, [pc, #36]	@ (900028e8 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
900028c2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028c4:	4809      	ldr	r0, [pc, #36]	@ (900028ec <DMA2D_XferCpltCallback+0xc0>)
900028c6:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900028c8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ca:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028ce:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028d2:	f7ff fcf5 	bl	900022c0 <DMA2D_ExternalJobCompleted>
900028d6:	e7b8      	b.n	9000284a <DMA2D_XferCpltCallback+0x1e>
900028d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028dc:	f7ff bc2a 	b.w	90002134 <DMA2D_CopyBuffer>
900028e0:	24021bdc 	.word	0x24021bdc
900028e4:	90002499 	.word	0x90002499
900028e8:	240003f0 	.word	0x240003f0
900028ec:	24000004 	.word	0x24000004
900028f0:	240003ec 	.word	0x240003ec

900028f4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028f4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028f6:	4b0c      	ldr	r3, [pc, #48]	@ (90002928 <_ZN8STM32DMAC1Ev+0x34>)
STM32DMA::STM32DMA()
900028f8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028fa:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028fc:	2500      	movs	r5, #0
900028fe:	300c      	adds	r0, #12
90002900:	2260      	movs	r2, #96	@ 0x60
90002902:	7235      	strb	r5, [r6, #8]
90002904:	7275      	strb	r5, [r6, #9]
90002906:	6070      	str	r0, [r6, #4]
90002908:	f844 3b20 	str.w	r3, [r4], #32
9000290c:	4621      	mov	r1, r4
9000290e:	f00e fb77 	bl	90011000 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90002912:	4621      	mov	r1, r4
90002914:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
90002918:	60cd      	str	r5, [r1, #12]
9000291a:	3124      	adds	r1, #36	@ 0x24
9000291c:	4299      	cmp	r1, r3
9000291e:	d1fb      	bne.n	90002918 <_ZN8STM32DMAC1Ev+0x24>
}
90002920:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
90002922:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
90002926:	bd70      	pop	{r4, r5, r6, pc}
90002928:	90029fd4 	.word	0x90029fd4

9000292c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000292c:	4a03      	ldr	r2, [pc, #12]	@ (9000293c <_ZN8touchgfx5paint8tearDownEv+0x10>)
9000292e:	6813      	ldr	r3, [r2, #0]
90002930:	07db      	lsls	r3, r3, #31
90002932:	d4fc      	bmi.n	9000292e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002934:	2323      	movs	r3, #35	@ 0x23
90002936:	6093      	str	r3, [r2, #8]
}
90002938:	4770      	bx	lr
9000293a:	bf00      	nop
9000293c:	52001000 	.word	0x52001000

90002940 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002940:	4a0b      	ldr	r2, [pc, #44]	@ (90002970 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
90002942:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002944:	03db      	lsls	r3, r3, #15
90002946:	d501      	bpl.n	9000294c <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002948:	2900      	cmp	r1, #0
9000294a:	dc00      	bgt.n	9000294e <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
9000294c:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000294e:	f000 031f 	and.w	r3, r0, #31
90002952:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002954:	f3bf 8f4f 	dsb	sy
90002958:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9000295a:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000295e:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002960:	1a0b      	subs	r3, r1, r0
90002962:	2b00      	cmp	r3, #0
90002964:	dcf9      	bgt.n	9000295a <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002966:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000296a:	f3bf 8f6f 	isb	sy
9000296e:	4770      	bx	lr
90002970:	e000ed00 	.word	0xe000ed00

90002974 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002974:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002976:	4c11      	ldr	r4, [pc, #68]	@ (900029bc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002978:	6825      	ldr	r5, [r4, #0]
9000297a:	07ed      	lsls	r5, r5, #31
9000297c:	d4fc      	bmi.n	90002978 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000297e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002980:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90002982:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002984:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002986:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000298a:	f04f 0502 	mov.w	r5, #2
9000298e:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002990:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002992:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002994:	d00b      	beq.n	900029ae <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002996:	490a      	ldr	r1, [pc, #40]	@ (900029c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002998:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000299a:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000299e:	4909      	ldr	r1, [pc, #36]	@ (900029c4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029a0:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
900029a2:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
900029a4:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
900029a6:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029a8:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
900029aa:	bc30      	pop	{r4, r5}
900029ac:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900029ae:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
900029b0:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029b2:	4b05      	ldr	r3, [pc, #20]	@ (900029c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
900029b4:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029b6:	6023      	str	r3, [r4, #0]
}
900029b8:	bc30      	pop	{r4, r5}
900029ba:	4770      	bx	lr
900029bc:	52001000 	.word	0x52001000
900029c0:	00010009 	.word	0x00010009
900029c4:	00020001 	.word	0x00020001
900029c8:	00030001 	.word	0x00030001

900029cc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900029cc:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029ce:	4c10      	ldr	r4, [pc, #64]	@ (90002a10 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029d0:	6825      	ldr	r5, [r4, #0]
900029d2:	07ed      	lsls	r5, r5, #31
900029d4:	d4fc      	bmi.n	900029d0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029d6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029d8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900029da:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029dc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029de:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029e2:	f04f 0502 	mov.w	r5, #2
900029e6:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029e8:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029ea:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029ec:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029ee:	d009      	beq.n	90002a04 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029f0:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029f2:	4a08      	ldr	r2, [pc, #32]	@ (90002a14 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029f4:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029f8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029fa:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029fc:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029fe:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
90002a00:	bc30      	pop	{r4, r5}
90002a02:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a04:	4a04      	ldr	r2, [pc, #16]	@ (90002a18 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a06:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a08:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a0a:	6023      	str	r3, [r4, #0]
}
90002a0c:	bc30      	pop	{r4, r5}
90002a0e:	4770      	bx	lr
90002a10:	52001000 	.word	0x52001000
90002a14:	00020001 	.word	0x00020001
90002a18:	ff020002 	.word	0xff020002

90002a1c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
90002a1c:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002a1e:	4c0c      	ldr	r4, [pc, #48]	@ (90002a50 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
90002a20:	6825      	ldr	r5, [r4, #0]
90002a22:	07ed      	lsls	r5, r5, #31
90002a24:	d4fc      	bmi.n	90002a20 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a26:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a28:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a2a:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a2c:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a2e:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a32:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a36:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a38:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a3a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a3c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a3e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a40:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a42:	4b04      	ldr	r3, [pc, #16]	@ (90002a54 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a44:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a46:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a48:	6023      	str	r3, [r4, #0]
}
90002a4a:	bc70      	pop	{r4, r5, r6}
90002a4c:	4770      	bx	lr
90002a4e:	bf00      	nop
90002a50:	52001000 	.word	0x52001000
90002a54:	00020001 	.word	0x00020001

90002a58 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a58:	2001      	movs	r0, #1
90002a5a:	4770      	bx	lr

90002a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a5c:	200c      	movs	r0, #12
90002a5e:	4770      	bx	lr

90002a60 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a60:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a64:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a68:	3008      	adds	r0, #8
90002a6a:	4770      	bx	lr

90002a6c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a6c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a70:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a74:	3008      	adds	r0, #8
90002a76:	4770      	bx	lr

90002a78 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a78:	2001      	movs	r0, #1
90002a7a:	4770      	bx	lr

90002a7c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a7c:	f44f 609c 	mov.w	r0, #1248	@ 0x4e0
90002a80:	4770      	bx	lr
90002a82:	bf00      	nop

90002a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a84:	f44f 639c 	mov.w	r3, #1248	@ 0x4e0
90002a88:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a8c:	3008      	adds	r0, #8
90002a8e:	4770      	bx	lr

90002a90 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a90:	f44f 639c 	mov.w	r3, #1248	@ 0x4e0
90002a94:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a98:	3008      	adds	r0, #8
90002a9a:	4770      	bx	lr

90002a9c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a9c:	2001      	movs	r0, #1
90002a9e:	4770      	bx	lr

90002aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002aa0:	2010      	movs	r0, #16
90002aa2:	4770      	bx	lr

90002aa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002aa4:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002aa8:	3008      	adds	r0, #8
90002aaa:	4770      	bx	lr

90002aac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002aac:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002ab0:	3008      	adds	r0, #8
90002ab2:	4770      	bx	lr

90002ab4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
90002ab4:	4608      	mov	r0, r1
90002ab6:	f002 b8b7 	b.w	90004c28 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
90002aba:	bf00      	nop

90002abc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002abc:	4b03      	ldr	r3, [pc, #12]	@ (90002acc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002abe:	b510      	push	{r4, lr}
90002ac0:	4604      	mov	r4, r0
90002ac2:	6003      	str	r3, [r0, #0]
90002ac4:	f00d f8e7 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ac8:	4620      	mov	r0, r4
90002aca:	bd10      	pop	{r4, pc}
90002acc:	9002a08c 	.word	0x9002a08c

90002ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ad0:	4b05      	ldr	r3, [pc, #20]	@ (90002ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002ad2:	b510      	push	{r4, lr}
90002ad4:	4604      	mov	r4, r0
90002ad6:	6003      	str	r3, [r0, #0]
90002ad8:	f00d f8dd 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002adc:	2114      	movs	r1, #20
90002ade:	4620      	mov	r0, r4
90002ae0:	f025 faa6 	bl	90028030 <_ZdlPvj>
90002ae4:	4620      	mov	r0, r4
90002ae6:	bd10      	pop	{r4, pc}
90002ae8:	9002a08c 	.word	0x9002a08c

90002aec <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002aec:	4b03      	ldr	r3, [pc, #12]	@ (90002afc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002aee:	b510      	push	{r4, lr}
90002af0:	4604      	mov	r4, r0
90002af2:	6003      	str	r3, [r0, #0]
90002af4:	f00d f8cf 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af8:	4620      	mov	r0, r4
90002afa:	bd10      	pop	{r4, pc}
90002afc:	9002a058 	.word	0x9002a058

90002b00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b00:	4b06      	ldr	r3, [pc, #24]	@ (90002b1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002b02:	b510      	push	{r4, lr}
90002b04:	4604      	mov	r4, r0
90002b06:	6003      	str	r3, [r0, #0]
90002b08:	f00d f8c5 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b0c:	f44f 619d 	mov.w	r1, #1256	@ 0x4e8
90002b10:	4620      	mov	r0, r4
90002b12:	f025 fa8d 	bl	90028030 <_ZdlPvj>
90002b16:	4620      	mov	r0, r4
90002b18:	bd10      	pop	{r4, pc}
90002b1a:	bf00      	nop
90002b1c:	9002a058 	.word	0x9002a058

90002b20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b20:	4b03      	ldr	r3, [pc, #12]	@ (90002b30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b22:	b510      	push	{r4, lr}
90002b24:	4604      	mov	r4, r0
90002b26:	6003      	str	r3, [r0, #0]
90002b28:	f00d f8b5 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b2c:	4620      	mov	r0, r4
90002b2e:	bd10      	pop	{r4, pc}
90002b30:	9002a024 	.word	0x9002a024

90002b34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b34:	4b05      	ldr	r3, [pc, #20]	@ (90002b4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b36:	b510      	push	{r4, lr}
90002b38:	4604      	mov	r4, r0
90002b3a:	6003      	str	r3, [r0, #0]
90002b3c:	f00d f8ab 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b40:	2118      	movs	r1, #24
90002b42:	4620      	mov	r0, r4
90002b44:	f025 fa74 	bl	90028030 <_ZdlPvj>
90002b48:	4620      	mov	r0, r4
90002b4a:	bd10      	pop	{r4, pc}
90002b4c:	9002a024 	.word	0x9002a024

90002b50 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b50:	b510      	push	{r4, lr}
90002b52:	4a0c      	ldr	r2, [pc, #48]	@ (90002b84 <_ZN12FrontendHeapD1Ev+0x34>)
90002b54:	4604      	mov	r4, r0
90002b56:	4b0c      	ldr	r3, [pc, #48]	@ (90002b88 <_ZN12FrontendHeapD1Ev+0x38>)
90002b58:	f200 5014 	addw	r0, r0, #1300	@ 0x514
90002b5c:	6022      	str	r2, [r4, #0]
90002b5e:	f8c4 3514 	str.w	r3, [r4, #1300]	@ 0x514
90002b62:	f00d f898 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b66:	4620      	mov	r0, r4
90002b68:	4b08      	ldr	r3, [pc, #32]	@ (90002b8c <_ZN12FrontendHeapD1Ev+0x3c>)
90002b6a:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b6e:	f00d f892 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b72:	4620      	mov	r0, r4
90002b74:	4b06      	ldr	r3, [pc, #24]	@ (90002b90 <_ZN12FrontendHeapD1Ev+0x40>)
90002b76:	f840 3f14 	str.w	r3, [r0, #20]!
90002b7a:	f00d f88c 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b7e:	4620      	mov	r0, r4
90002b80:	bd10      	pop	{r4, pc}
90002b82:	bf00      	nop
90002b84:	9002a0c0 	.word	0x9002a0c0
90002b88:	9002a08c 	.word	0x9002a08c
90002b8c:	9002a058 	.word	0x9002a058
90002b90:	9002a024 	.word	0x9002a024

90002b94 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b94:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b96:	4c0c      	ldr	r4, [pc, #48]	@ (90002bc8 <__tcf_0+0x34>)
90002b98:	4a0c      	ldr	r2, [pc, #48]	@ (90002bcc <__tcf_0+0x38>)
90002b9a:	4b0d      	ldr	r3, [pc, #52]	@ (90002bd0 <__tcf_0+0x3c>)
90002b9c:	f204 5014 	addw	r0, r4, #1300	@ 0x514
90002ba0:	6022      	str	r2, [r4, #0]
90002ba2:	f8c4 3514 	str.w	r3, [r4, #1300]	@ 0x514
90002ba6:	f00d f876 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002baa:	4620      	mov	r0, r4
90002bac:	4b09      	ldr	r3, [pc, #36]	@ (90002bd4 <__tcf_0+0x40>)
90002bae:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bb2:	f00d f870 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bb6:	4620      	mov	r0, r4
90002bb8:	4b07      	ldr	r3, [pc, #28]	@ (90002bd8 <__tcf_0+0x44>)
        static FrontendHeap instance;
90002bba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002bbe:	f840 3f14 	str.w	r3, [r0, #20]!
90002bc2:	f00d b868 	b.w	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bc6:	bf00      	nop
90002bc8:	24006f10 	.word	0x24006f10
90002bcc:	9002a0c0 	.word	0x9002a0c0
90002bd0:	9002a08c 	.word	0x9002a08c
90002bd4:	9002a058 	.word	0x9002a058
90002bd8:	9002a024 	.word	0x9002a024

90002bdc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002bdc:	b510      	push	{r4, lr}
90002bde:	4a0e      	ldr	r2, [pc, #56]	@ (90002c18 <_ZN12FrontendHeapD0Ev+0x3c>)
90002be0:	4604      	mov	r4, r0
90002be2:	4b0e      	ldr	r3, [pc, #56]	@ (90002c1c <_ZN12FrontendHeapD0Ev+0x40>)
90002be4:	f200 5014 	addw	r0, r0, #1300	@ 0x514
90002be8:	6022      	str	r2, [r4, #0]
90002bea:	f8c4 3514 	str.w	r3, [r4, #1300]	@ 0x514
90002bee:	f00d f852 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bf2:	4620      	mov	r0, r4
90002bf4:	4b0a      	ldr	r3, [pc, #40]	@ (90002c20 <_ZN12FrontendHeapD0Ev+0x44>)
90002bf6:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bfa:	f00d f84c 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bfe:	4b09      	ldr	r3, [pc, #36]	@ (90002c24 <_ZN12FrontendHeapD0Ev+0x48>)
90002c00:	4620      	mov	r0, r4
90002c02:	f840 3f14 	str.w	r3, [r0, #20]!
90002c06:	f00d f846 	bl	9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c0a:	4620      	mov	r0, r4
90002c0c:	f240 6194 	movw	r1, #1684	@ 0x694
90002c10:	f025 fa0e 	bl	90028030 <_ZdlPvj>
90002c14:	4620      	mov	r0, r4
90002c16:	bd10      	pop	{r4, pc}
90002c18:	9002a0c0 	.word	0x9002a0c0
90002c1c:	9002a08c 	.word	0x9002a08c
90002c20:	9002a058 	.word	0x9002a058
90002c24:	9002a024 	.word	0x9002a024

90002c28 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c2c:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c2e:	2400      	movs	r4, #0
90002c30:	f001 fe02 	bl	90004838 <_ZN14BitmapDatabase11getInstanceEv>
90002c34:	4605      	mov	r5, r0
90002c36:	f001 fe03 	bl	90004840 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c3a:	4623      	mov	r3, r4
90002c3c:	4601      	mov	r1, r0
90002c3e:	4622      	mov	r2, r4
90002c40:	4628      	mov	r0, r5
90002c42:	9400      	str	r4, [sp, #0]
90002c44:	f016 f98a 	bl	90018f5c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c48:	4b29      	ldr	r3, [pc, #164]	@ (90002cf0 <touchgfx_init+0xc8>)
90002c4a:	4a2a      	ldr	r2, [pc, #168]	@ (90002cf4 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c4c:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c4e:	4c2a      	ldr	r4, [pc, #168]	@ (90002cf8 <touchgfx_init+0xd0>)
90002c50:	601a      	str	r2, [r3, #0]
90002c52:	f003 f989 	bl	90005f68 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c56:	4b29      	ldr	r3, [pc, #164]	@ (90002cfc <touchgfx_init+0xd4>)
90002c58:	4a29      	ldr	r2, [pc, #164]	@ (90002d00 <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c5a:	482a      	ldr	r0, [pc, #168]	@ (90002d04 <touchgfx_init+0xdc>)
90002c5c:	609a      	str	r2, [r3, #8]
90002c5e:	f016 f8e5 	bl	90018e2c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c62:	6823      	ldr	r3, [r4, #0]
90002c64:	f3bf 8f5b 	dmb	ish
90002c68:	07db      	lsls	r3, r3, #31
90002c6a:	d505      	bpl.n	90002c78 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c6c:	4826      	ldr	r0, [pc, #152]	@ (90002d08 <touchgfx_init+0xe0>)
}
90002c6e:	b002      	add	sp, #8
90002c70:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c74:	f7fe b952 	b.w	90000f1c <_ZN11TouchGFXHAL10initializeEv>
90002c78:	4620      	mov	r0, r4
90002c7a:	f025 f9db 	bl	90028034 <__cxa_guard_acquire>
90002c7e:	2800      	cmp	r0, #0
90002c80:	d0f4      	beq.n	90002c6c <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c82:	4d22      	ldr	r5, [pc, #136]	@ (90002d0c <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c84:	4b22      	ldr	r3, [pc, #136]	@ (90002d10 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002c86:	f505 66a7 	add.w	r6, r5, #1336	@ 0x538
        : presenterStorage(pres),
90002c8a:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002c8e:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002c92:	f205 5714 	addw	r7, r5, #1300	@ 0x514
90002c96:	602b      	str	r3, [r5, #0]
90002c98:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002c9a:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002c9c:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002ca0:	f00c fffa 	bl	9000fc98 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002ca4:	4b1b      	ldr	r3, [pc, #108]	@ (90002d14 <touchgfx_init+0xec>)
90002ca6:	4640      	mov	r0, r8
90002ca8:	616b      	str	r3, [r5, #20]
90002caa:	f00c fff5 	bl	9000fc98 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cae:	4b1a      	ldr	r3, [pc, #104]	@ (90002d18 <touchgfx_init+0xf0>)
90002cb0:	4638      	mov	r0, r7
90002cb2:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002cb4:	f00c fff0 	bl	9000fc98 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cb8:	4b18      	ldr	r3, [pc, #96]	@ (90002d1c <touchgfx_init+0xf4>)
90002cba:	f505 60a5 	add.w	r0, r5, #1320	@ 0x528
90002cbe:	f8c5 3514 	str.w	r3, [r5, #1300]	@ 0x514
90002cc2:	f003 f9db 	bl	9000607c <_ZN5ModelC1Ev>
90002cc6:	462a      	mov	r2, r5
90002cc8:	f505 61a5 	add.w	r1, r5, #1320	@ 0x528
90002ccc:	4630      	mov	r0, r6
90002cce:	f003 f9cb 	bl	90006068 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cd2:	4630      	mov	r0, r6
90002cd4:	f001 ffa8 	bl	90004c28 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
90002cd8:	4811      	ldr	r0, [pc, #68]	@ (90002d20 <touchgfx_init+0xf8>)
90002cda:	f025 fd3f 	bl	9002875c <atexit>
90002cde:	4620      	mov	r0, r4
90002ce0:	f025 f9b4 	bl	9002804c <__cxa_guard_release>
90002ce4:	4808      	ldr	r0, [pc, #32]	@ (90002d08 <touchgfx_init+0xe0>)
}
90002ce6:	b002      	add	sp, #8
90002ce8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cec:	f7fe b916 	b.w	90000f1c <_ZN11TouchGFXHAL10initializeEv>
90002cf0:	24021c40 	.word	0x24021c40
90002cf4:	240060b8 	.word	0x240060b8
90002cf8:	24006f0c 	.word	0x24006f0c
90002cfc:	240060d8 	.word	0x240060d8
90002d00:	240060bc 	.word	0x240060bc
90002d04:	24000040 	.word	0x24000040
90002d08:	24006030 	.word	0x24006030
90002d0c:	24006f10 	.word	0x24006f10
90002d10:	9002a0c0 	.word	0x9002a0c0
90002d14:	9002a024 	.word	0x9002a024
90002d18:	9002a058 	.word	0x9002a058
90002d1c:	9002a08c 	.word	0x9002a08c
90002d20:	90002b95 	.word	0x90002b95

90002d24 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d24:	4770      	bx	lr
90002d26:	bf00      	nop

90002d28 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d28:	4801      	ldr	r0, [pc, #4]	@ (90002d30 <touchgfx_taskEntry+0x8>)
90002d2a:	f7fe b945 	b.w	90000fb8 <_ZN11TouchGFXHAL9taskEntryEv>
90002d2e:	bf00      	nop
90002d30:	24006030 	.word	0x24006030

90002d34 <_GLOBAL__sub_I_touchgfx_init>:
}
90002d34:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d36:	4e27      	ldr	r6, [pc, #156]	@ (90002dd4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
{
public:

    STM32TouchController() {}
90002d38:	4b27      	ldr	r3, [pc, #156]	@ (90002dd8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002d3a:	4c28      	ldr	r4, [pc, #160]	@ (90002ddc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002d3c:	4630      	mov	r0, r6
static LCD16bpp display;
90002d3e:	4d28      	ldr	r5, [pc, #160]	@ (90002de0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002d40:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d42:	f7ff fdd7 	bl	900028f4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d46:	4628      	mov	r0, r5
90002d48:	f01b fa18 	bl	9001e17c <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d4c:	4825      	ldr	r0, [pc, #148]	@ (90002de4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d4e:	f013 fedb 	bl	90016b08 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d52:	4b25      	ldr	r3, [pc, #148]	@ (90002de8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          mcuInstrumentation(0),
90002d54:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d56:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d5a:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d5e:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d60:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d62:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d64:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d68:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d6a:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d6c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d70:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d74:	4c1d      	ldr	r4, [pc, #116]	@ (90002dec <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d76:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d78:	4c1d      	ldr	r4, [pc, #116]	@ (90002df0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d7a:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d7c:	4c1d      	ldr	r4, [pc, #116]	@ (90002df4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002d7e:	8020      	strh	r0, [r4, #0]
90002d80:	4c1d      	ldr	r4, [pc, #116]	@ (90002df8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d82:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d84:	4c1d      	ldr	r4, [pc, #116]	@ (90002dfc <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d86:	481e      	ldr	r0, [pc, #120]	@ (90002e00 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d88:	8021      	strh	r1, [r4, #0]
90002d8a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d8c:	4c1d      	ldr	r4, [pc, #116]	@ (90002e04 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d8e:	491e      	ldr	r1, [pc, #120]	@ (90002e08 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d90:	481e      	ldr	r0, [pc, #120]	@ (90002e0c <_GLOBAL__sub_I_touchgfx_init+0xd8>)
          lcdRef(display),
90002d92:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d96:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002d9a:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d9e:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002da0:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002da4:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002da8:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002dac:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002db0:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002db4:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002db8:	7022      	strb	r2, [r4, #0]
90002dba:	6019      	str	r1, [r3, #0]
90002dbc:	4914      	ldr	r1, [pc, #80]	@ (90002e10 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
        : cc_consumed(0),
90002dbe:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002dc2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          cc_in(0)
90002dc6:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90002dca:	67d9      	str	r1, [r3, #124]	@ 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002dcc:	e9c3 201d 	strd	r2, r0, [r3, #116]	@ 0x74
}
90002dd0:	bd70      	pop	{r4, r5, r6, pc}
90002dd2:	bf00      	nop
90002dd4:	24006164 	.word	0x24006164
90002dd8:	90029810 	.word	0x90029810
90002ddc:	24006f08 	.word	0x24006f08
90002de0:	240060d8 	.word	0x240060d8
90002de4:	240060bc 	.word	0x240060bc
90002de8:	24006030 	.word	0x24006030
90002dec:	01000001 	.word	0x01000001
90002df0:	24021bdc 	.word	0x24021bdc
90002df4:	24021bd0 	.word	0x24021bd0
90002df8:	24021bd6 	.word	0x24021bd6
90002dfc:	24021bd2 	.word	0x24021bd2
90002e00:	24021bd8 	.word	0x24021bd8
90002e04:	24021bd4 	.word	0x24021bd4
90002e08:	900299a0 	.word	0x900299a0
90002e0c:	01010000 	.word	0x01010000
90002e10:	900297e8 	.word	0x900297e8

90002e14 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002e14:	4801      	ldr	r0, [pc, #4]	@ (90002e1c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002e16:	f7ff bae5 	b.w	900023e4 <_ZN8STM32DMAD1Ev>
90002e1a:	bf00      	nop
90002e1c:	24006164 	.word	0x24006164

90002e20 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e20:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e24:	b112      	cbz	r2, 90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e26:	6803      	ldr	r3, [r0, #0]
90002e28:	695b      	ldr	r3, [r3, #20]
90002e2a:	4718      	bx	r3
        }
    }
90002e2c:	4770      	bx	lr
90002e2e:	bf00      	nop

90002e30 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e30:	2000      	movs	r0, #0
90002e32:	4770      	bx	lr

90002e34 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e34:	8081      	strh	r1, [r0, #4]
    }
90002e36:	4770      	bx	lr

90002e38 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e38:	80c1      	strh	r1, [r0, #6]
    }
90002e3a:	4770      	bx	lr

90002e3c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e3c:	8101      	strh	r1, [r0, #8]
    }
90002e3e:	4770      	bx	lr

90002e40 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e40:	8141      	strh	r1, [r0, #10]
    }
90002e42:	4770      	bx	lr

90002e44 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e44:	4770      	bx	lr
90002e46:	bf00      	nop

90002e48 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e48:	4770      	bx	lr
90002e4a:	bf00      	nop

90002e4c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e4c:	4770      	bx	lr
90002e4e:	bf00      	nop

90002e50 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e50:	4770      	bx	lr
90002e52:	bf00      	nop

90002e54 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e54:	4770      	bx	lr
90002e56:	bf00      	nop

90002e58 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e58:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e5c:	6803      	ldr	r3, [r0, #0]
90002e5e:	eba2 020c 	sub.w	r2, r2, ip
90002e62:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e66:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e68:	eba1 010c 	sub.w	r1, r1, ip
90002e6c:	b212      	sxth	r2, r2
90002e6e:	b209      	sxth	r1, r1
90002e70:	4718      	bx	r3
90002e72:	bf00      	nop

90002e74 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e74:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e76:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e7a:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e7e:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e82:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e86:	6010      	str	r0, [r2, #0]
    }
90002e88:	4770      	bx	lr
90002e8a:	bf00      	nop

90002e8c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e8c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e90:	b11a      	cbz	r2, 90002e9a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e92:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002e96:	b102      	cbz	r2, 90002e9a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002e98:	6018      	str	r0, [r3, #0]
        }
    }
90002e9a:	4770      	bx	lr

90002e9c <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002e9c:	2000      	movs	r0, #0
90002e9e:	4770      	bx	lr

90002ea0 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002ea0:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002ea2:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002ea4:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002ea6:	809a      	strh	r2, [r3, #4]
    }
90002ea8:	4770      	bx	lr
90002eaa:	bf00      	nop

90002eac <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002eac:	4770      	bx	lr
90002eae:	bf00      	nop

90002eb0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002eb0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002eb4:	4770      	bx	lr
90002eb6:	bf00      	nop

90002eb8 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002eb8:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002ebc:	4770      	bx	lr
90002ebe:	bf00      	nop

90002ec0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002ec0:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002ec4:	688a      	ldr	r2, [r1, #8]
90002ec6:	f8c0 c000 	str.w	ip, [r0]
90002eca:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002ecc:	4770      	bx	lr
90002ece:	bf00      	nop

90002ed0 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002ed0:	2200      	movs	r2, #0
90002ed2:	6002      	str	r2, [r0, #0]
90002ed4:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002ed6:	4770      	bx	lr

90002ed8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002ed8:	2000      	movs	r0, #0
90002eda:	4770      	bx	lr

90002edc <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002edc:	7701      	strb	r1, [r0, #28]
    }
90002ede:	4770      	bx	lr

90002ee0 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002ee0:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002ee4:	4770      	bx	lr
90002ee6:	bf00      	nop

90002ee8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002ee8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002eec:	4770      	bx	lr
90002eee:	bf00      	nop

90002ef0 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002ef0:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002ef4:	4770      	bx	lr
90002ef6:	bf00      	nop

90002ef8 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002ef8:	2001      	movs	r0, #1
90002efa:	4770      	bx	lr

90002efc <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002efc:	3098      	adds	r0, #152	@ 0x98
90002efe:	4770      	bx	lr

90002f00 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002f00:	308c      	adds	r0, #140	@ 0x8c
90002f02:	4770      	bx	lr

90002f04 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002f04:	3084      	adds	r0, #132	@ 0x84
90002f06:	4770      	bx	lr

90002f08 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002f08:	4770      	bx	lr
90002f0a:	bf00      	nop

90002f0c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002f0c:	4b03      	ldr	r3, [pc, #12]	@ (90002f1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002f0e:	2290      	movs	r2, #144	@ 0x90
90002f10:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002f14:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f18:	4770      	bx	lr
90002f1a:	bf00      	nop
90002f1c:	e000e100 	.word	0xe000e100

90002f20 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f20:	4a09      	ldr	r2, [pc, #36]	@ (90002f48 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f22:	490a      	ldr	r1, [pc, #40]	@ (90002f4c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f24:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f26:	480a      	ldr	r0, [pc, #40]	@ (90002f50 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f28:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f2c:	3b01      	subs	r3, #1
90002f2e:	b29b      	uxth	r3, r3
90002f30:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f32:	6911      	ldr	r1, [r2, #16]
90002f34:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f38:	3901      	subs	r1, #1
90002f3a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f3c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f3e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f40:	f043 0301 	orr.w	r3, r3, #1
90002f44:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f46:	4770      	bx	lr
90002f48:	50001000 	.word	0x50001000
90002f4c:	240075a6 	.word	0x240075a6
90002f50:	240075a4 	.word	0x240075a4

90002f54 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f54:	4b01      	ldr	r3, [pc, #4]	@ (90002f5c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f56:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f5a:	4770      	bx	lr
90002f5c:	50001000 	.word	0x50001000

90002f60 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f60:	4b02      	ldr	r3, [pc, #8]	@ (90002f6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f62:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f64:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f68:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f6a:	4770      	bx	lr
90002f6c:	50001000 	.word	0x50001000

90002f70 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f70:	4770      	bx	lr
90002f72:	bf00      	nop

90002f74 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f74:	4770      	bx	lr
90002f76:	bf00      	nop

90002f78 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f78:	4770      	bx	lr
90002f7a:	bf00      	nop

90002f7c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f7c:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f80:	2300      	movs	r3, #0
90002f82:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f86:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f8a:	4770      	bx	lr

90002f8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f8c:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f90:	4770      	bx	lr
90002f92:	bf00      	nop

90002f94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f94:	b510      	push	{r4, lr}
90002f96:	4604      	mov	r4, r0
90002f98:	2130      	movs	r1, #48	@ 0x30
90002f9a:	f025 f849 	bl	90028030 <_ZdlPvj>
90002f9e:	4620      	mov	r0, r4
90002fa0:	bd10      	pop	{r4, pc}
90002fa2:	bf00      	nop

90002fa4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
90002fa4:	b510      	push	{r4, lr}
90002fa6:	4604      	mov	r4, r0
90002fa8:	212c      	movs	r1, #44	@ 0x2c
90002faa:	f025 f841 	bl	90028030 <_ZdlPvj>
90002fae:	4620      	mov	r0, r4
90002fb0:	bd10      	pop	{r4, pc}
90002fb2:	bf00      	nop

90002fb4 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002fb4:	b510      	push	{r4, lr}
90002fb6:	4604      	mov	r4, r0
90002fb8:	21bc      	movs	r1, #188	@ 0xbc
90002fba:	f025 f839 	bl	90028030 <_ZdlPvj>
90002fbe:	4620      	mov	r0, r4
90002fc0:	bd10      	pop	{r4, pc}
90002fc2:	bf00      	nop

90002fc4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002fc4:	b911      	cbnz	r1, 90002fcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002fc6:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002fca:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002fcc:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fce:	4a03      	ldr	r2, [pc, #12]	@ (90002fdc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002fd0:	f44f 7191 	mov.w	r1, #290	@ 0x122
90002fd4:	4b02      	ldr	r3, [pc, #8]	@ (90002fe0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002fd6:	4803      	ldr	r0, [pc, #12]	@ (90002fe4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fd8:	f025 fba2 	bl	90028720 <__assert_func>
90002fdc:	9002a0e0 	.word	0x9002a0e0
90002fe0:	9002a0cc 	.word	0x9002a0cc
90002fe4:	9002a1fc 	.word	0x9002a1fc

90002fe8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002fe8:	b921      	cbnz	r1, 90002ff4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002fea:	6840      	ldr	r0, [r0, #4]
90002fec:	4611      	mov	r1, r2
90002fee:	6803      	ldr	r3, [r0, #0]
90002ff0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002ff2:	4718      	bx	r3
        assert(handle < no_streams);
90002ff4:	4b03      	ldr	r3, [pc, #12]	@ (90003004 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002ff6:	f44f 718e 	mov.w	r1, #284	@ 0x11c
90002ffa:	4a03      	ldr	r2, [pc, #12]	@ (90003008 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002ffc:	4803      	ldr	r0, [pc, #12]	@ (9000300c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002ffe:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90003000:	f025 fb8e 	bl	90028720 <__assert_func>
90003004:	9002a0cc 	.word	0x9002a0cc
90003008:	9002a244 	.word	0x9002a244
9000300c:	9002a1fc 	.word	0x9002a1fc

90003010 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90003010:	b909      	cbnz	r1, 90003016 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90003012:	68c0      	ldr	r0, [r0, #12]
90003014:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003016:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003018:	4a03      	ldr	r2, [pc, #12]	@ (90003028 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000301a:	f44f 718a 	mov.w	r1, #276	@ 0x114
9000301e:	4b03      	ldr	r3, [pc, #12]	@ (9000302c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90003020:	4803      	ldr	r0, [pc, #12]	@ (90003030 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90003022:	f025 fb7d 	bl	90028720 <__assert_func>
90003026:	bf00      	nop
90003028:	9002a384 	.word	0x9002a384
9000302c:	9002a0cc 	.word	0x9002a0cc
90003030:	9002a1fc 	.word	0x9002a1fc

90003034 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003034:	b921      	cbnz	r1, 90003040 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003036:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003038:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000303a:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000303e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003040:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003042:	4a03      	ldr	r2, [pc, #12]	@ (90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003044:	2140      	movs	r1, #64	@ 0x40
90003046:	4b03      	ldr	r3, [pc, #12]	@ (90003054 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003048:	4803      	ldr	r0, [pc, #12]	@ (90003058 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000304a:	f025 fb69 	bl	90028720 <__assert_func>
9000304e:	bf00      	nop
90003050:	9002a4cc 	.word	0x9002a4cc
90003054:	9002a0cc 	.word	0x9002a0cc
90003058:	9002a1fc 	.word	0x9002a1fc

9000305c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000305c:	b508      	push	{r3, lr}
9000305e:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90003060:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
90003064:	b940      	cbnz	r0, 90003078 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
90003066:	2201      	movs	r2, #1
90003068:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
9000306c:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
90003070:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90003074:	6308      	str	r0, [r1, #48]	@ 0x30
    }
90003076:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003078:	4b03      	ldr	r3, [pc, #12]	@ (90003088 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
9000307a:	f240 116b 	movw	r1, #363	@ 0x16b
9000307e:	4a03      	ldr	r2, [pc, #12]	@ (9000308c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
90003080:	4803      	ldr	r0, [pc, #12]	@ (90003090 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
90003082:	f025 fb4d 	bl	90028720 <__assert_func>
90003086:	bf00      	nop
90003088:	9002a618 	.word	0x9002a618
9000308c:	9002a648 	.word	0x9002a648
90003090:	9002a1fc 	.word	0x9002a1fc

90003094 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90003094:	f00d b8e4 	b.w	90010260 <_ZN8touchgfx3HAL10beginFrameEv>

90003098 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90003098:	f00d b8ee 	b.w	90010278 <_ZN8touchgfx3HAL8endFrameEv>

9000309c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
9000309c:	f00d b8aa 	b.w	900101f4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900030a0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900030a0:	f00d ba0b 	b.w	900104ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900030a4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900030a4:	4814      	ldr	r0, [pc, #80]	@ (900030f8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900030a6:	6943      	ldr	r3, [r0, #20]
900030a8:	03d9      	lsls	r1, r3, #15
900030aa:	d523      	bpl.n	900030f4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900030ac:	2300      	movs	r3, #0
{
900030ae:	b510      	push	{r4, lr}
900030b0:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900030b4:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030b8:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030bc:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900030c0:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030c4:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900030c8:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030cc:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030d0:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030d2:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900030d6:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030d8:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030dc:	1c5a      	adds	r2, r3, #1
900030de:	d1f8      	bne.n	900030d2 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030e0:	f1ac 0c20 	sub.w	ip, ip, #32
900030e4:	f11c 0f20 	cmn.w	ip, #32
900030e8:	d1f0      	bne.n	900030cc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030ee:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030f2:	bd10      	pop	{r4, pc}
900030f4:	4770      	bx	lr
900030f6:	bf00      	nop
900030f8:	e000ed00 	.word	0xe000ed00

900030fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900030fc:	b5f0      	push	{r4, r5, r6, r7, lr}
900030fe:	b083      	sub	sp, #12
        assert(handle < no_streams);
90003100:	bb49      	cbnz	r1, 90003156 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5a>
90003102:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003104:	6840      	ldr	r0, [r0, #4]
90003106:	461d      	mov	r5, r3
90003108:	4616      	mov	r6, r2
9000310a:	6803      	ldr	r3, [r0, #0]
9000310c:	691b      	ldr	r3, [r3, #16]
9000310e:	4798      	blx	r3
90003110:	b908      	cbnz	r0, 90003116 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
90003112:	b003      	add	sp, #12
90003114:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003116:	4f13      	ldr	r7, [pc, #76]	@ (90003164 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003118:	2101      	movs	r1, #1
9000311a:	6838      	ldr	r0, [r7, #0]
9000311c:	f00d fe74 	bl	90010e08 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003120:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003122:	4605      	mov	r5, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003124:	4668      	mov	r0, sp
90003126:	f013 fcd5 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000312a:	4b0f      	ldr	r3, [pc, #60]	@ (90003168 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000312c:	6860      	ldr	r0, [r4, #4]
9000312e:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003130:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003134:	881b      	ldrh	r3, [r3, #0]
90003136:	f9bd 2000 	ldrsh.w	r2, [sp]
9000313a:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000313e:	6804      	ldr	r4, [r0, #0]
90003140:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003144:	69e4      	ldr	r4, [r4, #28]
90003146:	47a0      	blx	r4
90003148:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
9000314a:	6803      	ldr	r3, [r0, #0]
9000314c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
9000314e:	b003      	add	sp, #12
90003150:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003154:	4718      	bx	r3
        assert(handle < no_streams);
90003156:	4b05      	ldr	r3, [pc, #20]	@ (9000316c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
90003158:	21e9      	movs	r1, #233	@ 0xe9
9000315a:	4a05      	ldr	r2, [pc, #20]	@ (90003170 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
9000315c:	4805      	ldr	r0, [pc, #20]	@ (90003174 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
9000315e:	f025 fadf 	bl	90028720 <__assert_func>
90003162:	bf00      	nop
90003164:	24021bdc 	.word	0x24021bdc
90003168:	24021bd6 	.word	0x24021bd6
9000316c:	9002a0cc 	.word	0x9002a0cc
90003170:	9002a760 	.word	0x9002a760
90003174:	9002a1fc 	.word	0x9002a1fc

90003178 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003178:	4b08      	ldr	r3, [pc, #32]	@ (9000319c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000317a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000317e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003182:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003186:	f3bf 8f6f 	isb	sy
9000318a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000318e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003192:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003196:	f3bf 8f6f 	isb	sy
}
9000319a:	4770      	bx	lr
9000319c:	e000e100 	.word	0xe000e100

900031a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031a0:	4b03      	ldr	r3, [pc, #12]	@ (900031b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900031a2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031a6:	609a      	str	r2, [r3, #8]
900031a8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031ac:	609a      	str	r2, [r3, #8]
}
900031ae:	4770      	bx	lr
900031b0:	e000e100 	.word	0xe000e100

900031b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900031b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031b8:	2900      	cmp	r1, #0
900031ba:	f040 8096 	bne.w	900032ea <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
900031be:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900031c2:	4604      	mov	r4, r0
900031c4:	b933      	cbnz	r3, 900031d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900031c6:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900031ca:	b91b      	cbnz	r3, 900031d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900031cc:	2501      	movs	r5, #1
    }
900031ce:	4628      	mov	r0, r5
900031d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031d4:	4b48      	ldr	r3, [pc, #288]	@ (900032f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031d6:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031d8:	6921      	ldr	r1, [r4, #16]
900031da:	681b      	ldr	r3, [r3, #0]
900031dc:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031e0:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031e4:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031e6:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031ea:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031ec:	b979      	cbnz	r1, 9000320e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031ee:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031f0:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031f2:	6961      	ldr	r1, [r4, #20]
900031f4:	fb01 f303 	mul.w	r3, r1, r3
900031f8:	69a1      	ldr	r1, [r4, #24]
900031fa:	fb01 f202 	mul.w	r2, r1, r2
900031fe:	4293      	cmp	r3, r2
90003200:	d824      	bhi.n	9000324c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
90003202:	2300      	movs	r3, #0
    }
90003204:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
90003206:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
9000320a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
9000320e:	6813      	ldr	r3, [r2, #0]
90003210:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
90003212:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003214:	695b      	ldr	r3, [r3, #20]
90003216:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
90003218:	69e1      	ldr	r1, [r4, #28]
9000321a:	bb21      	cbnz	r1, 90003266 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
9000321c:	6a23      	ldr	r3, [r4, #32]
9000321e:	2b00      	cmp	r3, #0
90003220:	d142      	bne.n	900032a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003222:	4f36      	ldr	r7, [pc, #216]	@ (900032fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003224:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003228:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000322a:	2d00      	cmp	r5, #0
9000322c:	d02c      	beq.n	90003288 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000322e:	699b      	ldr	r3, [r3, #24]
90003230:	4630      	mov	r0, r6
90003232:	4798      	blx	r3
90003234:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003236:	6833      	ldr	r3, [r6, #0]
90003238:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000323a:	42bb      	cmp	r3, r7
9000323c:	d145      	bne.n	900032ca <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000323e:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003240:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003242:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003244:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003246:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003248:	60a2      	str	r2, [r4, #8]
9000324a:	e7d2      	b.n	900031f2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
9000324c:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003250:	b138      	cbz	r0, 90003262 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003252:	1a9b      	subs	r3, r3, r2
90003254:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003258:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000325a:	bf98      	it	ls
9000325c:	f102 32ff 	addls.w	r2, r2, #4294967295
90003260:	6222      	str	r2, [r4, #32]
            return true;
90003262:	2301      	movs	r3, #1
90003264:	e7ce      	b.n	90003204 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003266:	6833      	ldr	r3, [r6, #0]
90003268:	4630      	mov	r0, r6
9000326a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000326c:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000326e:	6833      	ldr	r3, [r6, #0]
90003270:	69e5      	ldr	r5, [r4, #28]
90003272:	4630      	mov	r0, r6
90003274:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003276:	4798      	blx	r3
90003278:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
9000327a:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000327c:	bf28      	it	cs
9000327e:	2500      	movcs	r5, #0
90003280:	4f1e      	ldr	r7, [pc, #120]	@ (900032fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
90003282:	bf38      	it	cc
90003284:	2501      	movcc	r5, #1
90003286:	e7d6      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003288:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000328a:	42ba      	cmp	r2, r7
9000328c:	d124      	bne.n	900032d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
9000328e:	f8d6 8014 	ldr.w	r8, [r6, #20]
90003292:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003294:	4630      	mov	r0, r6
90003296:	4798      	blx	r3
90003298:	4580      	cmp	r8, r0
9000329a:	d219      	bcs.n	900032d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
9000329c:	6833      	ldr	r3, [r6, #0]
9000329e:	4630      	mov	r0, r6
900032a0:	699b      	ldr	r3, [r3, #24]
900032a2:	4798      	blx	r3
900032a4:	4605      	mov	r5, r0
900032a6:	e7c6      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900032a8:	6832      	ldr	r2, [r6, #0]
900032aa:	4f14      	ldr	r7, [pc, #80]	@ (900032fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032ac:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900032b0:	42ba      	cmp	r2, r7
900032b2:	d116      	bne.n	900032e2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900032b4:	6970      	ldr	r0, [r6, #20]
900032b6:	18c1      	adds	r1, r0, r3
900032b8:	4630      	mov	r0, r6
900032ba:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
900032bc:	6a22      	ldr	r2, [r4, #32]
900032be:	68a3      	ldr	r3, [r4, #8]
900032c0:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900032c2:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900032c4:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900032c6:	6222      	str	r2, [r4, #32]
900032c8:	e7ac      	b.n	90003224 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900032ca:	4630      	mov	r0, r6
900032cc:	4798      	blx	r3
900032ce:	e7b7      	b.n	90003240 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900032d0:	2300      	movs	r3, #0
900032d2:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032d6:	e7ae      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032d8:	4630      	mov	r0, r6
900032da:	4790      	blx	r2
900032dc:	6833      	ldr	r3, [r6, #0]
900032de:	4680      	mov	r8, r0
900032e0:	e7d7      	b.n	90003292 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032e2:	4630      	mov	r0, r6
900032e4:	4790      	blx	r2
900032e6:	6a23      	ldr	r3, [r4, #32]
900032e8:	e7e5      	b.n	900032b6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032ea:	4b05      	ldr	r3, [pc, #20]	@ (90003300 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032ec:	21a9      	movs	r1, #169	@ 0xa9
900032ee:	4a05      	ldr	r2, [pc, #20]	@ (90003304 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032f0:	4805      	ldr	r0, [pc, #20]	@ (90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032f2:	f025 fa15 	bl	90028720 <__assert_func>
900032f6:	bf00      	nop
900032f8:	24021bdc 	.word	0x24021bdc
900032fc:	9000103d 	.word	0x9000103d
90003300:	9002a0cc 	.word	0x9002a0cc
90003304:	9002a8a8 	.word	0x9002a8a8
90003308:	9002a1fc 	.word	0x9002a1fc

9000330c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
9000330c:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000330e:	bb11      	cbnz	r1, 90003356 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
90003310:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003312:	6840      	ldr	r0, [r0, #4]
90003314:	4611      	mov	r1, r2
90003316:	461a      	mov	r2, r3
90003318:	6803      	ldr	r3, [r0, #0]
9000331a:	689b      	ldr	r3, [r3, #8]
9000331c:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000331e:	6860      	ldr	r0, [r4, #4]
90003320:	4a10      	ldr	r2, [pc, #64]	@ (90003364 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003322:	6803      	ldr	r3, [r0, #0]
90003324:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003326:	4293      	cmp	r3, r2
90003328:	d10c      	bne.n	90003344 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000332a:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
9000332c:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000332e:	2300      	movs	r3, #0
90003330:	4a0d      	ldr	r2, [pc, #52]	@ (90003368 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003332:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003334:	60e0      	str	r0, [r4, #12]
90003336:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003338:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000333c:	d104      	bne.n	90003348 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000333e:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003342:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003344:	4798      	blx	r3
90003346:	e7f1      	b.n	9000332c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003348:	4620      	mov	r0, r4
9000334a:	46ac      	mov	ip, r5
9000334c:	2201      	movs	r2, #1
9000334e:	4619      	mov	r1, r3
    }
90003350:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003354:	4760      	bx	ip
        assert(handle < no_streams);
90003356:	4b05      	ldr	r3, [pc, #20]	@ (9000336c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003358:	214e      	movs	r1, #78	@ 0x4e
9000335a:	4a05      	ldr	r2, [pc, #20]	@ (90003370 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
9000335c:	4805      	ldr	r0, [pc, #20]	@ (90003374 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000335e:	f025 f9df 	bl	90028720 <__assert_func>
90003362:	bf00      	nop
90003364:	9000103d 	.word	0x9000103d
90003368:	900033e1 	.word	0x900033e1
9000336c:	9002a0cc 	.word	0x9002a0cc
90003370:	9002a9dc 	.word	0x9002a9dc
90003374:	9002a1fc 	.word	0x9002a1fc

90003378 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003378:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000337a:	bb09      	cbnz	r1, 900033c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
9000337c:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000337e:	6840      	ldr	r0, [r0, #4]
90003380:	4611      	mov	r1, r2
90003382:	6803      	ldr	r3, [r0, #0]
90003384:	68db      	ldr	r3, [r3, #12]
90003386:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003388:	6860      	ldr	r0, [r4, #4]
9000338a:	4a10      	ldr	r2, [pc, #64]	@ (900033cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
9000338c:	6803      	ldr	r3, [r0, #0]
9000338e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003390:	4293      	cmp	r3, r2
90003392:	d10c      	bne.n	900033ae <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
90003394:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003396:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003398:	2300      	movs	r3, #0
9000339a:	4a0d      	ldr	r2, [pc, #52]	@ (900033d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
9000339c:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000339e:	60e0      	str	r0, [r4, #12]
900033a0:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900033a2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900033a6:	d104      	bne.n	900033b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900033a8:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900033ac:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033ae:	4798      	blx	r3
900033b0:	e7f1      	b.n	90003396 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900033b2:	4620      	mov	r0, r4
900033b4:	46ac      	mov	ip, r5
900033b6:	2201      	movs	r2, #1
900033b8:	4619      	mov	r1, r3
    }
900033ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
900033be:	4760      	bx	ip
        assert(handle < no_streams);
900033c0:	4b04      	ldr	r3, [pc, #16]	@ (900033d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900033c2:	215e      	movs	r1, #94	@ 0x5e
900033c4:	4a04      	ldr	r2, [pc, #16]	@ (900033d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900033c6:	4805      	ldr	r0, [pc, #20]	@ (900033dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900033c8:	f025 f9aa 	bl	90028720 <__assert_func>
900033cc:	9000103d 	.word	0x9000103d
900033d0:	900033e1 	.word	0x900033e1
900033d4:	9002a0cc 	.word	0x9002a0cc
900033d8:	9002ab48 	.word	0x9002ab48
900033dc:	9002a1fc 	.word	0x9002a1fc

900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033e0:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033e2:	2900      	cmp	r1, #0
900033e4:	d14f      	bne.n	90003486 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033e6:	4604      	mov	r4, r0
        switch (cmd)
900033e8:	2a05      	cmp	r2, #5
900033ea:	d80b      	bhi.n	90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033ec:	e8df f002 	tbb	[pc, r2]
900033f0:	3c373311 	.word	0x3c373311
900033f4:	0b03      	.short	0x0b03
            stream.isPlaying = false;
900033f6:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
900033f8:	2201      	movs	r2, #1
            stream.isPlaying = false;
900033fa:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
900033fe:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
90003400:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
90003402:	6103      	str	r3, [r0, #16]
    }
90003404:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
90003406:	3b00      	subs	r3, #0
90003408:	bf18      	it	ne
9000340a:	2301      	movne	r3, #1
9000340c:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
90003410:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003412:	6840      	ldr	r0, [r0, #4]
90003414:	6803      	ldr	r3, [r0, #0]
90003416:	691b      	ldr	r3, [r3, #16]
90003418:	4798      	blx	r3
9000341a:	2800      	cmp	r0, #0
9000341c:	d0f2      	beq.n	90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
9000341e:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003420:	2101      	movs	r1, #1
                if (!stream.repeat)
90003422:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003426:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000342a:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
9000342c:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000342e:	2a00      	cmp	r2, #0
90003430:	d1e8      	bne.n	90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003432:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003434:	4917      	ldr	r1, [pc, #92]	@ (90003494 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003436:	6823      	ldr	r3, [r4, #0]
90003438:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000343a:	428a      	cmp	r2, r1
9000343c:	d11e      	bne.n	9000347c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000343e:	6965      	ldr	r5, [r4, #20]
90003440:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003442:	4620      	mov	r0, r4
90003444:	4798      	blx	r3
90003446:	4285      	cmp	r5, r0
90003448:	d1dc      	bne.n	90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000344a:	6823      	ldr	r3, [r4, #0]
9000344c:	4620      	mov	r0, r4
9000344e:	699b      	ldr	r3, [r3, #24]
    }
90003450:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003454:	4718      	bx	r3
            stream.isPlaying = false;
90003456:	2300      	movs	r3, #0
90003458:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
9000345c:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000345e:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003460:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
90003462:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003464:	6102      	str	r2, [r0, #16]
    }
90003466:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003468:	2101      	movs	r1, #1
            stream.frameCount = 0;
9000346a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000346c:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000346e:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
90003472:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003476:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003478:	6102      	str	r2, [r0, #16]
    }
9000347a:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000347c:	4620      	mov	r0, r4
9000347e:	4790      	blx	r2
90003480:	6823      	ldr	r3, [r4, #0]
90003482:	4605      	mov	r5, r0
90003484:	e7dc      	b.n	90003440 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
90003486:	4b04      	ldr	r3, [pc, #16]	@ (90003498 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003488:	216e      	movs	r1, #110	@ 0x6e
9000348a:	4a04      	ldr	r2, [pc, #16]	@ (9000349c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
9000348c:	4804      	ldr	r0, [pc, #16]	@ (900034a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
9000348e:	f025 f947 	bl	90028720 <__assert_func>
90003492:	bf00      	nop
90003494:	9000103d 	.word	0x9000103d
90003498:	9002a0cc 	.word	0x9002a0cc
9000349c:	9002ac80 	.word	0x9002ac80
900034a0:	9002a1fc 	.word	0x9002a1fc

900034a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900034a4:	b538      	push	{r3, r4, r5, lr}
900034a6:	4604      	mov	r4, r0
    HAL::initialize();
900034a8:	f00c fef3 	bl	90010292 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900034ac:	6823      	ldr	r3, [r4, #0]
900034ae:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
900034b0:	f012 f9fc 	bl	900158ac <_ZN8touchgfx11Application11getInstanceEv>
900034b4:	4601      	mov	r1, r0
900034b6:	4620      	mov	r0, r4
900034b8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034ba:	6823      	ldr	r3, [r4, #0]
900034bc:	4a13      	ldr	r2, [pc, #76]	@ (9000350c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
900034be:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
900034c2:	4295      	cmp	r5, r2
900034c4:	d116      	bne.n	900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034c6:	4a12      	ldr	r2, [pc, #72]	@ (90003510 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034c8:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900034ca:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900034ce:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034d2:	4810      	ldr	r0, [pc, #64]	@ (90003514 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034d4:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034d8:	4a0f      	ldr	r2, [pc, #60]	@ (90003518 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034da:	7005      	strb	r5, [r0, #0]
900034dc:	4293      	cmp	r3, r2
900034de:	d110      	bne.n	90003502 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034e0:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034e2:	4a0e      	ldr	r2, [pc, #56]	@ (9000351c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034e4:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034e6:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034e8:	4b0d      	ldr	r3, [pc, #52]	@ (90003520 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034ea:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034ec:	4a0d      	ldr	r2, [pc, #52]	@ (90003524 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034ee:	6459      	str	r1, [r3, #68]	@ 0x44
900034f0:	6053      	str	r3, [r2, #4]
}
900034f2:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034f4:	4a0c      	ldr	r2, [pc, #48]	@ (90003528 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
900034f6:	2300      	movs	r3, #0
900034f8:	4620      	mov	r0, r4
900034fa:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
900034fe:	47a8      	blx	r5
90003500:	e7f2      	b.n	900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003502:	2100      	movs	r1, #0
90003504:	4620      	mov	r0, r4
90003506:	4798      	blx	r3
90003508:	e7ee      	b.n	900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000350a:	bf00      	nop
9000350c:	90000f61 	.word	0x90000f61
90003510:	d003fc00 	.word	0xd003fc00
90003514:	24021bda 	.word	0x24021bda
90003518:	90000d9d 	.word	0x90000d9d
9000351c:	24021bdb 	.word	0x24021bdb
90003520:	24007698 	.word	0x24007698
90003524:	24007668 	.word	0x24007668
90003528:	d007f800 	.word	0xd007f800

9000352c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
9000352c:	4842      	ldr	r0, [pc, #264]	@ (90003638 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
{
9000352e:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003530:	6804      	ldr	r4, [r0, #0]
90003532:	f3bf 8f5b 	dmb	ish
90003536:	f014 0401 	ands.w	r4, r4, #1
9000353a:	d001      	beq.n	90003540 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
9000353c:	483f      	ldr	r0, [pc, #252]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000353e:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003540:	f024 fd78 	bl	90028034 <__cxa_guard_acquire>
90003544:	2800      	cmp	r0, #0
90003546:	d0f9      	beq.n	9000353c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003548:	4d3c      	ldr	r5, [pc, #240]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000354a:	4b3d      	ldr	r3, [pc, #244]	@ (90003640 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000354c:	4e3d      	ldr	r6, [pc, #244]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
9000354e:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003552:	612c      	str	r4, [r5, #16]
90003554:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003558:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
9000355c:	e9c5 3400 	strd	r3, r4, [r5]
90003560:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003564:	f013 fd2f 	bl	90016fc6 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003568:	f105 0058 	add.w	r0, r5, #88	@ 0x58
9000356c:	f00f f946 	bl	900127fc <_ZN8touchgfx12CanvasWidgetC1Ev>
90003570:	4935      	ldr	r1, [pc, #212]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90003572:	4a36      	ldr	r2, [pc, #216]	@ (9000364c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
90003574:	6833      	ldr	r3, [r6, #0]
90003576:	65a9      	str	r1, [r5, #88]	@ 0x58
90003578:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
class CWRVectorRendererRGB565 : public CWRVectorRenderer
9000357c:	4934      	ldr	r1, [pc, #208]	@ (90003650 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
9000357e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
90003582:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
90003586:	6029      	str	r1, [r5, #0]
90003588:	b192      	cbz	r2, 900035b0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
9000358a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000358c:	2800      	cmp	r0, #0
9000358e:	d03f      	beq.n	90003610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90003590:	6803      	ldr	r3, [r0, #0]
90003592:	4c30      	ldr	r4, [pc, #192]	@ (90003654 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
90003594:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003596:	42a2      	cmp	r2, r4
90003598:	d017      	beq.n	900035ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000359a:	4790      	blx	r2
        return auxiliaryLCD;
9000359c:	6833      	ldr	r3, [r6, #0]
9000359e:	fab0 f680 	clz	r6, r0
900035a2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035a4:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900035a6:	2800      	cmp	r0, #0
900035a8:	d03e      	beq.n	90003628 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfc>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035aa:	6803      	ldr	r3, [r0, #0]
900035ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900035ae:	e00a      	b.n	900035c6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900035b0:	6898      	ldr	r0, [r3, #8]
900035b2:	4c28      	ldr	r4, [pc, #160]	@ (90003654 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035b4:	6802      	ldr	r2, [r0, #0]
900035b6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035b8:	42a2      	cmp	r2, r4
900035ba:	d1ee      	bne.n	9000359a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
900035bc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900035be:	b120      	cbz	r0, 900035ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900035c0:	6803      	ldr	r3, [r0, #0]
900035c2:	2601      	movs	r6, #1
900035c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035c6:	42a3      	cmp	r3, r4
900035c8:	d129      	bne.n	9000361e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf2>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900035ca:	4923      	ldr	r1, [pc, #140]	@ (90003658 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900035cc:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035ce:	2300      	movs	r3, #0
        : AbstractPainter(),
900035d0:	2464      	movs	r4, #100	@ 0x64
900035d2:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : widgetWidth(0)
900035d6:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035da:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035de:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035e2:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035e6:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035ea:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
        : AbstractPainter(),
900035ee:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035f2:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
900035f6:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
900035fa:	4a18      	ldr	r2, [pc, #96]	@ (9000365c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
900035fc:	4818      	ldr	r0, [pc, #96]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
900035fe:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
90003602:	f025 f8ab 	bl	9002875c <atexit>
90003606:	480c      	ldr	r0, [pc, #48]	@ (90003638 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
90003608:	f024 fd20 	bl	9002804c <__cxa_guard_release>
}
9000360c:	480b      	ldr	r0, [pc, #44]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000360e:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003610:	6898      	ldr	r0, [r3, #8]
90003612:	4c10      	ldr	r4, [pc, #64]	@ (90003654 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003614:	6803      	ldr	r3, [r0, #0]
90003616:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003618:	42a2      	cmp	r2, r4
9000361a:	d0d6      	beq.n	900035ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000361c:	e7bd      	b.n	9000359a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000361e:	4798      	blx	r3
90003620:	2800      	cmp	r0, #0
90003622:	bf08      	it	eq
90003624:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90003628:	2e00      	cmp	r6, #0
9000362a:	d1ce      	bne.n	900035ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000362c:	4b0d      	ldr	r3, [pc, #52]	@ (90003664 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
9000362e:	212c      	movs	r1, #44	@ 0x2c
90003630:	4a0d      	ldr	r2, [pc, #52]	@ (90003668 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003632:	480e      	ldr	r0, [pc, #56]	@ (9000366c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003634:	f025 f874 	bl	90028720 <__assert_func>
90003638:	240075a8 	.word	0x240075a8
9000363c:	240075ac 	.word	0x240075ac
90003640:	9002d710 	.word	0x9002d710
90003644:	24021bdc 	.word	0x24021bdc
90003648:	9002af0c 	.word	0x9002af0c
9000364c:	9002aeec 	.word	0x9002aeec
90003650:	9002af84 	.word	0x9002af84
90003654:	90002ed9 	.word	0x90002ed9
90003658:	9002d6c4 	.word	0x9002d6c4
9000365c:	9002d6a4 	.word	0x9002d6a4
90003660:	90002f09 	.word	0x90002f09
90003664:	9002ade4 	.word	0x9002ade4
90003668:	9002ae44 	.word	0x9002ae44
9000366c:	9002ae80 	.word	0x9002ae80

90003670 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003670:	b510      	push	{r4, lr}
        return instance;
90003672:	4c14      	ldr	r4, [pc, #80]	@ (900036c4 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90003674:	6823      	ldr	r3, [r4, #0]
90003676:	b323      	cbz	r3, 900036c2 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003678:	4b13      	ldr	r3, [pc, #76]	@ (900036c8 <HAL_LTDC_LineEventCallback+0x58>)
9000367a:	4a14      	ldr	r2, [pc, #80]	@ (900036cc <HAL_LTDC_LineEventCallback+0x5c>)
9000367c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000367e:	8811      	ldrh	r1, [r2, #0]
90003680:	428b      	cmp	r3, r1
90003682:	d00a      	beq.n	9000369a <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003684:	f006 fef2 	bl	9000a46c <HAL_LTDC_ProgramLineEvent>
90003688:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
9000368a:	6803      	ldr	r3, [r0, #0]
9000368c:	6a1b      	ldr	r3, [r3, #32]
9000368e:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90003690:	2000      	movs	r0, #0
        }
    }
90003692:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90003696:	f7fd bb25 	b.w	90000ce4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
9000369a:	4b0d      	ldr	r3, [pc, #52]	@ (900036d0 <HAL_LTDC_LineEventCallback+0x60>)
9000369c:	8819      	ldrh	r1, [r3, #0]
9000369e:	f006 fee5 	bl	9000a46c <HAL_LTDC_ProgramLineEvent>
        return instance;
900036a2:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900036a4:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
900036a8:	3301      	adds	r3, #1
900036aa:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            OSWrappers::signalVSync();
900036ae:	f7fe fe71 	bl	90002394 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900036b2:	6820      	ldr	r0, [r4, #0]
900036b4:	f00d fb46 	bl	90010d44 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900036b8:	2000      	movs	r0, #0
    }
900036ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900036be:	f7fd badd 	b.w	90000c7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036c2:	bd10      	pop	{r4, pc}
900036c4:	24021bdc 	.word	0x24021bdc
900036c8:	50001000 	.word	0x50001000
900036cc:	240075a6 	.word	0x240075a6
900036d0:	240075a4 	.word	0x240075a4

900036d4 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900036d4:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900036d6:	480b      	ldr	r0, [pc, #44]	@ (90003704 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036d8:	f7fd fe26 	bl	90001328 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036dc:	4c0a      	ldr	r4, [pc, #40]	@ (90003708 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036de:	4b0b      	ldr	r3, [pc, #44]	@ (9000370c <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036e0:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036e2:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036e6:	2101      	movs	r1, #1
900036e8:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036ea:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900036ec:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
900036f0:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
900036f4:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
900036f6:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
900036fa:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
900036fe:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
90003702:	bd10      	pop	{r4, pc}
90003704:	24007698 	.word	0x24007698
90003708:	9002afd0 	.word	0x9002afd0
9000370c:	24007668 	.word	0x24007668

90003710 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003710:	4901      	ldr	r1, [pc, #4]	@ (90003718 <vApplicationIdleHook+0x8>)
90003712:	2000      	movs	r0, #0
90003714:	f00b be20 	b.w	9000f358 <vTaskSetApplicationTaskTag>
90003718:	9000101d 	.word	0x9000101d

9000371c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
9000371c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
9000371e:	2064      	movs	r0, #100	@ 0x64
90003720:	f009 fcdc 	bl	9000d0dc <osDelay>
  for(;;)
90003724:	e7fb      	b.n	9000371e <StartDefaultTask+0x2>
90003726:	bf00      	nop

90003728 <playNoteTaskFunction>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_playNoteTaskFunction */
void playNoteTaskFunction(void *argument)
{
90003728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* USER CODE BEGIN playNoteTaskFunction */
  /* Infinite loop */
uint16_t note = 0;
9000372c:	2300      	movs	r3, #0
{
9000372e:	b083      	sub	sp, #12
90003730:	4e2a      	ldr	r6, [pc, #168]	@ (900037dc <playNoteTaskFunction+0xb4>)
90003732:	f8df b0b8 	ldr.w	fp, [pc, #184]	@ 900037ec <playNoteTaskFunction+0xc4>
90003736:	f8df a0b8 	ldr.w	sl, [pc, #184]	@ 900037f0 <playNoteTaskFunction+0xc8>
9000373a:	4d29      	ldr	r5, [pc, #164]	@ (900037e0 <playNoteTaskFunction+0xb8>)
9000373c:	4c29      	ldr	r4, [pc, #164]	@ (900037e4 <playNoteTaskFunction+0xbc>)
9000373e:	f8df 90b4 	ldr.w	r9, [pc, #180]	@ 900037f4 <playNoteTaskFunction+0xcc>
90003742:	f8df 80b4 	ldr.w	r8, [pc, #180]	@ 900037f8 <playNoteTaskFunction+0xd0>
90003746:	4f28      	ldr	r7, [pc, #160]	@ (900037e8 <playNoteTaskFunction+0xc0>)
uint16_t note = 0;
90003748:	f8ad 3004 	strh.w	r3, [sp, #4]
uint16_t stateChange = 0;
9000374c:	f8ad 3006 	strh.w	r3, [sp, #6]
osStatus_t status1;

  for(;;)
  {
	//note
	status = osMessageQueueGet(noteQueueHandle, &note, NULL, 0U); //wait for message
90003750:	2300      	movs	r3, #0
90003752:	a901      	add	r1, sp, #4
90003754:	6830      	ldr	r0, [r6, #0]
90003756:	461a      	mov	r2, r3
90003758:	f009 fdee 	bl	9000d338 <osMessageQueueGet>
	if(status == osOK) {
9000375c:	b9b8      	cbnz	r0, 9000378e <playNoteTaskFunction+0x66>
		if(note != 12) {
9000375e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90003762:	2b0c      	cmp	r3, #12
90003764:	d037      	beq.n	900037d6 <playNoteTaskFunction+0xae>
	uint64_t temp = (uint64_t)freq * 0xFFFFFFFF;
90003766:	f83b 2013 	ldrh.w	r2, [fp, r3, lsl #1]
9000376a:	07d3      	lsls	r3, r2, #31
9000376c:	0851      	lsrs	r1, r2, #1
9000376e:	1a9b      	subs	r3, r3, r2
90003770:	f161 0100 	sbc.w	r1, r1, #0
90003774:	18db      	adds	r3, r3, r3
90003776:	4149      	adcs	r1, r1
90003778:	1898      	adds	r0, r3, r2
	temp = temp / F_SAMP;
9000377a:	f644 6220 	movw	r2, #20000	@ 0x4e20
9000377e:	f04f 0300 	mov.w	r3, #0
90003782:	f141 0100 	adc.w	r1, r1, #0
90003786:	f7fd f807 	bl	90000798 <__aeabi_uldivmod>
	step = (uint32_t) temp;
9000378a:	f8ca 0000 	str.w	r0, [sl]
			setFreq(frequency);
		} else
			step = 0;
	}
	//sound
	status1 = osMessageQueueGet(stateQueueHandle, &stateChange, NULL, 0U); //wait for message
9000378e:	2300      	movs	r3, #0
90003790:	f10d 0106 	add.w	r1, sp, #6
90003794:	6828      	ldr	r0, [r5, #0]
90003796:	461a      	mov	r2, r3
90003798:	f009 fdce 	bl	9000d338 <osMessageQueueGet>
	if(status1 == osOK) {
9000379c:	b9a8      	cbnz	r0, 900037ca <playNoteTaskFunction+0xa2>
		state += (stateChange - 1);
9000379e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
900037a2:	8823      	ldrh	r3, [r4, #0]
900037a4:	441a      	add	r2, r3
900037a6:	3a01      	subs	r2, #1
900037a8:	b292      	uxth	r2, r2
		if(state == 3)
900037aa:	2a03      	cmp	r2, #3
900037ac:	d011      	beq.n	900037d2 <playNoteTaskFunction+0xaa>
			state = 0;
		else if(state > 3)
900037ae:	d900      	bls.n	900037b2 <playNoteTaskFunction+0x8a>
900037b0:	2202      	movs	r2, #2
900037b2:	4610      	mov	r0, r2
			state = 2;
		selectedArray = arrayOfSounds[state];
900037b4:	f858 1020 	ldr.w	r1, [r8, r0, lsl #2]
		osMessageQueuePut(soundQueueHandle, &state, 0U, 0U);
900037b8:	2300      	movs	r3, #0
			state = 0;
900037ba:	8022      	strh	r2, [r4, #0]
		selectedArray = arrayOfSounds[state];
900037bc:	f8c9 1000 	str.w	r1, [r9]
		osMessageQueuePut(soundQueueHandle, &state, 0U, 0U);
900037c0:	461a      	mov	r2, r3
900037c2:	4621      	mov	r1, r4
900037c4:	6838      	ldr	r0, [r7, #0]
900037c6:	f009 fd7b 	bl	9000d2c0 <osMessageQueuePut>
	}

    osDelay(1);
900037ca:	2001      	movs	r0, #1
900037cc:	f009 fc86 	bl	9000d0dc <osDelay>
	status = osMessageQueueGet(noteQueueHandle, &note, NULL, 0U); //wait for message
900037d0:	e7be      	b.n	90003750 <playNoteTaskFunction+0x28>
900037d2:	4602      	mov	r2, r0
900037d4:	e7ee      	b.n	900037b4 <playNoteTaskFunction+0x8c>
			step = 0;
900037d6:	f8ca 0000 	str.w	r0, [sl]
900037da:	e7d8      	b.n	9000378e <playNoteTaskFunction+0x66>
900037dc:	240076e8 	.word	0x240076e8
900037e0:	240076e4 	.word	0x240076e4
900037e4:	24007ab4 	.word	0x24007ab4
900037e8:	240076e0 	.word	0x240076e0
900037ec:	9002b104 	.word	0x9002b104
900037f0:	24007ab8 	.word	0x24007ab8
900037f4:	24007ab0 	.word	0x24007ab0
900037f8:	24000044 	.word	0x24000044

900037fc <SystemClock_Config>:
{
900037fc:	b570      	push	{r4, r5, r6, lr}
900037fe:	b0a0      	sub	sp, #128	@ 0x80
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003800:	224c      	movs	r2, #76	@ 0x4c
90003802:	2100      	movs	r1, #0
90003804:	a80c      	add	r0, sp, #48	@ 0x30
90003806:	f025 fa27 	bl	90028c58 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
9000380a:	2220      	movs	r2, #32
9000380c:	2100      	movs	r1, #0
9000380e:	a804      	add	r0, sp, #16
90003810:	f025 fa22 	bl	90028c58 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003814:	2002      	movs	r0, #2
90003816:	f007 f893 	bl	9000a940 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
9000381a:	4b34      	ldr	r3, [pc, #208]	@ (900038ec <SystemClock_Config+0xf0>)
9000381c:	2100      	movs	r1, #0
9000381e:	4a34      	ldr	r2, [pc, #208]	@ (900038f0 <SystemClock_Config+0xf4>)
90003820:	9101      	str	r1, [sp, #4]
90003822:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003824:	f021 0101 	bic.w	r1, r1, #1
90003828:	62d9      	str	r1, [r3, #44]	@ 0x2c
9000382a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000382c:	f003 0301 	and.w	r3, r3, #1
90003830:	9301      	str	r3, [sp, #4]
90003832:	6993      	ldr	r3, [r2, #24]
90003834:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
90003838:	6193      	str	r3, [r2, #24]
9000383a:	6993      	ldr	r3, [r2, #24]
9000383c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
90003840:	9301      	str	r3, [sp, #4]
90003842:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003844:	6993      	ldr	r3, [r2, #24]
90003846:	0498      	lsls	r0, r3, #18
90003848:	d5fc      	bpl.n	90003844 <SystemClock_Config+0x48>
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000384a:	4b2a      	ldr	r3, [pc, #168]	@ (900038f4 <SystemClock_Config+0xf8>)
9000384c:	f8d3 10f4 	ldr.w	r1, [r3, #244]	@ 0xf4
90003850:	f041 0102 	orr.w	r1, r1, #2
90003854:	f8c3 10f4 	str.w	r1, [r3, #244]	@ 0xf4
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003858:	2100      	movs	r1, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000385a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
9000385e:	f003 0302 	and.w	r3, r3, #2
90003862:	9302      	str	r3, [sp, #8]
90003864:	9b02      	ldr	r3, [sp, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003866:	9103      	str	r1, [sp, #12]
90003868:	6991      	ldr	r1, [r2, #24]
9000386a:	4b20      	ldr	r3, [pc, #128]	@ (900038ec <SystemClock_Config+0xf0>)
9000386c:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
90003870:	6191      	str	r1, [r2, #24]
90003872:	6992      	ldr	r2, [r2, #24]
90003874:	f402 4240 	and.w	r2, r2, #49152	@ 0xc000
90003878:	9203      	str	r2, [sp, #12]
9000387a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
9000387c:	4a1c      	ldr	r2, [pc, #112]	@ (900038f0 <SystemClock_Config+0xf4>)
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
9000387e:	f041 0101 	orr.w	r1, r1, #1
90003882:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003884:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003886:	f003 0301 	and.w	r3, r3, #1
9000388a:	9303      	str	r3, [sp, #12]
9000388c:	9b03      	ldr	r3, [sp, #12]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
9000388e:	6993      	ldr	r3, [r2, #24]
90003890:	0499      	lsls	r1, r3, #18
90003892:	d5fc      	bpl.n	9000388e <SystemClock_Config+0x92>
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90003894:	2302      	movs	r3, #2
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003896:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
9000389a:	2001      	movs	r0, #1
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
9000389c:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLQ = 4;
9000389e:	2604      	movs	r6, #4
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
900038a0:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLN = 192;
900038a2:	2205      	movs	r2, #5
  RCC_OscInitStruct.PLL.PLLP = 2;
900038a4:	9319      	str	r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLR = 2;
900038a6:	931b      	str	r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLQ = 4;
900038a8:	961a      	str	r6, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900038aa:	941e      	str	r4, [sp, #120]	@ 0x78
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
900038ac:	e9cd 3315 	strd	r3, r3, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLN = 192;
900038b0:	23c0      	movs	r3, #192	@ 0xc0
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900038b2:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900038b6:	a80c      	add	r0, sp, #48	@ 0x30
  RCC_OscInitStruct.PLL.PLLN = 192;
900038b8:	e9cd 2317 	strd	r2, r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900038bc:	e9cd 541c 	strd	r5, r4, [sp, #112]	@ 0x70
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900038c0:	f007 f8d4 	bl	9000aa6c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
900038c4:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900038c6:	223f      	movs	r2, #63	@ 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
900038c8:	4631      	mov	r1, r6
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
900038ca:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
900038cc:	a804      	add	r0, sp, #16
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900038ce:	9204      	str	r2, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
900038d0:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
900038d2:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
900038d4:	9406      	str	r4, [sp, #24]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
900038d6:	9205      	str	r2, [sp, #20]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
900038d8:	e9cd 5307 	strd	r5, r3, [sp, #28]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
900038dc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
900038e0:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
900038e2:	f007 fc43 	bl	9000b16c <HAL_RCC_ClockConfig>
}
900038e6:	b020      	add	sp, #128	@ 0x80
900038e8:	bd70      	pop	{r4, r5, r6, pc}
900038ea:	bf00      	nop
900038ec:	58000400 	.word	0x58000400
900038f0:	58024800 	.word	0x58024800
900038f4:	58024400 	.word	0x58024400

900038f8 <main>:
{
900038f8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
900038fc:	2400      	movs	r4, #0
{
900038fe:	b09d      	sub	sp, #116	@ 0x74
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003900:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003902:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003904:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003906:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
9000390a:	e9cd 4411 	strd	r4, r4, [sp, #68]	@ 0x44
  HAL_MPU_Disable();
9000390e:	f003 fe95 	bl	9000763c <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003912:	f04f 5310 	mov.w	r3, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003916:	f8df c388 	ldr.w	ip, [pc, #904]	@ 90003ca0 <main+0x3a8>
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000391a:	a80f      	add	r0, sp, #60	@ 0x3c
  MPU_InitStruct.BaseAddress = 0x24000000;
9000391c:	9310      	str	r3, [sp, #64]	@ 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000391e:	4bd3      	ldr	r3, [pc, #844]	@ (90003c6c <main+0x374>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003920:	f8ad 503c 	strh.w	r5, [sp, #60]	@ 0x3c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003924:	e9cd c311 	strd	ip, r3, [sp, #68]	@ 0x44
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003928:	f003 fea6 	bl	90007678 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
9000392c:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003930:	a80f      	add	r0, sp, #60	@ 0x3c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003932:	f88d 4047 	strb.w	r4, [sp, #71]	@ 0x47
  MPU_InitStruct.BaseAddress = 0x90000000;
90003936:	9310      	str	r3, [sp, #64]	@ 0x40
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003938:	f8ad 404a 	strh.w	r4, [sp, #74]	@ 0x4a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
9000393c:	f88d 503d 	strb.w	r5, [sp, #61]	@ 0x3d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003940:	f88d 7044 	strb.w	r7, [sp, #68]	@ 0x44
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003944:	f003 fe98 	bl	90007678 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003948:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000394a:	a80f      	add	r0, sp, #60	@ 0x3c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
9000394c:	f8ad 6047 	strh.w	r6, [sp, #71]	@ 0x47
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003950:	f88d 303d 	strb.w	r3, [sp, #61]	@ 0x3d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90003954:	231a      	movs	r3, #26
90003956:	f88d 3044 	strb.w	r3, [sp, #68]	@ 0x44
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
9000395a:	f240 1301 	movw	r3, #257	@ 0x101
9000395e:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003962:	f003 fe89 	bl	90007678 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003966:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000396a:	a80f      	add	r0, sp, #60	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
9000396c:	f8ad 404a 	strh.w	r4, [sp, #74]	@ 0x4a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003970:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003972:	f8ad 3047 	strh.w	r3, [sp, #71]	@ 0x47
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003976:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000397a:	f88d 7044 	strb.w	r7, [sp, #68]	@ 0x44
  MPU_InitStruct.BaseAddress = 0xD0000000;
9000397e:	9310      	str	r3, [sp, #64]	@ 0x40
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90003980:	f88d 603d 	strb.w	r6, [sp, #61]	@ 0x3d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003984:	f003 fe78 	bl	90007678 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003988:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000398a:	a80f      	add	r0, sp, #60	@ 0x3c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
9000398c:	f88d 6047 	strb.w	r6, [sp, #71]	@ 0x47
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003990:	f88d 3044 	strb.w	r3, [sp, #68]	@ 0x44
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003994:	f88d 403d 	strb.w	r4, [sp, #61]	@ 0x3d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003998:	f88d 504a 	strb.w	r5, [sp, #74]	@ 0x4a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000399c:	f003 fe6c 	bl	90007678 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
900039a0:	4620      	mov	r0, r4
900039a2:	f003 fe59 	bl	90007658 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
900039a6:	4ab2      	ldr	r2, [pc, #712]	@ (90003c70 <main+0x378>)
900039a8:	6953      	ldr	r3, [r2, #20]
900039aa:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
900039ae:	d111      	bne.n	900039d4 <main+0xdc>
  __ASM volatile ("dsb 0xF":::"memory");
900039b0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900039b4:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
900039b8:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
900039bc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900039c0:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
900039c4:	6953      	ldr	r3, [r2, #20]
900039c6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
900039ca:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
900039cc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900039d0:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
900039d4:	48a6      	ldr	r0, [pc, #664]	@ (90003c70 <main+0x378>)
900039d6:	6943      	ldr	r3, [r0, #20]
900039d8:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
900039dc:	d124      	bne.n	90003a28 <main+0x130>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900039de:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900039e2:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900039e6:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900039ea:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900039ee:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900039f2:	f3c5 05c9 	ubfx	r5, r5, #3, #10
900039f6:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900039f8:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900039fc:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900039fe:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003a02:	3b01      	subs	r3, #1
90003a04:	1c5f      	adds	r7, r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a06:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003a0a:	d1f8      	bne.n	900039fe <main+0x106>
    } while(sets-- != 0U);
90003a0c:	3c20      	subs	r4, #32
90003a0e:	f114 0f20 	cmn.w	r4, #32
90003a12:	d1f1      	bne.n	900039f8 <main+0x100>
90003a14:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003a18:	6943      	ldr	r3, [r0, #20]
90003a1a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003a1e:	6143      	str	r3, [r0, #20]
90003a20:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003a24:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003a28:	f003 fd52 	bl	900074d0 <HAL_Init>
  SystemClock_Config();
90003a2c:	f7ff fee6 	bl	900037fc <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90003a30:	b662      	cpsie	i
  selectedArray = arrayOfSounds[0];
90003a32:	4a90      	ldr	r2, [pc, #576]	@ (90003c74 <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a34:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003a36:	4d90      	ldr	r5, [pc, #576]	@ (90003c78 <main+0x380>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003a38:	21c0      	movs	r1, #192	@ 0xc0
  selectedArray = arrayOfSounds[0];
90003a3a:	6812      	ldr	r2, [r2, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003a3c:	2601      	movs	r6, #1
  selectedArray = arrayOfSounds[0];
90003a3e:	4b8f      	ldr	r3, [pc, #572]	@ (90003c7c <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003a40:	2703      	movs	r7, #3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a42:	9411      	str	r4, [sp, #68]	@ 0x44
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003a44:	f04f 0a80 	mov.w	sl, #128	@ 0x80
  selectedArray = arrayOfSounds[0];
90003a48:	601a      	str	r2, [r3, #0]
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003a4a:	4622      	mov	r2, r4
90003a4c:	488c      	ldr	r0, [pc, #560]	@ (90003c80 <main+0x388>)
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003a4e:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003a52:	f04f 0940 	mov.w	r9, #64	@ 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_1;
90003a56:	f04f 0b02 	mov.w	fp, #2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a5a:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
90003a5e:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003a62:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a66:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90003a6a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a6e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a72:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003a76:	9302      	str	r3, [sp, #8]
90003a78:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003a7a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a7e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90003a82:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a86:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a8a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90003a8e:	9303      	str	r3, [sp, #12]
90003a90:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003a92:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a96:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003a9a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a9e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003aa2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003aa6:	9304      	str	r3, [sp, #16]
90003aa8:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003aaa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003aae:	f043 0310 	orr.w	r3, r3, #16
90003ab2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ab6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003aba:	f003 0310 	and.w	r3, r3, #16
90003abe:	9305      	str	r3, [sp, #20]
90003ac0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003ac2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ac6:	f043 0302 	orr.w	r3, r3, #2
90003aca:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ace:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ad2:	f003 0302 	and.w	r3, r3, #2
90003ad6:	9306      	str	r3, [sp, #24]
90003ad8:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003ada:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ade:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003ae2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ae6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003aea:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003aee:	9307      	str	r3, [sp, #28]
90003af0:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003af2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003af6:	f043 0308 	orr.w	r3, r3, #8
90003afa:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003afe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b02:	f003 0308 	and.w	r3, r3, #8
90003b06:	9308      	str	r3, [sp, #32]
90003b08:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003b0a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b0e:	f043 0320 	orr.w	r3, r3, #32
90003b12:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b1a:	f003 0320 	and.w	r3, r3, #32
90003b1e:	9309      	str	r3, [sp, #36]	@ 0x24
90003b20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003b22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b26:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003b2a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b32:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003b36:	930a      	str	r3, [sp, #40]	@ 0x28
90003b38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003b3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b3e:	f043 0301 	orr.w	r3, r3, #1
90003b42:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b4a:	f003 0301 	and.w	r3, r3, #1
90003b4e:	930b      	str	r3, [sp, #44]	@ 0x2c
90003b50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003b52:	f004 f98b 	bl	90007e6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003b56:	4622      	mov	r2, r4
90003b58:	2180      	movs	r1, #128	@ 0x80
90003b5a:	484a      	ldr	r0, [pc, #296]	@ (90003c84 <main+0x38c>)
90003b5c:	f004 f986 	bl	90007e6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_RESET);
90003b60:	4622      	mov	r2, r4
90003b62:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003b66:	4848      	ldr	r0, [pc, #288]	@ (90003c88 <main+0x390>)
90003b68:	f004 f980 	bl	90007e6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003b6c:	4622      	mov	r2, r4
90003b6e:	2108      	movs	r1, #8
90003b70:	4846      	ldr	r0, [pc, #280]	@ (90003c8c <main+0x394>)
90003b72:	f004 f97b 	bl	90007e6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003b76:	2201      	movs	r2, #1
90003b78:	4845      	ldr	r0, [pc, #276]	@ (90003c90 <main+0x398>)
90003b7a:	4611      	mov	r1, r2
90003b7c:	f004 f976 	bl	90007e6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003b80:	4622      	mov	r2, r4
90003b82:	2140      	movs	r1, #64	@ 0x40
90003b84:	4843      	ldr	r0, [pc, #268]	@ (90003c94 <main+0x39c>)
90003b86:	f004 f971 	bl	90007e6c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90003b8a:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003b8c:	a90f      	add	r1, sp, #60	@ 0x3c
90003b8e:	483c      	ldr	r0, [pc, #240]	@ (90003c80 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003b90:	e9cd 360f 	strd	r3, r6, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003b94:	e9cd 4711 	strd	r4, r7, [sp, #68]	@ 0x44
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003b98:	f003 ff56 	bl	90007a48 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003b9c:	a90f      	add	r1, sp, #60	@ 0x3c
90003b9e:	4839      	ldr	r0, [pc, #228]	@ (90003c84 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003ba0:	9412      	str	r4, [sp, #72]	@ 0x48
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003ba2:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003ba6:	e9cd 6410 	strd	r6, r4, [sp, #64]	@ 0x40
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003baa:	f003 ff4d 	bl	90007a48 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003bae:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003bb2:	a90f      	add	r1, sp, #60	@ 0x3c
90003bb4:	4834      	ldr	r0, [pc, #208]	@ (90003c88 <main+0x390>)
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003bb6:	930f      	str	r3, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003bb8:	9412      	str	r4, [sp, #72]	@ 0x48
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003bba:	e9cd 6410 	strd	r6, r4, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003bbe:	f003 ff43 	bl	90007a48 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003bc2:	a90f      	add	r1, sp, #60	@ 0x3c
90003bc4:	4831      	ldr	r0, [pc, #196]	@ (90003c8c <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003bc6:	e9cd 860f 	strd	r8, r6, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003bca:	e9cd 4711 	strd	r4, r7, [sp, #68]	@ 0x44
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003bce:	f003 ff3b 	bl	90007a48 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003bd2:	a90f      	add	r1, sp, #60	@ 0x3c
90003bd4:	482e      	ldr	r0, [pc, #184]	@ (90003c90 <main+0x398>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003bd6:	e9cd 660f 	strd	r6, r6, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003bda:	e9cd 4411 	strd	r4, r4, [sp, #68]	@ 0x44
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003bde:	f003 ff33 	bl	90007a48 <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003be2:	a90f      	add	r1, sp, #60	@ 0x3c
90003be4:	482b      	ldr	r0, [pc, #172]	@ (90003c94 <main+0x39c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003be6:	e9cd 960f 	strd	r9, r6, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003bea:	e9cd 4711 	strd	r4, r7, [sp, #68]	@ 0x44
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003bee:	f003 ff2b 	bl	90007a48 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003bf2:	a90f      	add	r1, sp, #60	@ 0x3c
90003bf4:	4823      	ldr	r0, [pc, #140]	@ (90003c84 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003bf6:	e9cd 860f 	strd	r8, r6, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
90003bfa:	e9cd 4411 	strd	r4, r4, [sp, #68]	@ 0x44
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003bfe:	f003 ff23 	bl	90007a48 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90003c02:	a90f      	add	r1, sp, #60	@ 0x3c
90003c04:	4824      	ldr	r0, [pc, #144]	@ (90003c98 <main+0x3a0>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003c06:	e9cd 960f 	strd	r9, r6, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
90003c0a:	e9cd 4411 	strd	r4, r4, [sp, #68]	@ 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90003c0e:	f003 ff1b 	bl	90007a48 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8;
90003c12:	f44f 7380 	mov.w	r3, #256	@ 0x100
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003c16:	a90f      	add	r1, sp, #60	@ 0x3c
90003c18:	481e      	ldr	r0, [pc, #120]	@ (90003c94 <main+0x39c>)
  GPIO_InitStruct.Pin = GPIO_PIN_8;
90003c1a:	930f      	str	r3, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
90003c1c:	9412      	str	r4, [sp, #72]	@ 0x48
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003c1e:	e9cd 6410 	strd	r6, r4, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003c22:	f003 ff11 	bl	90007a48 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003c26:	a90f      	add	r1, sp, #60	@ 0x3c
90003c28:	4819      	ldr	r0, [pc, #100]	@ (90003c90 <main+0x398>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003c2a:	e9cd b60f 	strd	fp, r6, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
90003c2e:	e9cd 4411 	strd	r4, r4, [sp, #68]	@ 0x44
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003c32:	f003 ff09 	bl	90007a48 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003c36:	a90f      	add	r1, sp, #60	@ 0x3c
90003c38:	4816      	ldr	r0, [pc, #88]	@ (90003c94 <main+0x39c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003c3a:	e9cd 960f 	strd	r9, r6, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
90003c3e:	e9cd 4411 	strd	r4, r4, [sp, #68]	@ 0x44
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003c42:	f003 ff01 	bl	90007a48 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c46:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c4a:	4622      	mov	r2, r4
90003c4c:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c4e:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c50:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c52:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003c56:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003c5a:	4d10      	ldr	r5, [pc, #64]	@ (90003c9c <main+0x3a4>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c5c:	4033      	ands	r3, r6
90003c5e:	9301      	str	r3, [sp, #4]
90003c60:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c62:	f003 fc8f 	bl	90007584 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003c66:	207a      	movs	r0, #122	@ 0x7a
90003c68:	e01c      	b.n	90003ca4 <main+0x3ac>
90003c6a:	bf00      	nop
90003c6c:	01010001 	.word	0x01010001
90003c70:	e000ed00 	.word	0xe000ed00
90003c74:	24000044 	.word	0x24000044
90003c78:	58024400 	.word	0x58024400
90003c7c:	24007ab0 	.word	0x24007ab0
90003c80:	58020400 	.word	0x58020400
90003c84:	58020c00 	.word	0x58020c00
90003c88:	58022000 	.word	0x58022000
90003c8c:	58021800 	.word	0x58021800
90003c90:	58022800 	.word	0x58022800
90003c94:	58020000 	.word	0x58020000
90003c98:	58021000 	.word	0x58021000
90003c9c:	2400784c 	.word	0x2400784c
90003ca0:	03000012 	.word	0x03000012
90003ca4:	f003 fcaa 	bl	900075fc <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003ca8:	2234      	movs	r2, #52	@ 0x34
90003caa:	4621      	mov	r1, r4
90003cac:	a80f      	add	r0, sp, #60	@ 0x3c
90003cae:	f024 ffd3 	bl	90028c58 <memset>
  hltdc.Instance = LTDC;
90003cb2:	4b95      	ldr	r3, [pc, #596]	@ (90003f08 <main+0x610>)
  hltdc.Init.AccumulatedVBP = 11;
90003cb4:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.AccumulatedActiveH = 283;
90003cb6:	f240 2c0a 	movw	ip, #522	@ 0x20a
  hltdc.Instance = LTDC;
90003cba:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003cbc:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.TotalHeigh = 285;
90003cbe:	f44f 7e04 	mov.w	lr, #528	@ 0x210
  hltdc.Init.VerticalSync = 8;
90003cc2:	f8c5 8018 	str.w	r8, [r5, #24]
  hltdc.Init.HorizontalSync = 39;
90003cc6:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003cc8:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003cca:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003ccc:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003cd0:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003cd4:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003cd8:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003cda:	e9c5 c309 	strd	ip, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003cde:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003ce2:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.TotalHeigh = 285;
90003ce6:	e9c5 e30b 	strd	lr, r3, [r5, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003cea:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003cee:	f006 fa15 	bl	9000a11c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003cf2:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.Alpha = 255;
90003cf6:	22ff      	movs	r2, #255	@ 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003cf8:	a90f      	add	r1, sp, #60	@ 0x3c
  pLayerCfg.WindowX1 = 480;
90003cfa:	9310      	str	r3, [sp, #64]	@ 0x40
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003cfc:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003cfe:	9319      	str	r3, [sp, #100]	@ 0x64
  pLayerCfg.WindowY1 = 272;
90003d00:	f44f 7388 	mov.w	r3, #272	@ 0x110
  pLayerCfg.Alpha = 255;
90003d04:	9214      	str	r2, [sp, #80]	@ 0x50
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003d06:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  pLayerCfg.WindowY1 = 272;
90003d0a:	9312      	str	r3, [sp, #72]	@ 0x48
  pLayerCfg.ImageHeight = 272;
90003d0c:	931a      	str	r3, [sp, #104]	@ 0x68
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003d0e:	2305      	movs	r3, #5
  hdma2d.Instance = DMA2D;
90003d10:	4d7e      	ldr	r5, [pc, #504]	@ (90003f0c <main+0x614>)
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003d12:	9216      	str	r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003d14:	4622      	mov	r2, r4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003d16:	9317      	str	r3, [sp, #92]	@ 0x5c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003d18:	f8cd b04c 	str.w	fp, [sp, #76]	@ 0x4c
  pLayerCfg.WindowX0 = 0;
90003d1c:	940f      	str	r4, [sp, #60]	@ 0x3c
  pLayerCfg.WindowY0 = 0;
90003d1e:	9411      	str	r4, [sp, #68]	@ 0x44
  pLayerCfg.Alpha0 = 0;
90003d20:	9415      	str	r4, [sp, #84]	@ 0x54
  pLayerCfg.FBStartAdress = 0;
90003d22:	9418      	str	r4, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
90003d24:	f8ad 406c 	strh.w	r4, [sp, #108]	@ 0x6c
  pLayerCfg.Backcolor.Red = 0;
90003d28:	f88d 406e 	strb.w	r4, [sp, #110]	@ 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003d2c:	f006 faca 	bl	9000a2c4 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003d30:	4a77      	ldr	r2, [pc, #476]	@ (90003f10 <main+0x618>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003d32:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003d34:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003d36:	602a      	str	r2, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003d38:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003d3a:	e9c5 4b01 	strd	r4, fp, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003d3e:	e9c5 4b11 	strd	r4, fp, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003d42:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003d46:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003d4a:	f003 fd3b 	bl	900077c4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003d4e:	4631      	mov	r1, r6
90003d50:	4628      	mov	r0, r5
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003d52:	2510      	movs	r5, #16
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003d54:	f003 fe0e 	bl	90007974 <HAL_DMA2D_ConfigLayer>
  SdramTiming.WriteRecoveryTime = 5;
90003d58:	2305      	movs	r3, #5
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003d5a:	486e      	ldr	r0, [pc, #440]	@ (90003f14 <main+0x61c>)
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003d5c:	a90f      	add	r1, sp, #60	@ 0x3c
  SdramTiming.WriteRecoveryTime = 5;
90003d5e:	9313      	str	r3, [sp, #76]	@ 0x4c
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003d60:	2304      	movs	r3, #4
  SdramTiming.LoadToActiveDelay = 2;
90003d62:	f8cd b03c 	str.w	fp, [sp, #60]	@ 0x3c
  SdramTiming.SelfRefreshTime = 4;
90003d66:	9311      	str	r3, [sp, #68]	@ 0x44
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003d68:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90003d6c:	61c4      	str	r4, [r0, #28]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003d6e:	6284      	str	r4, [r0, #40]	@ 0x28
  htim1.Instance = TIM1;
90003d70:	f8df 9204 	ldr.w	r9, [pc, #516]	@ 90003f78 <main+0x680>
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003d74:	e9c0 3503 	strd	r3, r5, [r0, #12]
  SdramTiming.ExitSelfRefreshDelay = 7;
90003d78:	2307      	movs	r3, #7
90003d7a:	9310      	str	r3, [sp, #64]	@ 0x40
  SdramTiming.RowCycleDelay = 7;
90003d7c:	9312      	str	r3, [sp, #72]	@ 0x48
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003d7e:	4b66      	ldr	r3, [pc, #408]	@ (90003f18 <main+0x620>)
90003d80:	6003      	str	r3, [r0, #0]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003d82:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  SdramTiming.RCDDelay = 2;
90003d86:	e9cd bb14 	strd	fp, fp, [sp, #80]	@ 0x50
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003d8a:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003d8c:	f44f 5b80 	mov.w	fp, #4096	@ 0x1000
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003d90:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003d94:	f8c0 b024 	str.w	fp, [r0, #36]	@ 0x24
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003d98:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003d9a:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003d9e:	f008 fc09 	bl	9000c5b4 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90003da2:	4620      	mov	r0, r4
90003da4:	f003 f930 	bl	90007008 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003da8:	4620      	mov	r0, r4
90003daa:	f003 f977 	bl	9000709c <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003dae:	f7fc fe95 	bl	90000adc <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003db2:	4b5a      	ldr	r3, [pc, #360]	@ (90003f1c <main+0x624>)
90003db4:	485a      	ldr	r0, [pc, #360]	@ (90003f20 <main+0x628>)
90003db6:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003db8:	f005 f90c 	bl	90008fd4 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003dbc:	4859      	ldr	r0, [pc, #356]	@ (90003f24 <main+0x62c>)
90003dbe:	4b5a      	ldr	r3, [pc, #360]	@ (90003f28 <main+0x630>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003dc0:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90003dc2:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003dc4:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003dc6:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003dca:	f003 fc85 	bl	900076d8 <HAL_CRC_Init>
  hspi4.Init.Mode = SPI_MODE_MASTER;
90003dce:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 90003f7c <main+0x684>
  hspi4.Instance = SPI4;
90003dd2:	4856      	ldr	r0, [pc, #344]	@ (90003f2c <main+0x634>)
  hspi4.Init.Mode = SPI_MODE_MASTER;
90003dd4:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
90003dd8:	e9c0 c300 	strd	ip, r3, [r0]
  hspi4.Init.Direction = SPI_DIRECTION_2LINES_TXONLY;
90003ddc:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
  hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
90003de0:	6144      	str	r4, [r0, #20]
  hspi4.Init.CRCPolynomial = 0x0;
90003de2:	62c4      	str	r4, [r0, #44]	@ 0x2c
  hspi4.Init.Direction = SPI_DIRECTION_2LINES_TXONLY;
90003de4:	6083      	str	r3, [r0, #8]
  hspi4.Init.NSS = SPI_NSS_SOFT;
90003de6:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  hspi4.Init.IOSwap = SPI_IO_SWAP_DISABLE;
90003dea:	6584      	str	r4, [r0, #88]	@ 0x58
  hspi4.Init.NSS = SPI_NSS_SOFT;
90003dec:	6183      	str	r3, [r0, #24]
  hspi4.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
90003dee:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
  hspi4.Init.CLKPolarity = SPI_POLARITY_LOW;
90003df2:	e9c0 7403 	strd	r7, r4, [r0, #12]
  hspi4.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
90003df6:	6343      	str	r3, [r0, #52]	@ 0x34
  hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
90003df8:	e9c0 4407 	strd	r4, r4, [r0, #28]
  hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
90003dfc:	e9c0 4409 	strd	r4, r4, [r0, #36]	@ 0x24
  hspi4.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
90003e00:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
  hspi4.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
90003e04:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
  hspi4.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
90003e08:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
  hspi4.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
90003e0c:	e9c0 4414 	strd	r4, r4, [r0, #80]	@ 0x50
  if (HAL_SPI_Init(&hspi4) != HAL_OK)
90003e10:	f008 fc40 	bl	9000c694 <HAL_SPI_Init>
  htim1.Instance = TIM1;
90003e14:	4b46      	ldr	r3, [pc, #280]	@ (90003f30 <main+0x638>)
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
90003e16:	4648      	mov	r0, r9
  TIM_MasterConfigTypeDef sMasterConfig = {0};
90003e18:	940e      	str	r4, [sp, #56]	@ 0x38
  htim1.Instance = TIM1;
90003e1a:	f8c9 3000 	str.w	r3, [r9]
  htim1.Init.Period = 1000000;
90003e1e:	4b45      	ldr	r3, [pc, #276]	@ (90003f34 <main+0x63c>)
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
90003e20:	f8c9 4018 	str.w	r4, [r9, #24]
  htim1.Init.Period = 1000000;
90003e24:	f8c9 300c 	str.w	r3, [r9, #12]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
90003e28:	e9c9 8401 	strd	r8, r4, [r9, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
90003e2c:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
90003e30:	e9cd 4411 	strd	r4, r4, [sp, #68]	@ 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
90003e34:	e9cd 440c 	strd	r4, r4, [sp, #48]	@ 0x30
  htim1.Init.RepetitionCounter = 0;
90003e38:	e9c9 4404 	strd	r4, r4, [r9, #16]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
90003e3c:	f008 fd02 	bl	9000c844 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
90003e40:	a90f      	add	r1, sp, #60	@ 0x3c
90003e42:	4648      	mov	r0, r9
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
90003e44:	f8cd b03c 	str.w	fp, [sp, #60]	@ 0x3c
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
90003e48:	f008 fe42 	bl	9000cad0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
90003e4c:	a90c      	add	r1, sp, #48	@ 0x30
90003e4e:	4648      	mov	r0, r9
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
90003e50:	940e      	str	r4, [sp, #56]	@ 0x38
  htim5.Instance = TIM5;
90003e52:	f8df 812c 	ldr.w	r8, [pc, #300]	@ 90003f80 <main+0x688>
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
90003e56:	e9cd 440c 	strd	r4, r4, [sp, #48]	@ 0x30
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
90003e5a:	f008 ffb3 	bl	9000cdc4 <HAL_TIMEx_MasterConfigSynchronization>
  HAL_TIM_Base_Start(&htim1);
90003e5e:	4648      	mov	r0, r9
90003e60:	f008 fd96 	bl	9000c990 <HAL_TIM_Base_Start>
  htim5.Instance = TIM5;
90003e64:	4b34      	ldr	r3, [pc, #208]	@ (90003f38 <main+0x640>)
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
90003e66:	4640      	mov	r0, r8
  htim5.Init.Prescaler = 3;
90003e68:	f8c8 7004 	str.w	r7, [r8, #4]
  htim5.Instance = TIM5;
90003e6c:	f8c8 3000 	str.w	r3, [r8]
  htim5.Init.Period = 3000;
90003e70:	f640 33b8 	movw	r3, #3000	@ 0xbb8
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
90003e74:	f8c8 a018 	str.w	sl, [r8, #24]
  htim5.Init.Period = 3000;
90003e78:	f8c8 300c 	str.w	r3, [r8, #12]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
90003e7c:	f8c8 4008 	str.w	r4, [r8, #8]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
90003e80:	f8c8 4010 	str.w	r4, [r8, #16]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
90003e84:	f008 fcde 	bl	9000c844 <HAL_TIM_Base_Init>
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
90003e88:	4622      	mov	r2, r4
90003e8a:	4621      	mov	r1, r4
90003e8c:	2036      	movs	r0, #54	@ 0x36
90003e8e:	f003 fb79 	bl	90007584 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90003e92:	2036      	movs	r0, #54	@ 0x36
90003e94:	f003 fbb2 	bl	900075fc <HAL_NVIC_EnableIRQ>
  HAL_TIM_Base_Start_IT(&htim5);
90003e98:	4640      	mov	r0, r8
90003e9a:	f008 fdc7 	bl	9000ca2c <HAL_TIM_Base_Start_IT>
  MX_TouchGFX_Init();
90003e9e:	f7fc fe21 	bl	90000ae4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003ea2:	f7fc fe1d 	bl	90000ae0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003ea6:	f009 f8ab 	bl	9000d000 <osKernelInitialize>
  noteQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &noteQueue_attributes);
90003eaa:	4a24      	ldr	r2, [pc, #144]	@ (90003f3c <main+0x644>)
90003eac:	4631      	mov	r1, r6
90003eae:	4628      	mov	r0, r5
90003eb0:	f009 f9ca 	bl	9000d248 <osMessageQueueNew>
90003eb4:	4b22      	ldr	r3, [pc, #136]	@ (90003f40 <main+0x648>)
  stateQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &stateQueue_attributes);
90003eb6:	4a23      	ldr	r2, [pc, #140]	@ (90003f44 <main+0x64c>)
90003eb8:	4631      	mov	r1, r6
  noteQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &noteQueue_attributes);
90003eba:	6018      	str	r0, [r3, #0]
  stateQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &stateQueue_attributes);
90003ebc:	4628      	mov	r0, r5
90003ebe:	f009 f9c3 	bl	9000d248 <osMessageQueueNew>
90003ec2:	4b21      	ldr	r3, [pc, #132]	@ (90003f48 <main+0x650>)
90003ec4:	4602      	mov	r2, r0
  soundQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &soundQueue_attributes);
90003ec6:	4631      	mov	r1, r6
90003ec8:	4628      	mov	r0, r5
  stateQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &stateQueue_attributes);
90003eca:	601a      	str	r2, [r3, #0]
  soundQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &soundQueue_attributes);
90003ecc:	4a1f      	ldr	r2, [pc, #124]	@ (90003f4c <main+0x654>)
90003ece:	f009 f9bb 	bl	9000d248 <osMessageQueueNew>
90003ed2:	4b1f      	ldr	r3, [pc, #124]	@ (90003f50 <main+0x658>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003ed4:	4a1f      	ldr	r2, [pc, #124]	@ (90003f54 <main+0x65c>)
90003ed6:	4621      	mov	r1, r4
  soundQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &soundQueue_attributes);
90003ed8:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003eda:	481f      	ldr	r0, [pc, #124]	@ (90003f58 <main+0x660>)
90003edc:	f009 f8bc 	bl	9000d058 <osThreadNew>
90003ee0:	4b1e      	ldr	r3, [pc, #120]	@ (90003f5c <main+0x664>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003ee2:	4a1f      	ldr	r2, [pc, #124]	@ (90003f60 <main+0x668>)
90003ee4:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003ee6:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003ee8:	481e      	ldr	r0, [pc, #120]	@ (90003f64 <main+0x66c>)
90003eea:	f009 f8b5 	bl	9000d058 <osThreadNew>
90003eee:	4b1e      	ldr	r3, [pc, #120]	@ (90003f68 <main+0x670>)
90003ef0:	4605      	mov	r5, r0
  playNoteTaskHandle = osThreadNew(playNoteTaskFunction, NULL, &playNoteTask_attributes);
90003ef2:	4a1e      	ldr	r2, [pc, #120]	@ (90003f6c <main+0x674>)
90003ef4:	4621      	mov	r1, r4
90003ef6:	481e      	ldr	r0, [pc, #120]	@ (90003f70 <main+0x678>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003ef8:	601d      	str	r5, [r3, #0]
  playNoteTaskHandle = osThreadNew(playNoteTaskFunction, NULL, &playNoteTask_attributes);
90003efa:	f009 f8ad 	bl	9000d058 <osThreadNew>
90003efe:	4b1d      	ldr	r3, [pc, #116]	@ (90003f74 <main+0x67c>)
90003f00:	6018      	str	r0, [r3, #0]
  osKernelStart();
90003f02:	f009 f88f 	bl	9000d024 <osKernelStart>
  while (1)
90003f06:	e7fe      	b.n	90003f06 <main+0x60e>
90003f08:	50001000 	.word	0x50001000
90003f0c:	24007a24 	.word	0x24007a24
90003f10:	52001000 	.word	0x52001000
90003f14:	240076f8 	.word	0x240076f8
90003f18:	52004140 	.word	0x52004140
90003f1c:	52003000 	.word	0x52003000
90003f20:	240079cc 	.word	0x240079cc
90003f24:	24007a8c 	.word	0x24007a8c
90003f28:	58024c00 	.word	0x58024c00
90003f2c:	240077c4 	.word	0x240077c4
90003f30:	40010000 	.word	0x40010000
90003f34:	000f4240 	.word	0x000f4240
90003f38:	40000c00 	.word	0x40000c00
90003f3c:	9002b080 	.word	0x9002b080
90003f40:	240076e8 	.word	0x240076e8
90003f44:	9002b068 	.word	0x9002b068
90003f48:	240076e4 	.word	0x240076e4
90003f4c:	9002b050 	.word	0x9002b050
90003f50:	240076e0 	.word	0x240076e0
90003f54:	9002b0e0 	.word	0x9002b0e0
90003f58:	9000371d 	.word	0x9000371d
90003f5c:	240076f4 	.word	0x240076f4
90003f60:	9002b0bc 	.word	0x9002b0bc
90003f64:	90000af5 	.word	0x90000af5
90003f68:	240076f0 	.word	0x240076f0
90003f6c:	9002b098 	.word	0x9002b098
90003f70:	90003729 	.word	0x90003729
90003f74:	240076ec 	.word	0x240076ec
90003f78:	24007778 	.word	0x24007778
90003f7c:	40013400 	.word	0x40013400
90003f80:	2400772c 	.word	0x2400772c

90003f84 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90003f84:	4a37      	ldr	r2, [pc, #220]	@ (90004064 <HAL_TIM_PeriodElapsedCallback+0xe0>)
{
90003f86:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (htim->Instance == TIM6) {
90003f8a:	6803      	ldr	r3, [r0, #0]
90003f8c:	4293      	cmp	r3, r2
90003f8e:	d064      	beq.n	9000405a <HAL_TIM_PeriodElapsedCallback+0xd6>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM5) {
90003f90:	4a35      	ldr	r2, [pc, #212]	@ (90004068 <HAL_TIM_PeriodElapsedCallback+0xe4>)
90003f92:	4293      	cmp	r3, r2
90003f94:	d001      	beq.n	90003f9a <HAL_TIM_PeriodElapsedCallback+0x16>
  	  //calculate next value
  	  tableIndex += step;
  	  outData = (uint32_t) selectedArray[tableIndex >> 22];
    }
  /* USER CODE END Callback 1 */
}
90003f96:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  	  GPIOK->BSRR = (uint32_t)GPIO_PIN_1 << 16U; //latch enable low
90003f9a:	4b34      	ldr	r3, [pc, #208]	@ (9000406c <HAL_TIM_PeriodElapsedCallback+0xe8>)
90003f9c:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
  	  start = TIM1->CNT;
90003fa0:	f502 4274 	add.w	r2, r2, #62464	@ 0xf400
90003fa4:	f8df a0dc 	ldr.w	sl, [pc, #220]	@ 90004084 <HAL_TIM_PeriodElapsedCallback+0x100>
  	  GPIOK->BSRR = (uint32_t)GPIO_PIN_1 << 16U; //latch enable low
90003fa8:	6199      	str	r1, [r3, #24]
  	  start = TIM1->CNT;
90003faa:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90003fac:	b299      	uxth	r1, r3
90003fae:	f8aa 3000 	strh.w	r3, [sl]
  	  while((TIM1->CNT - start) < 4);
90003fb2:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90003fb4:	1a5b      	subs	r3, r3, r1
90003fb6:	2b03      	cmp	r3, #3
90003fb8:	d9fb      	bls.n	90003fb2 <HAL_TIM_PeriodElapsedCallback+0x2e>
  		  if (bitmask & outData)
90003fba:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 90004088 <HAL_TIM_PeriodElapsedCallback+0x104>
  	  bitmask = (1 << 23);
90003fbe:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
90003fc2:	f8df b0c8 	ldr.w	fp, [pc, #200]	@ 9000408c <HAL_TIM_PeriodElapsedCallback+0x108>
  		  if (bitmask & outData)
90003fc6:	f04f 0c18 	mov.w	ip, #24
90003fca:	f8d9 7000 	ldr.w	r7, [r9]
  			  GPIOA->BSRR = (uint32_t)GPIO_PIN_6 << 16U; //reset data
90003fce:	f44f 0880 	mov.w	r8, #4194304	@ 0x400000
90003fd2:	4c27      	ldr	r4, [pc, #156]	@ (90004070 <HAL_TIM_PeriodElapsedCallback+0xec>)
  			  GPIOA->BSRR = GPIO_PIN_6; //set data
90003fd4:	f04f 0e40 	mov.w	lr, #64	@ 0x40
  		  start = TIM1->CNT;
90003fd8:	4a26      	ldr	r2, [pc, #152]	@ (90004074 <HAL_TIM_PeriodElapsedCallback+0xf0>)
  		  GPIOA->BSRR = GPIO_PIN_8; //set clock
90003fda:	f44f 7680 	mov.w	r6, #256	@ 0x100
  		  GPIOA->BSRR = (uint32_t)GPIO_PIN_8 << 16U; //reset clock
90003fde:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
  	  bitmask = (1 << 23);
90003fe2:	f8cb 0000 	str.w	r0, [fp]
  		  if (bitmask & outData)
90003fe6:	4207      	tst	r7, r0
90003fe8:	d034      	beq.n	90004054 <HAL_TIM_PeriodElapsedCallback+0xd0>
  			  GPIOA->BSRR = GPIO_PIN_6; //set data
90003fea:	f8c4 e018 	str.w	lr, [r4, #24]
  		  start = TIM1->CNT;
90003fee:	6a51      	ldr	r1, [r2, #36]	@ 0x24
  		  while((TIM1->CNT - start) < 8);
90003ff0:	b289      	uxth	r1, r1
90003ff2:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90003ff4:	1a5b      	subs	r3, r3, r1
90003ff6:	2b07      	cmp	r3, #7
90003ff8:	d9fb      	bls.n	90003ff2 <HAL_TIM_PeriodElapsedCallback+0x6e>
  		  GPIOA->BSRR = GPIO_PIN_8; //set clock
90003ffa:	61a6      	str	r6, [r4, #24]
  		  start = TIM1->CNT;
90003ffc:	6a51      	ldr	r1, [r2, #36]	@ 0x24
  		  while((TIM1->CNT - start) < 8);
90003ffe:	b289      	uxth	r1, r1
90004000:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90004002:	1a5b      	subs	r3, r3, r1
90004004:	2b07      	cmp	r3, #7
90004006:	d9fb      	bls.n	90004000 <HAL_TIM_PeriodElapsedCallback+0x7c>
  	  while(bitmask) {
90004008:	f1bc 0c01 	subs.w	ip, ip, #1
  		  bitmask = bitmask >> 1;
9000400c:	ea4f 0050 	mov.w	r0, r0, lsr #1
  		  GPIOA->BSRR = (uint32_t)GPIO_PIN_8 << 16U; //reset clock
90004010:	61a5      	str	r5, [r4, #24]
  	  while(bitmask) {
90004012:	d1e8      	bne.n	90003fe6 <HAL_TIM_PeriodElapsedCallback+0x62>
  	  GPIOA->BSRR = (uint32_t)GPIO_PIN_6 << 16U; //reset data
90004014:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
90004018:	f8cb 0000 	str.w	r0, [fp]
  	  while((TIM1->CNT - start) < 4);
9000401c:	4915      	ldr	r1, [pc, #84]	@ (90004074 <HAL_TIM_PeriodElapsedCallback+0xf0>)
  	  GPIOA->BSRR = (uint32_t)GPIO_PIN_6 << 16U; //reset data
9000401e:	61a3      	str	r3, [r4, #24]
  	  start = TIM1->CNT;
90004020:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90004022:	b29a      	uxth	r2, r3
90004024:	f8aa 3000 	strh.w	r3, [sl]
  	  while((TIM1->CNT - start) < 4);
90004028:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
9000402a:	1a9b      	subs	r3, r3, r2
9000402c:	2b03      	cmp	r3, #3
9000402e:	d9fb      	bls.n	90004028 <HAL_TIM_PeriodElapsedCallback+0xa4>
  	  tableIndex += step;
90004030:	4a11      	ldr	r2, [pc, #68]	@ (90004078 <HAL_TIM_PeriodElapsedCallback+0xf4>)
  	  GPIOK->BSRR = GPIO_PIN_1; //latch enable high
90004032:	2002      	movs	r0, #2
90004034:	4b0d      	ldr	r3, [pc, #52]	@ (9000406c <HAL_TIM_PeriodElapsedCallback+0xe8>)
  	  tableIndex += step;
90004036:	4911      	ldr	r1, [pc, #68]	@ (9000407c <HAL_TIM_PeriodElapsedCallback+0xf8>)
  	  GPIOK->BSRR = GPIO_PIN_1; //latch enable high
90004038:	6198      	str	r0, [r3, #24]
  	  tableIndex += step;
9000403a:	6808      	ldr	r0, [r1, #0]
9000403c:	6813      	ldr	r3, [r2, #0]
  	  outData = (uint32_t) selectedArray[tableIndex >> 22];
9000403e:	4910      	ldr	r1, [pc, #64]	@ (90004080 <HAL_TIM_PeriodElapsedCallback+0xfc>)
  	  tableIndex += step;
90004040:	4403      	add	r3, r0
  	  outData = (uint32_t) selectedArray[tableIndex >> 22];
90004042:	6809      	ldr	r1, [r1, #0]
90004044:	0d98      	lsrs	r0, r3, #22
90004046:	f831 1010 	ldrh.w	r1, [r1, r0, lsl #1]
  	  tableIndex += step;
9000404a:	6013      	str	r3, [r2, #0]
  	  outData = (uint32_t) selectedArray[tableIndex >> 22];
9000404c:	f8c9 1000 	str.w	r1, [r9]
}
90004050:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  			  GPIOA->BSRR = (uint32_t)GPIO_PIN_6 << 16U; //reset data
90004054:	f8c4 8018 	str.w	r8, [r4, #24]
90004058:	e7c9      	b.n	90003fee <HAL_TIM_PeriodElapsedCallback+0x6a>
9000405a:	4604      	mov	r4, r0
    HAL_IncTick();
9000405c:	f003 fa68 	bl	90007530 <HAL_IncTick>
  if (htim->Instance == TIM5) {
90004060:	6823      	ldr	r3, [r4, #0]
90004062:	e795      	b.n	90003f90 <HAL_TIM_PeriodElapsedCallback+0xc>
90004064:	40001000 	.word	0x40001000
90004068:	40000c00 	.word	0x40000c00
9000406c:	58022800 	.word	0x58022800
90004070:	58020000 	.word	0x58020000
90004074:	40010000 	.word	0x40010000
90004078:	24007abc 	.word	0x24007abc
9000407c:	24007ab8 	.word	0x24007ab8
90004080:	24007ab0 	.word	0x24007ab0
90004084:	24007ac0 	.word	0x24007ac0
90004088:	24000050 	.word	0x24000050
9000408c:	24007ac4 	.word	0x24007ac4

90004090 <Error_Handler>:
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  /* USER CODE END Error_Handler_Debug */
}
90004090:	4770      	bx	lr
90004092:	bf00      	nop

90004094 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004094:	4b0b      	ldr	r3, [pc, #44]	@ (900040c4 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004096:	2200      	movs	r2, #0
90004098:	210f      	movs	r1, #15
9000409a:	f06f 0001 	mvn.w	r0, #1
{
9000409e:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900040a0:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
900040a4:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900040a6:	f044 0402 	orr.w	r4, r4, #2
900040aa:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
900040ae:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
900040b2:	f003 0302 	and.w	r3, r3, #2
900040b6:	9301      	str	r3, [sp, #4]
900040b8:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
900040ba:	b003      	add	sp, #12
900040bc:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
900040c0:	f003 ba60 	b.w	90007584 <HAL_NVIC_SetPriority>
900040c4:	58024400 	.word	0x58024400

900040c8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
900040c8:	4b0a      	ldr	r3, [pc, #40]	@ (900040f4 <HAL_CRC_MspInit+0x2c>)
900040ca:	6802      	ldr	r2, [r0, #0]
900040cc:	429a      	cmp	r2, r3
900040ce:	d000      	beq.n	900040d2 <HAL_CRC_MspInit+0xa>
900040d0:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
900040d2:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
900040d6:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
900040d8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900040dc:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
900040e0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900040e4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900040e8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
900040ec:	9301      	str	r3, [sp, #4]
900040ee:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
900040f0:	b002      	add	sp, #8
900040f2:	4770      	bx	lr
900040f4:	58024c00 	.word	0x58024c00

900040f8 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
900040f8:	4b0f      	ldr	r3, [pc, #60]	@ (90004138 <HAL_DMA2D_MspInit+0x40>)
900040fa:	6802      	ldr	r2, [r0, #0]
900040fc:	429a      	cmp	r2, r3
900040fe:	d000      	beq.n	90004102 <HAL_DMA2D_MspInit+0xa>
90004100:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004102:	4b0e      	ldr	r3, [pc, #56]	@ (9000413c <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004104:	205a      	movs	r0, #90	@ 0x5a
90004106:	2200      	movs	r2, #0
90004108:	2105      	movs	r1, #5
{
9000410a:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000410c:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90004110:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004112:	f044 0410 	orr.w	r4, r4, #16
90004116:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
9000411a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
9000411e:	f003 0310 	and.w	r3, r3, #16
90004122:	9301      	str	r3, [sp, #4]
90004124:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004126:	f003 fa2d 	bl	90007584 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
9000412a:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
9000412c:	b002      	add	sp, #8
9000412e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90004132:	f003 ba63 	b.w	900075fc <HAL_NVIC_EnableIRQ>
90004136:	bf00      	nop
90004138:	52001000 	.word	0x52001000
9000413c:	58024400 	.word	0x58024400

90004140 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90004140:	4b3f      	ldr	r3, [pc, #252]	@ (90004240 <HAL_JPEG_MspInit+0x100>)
90004142:	6802      	ldr	r2, [r0, #0]
90004144:	429a      	cmp	r2, r3
90004146:	d000      	beq.n	9000414a <HAL_JPEG_MspInit+0xa>
90004148:	4770      	bx	lr
{
9000414a:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
9000414c:	4b3d      	ldr	r3, [pc, #244]	@ (90004244 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000414e:	2211      	movs	r2, #17
90004150:	4e3d      	ldr	r6, [pc, #244]	@ (90004248 <HAL_JPEG_MspInit+0x108>)
{
90004152:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004154:	4d3d      	ldr	r5, [pc, #244]	@ (9000424c <HAL_JPEG_MspInit+0x10c>)
90004156:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90004158:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000415a:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
9000415c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004160:	493b      	ldr	r1, [pc, #236]	@ (90004250 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90004162:	f042 0220 	orr.w	r2, r2, #32
90004166:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000416a:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
9000416c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90004170:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004172:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004176:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004178:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000417a:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
9000417c:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000417e:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004180:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004184:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90004188:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000418a:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
9000418c:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90004190:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004194:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90004196:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
9000419a:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
9000419e:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900041a2:	2313      	movs	r3, #19
900041a4:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
900041a6:	2302      	movs	r3, #2
900041a8:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900041aa:	f006 f981 	bl	9000a4b0 <HAL_MDMA_Init>
900041ae:	2800      	cmp	r0, #0
900041b0:	d13a      	bne.n	90004228 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
900041b2:	2200      	movs	r2, #0
900041b4:	4824      	ldr	r0, [pc, #144]	@ (90004248 <HAL_JPEG_MspInit+0x108>)
900041b6:	4611      	mov	r1, r2
900041b8:	f006 fa18 	bl	9000a5ec <HAL_MDMA_ConfigPostRequestMask>
900041bc:	2800      	cmp	r0, #0
900041be:	d13c      	bne.n	9000423a <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900041c0:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900041c2:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900041c4:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900041c6:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900041c8:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
900041ca:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900041cc:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900041d0:	4920      	ldr	r1, [pc, #128]	@ (90004254 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900041d2:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
900041d4:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
900041d6:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900041d8:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900041da:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900041de:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900041e2:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900041e4:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900041e6:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900041ea:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900041ec:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900041f0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900041f4:	4815      	ldr	r0, [pc, #84]	@ (9000424c <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900041f6:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900041f8:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900041fa:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900041fc:	f006 f958 	bl	9000a4b0 <HAL_MDMA_Init>
90004200:	b9c0      	cbnz	r0, 90004234 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90004202:	2200      	movs	r2, #0
90004204:	4811      	ldr	r0, [pc, #68]	@ (9000424c <HAL_JPEG_MspInit+0x10c>)
90004206:	4611      	mov	r1, r2
90004208:	f006 f9f0 	bl	9000a5ec <HAL_MDMA_ConfigPostRequestMask>
9000420c:	b978      	cbnz	r0, 9000422e <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000420e:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004210:	2079      	movs	r0, #121	@ 0x79
90004212:	2200      	movs	r2, #0
90004214:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004216:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004218:	f003 f9b4 	bl	90007584 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
9000421c:	2079      	movs	r0, #121	@ 0x79

  /* USER CODE END JPEG_MspInit 1 */

  }

}
9000421e:	b002      	add	sp, #8
90004220:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004224:	f003 b9ea 	b.w	900075fc <HAL_NVIC_EnableIRQ>
      Error_Handler();
90004228:	f7ff ff32 	bl	90004090 <Error_Handler>
9000422c:	e7c1      	b.n	900041b2 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
9000422e:	f7ff ff2f 	bl	90004090 <Error_Handler>
90004232:	e7ec      	b.n	9000420e <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90004234:	f7ff ff2c 	bl	90004090 <Error_Handler>
90004238:	e7e3      	b.n	90004202 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000423a:	f7ff ff29 	bl	90004090 <Error_Handler>
9000423e:	e7bf      	b.n	900041c0 <HAL_JPEG_MspInit+0x80>
90004240:	52003000 	.word	0x52003000
90004244:	58024400 	.word	0x58024400
90004248:	24007960 	.word	0x24007960
9000424c:	240078f4 	.word	0x240078f4
90004250:	52000200 	.word	0x52000200
90004254:	520001c0 	.word	0x520001c0

90004258 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90004258:	b570      	push	{r4, r5, r6, lr}
9000425a:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000425c:	2100      	movs	r1, #0
{
9000425e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004260:	22c0      	movs	r2, #192	@ 0xc0
90004262:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004264:	9109      	str	r1, [sp, #36]	@ 0x24
90004266:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000426a:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000426e:	f024 fcf3 	bl	90028c58 <memset>
  if(hltdc->Instance==LTDC)
90004272:	4b4a      	ldr	r3, [pc, #296]	@ (9000439c <HAL_LTDC_MspInit+0x144>)
90004274:	6822      	ldr	r2, [r4, #0]
90004276:	429a      	cmp	r2, r3
90004278:	d001      	beq.n	9000427e <HAL_LTDC_MspInit+0x26>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
9000427a:	b03a      	add	sp, #232	@ 0xe8
9000427c:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000427e:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004280:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004282:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90004286:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004288:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000428a:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000428c:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 93;
9000428e:	225d      	movs	r2, #93	@ 0x5d
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004290:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90004292:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004296:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004298:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000429a:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 93;
9000429e:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900042a2:	f007 fa2d 	bl	9000b700 <HAL_RCCEx_PeriphCLKConfig>
900042a6:	2800      	cmp	r0, #0
900042a8:	d174      	bne.n	90004394 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
900042aa:	4b3d      	ldr	r3, [pc, #244]	@ (900043a0 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900042ac:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900042ae:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900042b0:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
900042b2:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900042b6:	a905      	add	r1, sp, #20
900042b8:	483a      	ldr	r0, [pc, #232]	@ (900043a4 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
900042ba:	f042 0208 	orr.w	r2, r2, #8
900042be:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
900042c2:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
900042c6:	f002 0208 	and.w	r2, r2, #8
900042ca:	9200      	str	r2, [sp, #0]
900042cc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
900042ce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042d2:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
900042d6:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900042da:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042de:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
900042e2:	9201      	str	r2, [sp, #4]
900042e4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900042e6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042ea:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
900042ee:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900042f2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042f6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
900042fa:	9202      	str	r2, [sp, #8]
900042fc:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900042fe:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004302:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90004306:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000430a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000430e:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90004312:	9203      	str	r2, [sp, #12]
90004314:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004316:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000431a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
9000431e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004322:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004326:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004328:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000432c:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000432e:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004330:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004332:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004334:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004336:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000433a:	f003 fb85 	bl	90007a48 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000433e:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004342:	a905      	add	r1, sp, #20
90004344:	4818      	ldr	r0, [pc, #96]	@ (900043a8 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004346:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004348:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000434c:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004350:	f003 fb7a 	bl	90007a48 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004354:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004358:	a905      	add	r1, sp, #20
9000435a:	4814      	ldr	r0, [pc, #80]	@ (900043ac <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
9000435c:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000435e:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004362:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004366:	f003 fb6f 	bl	90007a48 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000436a:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000436e:	a905      	add	r1, sp, #20
90004370:	480f      	ldr	r0, [pc, #60]	@ (900043b0 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004372:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004374:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004378:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000437c:	f003 fb64 	bl	90007a48 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004380:	462a      	mov	r2, r5
90004382:	2105      	movs	r1, #5
90004384:	2058      	movs	r0, #88	@ 0x58
90004386:	f003 f8fd 	bl	90007584 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000438a:	2058      	movs	r0, #88	@ 0x58
9000438c:	f003 f936 	bl	900075fc <HAL_NVIC_EnableIRQ>
}
90004390:	b03a      	add	sp, #232	@ 0xe8
90004392:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004394:	f7ff fe7c 	bl	90004090 <Error_Handler>
90004398:	e787      	b.n	900042aa <HAL_LTDC_MspInit+0x52>
9000439a:	bf00      	nop
9000439c:	50001000 	.word	0x50001000
900043a0:	58024400 	.word	0x58024400
900043a4:	58022800 	.word	0x58022800
900043a8:	58022000 	.word	0x58022000
900043ac:	58022400 	.word	0x58022400
900043b0:	58021c00 	.word	0x58021c00
900043b4:	00000000 	.word	0x00000000

900043b8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
900043b8:	b510      	push	{r4, lr}
900043ba:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900043bc:	2100      	movs	r1, #0
{
900043be:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900043c0:	22c0      	movs	r2, #192	@ 0xc0
900043c2:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900043c4:	9106      	str	r1, [sp, #24]
900043c6:	e9cd 1102 	strd	r1, r1, [sp, #8]
900043ca:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900043ce:	f024 fc43 	bl	90028c58 <memset>
  if(hspi->Instance==SPI4)
900043d2:	4b21      	ldr	r3, [pc, #132]	@ (90004458 <HAL_SPI_MspInit+0xa0>)
900043d4:	6822      	ldr	r2, [r4, #0]
900043d6:	429a      	cmp	r2, r3
900043d8:	d001      	beq.n	900043de <HAL_SPI_MspInit+0x26>

  /* USER CODE END SPI4_MspInit 1 */

  }

}
900043da:	b038      	add	sp, #224	@ 0xe0
900043dc:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI4;
900043de:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
900043e2:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900043e4:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI4;
900043e6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900043ea:	f007 f989 	bl	9000b700 <HAL_RCCEx_PeriphCLKConfig>
900043ee:	bb40      	cbnz	r0, 90004442 <HAL_SPI_MspInit+0x8a>
    __HAL_RCC_SPI4_CLK_ENABLE();
900043f0:	4b1a      	ldr	r3, [pc, #104]	@ (9000445c <HAL_SPI_MspInit+0xa4>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
900043f2:	2405      	movs	r4, #5
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900043f4:	a902      	add	r1, sp, #8
900043f6:	481a      	ldr	r0, [pc, #104]	@ (90004460 <HAL_SPI_MspInit+0xa8>)
    __HAL_RCC_SPI4_CLK_ENABLE();
900043f8:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
900043fc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90004400:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
90004404:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
90004408:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
9000440c:	9200      	str	r2, [sp, #0]
9000440e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
90004410:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004414:	f042 0210 	orr.w	r2, r2, #16
90004418:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000441c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
90004420:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOE_CLK_ENABLE();
90004422:	f003 0310 	and.w	r3, r3, #16
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_6;
90004426:	ed9f 7b08 	vldr	d7, [pc, #32]	@ 90004448 <HAL_SPI_MspInit+0x90>
    __HAL_RCC_GPIOE_CLK_ENABLE();
9000442a:	9301      	str	r3, [sp, #4]
9000442c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_6;
9000442e:	ed8d 7b02 	vstr	d7, [sp, #8]
90004432:	ed9f 7b07 	vldr	d7, [pc, #28]	@ 90004450 <HAL_SPI_MspInit+0x98>
90004436:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
9000443a:	f003 fb05 	bl	90007a48 <HAL_GPIO_Init>
}
9000443e:	b038      	add	sp, #224	@ 0xe0
90004440:	bd10      	pop	{r4, pc}
      Error_Handler();
90004442:	f7ff fe25 	bl	90004090 <Error_Handler>
90004446:	e7d3      	b.n	900043f0 <HAL_SPI_MspInit+0x38>
90004448:	00000044 	.word	0x00000044
9000444c:	00000002 	.word	0x00000002
	...
90004458:	40013400 	.word	0x40013400
9000445c:	58024400 	.word	0x58024400
90004460:	58021000 	.word	0x58021000

90004464 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
90004464:	4a18      	ldr	r2, [pc, #96]	@ (900044c8 <HAL_TIM_Base_MspInit+0x64>)
90004466:	6803      	ldr	r3, [r0, #0]
90004468:	4293      	cmp	r3, r2
{
9000446a:	b510      	push	{r4, lr}
9000446c:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
9000446e:	d004      	beq.n	9000447a <HAL_TIM_Base_MspInit+0x16>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM5)
90004470:	4a16      	ldr	r2, [pc, #88]	@ (900044cc <HAL_TIM_Base_MspInit+0x68>)
90004472:	4293      	cmp	r3, r2
90004474:	d010      	beq.n	90004498 <HAL_TIM_Base_MspInit+0x34>
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
90004476:	b002      	add	sp, #8
90004478:	bd10      	pop	{r4, pc}
    __HAL_RCC_TIM1_CLK_ENABLE();
9000447a:	4b15      	ldr	r3, [pc, #84]	@ (900044d0 <HAL_TIM_Base_MspInit+0x6c>)
9000447c:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
90004480:	f042 0201 	orr.w	r2, r2, #1
90004484:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
90004488:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
9000448c:	f003 0301 	and.w	r3, r3, #1
90004490:	9300      	str	r3, [sp, #0]
90004492:	9b00      	ldr	r3, [sp, #0]
}
90004494:	b002      	add	sp, #8
90004496:	bd10      	pop	{r4, pc}
    __HAL_RCC_TIM5_CLK_ENABLE();
90004498:	4b0d      	ldr	r3, [pc, #52]	@ (900044d0 <HAL_TIM_Base_MspInit+0x6c>)
    HAL_NVIC_SetPriority(TIM5_IRQn, 5, 0);
9000449a:	2032      	movs	r0, #50	@ 0x32
9000449c:	2200      	movs	r2, #0
9000449e:	2105      	movs	r1, #5
    __HAL_RCC_TIM5_CLK_ENABLE();
900044a0:	f8d3 40e8 	ldr.w	r4, [r3, #232]	@ 0xe8
900044a4:	f044 0408 	orr.w	r4, r4, #8
900044a8:	f8c3 40e8 	str.w	r4, [r3, #232]	@ 0xe8
900044ac:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
900044b0:	f003 0308 	and.w	r3, r3, #8
900044b4:	9301      	str	r3, [sp, #4]
900044b6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM5_IRQn, 5, 0);
900044b8:	f003 f864 	bl	90007584 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM5_IRQn);
900044bc:	2032      	movs	r0, #50	@ 0x32
}
900044be:	b002      	add	sp, #8
900044c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(TIM5_IRQn);
900044c4:	f003 b89a 	b.w	900075fc <HAL_NVIC_EnableIRQ>
900044c8:	40010000 	.word	0x40010000
900044cc:	40000c00 	.word	0x40000c00
900044d0:	58024400 	.word	0x58024400

900044d4 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900044d4:	4836      	ldr	r0, [pc, #216]	@ (900045b0 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900044d6:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900044d8:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900044da:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900044dc:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900044de:	e9cd 3302 	strd	r3, r3, [sp, #8]
900044e2:	e9cd 3304 	strd	r3, r3, [sp, #16]
900044e6:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900044e8:	b109      	cbz	r1, 900044ee <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900044ea:	b038      	add	sp, #224	@ 0xe0
900044ec:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
900044ee:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900044f0:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
900044f2:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900044f4:	a80a      	add	r0, sp, #40	@ 0x28
900044f6:	f024 fbaf 	bl	90028c58 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900044fa:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900044fe:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004500:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90004502:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004506:	f007 f8fb 	bl	9000b700 <HAL_RCCEx_PeriphCLKConfig>
9000450a:	2800      	cmp	r0, #0
9000450c:	d14c      	bne.n	900045a8 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
9000450e:	4b29      	ldr	r3, [pc, #164]	@ (900045b4 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004510:	f64f 7083 	movw	r0, #65411	@ 0xff83
90004514:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004516:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90004518:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000451c:	2600      	movs	r6, #0
9000451e:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004520:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90004524:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004528:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000452c:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000452e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004532:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90004536:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004538:	a902      	add	r1, sp, #8
9000453a:	481f      	ldr	r0, [pc, #124]	@ (900045b8 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000453c:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000453e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004542:	f003 fa81 	bl	90007a48 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004546:	f248 1233 	movw	r2, #33075	@ 0x8133
9000454a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000454c:	a902      	add	r1, sp, #8
9000454e:	481b      	ldr	r0, [pc, #108]	@ (900045bc <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004550:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004552:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004556:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000455a:	f003 fa75 	bl	90007a48 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000455e:	f24c 7203 	movw	r2, #50947	@ 0xc703
90004562:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004564:	a902      	add	r1, sp, #8
90004566:	4816      	ldr	r0, [pc, #88]	@ (900045c0 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004568:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000456a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000456e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004572:	f003 fa69 	bl	90007a48 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004576:	f64f 023f 	movw	r2, #63551	@ 0xf83f
9000457a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000457c:	a902      	add	r1, sp, #8
9000457e:	4811      	ldr	r0, [pc, #68]	@ (900045c4 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004580:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004582:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004586:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000458a:	f003 fa5d 	bl	90007a48 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000458e:	22e0      	movs	r2, #224	@ 0xe0
90004590:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004592:	a902      	add	r1, sp, #8
90004594:	480c      	ldr	r0, [pc, #48]	@ (900045c8 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004596:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004598:	e9cd 6704 	strd	r6, r7, [sp, #16]
9000459c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900045a0:	f003 fa52 	bl	90007a48 <HAL_GPIO_Init>
}
900045a4:	b038      	add	sp, #224	@ 0xe0
900045a6:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
900045a8:	f7ff fd72 	bl	90004090 <Error_Handler>
900045ac:	e7af      	b.n	9000450e <HAL_SDRAM_MspInit+0x3a>
900045ae:	bf00      	nop
900045b0:	24007acc 	.word	0x24007acc
900045b4:	58024400 	.word	0x58024400
900045b8:	58021000 	.word	0x58021000
900045bc:	58021800 	.word	0x58021800
900045c0:	58020c00 	.word	0x58020c00
900045c4:	58021400 	.word	0x58021400
900045c8:	58021c00 	.word	0x58021c00

900045cc <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900045cc:	4b13      	ldr	r3, [pc, #76]	@ (9000461c <HAL_SDRAM_MspDeInit+0x50>)
900045ce:	681a      	ldr	r2, [r3, #0]
900045d0:	b102      	cbz	r2, 900045d4 <HAL_SDRAM_MspDeInit+0x8>
900045d2:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900045d4:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900045d6:	4a12      	ldr	r2, [pc, #72]	@ (90004620 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900045d8:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900045da:	f64f 7183 	movw	r1, #65411	@ 0xff83
900045de:	4811      	ldr	r0, [pc, #68]	@ (90004624 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
900045e0:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900045e2:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
900045e6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900045ea:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900045ee:	f003 fb6d 	bl	90007ccc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900045f2:	f248 1133 	movw	r1, #33075	@ 0x8133
900045f6:	480c      	ldr	r0, [pc, #48]	@ (90004628 <HAL_SDRAM_MspDeInit+0x5c>)
900045f8:	f003 fb68 	bl	90007ccc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900045fc:	f24c 7103 	movw	r1, #50947	@ 0xc703
90004600:	480a      	ldr	r0, [pc, #40]	@ (9000462c <HAL_SDRAM_MspDeInit+0x60>)
90004602:	f003 fb63 	bl	90007ccc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004606:	f64f 013f 	movw	r1, #63551	@ 0xf83f
9000460a:	4809      	ldr	r0, [pc, #36]	@ (90004630 <HAL_SDRAM_MspDeInit+0x64>)
9000460c:	f003 fb5e 	bl	90007ccc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004610:	21e0      	movs	r1, #224	@ 0xe0
90004612:	4808      	ldr	r0, [pc, #32]	@ (90004634 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90004614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004618:	f003 bb58 	b.w	90007ccc <HAL_GPIO_DeInit>
9000461c:	24007ac8 	.word	0x24007ac8
90004620:	58024400 	.word	0x58024400
90004624:	58021000 	.word	0x58021000
90004628:	58021800 	.word	0x58021800
9000462c:	58020c00 	.word	0x58020c00
90004630:	58021400 	.word	0x58021400
90004634:	58021c00 	.word	0x58021c00

90004638 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90004638:	280f      	cmp	r0, #15
9000463a:	d901      	bls.n	90004640 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
9000463c:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
9000463e:	4770      	bx	lr
{
90004640:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004642:	4601      	mov	r1, r0
{
90004644:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004646:	2200      	movs	r2, #0
90004648:	4604      	mov	r4, r0
9000464a:	2036      	movs	r0, #54	@ 0x36
9000464c:	f002 ff9a 	bl	90007584 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90004650:	2036      	movs	r0, #54	@ 0x36
90004652:	f002 ffd3 	bl	900075fc <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90004656:	4b1b      	ldr	r3, [pc, #108]	@ (900046c4 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
90004658:	4a1b      	ldr	r2, [pc, #108]	@ (900046c8 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000465a:	4669      	mov	r1, sp
9000465c:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
9000465e:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004660:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004664:	f042 0210 	orr.w	r2, r2, #16
90004668:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
9000466c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004670:	f003 0310 	and.w	r3, r3, #16
90004674:	9301      	str	r3, [sp, #4]
90004676:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004678:	f006 ff32 	bl	9000b4e0 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
9000467c:	9b07      	ldr	r3, [sp, #28]
9000467e:	b9c3      	cbnz	r3, 900046b2 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004680:	f006 fe9e 	bl	9000b3c0 <HAL_RCC_GetPCLK1Freq>
90004684:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004686:	4911      	ldr	r1, [pc, #68]	@ (900046cc <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004688:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000468a:	4c11      	ldr	r4, [pc, #68]	@ (900046d0 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000468c:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004690:	4d10      	ldr	r5, [pc, #64]	@ (900046d4 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004692:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004696:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004698:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000469a:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000469c:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000469e:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900046a0:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
900046a4:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900046a6:	f008 f8cd 	bl	9000c844 <HAL_TIM_Base_Init>
900046aa:	b130      	cbz	r0, 900046ba <HAL_InitTick+0x82>
    return HAL_ERROR;
900046ac:	2001      	movs	r0, #1
}
900046ae:	b00b      	add	sp, #44	@ 0x2c
900046b0:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900046b2:	f006 fe85 	bl	9000b3c0 <HAL_RCC_GetPCLK1Freq>
900046b6:	0043      	lsls	r3, r0, #1
900046b8:	e7e5      	b.n	90004686 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
900046ba:	4620      	mov	r0, r4
900046bc:	f008 f9b6 	bl	9000ca2c <HAL_TIM_Base_Start_IT>
900046c0:	e7f5      	b.n	900046ae <HAL_InitTick+0x76>
900046c2:	bf00      	nop
900046c4:	58024400 	.word	0x58024400
900046c8:	24000090 	.word	0x24000090
900046cc:	431bde83 	.word	0x431bde83
900046d0:	24007ad0 	.word	0x24007ad0
900046d4:	40001000 	.word	0x40001000

900046d8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900046d8:	4770      	bx	lr
900046da:	bf00      	nop

900046dc <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900046dc:	e7fe      	b.n	900046dc <HardFault_Handler>
900046de:	bf00      	nop

900046e0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900046e0:	e7fe      	b.n	900046e0 <MemManage_Handler>
900046e2:	bf00      	nop

900046e4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900046e4:	e7fe      	b.n	900046e4 <BusFault_Handler>
900046e6:	bf00      	nop

900046e8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900046e8:	e7fe      	b.n	900046e8 <UsageFault_Handler>
900046ea:	bf00      	nop

900046ec <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
900046ec:	4770      	bx	lr
900046ee:	bf00      	nop

900046f0 <TIM5_IRQHandler>:
void TIM5_IRQHandler(void)
{
  /* USER CODE BEGIN TIM5_IRQn 0 */

  /* USER CODE END TIM5_IRQn 0 */
  HAL_TIM_IRQHandler(&htim5);
900046f0:	4801      	ldr	r0, [pc, #4]	@ (900046f8 <TIM5_IRQHandler+0x8>)
900046f2:	f008 babb 	b.w	9000cc6c <HAL_TIM_IRQHandler>
900046f6:	bf00      	nop
900046f8:	2400772c 	.word	0x2400772c

900046fc <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900046fc:	4801      	ldr	r0, [pc, #4]	@ (90004704 <TIM6_DAC_IRQHandler+0x8>)
900046fe:	f008 bab5 	b.w	9000cc6c <HAL_TIM_IRQHandler>
90004702:	bf00      	nop
90004704:	24007ad0 	.word	0x24007ad0

90004708 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90004708:	4801      	ldr	r0, [pc, #4]	@ (90004710 <LTDC_IRQHandler+0x8>)
9000470a:	f005 bd79 	b.w	9000a200 <HAL_LTDC_IRQHandler>
9000470e:	bf00      	nop
90004710:	2400784c 	.word	0x2400784c

90004714 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90004714:	4801      	ldr	r0, [pc, #4]	@ (9000471c <DMA2D_IRQHandler+0x8>)
90004716:	f003 b899 	b.w	9000784c <HAL_DMA2D_IRQHandler>
9000471a:	bf00      	nop
9000471c:	24007a24 	.word	0x24007a24

90004720 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004720:	4801      	ldr	r0, [pc, #4]	@ (90004728 <JPEG_IRQHandler+0x8>)
90004722:	f005 bc5b 	b.w	90009fdc <HAL_JPEG_IRQHandler>
90004726:	bf00      	nop
90004728:	240079cc 	.word	0x240079cc

9000472c <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
9000472c:	4804      	ldr	r0, [pc, #16]	@ (90004740 <MDMA_IRQHandler+0x14>)
{
9000472e:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004730:	f006 f848 	bl	9000a7c4 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004734:	4803      	ldr	r0, [pc, #12]	@ (90004744 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
90004736:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000473a:	f006 b843 	b.w	9000a7c4 <HAL_MDMA_IRQHandler>
9000473e:	bf00      	nop
90004740:	240078f4 	.word	0x240078f4
90004744:	24007960 	.word	0x24007960

90004748 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004748:	2001      	movs	r0, #1
9000474a:	4770      	bx	lr

9000474c <_kill>:

int _kill(int pid, int sig)
{
9000474c:	b508      	push	{r3, lr}
	errno = EINVAL;
9000474e:	f024 fb37 	bl	90028dc0 <__errno>
90004752:	2216      	movs	r2, #22
90004754:	4603      	mov	r3, r0
	return -1;
}
90004756:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000475a:	601a      	str	r2, [r3, #0]
}
9000475c:	bd08      	pop	{r3, pc}
9000475e:	bf00      	nop

90004760 <_exit>:

void _exit (int status)
{
90004760:	b508      	push	{r3, lr}
	errno = EINVAL;
90004762:	f024 fb2d 	bl	90028dc0 <__errno>
90004766:	2316      	movs	r3, #22
90004768:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000476a:	e7fe      	b.n	9000476a <_exit+0xa>

9000476c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
9000476c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000476e:	1e16      	subs	r6, r2, #0
90004770:	dd07      	ble.n	90004782 <_read+0x16>
90004772:	460c      	mov	r4, r1
90004774:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90004776:	f3af 8000 	nop.w
9000477a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000477e:	42a5      	cmp	r5, r4
90004780:	d1f9      	bne.n	90004776 <_read+0xa>
	}

return len;
}
90004782:	4630      	mov	r0, r6
90004784:	bd70      	pop	{r4, r5, r6, pc}
90004786:	bf00      	nop

90004788 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90004788:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000478a:	1e16      	subs	r6, r2, #0
9000478c:	dd07      	ble.n	9000479e <_write+0x16>
9000478e:	460c      	mov	r4, r1
90004790:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004792:	f814 0b01 	ldrb.w	r0, [r4], #1
90004796:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000479a:	42ac      	cmp	r4, r5
9000479c:	d1f9      	bne.n	90004792 <_write+0xa>
	}
	return len;
}
9000479e:	4630      	mov	r0, r6
900047a0:	bd70      	pop	{r4, r5, r6, pc}
900047a2:	bf00      	nop

900047a4 <_close>:

int _close(int file)
{
	return -1;
}
900047a4:	f04f 30ff 	mov.w	r0, #4294967295
900047a8:	4770      	bx	lr
900047aa:	bf00      	nop

900047ac <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
900047ac:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
900047b0:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
900047b2:	604b      	str	r3, [r1, #4]
}
900047b4:	4770      	bx	lr
900047b6:	bf00      	nop

900047b8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
900047b8:	2001      	movs	r0, #1
900047ba:	4770      	bx	lr

900047bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
900047bc:	2000      	movs	r0, #0
900047be:	4770      	bx	lr

900047c0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
900047c0:	4a0c      	ldr	r2, [pc, #48]	@ (900047f4 <_sbrk+0x34>)
{
900047c2:	b508      	push	{r3, lr}
900047c4:	4603      	mov	r3, r0
	if (heap_end == 0)
900047c6:	6810      	ldr	r0, [r2, #0]
900047c8:	b128      	cbz	r0, 900047d6 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
900047ca:	4403      	add	r3, r0
900047cc:	4669      	mov	r1, sp
900047ce:	428b      	cmp	r3, r1
900047d0:	d808      	bhi.n	900047e4 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
900047d2:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
900047d4:	bd08      	pop	{r3, pc}
		heap_end = &end;
900047d6:	4908      	ldr	r1, [pc, #32]	@ (900047f8 <_sbrk+0x38>)
900047d8:	4608      	mov	r0, r1
900047da:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
900047dc:	4669      	mov	r1, sp
900047de:	4403      	add	r3, r0
900047e0:	428b      	cmp	r3, r1
900047e2:	d9f6      	bls.n	900047d2 <_sbrk+0x12>
		errno = ENOMEM;
900047e4:	f024 faec 	bl	90028dc0 <__errno>
900047e8:	220c      	movs	r2, #12
900047ea:	4603      	mov	r3, r0
		return (caddr_t) -1;
900047ec:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
900047f0:	601a      	str	r2, [r3, #0]
}
900047f2:	bd08      	pop	{r3, pc}
900047f4:	24007b1c 	.word	0x24007b1c
900047f8:	24022920 	.word	0x24022920

900047fc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900047fc:	4770      	bx	lr
900047fe:	bf00      	nop

90004800 <_ZN23ApplicationFontProviderD0Ev>:
90004800:	b510      	push	{r4, lr}
90004802:	4604      	mov	r4, r0
90004804:	2104      	movs	r1, #4
90004806:	f023 fc13 	bl	90028030 <_ZdlPvj>
9000480a:	4620      	mov	r0, r4
9000480c:	bd10      	pop	{r4, pc}
9000480e:	bf00      	nop

90004810 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90004810:	2901      	cmp	r1, #1
{
90004812:	b508      	push	{r3, lr}
    switch (typography)
90004814:	d004      	beq.n	90004820 <_ZN23ApplicationFontProvider7getFontEt+0x10>
90004816:	2902      	cmp	r1, #2
90004818:	d00a      	beq.n	90004830 <_ZN23ApplicationFontProvider7getFontEt+0x20>
9000481a:	b129      	cbz	r1, 90004828 <_ZN23ApplicationFontProvider7getFontEt+0x18>
9000481c:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
9000481e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004820:	f001 fbf0 	bl	90006004 <_ZN17TypedTextDatabase8getFontsEv>
90004824:	6840      	ldr	r0, [r0, #4]
}
90004826:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90004828:	f001 fbec 	bl	90006004 <_ZN17TypedTextDatabase8getFontsEv>
9000482c:	6800      	ldr	r0, [r0, #0]
}
9000482e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004830:	f001 fbe8 	bl	90006004 <_ZN17TypedTextDatabase8getFontsEv>
90004834:	6880      	ldr	r0, [r0, #8]
}
90004836:	bd08      	pop	{r3, pc}

90004838 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004838:	4800      	ldr	r0, [pc, #0]	@ (9000483c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
9000483a:	4770      	bx	lr
9000483c:	9002c930 	.word	0x9002c930

90004840 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004840:	2008      	movs	r0, #8
90004842:	4770      	bx	lr

90004844 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90004844:	b169      	cbz	r1, 90004862 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004846:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004848:	b530      	push	{r4, r5, lr}
9000484a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
9000484c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000484e:	6895      	ldr	r5, [r2, #8]
90004850:	f10d 0303 	add.w	r3, sp, #3
90004854:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90004856:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004858:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000485c:	47a8      	blx	r5
        return glyph;
    }
9000485e:	b003      	add	sp, #12
90004860:	bd30      	pop	{r4, r5, pc}
            return 0;
90004862:	4608      	mov	r0, r1
    }
90004864:	4770      	bx	lr
90004866:	bf00      	nop

90004868 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004868:	89c0      	ldrh	r0, [r0, #14]
9000486a:	4770      	bx	lr

9000486c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
9000486c:	8a00      	ldrh	r0, [r0, #16]
9000486e:	4770      	bx	lr

90004870 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004870:	88c0      	ldrh	r0, [r0, #6]
90004872:	4770      	bx	lr

90004874 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90004874:	8880      	ldrh	r0, [r0, #4]
90004876:	4770      	bx	lr

90004878 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004878:	7a80      	ldrb	r0, [r0, #10]
    }
9000487a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
9000487e:	4770      	bx	lr

90004880 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004880:	7a80      	ldrb	r0, [r0, #10]
    }
90004882:	09c0      	lsrs	r0, r0, #7
90004884:	4770      	bx	lr
90004886:	bf00      	nop

90004888 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004888:	2000      	movs	r0, #0
9000488a:	4770      	bx	lr

9000488c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
9000488c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90004894 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004890:	4770      	bx	lr
90004892:	bf00      	nop
90004894:	00000000 	.word	0x00000000

90004898 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90004898:	4770      	bx	lr
9000489a:	bf00      	nop

9000489c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
9000489c:	b510      	push	{r4, lr}
9000489e:	4604      	mov	r4, r0
    }
900048a0:	2108      	movs	r1, #8
900048a2:	f023 fbc5 	bl	90028030 <_ZdlPvj>
900048a6:	4620      	mov	r0, r4
900048a8:	bd10      	pop	{r4, pc}
900048aa:	bf00      	nop

900048ac <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900048ac:	4770      	bx	lr
900048ae:	bf00      	nop

900048b0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900048b0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
900048b4:	6808      	ldr	r0, [r1, #0]
900048b6:	6849      	ldr	r1, [r1, #4]
900048b8:	c303      	stmia	r3!, {r0, r1}
    }
900048ba:	4770      	bx	lr

900048bc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
900048bc:	4770      	bx	lr
900048be:	bf00      	nop

900048c0 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
900048c0:	4770      	bx	lr
900048c2:	bf00      	nop

900048c4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
900048c4:	6041      	str	r1, [r0, #4]
    }
900048c6:	4770      	bx	lr

900048c8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
900048c8:	4770      	bx	lr
900048ca:	bf00      	nop

900048cc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900048cc:	4905      	ldr	r1, [pc, #20]	@ (900048e4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
900048ce:	2200      	movs	r2, #0
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
900048d0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900048d4:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900048d8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900048dc:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
900048e0:	4770      	bx	lr
900048e2:	bf00      	nop
900048e4:	90004969 	.word	0x90004969

900048e8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
900048e8:	2301      	movs	r3, #1
900048ea:	7203      	strb	r3, [r0, #8]
    }
900048ec:	4770      	bx	lr
900048ee:	bf00      	nop

900048f0 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
900048f0:	4770      	bx	lr
900048f2:	bf00      	nop

900048f4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
900048f4:	4770      	bx	lr
900048f6:	bf00      	nop

900048f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
900048f8:	1d01      	adds	r1, r0, #4
900048fa:	c90e      	ldmia	r1, {r1, r2, r3}
900048fc:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004900:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004904:	07db      	lsls	r3, r3, #31
90004906:	d502      	bpl.n	9000490e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004908:	f851 300c 	ldr.w	r3, [r1, ip]
9000490c:	589a      	ldr	r2, [r3, r2]
9000490e:	4710      	bx	r2

90004910 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90004910:	6843      	ldr	r3, [r0, #4]
90004912:	b13b      	cbz	r3, 90004924 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004914:	6883      	ldr	r3, [r0, #8]
90004916:	b10b      	cbz	r3, 9000491c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004918:	2001      	movs	r0, #1
    }
9000491a:	4770      	bx	lr
9000491c:	68c0      	ldr	r0, [r0, #12]
9000491e:	f000 0001 	and.w	r0, r0, #1
90004922:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004924:	4618      	mov	r0, r3
90004926:	4770      	bx	lr

90004928 <_ZN8touchgfx12NoTransitionD0Ev>:
90004928:	b510      	push	{r4, lr}
9000492a:	4604      	mov	r4, r0
9000492c:	210c      	movs	r1, #12
9000492e:	f023 fb7f 	bl	90028030 <_ZdlPvj>
90004932:	4620      	mov	r0, r4
90004934:	bd10      	pop	{r4, pc}
90004936:	bf00      	nop

90004938 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004938:	b510      	push	{r4, lr}
9000493a:	4604      	mov	r4, r0
9000493c:	2110      	movs	r1, #16
9000493e:	f023 fb77 	bl	90028030 <_ZdlPvj>
90004942:	4620      	mov	r0, r4
90004944:	bd10      	pop	{r4, pc}
90004946:	bf00      	nop

90004948 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004948:	b510      	push	{r4, lr}
9000494a:	4604      	mov	r4, r0
9000494c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004950:	f023 fb6e 	bl	90028030 <_ZdlPvj>
90004954:	4620      	mov	r0, r4
90004956:	bd10      	pop	{r4, pc}

90004958 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004958:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
9000495a:	f010 ffa7 	bl	900158ac <_ZN8touchgfx11Application11getInstanceEv>
9000495e:	6803      	ldr	r3, [r0, #0]
    }
90004960:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004964:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004966:	4718      	bx	r3

90004968 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
90004968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
9000496c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004970:	4607      	mov	r7, r0
90004972:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004974:	68b0      	ldr	r0, [r6, #8]
90004976:	6803      	ldr	r3, [r0, #0]
90004978:	6a1b      	ldr	r3, [r3, #32]
9000497a:	4798      	blx	r3
9000497c:	f5b0 6f9c 	cmp.w	r0, #1248	@ 0x4e0
90004980:	f0c0 809c 	bcc.w	90004abc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x154>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004984:	6870      	ldr	r0, [r6, #4]
90004986:	6803      	ldr	r3, [r0, #0]
90004988:	6a1b      	ldr	r3, [r3, #32]
9000498a:	4798      	blx	r3
9000498c:	280f      	cmp	r0, #15
9000498e:	f240 80a1 	bls.w	90004ad4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x16c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004992:	68f0      	ldr	r0, [r6, #12]
90004994:	6803      	ldr	r3, [r0, #0]
90004996:	6a1b      	ldr	r3, [r3, #32]
90004998:	4798      	blx	r3
9000499a:	280b      	cmp	r0, #11
9000499c:	f240 8094 	bls.w	90004ac8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x160>
    if (*currentTrans)
900049a0:	f8df 9160 	ldr.w	r9, [pc, #352]	@ 90004b04 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
900049a4:	f010 ff82 	bl	900158ac <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
900049a8:	3004      	adds	r0, #4
900049aa:	f010 ffa4 	bl	900158f6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900049ae:	f8d9 0000 	ldr.w	r0, [r9]
900049b2:	b130      	cbz	r0, 900049c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
900049b4:	6803      	ldr	r3, [r0, #0]
900049b6:	494a      	ldr	r1, [pc, #296]	@ (90004ae0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x178>)
900049b8:	68da      	ldr	r2, [r3, #12]
900049ba:	428a      	cmp	r2, r1
900049bc:	d177      	bne.n	90004aae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x146>
        (*currentTrans)->~Transition();
900049be:	681b      	ldr	r3, [r3, #0]
900049c0:	4798      	blx	r3
    if (*currentScreen)
900049c2:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90004b08 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1a0>
900049c6:	f8d8 0000 	ldr.w	r0, [r8]
900049ca:	2800      	cmp	r0, #0
900049cc:	d061      	beq.n	90004a92 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
        (*currentScreen)->tearDownScreen();
900049ce:	6803      	ldr	r3, [r0, #0]
900049d0:	695b      	ldr	r3, [r3, #20]
900049d2:	4798      	blx	r3
    if (*currentPresenter)
900049d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900049d8:	2800      	cmp	r0, #0
900049da:	d055      	beq.n	90004a88 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x120>
        (*currentPresenter)->deactivate();
900049dc:	6803      	ldr	r3, [r0, #0]
900049de:	685b      	ldr	r3, [r3, #4]
900049e0:	4798      	blx	r3
    if (*currentScreen)
900049e2:	f8d8 0000 	ldr.w	r0, [r8]
900049e6:	b110      	cbz	r0, 900049ee <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
900049e8:	6803      	ldr	r3, [r0, #0]
900049ea:	681b      	ldr	r3, [r3, #0]
900049ec:	4798      	blx	r3
    if (*currentPresenter)
900049ee:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900049f2:	b110      	cbz	r0, 900049fa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
900049f4:	6803      	ldr	r3, [r0, #0]
900049f6:	689b      	ldr	r3, [r3, #8]
900049f8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900049fa:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
900049fc:	2100      	movs	r1, #0
900049fe:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004a00:	468b      	mov	fp, r1
90004a02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004a04:	4798      	blx	r3
90004a06:	4b37      	ldr	r3, [pc, #220]	@ (90004ae4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x17c>)
90004a08:	4604      	mov	r4, r0
90004a0a:	f8c0 b004 	str.w	fp, [r0, #4]
90004a0e:	f880 b008 	strb.w	fp, [r0, #8]
90004a12:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004a14:	68b0      	ldr	r0, [r6, #8]
90004a16:	6023      	str	r3, [r4, #0]
90004a18:	6803      	ldr	r3, [r0, #0]
90004a1a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004a1c:	4798      	blx	r3
90004a1e:	4605      	mov	r5, r0
90004a20:	f001 fc0e 	bl	90006240 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004a24:	6870      	ldr	r0, [r6, #4]
90004a26:	4659      	mov	r1, fp
90004a28:	6803      	ldr	r3, [r0, #0]
90004a2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004a2c:	4798      	blx	r3
90004a2e:	4606      	mov	r6, r0
90004a30:	4629      	mov	r1, r5
90004a32:	f001 fb81 	bl	90006138 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004a36:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004a38:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004a3c:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004a3e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004a42:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004a46:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004a4a:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90004a4c:	f8c6 a008 	str.w	sl, [r6, #8]
90004a50:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004a52:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004a54:	4798      	blx	r3
    newPresenter->activate();
90004a56:	6833      	ldr	r3, [r6, #0]
90004a58:	4630      	mov	r0, r6
90004a5a:	681b      	ldr	r3, [r3, #0]
90004a5c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004a5e:	4621      	mov	r1, r4
90004a60:	4628      	mov	r0, r5
90004a62:	f012 ff15 	bl	90017890 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004a66:	6823      	ldr	r3, [r4, #0]
90004a68:	491f      	ldr	r1, [pc, #124]	@ (90004ae8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
90004a6a:	691a      	ldr	r2, [r3, #16]
90004a6c:	428a      	cmp	r2, r1
90004a6e:	d11a      	bne.n	90004aa6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13e>
    newTransition->invalidate();
90004a70:	695b      	ldr	r3, [r3, #20]
90004a72:	4a1e      	ldr	r2, [pc, #120]	@ (90004aec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
90004a74:	4293      	cmp	r3, r2
90004a76:	d111      	bne.n	90004a9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>
        Application::getInstance()->invalidate();
90004a78:	f010 ff18 	bl	900158ac <_ZN8touchgfx11Application11getInstanceEv>
90004a7c:	6803      	ldr	r3, [r0, #0]
90004a7e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004a80:	b001      	add	sp, #4
90004a82:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a86:	4718      	bx	r3
    if (*currentScreen)
90004a88:	f8d8 0000 	ldr.w	r0, [r8]
90004a8c:	2800      	cmp	r0, #0
90004a8e:	d1ab      	bne.n	900049e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
90004a90:	e7b3      	b.n	900049fa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004a92:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004a96:	2800      	cmp	r0, #0
90004a98:	d1a0      	bne.n	900049dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
90004a9a:	e7ae      	b.n	900049fa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004a9c:	4620      	mov	r0, r4
90004a9e:	b001      	add	sp, #4
90004aa0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004aa4:	4718      	bx	r3
    newTransition->init();
90004aa6:	4620      	mov	r0, r4
90004aa8:	4790      	blx	r2
    newTransition->invalidate();
90004aaa:	6823      	ldr	r3, [r4, #0]
90004aac:	e7e0      	b.n	90004a70 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x108>
        (*currentTrans)->tearDown();
90004aae:	4790      	blx	r2
    if (*currentTrans)
90004ab0:	f8d9 0000 	ldr.w	r0, [r9]
90004ab4:	2800      	cmp	r0, #0
90004ab6:	d084      	beq.n	900049c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004ab8:	6803      	ldr	r3, [r0, #0]
90004aba:	e780      	b.n	900049be <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004abc:	4b0c      	ldr	r3, [pc, #48]	@ (90004af0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x188>)
90004abe:	21a3      	movs	r1, #163	@ 0xa3
90004ac0:	4a0c      	ldr	r2, [pc, #48]	@ (90004af4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
90004ac2:	480d      	ldr	r0, [pc, #52]	@ (90004af8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004ac4:	f023 fe2c 	bl	90028720 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004ac8:	4b0c      	ldr	r3, [pc, #48]	@ (90004afc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>)
90004aca:	21a5      	movs	r1, #165	@ 0xa5
90004acc:	4a09      	ldr	r2, [pc, #36]	@ (90004af4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
90004ace:	480a      	ldr	r0, [pc, #40]	@ (90004af8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004ad0:	f023 fe26 	bl	90028720 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004ad4:	4b0a      	ldr	r3, [pc, #40]	@ (90004b00 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x198>)
90004ad6:	21a4      	movs	r1, #164	@ 0xa4
90004ad8:	4a06      	ldr	r2, [pc, #24]	@ (90004af4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
90004ada:	4807      	ldr	r0, [pc, #28]	@ (90004af8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004adc:	f023 fe20 	bl	90028720 <__assert_func>
90004ae0:	900048bd 	.word	0x900048bd
90004ae4:	9002cd48 	.word	0x9002cd48
90004ae8:	900048c1 	.word	0x900048c1
90004aec:	90004959 	.word	0x90004959
90004af0:	9002c9e0 	.word	0x9002c9e0
90004af4:	9002ca70 	.word	0x9002ca70
90004af8:	9002cb44 	.word	0x9002cb44
90004afc:	9002cc30 	.word	0x9002cc30
90004b00:	9002cb8c 	.word	0x9002cb8c
90004b04:	24021c24 	.word	0x24021c24
90004b08:	24021c20 	.word	0x24021c20

90004b0c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
90004b0c:	b570      	push	{r4, r5, r6, lr}
90004b0e:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004b10:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90004b14:	b1b8      	cbz	r0, 90004b46 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004b16:	6802      	ldr	r2, [r0, #0]
90004b18:	4916      	ldr	r1, [pc, #88]	@ (90004b74 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90004b1a:	68d3      	ldr	r3, [r2, #12]
90004b1c:	428b      	cmp	r3, r1
90004b1e:	d11f      	bne.n	90004b60 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90004b20:	6843      	ldr	r3, [r0, #4]
90004b22:	b183      	cbz	r3, 90004b46 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004b24:	6881      	ldr	r1, [r0, #8]
90004b26:	b179      	cbz	r1, 90004b48 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
90004b28:	6892      	ldr	r2, [r2, #8]
90004b2a:	4b13      	ldr	r3, [pc, #76]	@ (90004b78 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004b2c:	429a      	cmp	r2, r3
90004b2e:	d11e      	bne.n	90004b6e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004b30:	68c2      	ldr	r2, [r0, #12]
90004b32:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90004b36:	eb03 0062 	add.w	r0, r3, r2, asr #1
90004b3a:	07d3      	lsls	r3, r2, #31
90004b3c:	d40d      	bmi.n	90004b5a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90004b3e:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90004b40:	2300      	movs	r3, #0
90004b42:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90004b46:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90004b48:	68c5      	ldr	r5, [r0, #12]
90004b4a:	07ee      	lsls	r6, r5, #31
90004b4c:	d5fb      	bpl.n	90004b46 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004b4e:	6892      	ldr	r2, [r2, #8]
90004b50:	4e09      	ldr	r6, [pc, #36]	@ (90004b78 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004b52:	42b2      	cmp	r2, r6
90004b54:	d10b      	bne.n	90004b6e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004b56:	eb03 0065 	add.w	r0, r3, r5, asr #1
90004b5a:	6803      	ldr	r3, [r0, #0]
90004b5c:	5859      	ldr	r1, [r3, r1]
90004b5e:	e7ee      	b.n	90004b3e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004b60:	4798      	blx	r3
90004b62:	2800      	cmp	r0, #0
90004b64:	d0ef      	beq.n	90004b46 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004b66:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90004b6a:	6802      	ldr	r2, [r0, #0]
90004b6c:	e7dc      	b.n	90004b28 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90004b6e:	4790      	blx	r2
90004b70:	e7e6      	b.n	90004b40 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90004b72:	bf00      	nop
90004b74:	90004911 	.word	0x90004911
90004b78:	900048f9 	.word	0x900048f9

90004b7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004b7c:	b570      	push	{r4, r5, r6, lr}
90004b7e:	4604      	mov	r4, r0
90004b80:	4615      	mov	r5, r2
90004b82:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004b84:	f010 ff58 	bl	90015a38 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004b88:	4a22      	ldr	r2, [pc, #136]	@ (90004c14 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90004b8a:	2300      	movs	r3, #0
      frontendHeap(heap),
90004b8c:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90004b90:	6014      	str	r4, [r2, #0]
        return instance;
90004b92:	4d21      	ldr	r5, [pc, #132]	@ (90004c18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90004b94:	4a21      	ldr	r2, [pc, #132]	@ (90004c1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90004b96:	6828      	ldr	r0, [r5, #0]
90004b98:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90004b9a:	4a21      	ldr	r2, [pc, #132]	@ (90004c20 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90004b9c:	4921      	ldr	r1, [pc, #132]	@ (90004c24 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
90004b9e:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90004ba2:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90004ba6:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90004baa:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
90004bae:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004bb2:	6802      	ldr	r2, [r0, #0]
90004bb4:	6892      	ldr	r2, [r2, #8]
90004bb6:	428a      	cmp	r2, r1
90004bb8:	d129      	bne.n	90004c0e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90004bba:	f44f 7380 	mov.w	r3, #256	@ 0x100
90004bbe:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
90004bc2:	2000      	movs	r0, #0
90004bc4:	f001 f9d0 	bl	90005f68 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004bc8:	682b      	ldr	r3, [r5, #0]
90004bca:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004bce:	b1e2      	cbz	r2, 90004c0a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
90004bd0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004bd2:	b1d0      	cbz	r0, 90004c0a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004bd4:	f01b f925 	bl	9001fe22 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90004bd8:	682b      	ldr	r3, [r5, #0]
90004bda:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004bde:	b192      	cbz	r2, 90004c06 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
90004be0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004be2:	b180      	cbz	r0, 90004c06 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004be4:	f01b f998 	bl	9001ff18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90004be8:	682b      	ldr	r3, [r5, #0]
90004bea:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004bee:	b12a      	cbz	r2, 90004bfc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
90004bf0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004bf2:	b118      	cbz	r0, 90004bfc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004bf4:	f01b f99c 	bl	9001ff30 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004bf8:	4620      	mov	r0, r4
90004bfa:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90004bfc:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004bfe:	f01b f997 	bl	9001ff30 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004c02:	4620      	mov	r0, r4
90004c04:	bd70      	pop	{r4, r5, r6, pc}
90004c06:	6898      	ldr	r0, [r3, #8]
90004c08:	e7ec      	b.n	90004be4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90004c0a:	6898      	ldr	r0, [r3, #8]
90004c0c:	e7e2      	b.n	90004bd4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004c0e:	4619      	mov	r1, r3
90004c10:	4790      	blx	r2
90004c12:	e7d6      	b.n	90004bc2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90004c14:	24021c30 	.word	0x24021c30
90004c18:	24021bdc 	.word	0x24021bdc
90004c1c:	9002ccf4 	.word	0x9002ccf4
90004c20:	9002ccdc 	.word	0x9002ccdc
90004c24:	90000d8d 	.word	0x90000d8d

90004c28 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004c28:	4905      	ldr	r1, [pc, #20]	@ (90004c40 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x18>)
90004c2a:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004c2c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004c30:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004c34:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004c38:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004c3c:	4770      	bx	lr
90004c3e:	bf00      	nop
90004c40:	90004969 	.word	0x90004969

90004c44 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004c44:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90004c46:	4770      	bx	lr

90004c48 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004c48:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004c4a:	4770      	bx	lr

90004c4c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004c4c:	4770      	bx	lr
90004c4e:	bf00      	nop

90004c50 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004c50:	888b      	ldrh	r3, [r1, #4]
90004c52:	69c0      	ldr	r0, [r0, #28]
90004c54:	0adb      	lsrs	r3, r3, #11
90004c56:	680a      	ldr	r2, [r1, #0]
90004c58:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004c5c:	4410      	add	r0, r2
90004c5e:	4770      	bx	lr

90004c60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004c60:	b1fa      	cbz	r2, 90004ca2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90004c62:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004c64:	7b14      	ldrb	r4, [r2, #12]
90004c66:	b1d4      	cbz	r4, 90004c9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004c68:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004c6c:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004c70:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004c74:	6a03      	ldr	r3, [r0, #32]
90004c76:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90004c7a:	ea4e 0202 	orr.w	r2, lr, r2
90004c7e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004c82:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90004c86:	e004      	b.n	90004c92 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90004c88:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004c8c:	d807      	bhi.n	90004c9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004c8e:	4283      	cmp	r3, r0
90004c90:	d005      	beq.n	90004c9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90004c92:	881a      	ldrh	r2, [r3, #0]
90004c94:	428a      	cmp	r2, r1
90004c96:	d1f7      	bne.n	90004c88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90004c98:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90004c9c:	bd10      	pop	{r4, pc}
        return 0;
90004c9e:	2000      	movs	r0, #0
}
90004ca0:	bd10      	pop	{r4, pc}
        return 0;
90004ca2:	4610      	mov	r0, r2
}
90004ca4:	4770      	bx	lr
90004ca6:	bf00      	nop

90004ca8 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004ca8:	b510      	push	{r4, lr}
90004caa:	4604      	mov	r4, r0
90004cac:	212c      	movs	r1, #44	@ 0x2c
90004cae:	f023 f9bf 	bl	90028030 <_ZdlPvj>
90004cb2:	4620      	mov	r0, r4
90004cb4:	bd10      	pop	{r4, pc}
90004cb6:	bf00      	nop

90004cb8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cb8:	b530      	push	{r4, r5, lr}
90004cba:	b08b      	sub	sp, #44	@ 0x2c
90004cbc:	4604      	mov	r4, r0
90004cbe:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90004cc2:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cc4:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90004cc8:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cca:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
90004cce:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cd0:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90004cd4:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cd6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
90004cda:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cdc:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90004ce0:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004ce2:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90004ce6:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004ce8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90004cec:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cee:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90004cf2:	9508      	str	r5, [sp, #32]
90004cf4:	f012 fa24 	bl	90017140 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004cf8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90004cfa:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90004cfc:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90004cfe:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90004d00:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004d02:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90004d04:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90004d06:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90004d08:	62a3      	str	r3, [r4, #40]	@ 0x28
90004d0a:	4b02      	ldr	r3, [pc, #8]	@ (90004d14 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90004d0c:	6023      	str	r3, [r4, #0]
}
90004d0e:	b00b      	add	sp, #44	@ 0x2c
90004d10:	bd30      	pop	{r4, r5, pc}
90004d12:	bf00      	nop
90004d14:	9002cd6c 	.word	0x9002cd6c

90004d18 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004d18:	4770      	bx	lr
90004d1a:	bf00      	nop

90004d1c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004d1c:	4770      	bx	lr
90004d1e:	bf00      	nop

90004d20 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004d20:	4770      	bx	lr
90004d22:	bf00      	nop

90004d24 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004d24:	4770      	bx	lr
90004d26:	bf00      	nop

90004d28 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004d28:	b530      	push	{r4, r5, lr}
90004d2a:	b085      	sub	sp, #20
90004d2c:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90004d2e:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004d30:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d32:	466d      	mov	r5, sp
90004d34:	4601      	mov	r1, r0
        rect.width = width;
90004d36:	8102      	strh	r2, [r0, #8]
90004d38:	343c      	adds	r4, #60	@ 0x3c
90004d3a:	4628      	mov	r0, r5
90004d3c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90004d40:	4798      	blx	r3
90004d42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d46:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d4a:	b005      	add	sp, #20
90004d4c:	bd30      	pop	{r4, r5, pc}
90004d4e:	bf00      	nop

90004d50 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004d50:	b530      	push	{r4, r5, lr}
90004d52:	b085      	sub	sp, #20
90004d54:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004d56:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004d58:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d5a:	466d      	mov	r5, sp
90004d5c:	4601      	mov	r1, r0
        rect.height = height;
90004d5e:	8142      	strh	r2, [r0, #10]
90004d60:	343c      	adds	r4, #60	@ 0x3c
90004d62:	4628      	mov	r0, r5
90004d64:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90004d68:	4798      	blx	r3
90004d6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d6e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d72:	b005      	add	sp, #20
90004d74:	bd30      	pop	{r4, r5, pc}
90004d76:	bf00      	nop

90004d78 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90004d78:	2200      	movs	r2, #0
90004d7a:	6002      	str	r2, [r0, #0]
90004d7c:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90004d7e:	4770      	bx	lr

90004d80 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004d80:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
90004d84:	4770      	bx	lr
90004d86:	bf00      	nop

90004d88 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004d88:	2000      	movs	r0, #0
90004d8a:	4770      	bx	lr

90004d8c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90004d8c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90004d90:	b112      	cbz	r2, 90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90004d92:	6803      	ldr	r3, [r0, #0]
90004d94:	695b      	ldr	r3, [r3, #20]
90004d96:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004d98:	4770      	bx	lr
90004d9a:	bf00      	nop

90004d9c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004d9c:	2200      	movs	r2, #0
90004d9e:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90004da2:	6082      	str	r2, [r0, #8]
90004da4:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90004da8:	4770      	bx	lr
90004daa:	bf00      	nop

90004dac <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90004dac:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90004dae:	4770      	bx	lr

90004db0 <_ZN15Screen1ViewBase5playCEv>:
     * Virtual Action Handlers
     */
    virtual void playC()
    {
        // Override and implement this function in Screen1
    }
90004db0:	4770      	bx	lr
90004db2:	bf00      	nop

90004db4 <_ZN15Screen1ViewBase7playCISEv>:
    virtual void playCIS()
    {
        // Override and implement this function in Screen1
    }
90004db4:	4770      	bx	lr
90004db6:	bf00      	nop

90004db8 <_ZN15Screen1ViewBase5playDEv>:
    virtual void playD()
    {
        // Override and implement this function in Screen1
    }
90004db8:	4770      	bx	lr
90004dba:	bf00      	nop

90004dbc <_ZN15Screen1ViewBase7playDISEv>:
    virtual void playDIS()
    {
        // Override and implement this function in Screen1
    }
90004dbc:	4770      	bx	lr
90004dbe:	bf00      	nop

90004dc0 <_ZN15Screen1ViewBase5playEEv>:
    virtual void playE()
    {
        // Override and implement this function in Screen1
    }
90004dc0:	4770      	bx	lr
90004dc2:	bf00      	nop

90004dc4 <_ZN15Screen1ViewBase5playFEv>:
    virtual void playF()
    {
        // Override and implement this function in Screen1
    }
90004dc4:	4770      	bx	lr
90004dc6:	bf00      	nop

90004dc8 <_ZN15Screen1ViewBase7playFISEv>:
    virtual void playFIS()
    {
        // Override and implement this function in Screen1
    }
90004dc8:	4770      	bx	lr
90004dca:	bf00      	nop

90004dcc <_ZN15Screen1ViewBase5playGEv>:
    virtual void playG()
    {
        // Override and implement this function in Screen1
    }
90004dcc:	4770      	bx	lr
90004dce:	bf00      	nop

90004dd0 <_ZN15Screen1ViewBase7playGISEv>:
    virtual void playGIS()
    {
        // Override and implement this function in Screen1
    }
90004dd0:	4770      	bx	lr
90004dd2:	bf00      	nop

90004dd4 <_ZN15Screen1ViewBase5playAEv>:
    virtual void playA()
    {
        // Override and implement this function in Screen1
    }
90004dd4:	4770      	bx	lr
90004dd6:	bf00      	nop

90004dd8 <_ZN15Screen1ViewBase7playAISEv>:
    virtual void playAIS()
    {
        // Override and implement this function in Screen1
    }
90004dd8:	4770      	bx	lr
90004dda:	bf00      	nop

90004ddc <_ZN15Screen1ViewBase5playHEv>:
    virtual void playH()
    {
        // Override and implement this function in Screen1
    }
90004ddc:	4770      	bx	lr
90004dde:	bf00      	nop

90004de0 <_ZN15Screen1ViewBase8playNoneEv>:
    virtual void playNone()
    {
        // Override and implement this function in Screen1
    }
90004de0:	4770      	bx	lr
90004de2:	bf00      	nop

90004de4 <_ZN15Screen1ViewBase12functionLEFTEv>:
    virtual void functionLEFT()
    {
        // Override and implement this function in Screen1
    }
90004de4:	4770      	bx	lr
90004de6:	bf00      	nop

90004de8 <_ZN15Screen1ViewBase13functionRIGHTEv>:
    virtual void functionRIGHT()
    {
        // Override and implement this function in Screen1
    }
90004de8:	4770      	bx	lr
90004dea:	bf00      	nop

90004dec <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
90004dec:	4770      	bx	lr
90004dee:	bf00      	nop

90004df0 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
90004df0:	4770      	bx	lr
90004df2:	bf00      	nop

90004df4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004df4:	4770      	bx	lr
90004df6:	bf00      	nop

90004df8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004df8:	4770      	bx	lr
90004dfa:	bf00      	nop

90004dfc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004dfc:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004dfe:	68c3      	ldr	r3, [r0, #12]
90004e00:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90004e04:	f013 0f01 	tst.w	r3, #1
90004e08:	eb04 0063 	add.w	r0, r4, r3, asr #1
90004e0c:	d004      	beq.n	90004e18 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90004e0e:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004e12:	f854 300c 	ldr.w	r3, [r4, ip]
90004e16:	589a      	ldr	r2, [r3, r2]
    }
90004e18:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004e1c:	4710      	bx	r2
90004e1e:	bf00      	nop

90004e20 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004e20:	6843      	ldr	r3, [r0, #4]
90004e22:	b13b      	cbz	r3, 90004e34 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004e24:	6883      	ldr	r3, [r0, #8]
90004e26:	b10b      	cbz	r3, 90004e2c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004e28:	2001      	movs	r0, #1
    }
90004e2a:	4770      	bx	lr
90004e2c:	68c0      	ldr	r0, [r0, #12]
90004e2e:	f000 0001 	and.w	r0, r0, #1
90004e32:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004e34:	4618      	mov	r0, r3
90004e36:	4770      	bx	lr

90004e38 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004e38:	b510      	push	{r4, lr}
90004e3a:	4604      	mov	r4, r0
90004e3c:	214c      	movs	r1, #76	@ 0x4c
90004e3e:	f023 f8f7 	bl	90028030 <_ZdlPvj>
90004e42:	4620      	mov	r0, r4
90004e44:	bd10      	pop	{r4, pc}
90004e46:	bf00      	nop

90004e48 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004e48:	b510      	push	{r4, lr}
90004e4a:	4604      	mov	r4, r0
90004e4c:	2110      	movs	r1, #16
90004e4e:	f023 f8ef 	bl	90028030 <_ZdlPvj>
90004e52:	4620      	mov	r0, r4
90004e54:	bd10      	pop	{r4, pc}
90004e56:	bf00      	nop

90004e58 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
90004e58:	b510      	push	{r4, lr}
90004e5a:	4604      	mov	r4, r0
}
90004e5c:	f44f 619c 	mov.w	r1, #1248	@ 0x4e0
90004e60:	f023 f8e6 	bl	90028030 <_ZdlPvj>
90004e64:	4620      	mov	r0, r4
90004e66:	bd10      	pop	{r4, pc}

90004e68 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e68:	4b1b      	ldr	r3, [pc, #108]	@ (90004ed8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e6a:	6802      	ldr	r2, [r0, #0]
90004e6c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004e6e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e70:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90004e72:	b323      	cbz	r3, 90004ebe <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004e74:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004e76:	4919      	ldr	r1, [pc, #100]	@ (90004edc <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004e78:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90004e7a:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004e7c:	8809      	ldrh	r1, [r1, #0]
90004e7e:	4291      	cmp	r1, r2
90004e80:	d923      	bls.n	90004eca <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004e82:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004e86:	4b16      	ldr	r3, [pc, #88]	@ (90004ee0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004e88:	681b      	ldr	r3, [r3, #0]
90004e8a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004e8e:	4a15      	ldr	r2, [pc, #84]	@ (90004ee4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004e90:	6803      	ldr	r3, [r0, #0]
90004e92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004e94:	4293      	cmp	r3, r2
90004e96:	d107      	bne.n	90004ea8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004e98:	88c0      	ldrh	r0, [r0, #6]
90004e9a:	4b13      	ldr	r3, [pc, #76]	@ (90004ee8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004e9c:	1a31      	subs	r1, r6, r0
90004e9e:	429d      	cmp	r5, r3
90004ea0:	b209      	sxth	r1, r1
90004ea2:	d107      	bne.n	90004eb4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004ea4:	80e1      	strh	r1, [r4, #6]
    }
90004ea6:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ea8:	4798      	blx	r3
90004eaa:	4b0f      	ldr	r3, [pc, #60]	@ (90004ee8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004eac:	1a31      	subs	r1, r6, r0
90004eae:	429d      	cmp	r5, r3
90004eb0:	b209      	sxth	r1, r1
90004eb2:	d0f7      	beq.n	90004ea4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004eb4:	4620      	mov	r0, r4
90004eb6:	462b      	mov	r3, r5
    }
90004eb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ebc:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004ebe:	4b0b      	ldr	r3, [pc, #44]	@ (90004eec <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004ec0:	216c      	movs	r1, #108	@ 0x6c
90004ec2:	4a0b      	ldr	r2, [pc, #44]	@ (90004ef0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004ec4:	480b      	ldr	r0, [pc, #44]	@ (90004ef4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004ec6:	f023 fc2b 	bl	90028720 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004eca:	4b0b      	ldr	r3, [pc, #44]	@ (90004ef8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004ecc:	216d      	movs	r1, #109	@ 0x6d
90004ece:	4a08      	ldr	r2, [pc, #32]	@ (90004ef0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004ed0:	4808      	ldr	r0, [pc, #32]	@ (90004ef4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004ed2:	f023 fc25 	bl	90028720 <__assert_func>
90004ed6:	bf00      	nop
90004ed8:	24021c34 	.word	0x24021c34
90004edc:	24021c38 	.word	0x24021c38
90004ee0:	24021c3c 	.word	0x24021c3c
90004ee4:	90004871 	.word	0x90004871
90004ee8:	90002e39 	.word	0x90002e39
90004eec:	9002cdcc 	.word	0x9002cdcc
90004ef0:	9002ce10 	.word	0x9002ce10
90004ef4:	9002ce4c 	.word	0x9002ce4c
90004ef8:	9002ce94 	.word	0x9002ce94

90004efc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabelC)
90004efc:	f100 0398 	add.w	r3, r0, #152	@ 0x98
90004f00:	4299      	cmp	r1, r3
{
90004f02:	b570      	push	{r4, r5, r6, lr}
90004f04:	4604      	mov	r4, r0
90004f06:	460d      	mov	r5, r1
    if (&src == &buttonWithLabelC)
90004f08:	f000 80a2 	beq.w	90005050 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x154>
        //Interaction0
        //When buttonWithLabelC clicked call virtual function
        //Call playC
        playC();
    }
    if (&src == &buttonWithLabelCIS)
90004f0c:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
90004f10:	429d      	cmp	r5, r3
90004f12:	f000 8094 	beq.w	9000503e <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x142>
        //Interaction1
        //When buttonWithLabelCIS clicked call virtual function
        //Call playCIS
        playCIS();
    }
    if (&src == &buttonWithLabelD)
90004f16:	f504 7312 	add.w	r3, r4, #584	@ 0x248
90004f1a:	429d      	cmp	r5, r3
90004f1c:	f000 8086 	beq.w	9000502c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x130>
        //Interaction2
        //When buttonWithLabelD clicked call virtual function
        //Call playD
        playD();
    }
    if (&src == &buttonWithLabelDIS)
90004f20:	f504 7394 	add.w	r3, r4, #296	@ 0x128
90004f24:	429d      	cmp	r5, r3
90004f26:	d079      	beq.n	9000501c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x120>
        //Interaction3
        //When buttonWithLabelDIS clicked call virtual function
        //Call playDIS
        playDIS();
    }
    if (&src == &buttonWithLabelE)
90004f28:	f504 7324 	add.w	r3, r4, #656	@ 0x290
90004f2c:	429d      	cmp	r5, r3
90004f2e:	d06d      	beq.n	9000500c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x110>
        //Interaction4
        //When buttonWithLabelE clicked call virtual function
        //Call playE
        playE();
    }
    if (&src == &buttonWithLabelF)
90004f30:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
90004f34:	429d      	cmp	r5, r3
90004f36:	d061      	beq.n	90004ffc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x100>
        //Interaction5
        //When buttonWithLabelF clicked call virtual function
        //Call playF
        playF();
    }
    if (&src == &buttonWithLabelFIS)
90004f38:	f504 73b8 	add.w	r3, r4, #368	@ 0x170
90004f3c:	429d      	cmp	r5, r3
90004f3e:	d055      	beq.n	90004fec <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xf0>
        //Interaction6
        //When buttonWithLabelFIS clicked call virtual function
        //Call playFIS
        playFIS();
    }
    if (&src == &buttonWithLabelG)
90004f40:	f504 7348 	add.w	r3, r4, #800	@ 0x320
90004f44:	429d      	cmp	r5, r3
90004f46:	d049      	beq.n	90004fdc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe0>
        //Interaction7
        //When buttonWithLabelG clicked call virtual function
        //Call playG
        playG();
    }
    if (&src == &buttonWithLabelGIS)
90004f48:	f504 73dc 	add.w	r3, r4, #440	@ 0x1b8
90004f4c:	429d      	cmp	r5, r3
90004f4e:	d03d      	beq.n	90004fcc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd0>
        //Interaction8
        //When buttonWithLabelGIS clicked call virtual function
        //Call playGIS
        playGIS();
    }
    if (&src == &buttonWithLabelA)
90004f50:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
90004f54:	429d      	cmp	r5, r3
90004f56:	d031      	beq.n	90004fbc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc0>
        //Interaction9
        //When buttonWithLabelA clicked call virtual function
        //Call playA
        playA();
    }
    if (&src == &buttonWithLabelAIS)
90004f58:	f504 7300 	add.w	r3, r4, #512	@ 0x200
90004f5c:	429d      	cmp	r5, r3
90004f5e:	d025      	beq.n	90004fac <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb0>
        //Interaction10
        //When buttonWithLabelAIS clicked call virtual function
        //Call playAIS
        playAIS();
    }
    if (&src == &buttonWithLabelH)
90004f60:	f504 735a 	add.w	r3, r4, #872	@ 0x368
90004f64:	429d      	cmp	r5, r3
90004f66:	d019      	beq.n	90004f9c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa0>
        //Interaction11
        //When buttonWithLabelH clicked call virtual function
        //Call playH
        playH();
    }
    if (&src == &buttonLEFT)
90004f68:	f204 4334 	addw	r3, r4, #1076	@ 0x434
90004f6c:	429d      	cmp	r5, r3
90004f6e:	d00d      	beq.n	90004f8c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x90>
        //LEFT
        //When buttonLEFT clicked call virtual function
        //Call functionLEFT
        functionLEFT();
    }
    if (&src == &buttonRIGHT)
90004f70:	f504 737e 	add.w	r3, r4, #1016	@ 0x3f8
90004f74:	429d      	cmp	r5, r3
90004f76:	d000      	beq.n	90004f7a <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x7e>
        //RIGHT
        //When buttonRIGHT clicked call virtual function
        //Call functionRIGHT
        functionRIGHT();
    }
}
90004f78:	bd70      	pop	{r4, r5, r6, pc}
        functionRIGHT();
90004f7a:	6823      	ldr	r3, [r4, #0]
90004f7c:	4a38      	ldr	r2, [pc, #224]	@ (90005060 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x164>)
90004f7e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
90004f80:	4293      	cmp	r3, r2
90004f82:	d0f9      	beq.n	90004f78 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x7c>
90004f84:	4620      	mov	r0, r4
}
90004f86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        functionRIGHT();
90004f8a:	4718      	bx	r3
        functionLEFT();
90004f8c:	6823      	ldr	r3, [r4, #0]
90004f8e:	4a35      	ldr	r2, [pc, #212]	@ (90005064 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x168>)
90004f90:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004f92:	4293      	cmp	r3, r2
90004f94:	d0ec      	beq.n	90004f70 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x74>
90004f96:	4620      	mov	r0, r4
90004f98:	4798      	blx	r3
90004f9a:	e7e9      	b.n	90004f70 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x74>
        playH();
90004f9c:	6823      	ldr	r3, [r4, #0]
90004f9e:	4a32      	ldr	r2, [pc, #200]	@ (90005068 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16c>)
90004fa0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
90004fa2:	4293      	cmp	r3, r2
90004fa4:	d0e0      	beq.n	90004f68 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x6c>
90004fa6:	4620      	mov	r0, r4
90004fa8:	4798      	blx	r3
90004faa:	e7dd      	b.n	90004f68 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x6c>
        playAIS();
90004fac:	6823      	ldr	r3, [r4, #0]
90004fae:	4a2f      	ldr	r2, [pc, #188]	@ (9000506c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x170>)
90004fb0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90004fb2:	4293      	cmp	r3, r2
90004fb4:	d0d4      	beq.n	90004f60 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x64>
90004fb6:	4620      	mov	r0, r4
90004fb8:	4798      	blx	r3
90004fba:	e7d1      	b.n	90004f60 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x64>
        playA();
90004fbc:	6823      	ldr	r3, [r4, #0]
90004fbe:	4a2c      	ldr	r2, [pc, #176]	@ (90005070 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x174>)
90004fc0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90004fc2:	4293      	cmp	r3, r2
90004fc4:	d0c8      	beq.n	90004f58 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x5c>
90004fc6:	4620      	mov	r0, r4
90004fc8:	4798      	blx	r3
90004fca:	e7c5      	b.n	90004f58 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x5c>
        playGIS();
90004fcc:	6823      	ldr	r3, [r4, #0]
90004fce:	4a29      	ldr	r2, [pc, #164]	@ (90005074 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x178>)
90004fd0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90004fd2:	4293      	cmp	r3, r2
90004fd4:	d0bc      	beq.n	90004f50 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
90004fd6:	4620      	mov	r0, r4
90004fd8:	4798      	blx	r3
90004fda:	e7b9      	b.n	90004f50 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
        playG();
90004fdc:	6823      	ldr	r3, [r4, #0]
90004fde:	4a26      	ldr	r2, [pc, #152]	@ (90005078 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x17c>)
90004fe0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90004fe2:	4293      	cmp	r3, r2
90004fe4:	d0b0      	beq.n	90004f48 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4c>
90004fe6:	4620      	mov	r0, r4
90004fe8:	4798      	blx	r3
90004fea:	e7ad      	b.n	90004f48 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4c>
        playFIS();
90004fec:	6823      	ldr	r3, [r4, #0]
90004fee:	4a23      	ldr	r2, [pc, #140]	@ (9000507c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x180>)
90004ff0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90004ff2:	4293      	cmp	r3, r2
90004ff4:	d0a4      	beq.n	90004f40 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x44>
90004ff6:	4620      	mov	r0, r4
90004ff8:	4798      	blx	r3
90004ffa:	e7a1      	b.n	90004f40 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x44>
        playF();
90004ffc:	6823      	ldr	r3, [r4, #0]
90004ffe:	4a20      	ldr	r2, [pc, #128]	@ (90005080 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x184>)
90005000:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90005002:	4293      	cmp	r3, r2
90005004:	d098      	beq.n	90004f38 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>
90005006:	4620      	mov	r0, r4
90005008:	4798      	blx	r3
9000500a:	e795      	b.n	90004f38 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>
        playE();
9000500c:	6823      	ldr	r3, [r4, #0]
9000500e:	4a1d      	ldr	r2, [pc, #116]	@ (90005084 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x188>)
90005010:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90005012:	4293      	cmp	r3, r2
90005014:	d08c      	beq.n	90004f30 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x34>
90005016:	4620      	mov	r0, r4
90005018:	4798      	blx	r3
9000501a:	e789      	b.n	90004f30 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x34>
        playDIS();
9000501c:	6823      	ldr	r3, [r4, #0]
9000501e:	4a1a      	ldr	r2, [pc, #104]	@ (90005088 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18c>)
90005020:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90005022:	4293      	cmp	r3, r2
90005024:	d080      	beq.n	90004f28 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c>
90005026:	4620      	mov	r0, r4
90005028:	4798      	blx	r3
9000502a:	e77d      	b.n	90004f28 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c>
        playD();
9000502c:	6823      	ldr	r3, [r4, #0]
9000502e:	4a17      	ldr	r2, [pc, #92]	@ (9000508c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x190>)
90005030:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90005032:	4293      	cmp	r3, r2
90005034:	f43f af74 	beq.w	90004f20 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
90005038:	4620      	mov	r0, r4
9000503a:	4798      	blx	r3
9000503c:	e770      	b.n	90004f20 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
        playCIS();
9000503e:	6823      	ldr	r3, [r4, #0]
90005040:	4a13      	ldr	r2, [pc, #76]	@ (90005090 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x194>)
90005042:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005044:	4293      	cmp	r3, r2
90005046:	f43f af66 	beq.w	90004f16 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1a>
9000504a:	4620      	mov	r0, r4
9000504c:	4798      	blx	r3
9000504e:	e762      	b.n	90004f16 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1a>
        playC();
90005050:	6803      	ldr	r3, [r0, #0]
90005052:	4a10      	ldr	r2, [pc, #64]	@ (90005094 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x198>)
90005054:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005056:	4293      	cmp	r3, r2
90005058:	f43f af58 	beq.w	90004f0c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x10>
9000505c:	4798      	blx	r3
9000505e:	e755      	b.n	90004f0c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x10>
90005060:	90004de9 	.word	0x90004de9
90005064:	90004de5 	.word	0x90004de5
90005068:	90004ddd 	.word	0x90004ddd
9000506c:	90004dd9 	.word	0x90004dd9
90005070:	90004dd5 	.word	0x90004dd5
90005074:	90004dd1 	.word	0x90004dd1
90005078:	90004dcd 	.word	0x90004dcd
9000507c:	90004dc9 	.word	0x90004dc9
90005080:	90004dc5 	.word	0x90004dc5
90005084:	90004dc1 	.word	0x90004dc1
90005088:	90004dbd 	.word	0x90004dbd
9000508c:	90004db9 	.word	0x90004db9
90005090:	90004db5 	.word	0x90004db5
90005094:	90004db1 	.word	0x90004db1

90005098 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90005098:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
9000509a:	b570      	push	{r4, r5, r6, lr}
9000509c:	4614      	mov	r4, r2
9000509e:	4e23      	ldr	r6, [pc, #140]	@ (9000512c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
900050a0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
900050a2:	4605      	mov	r5, r0
900050a4:	42b2      	cmp	r2, r6
900050a6:	d122      	bne.n	900050ee <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
900050a8:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
900050aa:	80a9      	strh	r1, [r5, #4]
900050ac:	4920      	ldr	r1, [pc, #128]	@ (90005130 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
900050ae:	428a      	cmp	r2, r1
900050b0:	d123      	bne.n	900050fa <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900050b2:	4a20      	ldr	r2, [pc, #128]	@ (90005134 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900050b4:	b2a4      	uxth	r4, r4
900050b6:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
900050b8:	6813      	ldr	r3, [r2, #0]
900050ba:	2b00      	cmp	r3, #0
900050bc:	d02f      	beq.n	9000511e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
900050be:	491e      	ldr	r1, [pc, #120]	@ (90005138 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900050c0:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900050c2:	8809      	ldrh	r1, [r1, #0]
900050c4:	4291      	cmp	r1, r2
900050c6:	d924      	bls.n	90005112 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
900050c8:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900050cc:	4b1b      	ldr	r3, [pc, #108]	@ (9000513c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
900050ce:	681b      	ldr	r3, [r3, #0]
900050d0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900050d4:	4a1a      	ldr	r2, [pc, #104]	@ (90005140 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900050d6:	6803      	ldr	r3, [r0, #0]
900050d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900050da:	4293      	cmp	r3, r2
900050dc:	d117      	bne.n	9000510e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
900050de:	88c0      	ldrh	r0, [r0, #6]
900050e0:	4b18      	ldr	r3, [pc, #96]	@ (90005144 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900050e2:	1a24      	subs	r4, r4, r0
900050e4:	429e      	cmp	r6, r3
900050e6:	b221      	sxth	r1, r4
900050e8:	d10c      	bne.n	90005104 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
900050ea:	80e9      	strh	r1, [r5, #6]
    }
900050ec:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
900050ee:	4790      	blx	r2
        setBaselineY(baselineY);
900050f0:	682b      	ldr	r3, [r5, #0]
900050f2:	490f      	ldr	r1, [pc, #60]	@ (90005130 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
900050f4:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
900050f6:	428a      	cmp	r2, r1
900050f8:	d0db      	beq.n	900050b2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
900050fa:	4621      	mov	r1, r4
900050fc:	4628      	mov	r0, r5
    }
900050fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
90005102:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005104:	4628      	mov	r0, r5
90005106:	4633      	mov	r3, r6
    }
90005108:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000510c:	4718      	bx	r3
9000510e:	4798      	blx	r3
90005110:	e7e6      	b.n	900050e0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005112:	4b0d      	ldr	r3, [pc, #52]	@ (90005148 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90005114:	216d      	movs	r1, #109	@ 0x6d
90005116:	4a0d      	ldr	r2, [pc, #52]	@ (9000514c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005118:	480d      	ldr	r0, [pc, #52]	@ (90005150 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
9000511a:	f023 fb01 	bl	90028720 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000511e:	4b0d      	ldr	r3, [pc, #52]	@ (90005154 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90005120:	216c      	movs	r1, #108	@ 0x6c
90005122:	4a0a      	ldr	r2, [pc, #40]	@ (9000514c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005124:	480a      	ldr	r0, [pc, #40]	@ (90005150 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005126:	f023 fafb 	bl	90028720 <__assert_func>
9000512a:	bf00      	nop
9000512c:	90002e35 	.word	0x90002e35
90005130:	90004e69 	.word	0x90004e69
90005134:	24021c34 	.word	0x24021c34
90005138:	24021c38 	.word	0x24021c38
9000513c:	24021c3c 	.word	0x24021c3c
90005140:	90004871 	.word	0x90004871
90005144:	90002e39 	.word	0x90002e39
90005148:	9002ce94 	.word	0x9002ce94
9000514c:	9002ce10 	.word	0x9002ce10
90005150:	9002ce4c 	.word	0x9002ce4c
90005154:	9002cdcc 	.word	0x9002cdcc

90005158 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
90005158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000515c:	b09b      	sub	sp, #108	@ 0x6c
9000515e:	4604      	mov	r4, r0
        : presenter(0)
90005160:	f012 f9ea 	bl	90017538 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
90005164:	4aca      	ldr	r2, [pc, #808]	@ (90005490 <_ZN15Screen1ViewBaseC1Ev+0x338>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90005166:	4bcb      	ldr	r3, [pc, #812]	@ (90005494 <_ZN15Screen1ViewBaseC1Ev+0x33c>)
90005168:	2500      	movs	r5, #0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
9000516a:	f64f 76ff 	movw	r6, #65535	@ 0xffff
          touchable(false),
9000516e:	f44f 7880 	mov.w	r8, #256	@ 0x100
90005172:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
90005176:	6022      	str	r2, [r4, #0]
90005178:	6423      	str	r3, [r4, #64]	@ 0x40
9000517a:	23ff      	movs	r3, #255	@ 0xff
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
9000517c:	4ac6      	ldr	r2, [pc, #792]	@ (90005498 <_ZN15Screen1ViewBaseC1Ev+0x340>)
9000517e:	f104 0b98 	add.w	fp, r4, #152	@ 0x98
    {
        Image::setBitmap(bmp);
90005182:	a918      	add	r1, sp, #96	@ 0x60
90005184:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
        : Widget(), bitmap(bmp), alpha(255)
90005188:	66e2      	str	r2, [r4, #108]	@ 0x6c
        Image::setBitmap(bmp);
9000518a:	4638      	mov	r0, r7
9000518c:	f8a4 8064 	strh.w	r8, [r4, #100]	@ 0x64
90005190:	f104 0ae0 	add.w	sl, r4, #224	@ 0xe0
90005194:	f8a4 8090 	strh.w	r8, [r4, #144]	@ 0x90
90005198:	f504 7994 	add.w	r9, r4, #296	@ 0x128
        : Widget(), bitmap(bmp), alpha(255)
9000519c:	f8a4 6092 	strh.w	r6, [r4, #146]	@ 0x92
900051a0:	f884 6094 	strb.w	r6, [r4, #148]	@ 0x94
900051a4:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : x(0), y(0), width(0), height(0)
900051a6:	6465      	str	r5, [r4, #68]	@ 0x44
          cachedAbsX(0),
900051a8:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
900051aa:	66a5      	str	r5, [r4, #104]	@ 0x68
900051ac:	f8ad 6060 	strh.w	r6, [sp, #96]	@ 0x60
        : x(0), y(0), width(0), height(0)
900051b0:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
900051b4:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
900051b8:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
900051bc:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
900051c0:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
900051c4:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
900051c8:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
        Image::setBitmap(bmp);
900051cc:	f00d fe91 	bl	90012ef2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900051d0:	4658      	mov	r0, fp
900051d2:	f00d ffcf 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900051d6:	4650      	mov	r0, sl
900051d8:	f00d ffcc 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900051dc:	f504 73b8 	add.w	r3, r4, #368	@ 0x170
900051e0:	4648      	mov	r0, r9
900051e2:	9303      	str	r3, [sp, #12]
900051e4:	f00d ffc6 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900051e8:	f504 72dc 	add.w	r2, r4, #440	@ 0x1b8
900051ec:	9803      	ldr	r0, [sp, #12]
900051ee:	9204      	str	r2, [sp, #16]
900051f0:	f00d ffc0 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900051f4:	f504 7300 	add.w	r3, r4, #512	@ 0x200
900051f8:	9804      	ldr	r0, [sp, #16]
900051fa:	9305      	str	r3, [sp, #20]
900051fc:	f00d ffba 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90005200:	f504 7212 	add.w	r2, r4, #584	@ 0x248
90005204:	9805      	ldr	r0, [sp, #20]
90005206:	9206      	str	r2, [sp, #24]
90005208:	f00d ffb4 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
9000520c:	f504 7324 	add.w	r3, r4, #656	@ 0x290
90005210:	9806      	ldr	r0, [sp, #24]
90005212:	9307      	str	r3, [sp, #28]
90005214:	f00d ffae 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90005218:	f504 7236 	add.w	r2, r4, #728	@ 0x2d8
9000521c:	9807      	ldr	r0, [sp, #28]
9000521e:	9208      	str	r2, [sp, #32]
90005220:	f00d ffa8 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90005224:	f504 7348 	add.w	r3, r4, #800	@ 0x320
90005228:	9808      	ldr	r0, [sp, #32]
9000522a:	9309      	str	r3, [sp, #36]	@ 0x24
9000522c:	f00d ffa2 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90005230:	f504 725a 	add.w	r2, r4, #872	@ 0x368
90005234:	9809      	ldr	r0, [sp, #36]	@ 0x24
90005236:	920a      	str	r2, [sp, #40]	@ 0x28
90005238:	f00d ff9c 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
9000523c:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
90005240:	980a      	ldr	r0, [sp, #40]	@ 0x28
90005242:	930b      	str	r3, [sp, #44]	@ 0x2c
90005244:	f00d ff96 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90005248:	f504 727e 	add.w	r2, r4, #1016	@ 0x3f8
9000524c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9000524e:	920c      	str	r2, [sp, #48]	@ 0x30
90005250:	f00d ff90 	bl	90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90005254:	f204 4334 	addw	r3, r4, #1076	@ 0x434
90005258:	980c      	ldr	r0, [sp, #48]	@ 0x30
9000525a:	930d      	str	r3, [sp, #52]	@ 0x34
9000525c:	f00d fe22 	bl	90012ea4 <_ZN8touchgfx14ButtonWithIconC1Ev>
90005260:	980d      	ldr	r0, [sp, #52]	@ 0x34
90005262:	f00d fe1f 	bl	90012ea4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005266:	23ff      	movs	r3, #255	@ 0xff
        : typedTextId(id)
90005268:	f8a4 649c 	strh.w	r6, [r4, #1180]	@ 0x49c
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
9000526c:	1d26      	adds	r6, r4, #4
9000526e:	f8c4 34a6 	str.w	r3, [r4, #1190]	@ 0x4a6
90005272:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90005276:	4b89      	ldr	r3, [pc, #548]	@ (9000549c <_ZN15Screen1ViewBaseC1Ev+0x344>)
90005278:	4630      	mov	r0, r6
          touchable(false),
9000527a:	f8a4 8494 	strh.w	r8, [r4, #1172]	@ 0x494
9000527e:	f8c4 3498 	str.w	r3, [r4, #1176]	@ 0x498
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005282:	f04f 33ff 	mov.w	r3, #4294967295
        : x(0), y(0), width(0), height(0)
90005286:	f8c4 5474 	str.w	r5, [r4, #1140]	@ 0x474
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000528a:	f8c4 34b0 	str.w	r3, [r4, #1200]	@ 0x4b0
        : TextAreaWithWildcardBase(), wc1(0)
9000528e:	4b84      	ldr	r3, [pc, #528]	@ (900054a0 <_ZN15Screen1ViewBaseC1Ev+0x348>)
        : x(0), y(0), width(0), height(0)
90005290:	f8c4 5478 	str.w	r5, [r4, #1144]	@ 0x478
90005294:	f8c4 3470 	str.w	r3, [r4, #1136]	@ 0x470
        : pobject(pObject), pmemfun(pmemfun_1)
90005298:	4b82      	ldr	r3, [pc, #520]	@ (900054a4 <_ZN15Screen1ViewBaseC1Ev+0x34c>)
9000529a:	f8c4 547c 	str.w	r5, [r4, #1148]	@ 0x47c
9000529e:	f8c4 34d0 	str.w	r3, [r4, #1232]	@ 0x4d0
900052a2:	4b81      	ldr	r3, [pc, #516]	@ (900054a8 <_ZN15Screen1ViewBaseC1Ev+0x350>)
900052a4:	f8c4 5480 	str.w	r5, [r4, #1152]	@ 0x480
900052a8:	f8c4 34d8 	str.w	r3, [r4, #1240]	@ 0x4d8
        rect.x = x;
900052ac:	4b7f      	ldr	r3, [pc, #508]	@ (900054ac <_ZN15Screen1ViewBaseC1Ev+0x354>)
          parent(0),
900052ae:	f8c4 5484 	str.w	r5, [r4, #1156]	@ 0x484
        rect.x = x;
900052b2:	64a3      	str	r3, [r4, #72]	@ 0x48
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
900052b4:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
          nextSibling(0),
900052b8:	f8c4 5488 	str.w	r5, [r4, #1160]	@ 0x488
900052bc:	66a3      	str	r3, [r4, #104]	@ 0x68
          nextDrawChainElement(0),
900052be:	f8c4 548c 	str.w	r5, [r4, #1164]	@ 0x48c
          cachedAbsX(0),
900052c2:	f8c4 5490 	str.w	r5, [r4, #1168]	@ 0x490
        : color(col)
900052c6:	f8c4 54a0 	str.w	r5, [r4, #1184]	@ 0x4a0
900052ca:	f8a4 54a4 	strh.w	r5, [r4, #1188]	@ 0x4a4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900052ce:	f8c4 54ac 	str.w	r5, [r4, #1196]	@ 0x4ac
              text(0)
900052d2:	f8c4 54b4 	str.w	r5, [r4, #1204]	@ 0x4b4
900052d6:	f8c4 54b8 	str.w	r5, [r4, #1208]	@ 0x4b8
900052da:	f8c4 44d4 	str.w	r4, [r4, #1236]	@ 0x4d4
900052de:	f8c4 54dc 	str.w	r5, [r4, #1244]	@ 0x4dc
        rect.x = x;
900052e2:	6465      	str	r5, [r4, #68]	@ 0x44
900052e4:	f00a fcec 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900052e8:	2303      	movs	r3, #3
    image1.setBitmap(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_WAVES_ID));
900052ea:	4638      	mov	r0, r7
900052ec:	a918      	add	r1, sp, #96	@ 0x60
900052ee:	6725      	str	r5, [r4, #112]	@ 0x70
900052f0:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
900052f4:	f00d fdfd 	bl	90012ef2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900052f8:	4639      	mov	r1, r7
900052fa:	4630      	mov	r0, r6
900052fc:	f00a fce0 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005300:	f44f 0344 	mov.w	r3, #12845056	@ 0xc40000
        return typedTextId < numberOfTypedTexts;
90005304:	4f6a      	ldr	r7, [pc, #424]	@ (900054b0 <_ZN15Screen1ViewBaseC1Ev+0x358>)
    buttonWithLabelC.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
90005306:	a917      	add	r1, sp, #92	@ 0x5c
90005308:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
9000530c:	2301      	movs	r3, #1
9000530e:	aa18      	add	r2, sp, #96	@ 0x60
90005310:	4658      	mov	r0, fp
90005312:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
90005316:	2302      	movs	r3, #2
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005318:	f8df 81b0 	ldr.w	r8, [pc, #432]	@ 900054cc <_ZN15Screen1ViewBaseC1Ev+0x374>
9000531c:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
90005320:	f00d fbf1 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005324:	210d      	movs	r1, #13
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
90005326:	883b      	ldrh	r3, [r7, #0]
90005328:	428b      	cmp	r3, r1
9000532a:	f8a4 10d0 	strh.w	r1, [r4, #208]	@ 0xd0
9000532e:	d927      	bls.n	90005380 <_ZN15Screen1ViewBaseC1Ev+0x228>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005330:	f8d8 3000 	ldr.w	r3, [r8]
90005334:	2b00      	cmp	r3, #0
90005336:	f000 84b2 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
9000533a:	7e9a      	ldrb	r2, [r3, #26]
9000533c:	4b5d      	ldr	r3, [pc, #372]	@ (900054b4 <_ZN15Screen1ViewBaseC1Ev+0x35c>)
9000533e:	4d5e      	ldr	r5, [pc, #376]	@ (900054b8 <_ZN15Screen1ViewBaseC1Ev+0x360>)
90005340:	681b      	ldr	r3, [r3, #0]
90005342:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005346:	4a5d      	ldr	r2, [pc, #372]	@ (900054bc <_ZN15Screen1ViewBaseC1Ev+0x364>)
        return fonts[typedTexts[typedTextId].fontIdx];
90005348:	930e      	str	r3, [sp, #56]	@ 0x38
        return texts->getText(typedTextId);
9000534a:	6810      	ldr	r0, [r2, #0]
9000534c:	f000 fe4a 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005350:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90005352:	4601      	mov	r1, r0
90005354:	6818      	ldr	r0, [r3, #0]
90005356:	6b82      	ldr	r2, [r0, #56]	@ 0x38
90005358:	42aa      	cmp	r2, r5
9000535a:	f040 844e 	bne.w	90005bfa <_ZN15Screen1ViewBaseC1Ev+0xaa2>
        return fontHeight;
9000535e:	889d      	ldrh	r5, [r3, #4]
90005360:	6c82      	ldr	r2, [r0, #72]	@ 0x48
90005362:	4618      	mov	r0, r3
90005364:	910f      	str	r1, [sp, #60]	@ 0x3c
90005366:	930e      	str	r3, [sp, #56]	@ 0x38
90005368:	4790      	blx	r2
9000536a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9000536c:	fb15 f500 	smulbb	r5, r5, r0
90005370:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90005372:	681a      	ldr	r2, [r3, #0]
90005374:	4618      	mov	r0, r3
90005376:	b2ad      	uxth	r5, r5
90005378:	6a53      	ldr	r3, [r2, #36]	@ 0x24
9000537a:	4798      	blx	r3
9000537c:	4405      	add	r5, r0
9000537e:	b22d      	sxth	r5, r5
        color = col;
90005380:	f04f 33ff 	mov.w	r3, #4294967295
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005384:	f8a4 50de 	strh.w	r5, [r4, #222]	@ 0xde
    buttonWithLabelC.setAction(buttonCallback);
90005388:	f504 659a 	add.w	r5, r4, #1232	@ 0x4d0
9000538c:	4659      	mov	r1, fp
9000538e:	4630      	mov	r0, r6
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90005390:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
        colorPressed = col;
90005394:	e9c4 3335 	strd	r3, r3, [r4, #212]	@ 0xd4
90005398:	f00a fc92 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000539c:	4b48      	ldr	r3, [pc, #288]	@ (900054c0 <_ZN15Screen1ViewBaseC1Ev+0x368>)
    buttonWithLabelCIS.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
9000539e:	a917      	add	r1, sp, #92	@ 0x5c
900053a0:	aa18      	add	r2, sp, #96	@ 0x60
900053a2:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
900053a6:	2301      	movs	r3, #1
900053a8:	4650      	mov	r0, sl
900053aa:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
900053ae:	2302      	movs	r3, #2
900053b0:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
900053b4:	f00d fba7 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900053b8:	2106      	movs	r1, #6
        if (typedText.hasValidId())
900053ba:	883b      	ldrh	r3, [r7, #0]
900053bc:	428b      	cmp	r3, r1
900053be:	f8a4 1118 	strh.w	r1, [r4, #280]	@ 0x118
900053c2:	f200 83a8 	bhi.w	90005b16 <_ZN15Screen1ViewBaseC1Ev+0x9be>
900053c6:	f04f 0b00 	mov.w	fp, #0
        color = col;
900053ca:	f04f 33ff 	mov.w	r3, #4294967295
900053ce:	4651      	mov	r1, sl
900053d0:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900053d2:	f8a4 b126 	strh.w	fp, [r4, #294]	@ 0x126
900053d6:	f8c4 5108 	str.w	r5, [r4, #264]	@ 0x108
        colorPressed = col;
900053da:	e9c4 3347 	strd	r3, r3, [r4, #284]	@ 0x11c
900053de:	f00a fc6f 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900053e2:	4b38      	ldr	r3, [pc, #224]	@ (900054c4 <_ZN15Screen1ViewBaseC1Ev+0x36c>)
    buttonWithLabelDIS.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
900053e4:	a917      	add	r1, sp, #92	@ 0x5c
900053e6:	aa18      	add	r2, sp, #96	@ 0x60
900053e8:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
900053ec:	2301      	movs	r3, #1
900053ee:	4648      	mov	r0, r9
900053f0:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
900053f4:	2302      	movs	r3, #2
900053f6:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
900053fa:	f00d fb84 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
900053fe:	2105      	movs	r1, #5
        if (typedText.hasValidId())
90005400:	883b      	ldrh	r3, [r7, #0]
90005402:	428b      	cmp	r3, r1
90005404:	f8a4 1160 	strh.w	r1, [r4, #352]	@ 0x160
90005408:	f240 83cc 	bls.w	90005ba4 <_ZN15Screen1ViewBaseC1Ev+0xa4c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000540c:	f8d8 3000 	ldr.w	r3, [r8]
90005410:	2b00      	cmp	r3, #0
90005412:	f000 8444 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
90005416:	7a9a      	ldrb	r2, [r3, #10]
90005418:	4b26      	ldr	r3, [pc, #152]	@ (900054b4 <_ZN15Screen1ViewBaseC1Ev+0x35c>)
9000541a:	681b      	ldr	r3, [r3, #0]
9000541c:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005420:	4b26      	ldr	r3, [pc, #152]	@ (900054bc <_ZN15Screen1ViewBaseC1Ev+0x364>)
90005422:	6818      	ldr	r0, [r3, #0]
90005424:	f000 fdde 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005428:	f8db 2000 	ldr.w	r2, [fp]
9000542c:	4601      	mov	r1, r0
9000542e:	4822      	ldr	r0, [pc, #136]	@ (900054b8 <_ZN15Screen1ViewBaseC1Ev+0x360>)
90005430:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90005432:	4283      	cmp	r3, r0
90005434:	f040 8406 	bne.w	90005c44 <_ZN15Screen1ViewBaseC1Ev+0xaec>
90005438:	f8bb a004 	ldrh.w	sl, [fp, #4]
9000543c:	6c93      	ldr	r3, [r2, #72]	@ 0x48
9000543e:	4658      	mov	r0, fp
90005440:	910e      	str	r1, [sp, #56]	@ 0x38
90005442:	4798      	blx	r3
90005444:	fb1a fa00 	smulbb	sl, sl, r0
90005448:	f8db 3000 	ldr.w	r3, [fp]
9000544c:	4658      	mov	r0, fp
9000544e:	fa1f fa8a 	uxth.w	sl, sl
90005452:	990e      	ldr	r1, [sp, #56]	@ 0x38
90005454:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005456:	4798      	blx	r3
90005458:	4482      	add	sl, r0
9000545a:	fa0f fa8a 	sxth.w	sl, sl
        color = col;
9000545e:	f04f 33ff 	mov.w	r3, #4294967295
90005462:	4649      	mov	r1, r9
90005464:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005466:	f8a4 a16e 	strh.w	sl, [r4, #366]	@ 0x16e
9000546a:	f8c4 5150 	str.w	r5, [r4, #336]	@ 0x150
        colorPressed = col;
9000546e:	e9c4 3359 	strd	r3, r3, [r4, #356]	@ 0x164
90005472:	f00a fc25 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005476:	4b14      	ldr	r3, [pc, #80]	@ (900054c8 <_ZN15Screen1ViewBaseC1Ev+0x370>)
    buttonWithLabelFIS.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
90005478:	a917      	add	r1, sp, #92	@ 0x5c
9000547a:	aa18      	add	r2, sp, #96	@ 0x60
9000547c:	f8c4 3174 	str.w	r3, [r4, #372]	@ 0x174
90005480:	2301      	movs	r3, #1
90005482:	9803      	ldr	r0, [sp, #12]
90005484:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
90005488:	2302      	movs	r3, #2
9000548a:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
9000548e:	e01f      	b.n	900054d0 <_ZN15Screen1ViewBaseC1Ev+0x378>
90005490:	9002cfd4 	.word	0x9002cfd4
90005494:	9002d7d4 	.word	0x9002d7d4
90005498:	9002d8b4 	.word	0x9002d8b4
9000549c:	9002c9d8 	.word	0x9002c9d8
900054a0:	9002cf2c 	.word	0x9002cf2c
900054a4:	9002cfbc 	.word	0x9002cfbc
900054a8:	90004efd 	.word	0x90004efd
900054ac:	011001e0 	.word	0x011001e0
900054b0:	24021c38 	.word	0x24021c38
900054b4:	24021c3c 	.word	0x24021c3c
900054b8:	90004875 	.word	0x90004875
900054bc:	24021c40 	.word	0x24021c40
900054c0:	007e0023 	.word	0x007e0023
900054c4:	007e0069 	.word	0x007e0069
900054c8:	007e00f5 	.word	0x007e00f5
900054cc:	24021c34 	.word	0x24021c34
900054d0:	f00d fb19 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900054d4:	2104      	movs	r1, #4
        if (typedText.hasValidId())
900054d6:	883b      	ldrh	r3, [r7, #0]
900054d8:	428b      	cmp	r3, r1
900054da:	f8a4 11a8 	strh.w	r1, [r4, #424]	@ 0x1a8
900054de:	f240 8364 	bls.w	90005baa <_ZN15Screen1ViewBaseC1Ev+0xa52>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900054e2:	f8d8 3000 	ldr.w	r3, [r8]
900054e6:	2b00      	cmp	r3, #0
900054e8:	f000 83d9 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
900054ec:	7a1a      	ldrb	r2, [r3, #8]
900054ee:	4bc3      	ldr	r3, [pc, #780]	@ (900057fc <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
900054f0:	681b      	ldr	r3, [r3, #0]
900054f2:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900054f6:	4bc2      	ldr	r3, [pc, #776]	@ (90005800 <_ZN15Screen1ViewBaseC1Ev+0x6a8>)
900054f8:	6818      	ldr	r0, [r3, #0]
900054fa:	f000 fd73 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900054fe:	f8da 2000 	ldr.w	r2, [sl]
90005502:	49c0      	ldr	r1, [pc, #768]	@ (90005804 <_ZN15Screen1ViewBaseC1Ev+0x6ac>)
90005504:	4683      	mov	fp, r0
90005506:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90005508:	428b      	cmp	r3, r1
9000550a:	f040 8395 	bne.w	90005c38 <_ZN15Screen1ViewBaseC1Ev+0xae0>
9000550e:	f8ba 9004 	ldrh.w	r9, [sl, #4]
90005512:	6c93      	ldr	r3, [r2, #72]	@ 0x48
90005514:	4659      	mov	r1, fp
90005516:	4650      	mov	r0, sl
90005518:	4798      	blx	r3
9000551a:	fb19 f900 	smulbb	r9, r9, r0
9000551e:	f8da 3000 	ldr.w	r3, [sl]
90005522:	4659      	mov	r1, fp
90005524:	fa1f f989 	uxth.w	r9, r9
90005528:	4650      	mov	r0, sl
9000552a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000552c:	4798      	blx	r3
9000552e:	4481      	add	r9, r0
90005530:	fa0f f989 	sxth.w	r9, r9
        color = col;
90005534:	f04f 33ff 	mov.w	r3, #4294967295
90005538:	9903      	ldr	r1, [sp, #12]
9000553a:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000553c:	f8a4 91b6 	strh.w	r9, [r4, #438]	@ 0x1b6
90005540:	f8c4 5198 	str.w	r5, [r4, #408]	@ 0x198
        colorPressed = col;
90005544:	e9c4 336b 	strd	r3, r3, [r4, #428]	@ 0x1ac
90005548:	f00a fbba 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000554c:	4bae      	ldr	r3, [pc, #696]	@ (90005808 <_ZN15Screen1ViewBaseC1Ev+0x6b0>)
    buttonWithLabelGIS.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
9000554e:	a917      	add	r1, sp, #92	@ 0x5c
90005550:	aa18      	add	r2, sp, #96	@ 0x60
90005552:	f8c4 31bc 	str.w	r3, [r4, #444]	@ 0x1bc
90005556:	2301      	movs	r3, #1
90005558:	9804      	ldr	r0, [sp, #16]
9000555a:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
9000555e:	2302      	movs	r3, #2
90005560:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
90005564:	f00d facf 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005568:	2103      	movs	r1, #3
        if (typedText.hasValidId())
9000556a:	883b      	ldrh	r3, [r7, #0]
9000556c:	428b      	cmp	r3, r1
9000556e:	f8a4 11f0 	strh.w	r1, [r4, #496]	@ 0x1f0
90005572:	f240 831d 	bls.w	90005bb0 <_ZN15Screen1ViewBaseC1Ev+0xa58>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005576:	f8d8 3000 	ldr.w	r3, [r8]
9000557a:	2b00      	cmp	r3, #0
9000557c:	f000 838f 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
90005580:	799a      	ldrb	r2, [r3, #6]
90005582:	4b9e      	ldr	r3, [pc, #632]	@ (900057fc <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
90005584:	681b      	ldr	r3, [r3, #0]
90005586:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
9000558a:	4b9d      	ldr	r3, [pc, #628]	@ (90005800 <_ZN15Screen1ViewBaseC1Ev+0x6a8>)
9000558c:	6818      	ldr	r0, [r3, #0]
9000558e:	f000 fd29 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005592:	f8da 2000 	ldr.w	r2, [sl]
90005596:	499b      	ldr	r1, [pc, #620]	@ (90005804 <_ZN15Screen1ViewBaseC1Ev+0x6ac>)
90005598:	4683      	mov	fp, r0
9000559a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000559c:	428b      	cmp	r3, r1
9000559e:	f040 8345 	bne.w	90005c2c <_ZN15Screen1ViewBaseC1Ev+0xad4>
900055a2:	f8ba 9004 	ldrh.w	r9, [sl, #4]
900055a6:	6c93      	ldr	r3, [r2, #72]	@ 0x48
900055a8:	4659      	mov	r1, fp
900055aa:	4650      	mov	r0, sl
900055ac:	4798      	blx	r3
900055ae:	fb19 f900 	smulbb	r9, r9, r0
900055b2:	f8da 3000 	ldr.w	r3, [sl]
900055b6:	4659      	mov	r1, fp
900055b8:	fa1f f989 	uxth.w	r9, r9
900055bc:	4650      	mov	r0, sl
900055be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900055c0:	4798      	blx	r3
900055c2:	4481      	add	r9, r0
900055c4:	fa0f f989 	sxth.w	r9, r9
        color = col;
900055c8:	f04f 33ff 	mov.w	r3, #4294967295
900055cc:	9904      	ldr	r1, [sp, #16]
900055ce:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900055d0:	f8a4 91fe 	strh.w	r9, [r4, #510]	@ 0x1fe
900055d4:	f8c4 51e0 	str.w	r5, [r4, #480]	@ 0x1e0
900055d8:	f04f 0902 	mov.w	r9, #2
        colorPressed = col;
900055dc:	e9c4 337d 	strd	r3, r3, [r4, #500]	@ 0x1f4
900055e0:	f00a fb6e 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900055e4:	4b89      	ldr	r3, [pc, #548]	@ (9000580c <_ZN15Screen1ViewBaseC1Ev+0x6b4>)
    buttonWithLabelAIS.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
900055e6:	aa18      	add	r2, sp, #96	@ 0x60
900055e8:	a917      	add	r1, sp, #92	@ 0x5c
900055ea:	f8c4 3204 	str.w	r3, [r4, #516]	@ 0x204
900055ee:	2301      	movs	r3, #1
900055f0:	9805      	ldr	r0, [sp, #20]
900055f2:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
900055f6:	f8ad 9060 	strh.w	r9, [sp, #96]	@ 0x60
900055fa:	f00d fa84 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
900055fe:	883b      	ldrh	r3, [r7, #0]
class TypedText
90005600:	f8a4 9238 	strh.w	r9, [r4, #568]	@ 0x238
90005604:	454b      	cmp	r3, r9
90005606:	f240 82d6 	bls.w	90005bb6 <_ZN15Screen1ViewBaseC1Ev+0xa5e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000560a:	f8d8 3000 	ldr.w	r3, [r8]
9000560e:	2b00      	cmp	r3, #0
90005610:	f000 8345 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
90005614:	791a      	ldrb	r2, [r3, #4]
        return texts->getText(typedTextId);
90005616:	4649      	mov	r1, r9
        return fonts[typedTexts[typedTextId].fontIdx];
90005618:	4b78      	ldr	r3, [pc, #480]	@ (900057fc <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
9000561a:	681b      	ldr	r3, [r3, #0]
9000561c:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005620:	4b77      	ldr	r3, [pc, #476]	@ (90005800 <_ZN15Screen1ViewBaseC1Ev+0x6a8>)
90005622:	6818      	ldr	r0, [r3, #0]
90005624:	f000 fcde 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005628:	f8da 2000 	ldr.w	r2, [sl]
9000562c:	4975      	ldr	r1, [pc, #468]	@ (90005804 <_ZN15Screen1ViewBaseC1Ev+0x6ac>)
9000562e:	4683      	mov	fp, r0
90005630:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90005632:	428b      	cmp	r3, r1
90005634:	f040 82f4 	bne.w	90005c20 <_ZN15Screen1ViewBaseC1Ev+0xac8>
90005638:	f8ba 9004 	ldrh.w	r9, [sl, #4]
9000563c:	6c93      	ldr	r3, [r2, #72]	@ 0x48
9000563e:	4659      	mov	r1, fp
90005640:	4650      	mov	r0, sl
90005642:	4798      	blx	r3
90005644:	fb19 f900 	smulbb	r9, r9, r0
90005648:	f8da 3000 	ldr.w	r3, [sl]
9000564c:	4659      	mov	r1, fp
9000564e:	fa1f f989 	uxth.w	r9, r9
90005652:	4650      	mov	r0, sl
90005654:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005656:	4798      	blx	r3
90005658:	4481      	add	r9, r0
9000565a:	fa0f f989 	sxth.w	r9, r9
        color = col;
9000565e:	f04f 33ff 	mov.w	r3, #4294967295
90005662:	9905      	ldr	r1, [sp, #20]
90005664:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005666:	f8a4 9246 	strh.w	r9, [r4, #582]	@ 0x246
9000566a:	f8c4 5228 	str.w	r5, [r4, #552]	@ 0x228
        colorPressed = col;
9000566e:	e9c4 338f 	strd	r3, r3, [r4, #572]	@ 0x23c
90005672:	f00a fb25 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005676:	4b66      	ldr	r3, [pc, #408]	@ (90005810 <_ZN15Screen1ViewBaseC1Ev+0x6b8>)
    buttonWithLabelD.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
90005678:	a917      	add	r1, sp, #92	@ 0x5c
9000567a:	aa18      	add	r2, sp, #96	@ 0x60
9000567c:	f8c4 324c 	str.w	r3, [r4, #588]	@ 0x24c
90005680:	2301      	movs	r3, #1
90005682:	9806      	ldr	r0, [sp, #24]
90005684:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
90005688:	2302      	movs	r3, #2
9000568a:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
9000568e:	f00d fa3a 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005692:	210c      	movs	r1, #12
        if (typedText.hasValidId())
90005694:	883b      	ldrh	r3, [r7, #0]
90005696:	428b      	cmp	r3, r1
90005698:	f8a4 1280 	strh.w	r1, [r4, #640]	@ 0x280
9000569c:	f240 828e 	bls.w	90005bbc <_ZN15Screen1ViewBaseC1Ev+0xa64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900056a0:	f8d8 3000 	ldr.w	r3, [r8]
900056a4:	2b00      	cmp	r3, #0
900056a6:	f000 82fa 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
900056aa:	7e1a      	ldrb	r2, [r3, #24]
900056ac:	4b53      	ldr	r3, [pc, #332]	@ (900057fc <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
900056ae:	681b      	ldr	r3, [r3, #0]
900056b0:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900056b4:	4b52      	ldr	r3, [pc, #328]	@ (90005800 <_ZN15Screen1ViewBaseC1Ev+0x6a8>)
900056b6:	6818      	ldr	r0, [r3, #0]
900056b8:	f000 fc94 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900056bc:	f8da 2000 	ldr.w	r2, [sl]
900056c0:	4950      	ldr	r1, [pc, #320]	@ (90005804 <_ZN15Screen1ViewBaseC1Ev+0x6ac>)
900056c2:	4683      	mov	fp, r0
900056c4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900056c6:	428b      	cmp	r3, r1
900056c8:	f040 82dd 	bne.w	90005c86 <_ZN15Screen1ViewBaseC1Ev+0xb2e>
900056cc:	f8ba 9004 	ldrh.w	r9, [sl, #4]
900056d0:	6c93      	ldr	r3, [r2, #72]	@ 0x48
900056d2:	4659      	mov	r1, fp
900056d4:	4650      	mov	r0, sl
900056d6:	4798      	blx	r3
900056d8:	fb19 f900 	smulbb	r9, r9, r0
900056dc:	f8da 3000 	ldr.w	r3, [sl]
900056e0:	4659      	mov	r1, fp
900056e2:	fa1f f989 	uxth.w	r9, r9
900056e6:	4650      	mov	r0, sl
900056e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900056ea:	4798      	blx	r3
900056ec:	4481      	add	r9, r0
900056ee:	fa0f f989 	sxth.w	r9, r9
        color = col;
900056f2:	f04f 33ff 	mov.w	r3, #4294967295
900056f6:	9906      	ldr	r1, [sp, #24]
900056f8:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900056fa:	f8a4 928e 	strh.w	r9, [r4, #654]	@ 0x28e
900056fe:	f8c4 5270 	str.w	r5, [r4, #624]	@ 0x270
        colorPressed = col;
90005702:	e9c4 33a1 	strd	r3, r3, [r4, #644]	@ 0x284
90005706:	f00a fadb 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000570a:	4b42      	ldr	r3, [pc, #264]	@ (90005814 <_ZN15Screen1ViewBaseC1Ev+0x6bc>)
    buttonWithLabelE.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
9000570c:	a917      	add	r1, sp, #92	@ 0x5c
9000570e:	aa18      	add	r2, sp, #96	@ 0x60
90005710:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
90005714:	2301      	movs	r3, #1
90005716:	9807      	ldr	r0, [sp, #28]
90005718:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
9000571c:	2302      	movs	r3, #2
9000571e:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
90005722:	f00d f9f0 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005726:	210b      	movs	r1, #11
        if (typedText.hasValidId())
90005728:	883b      	ldrh	r3, [r7, #0]
9000572a:	428b      	cmp	r3, r1
9000572c:	f8a4 12c8 	strh.w	r1, [r4, #712]	@ 0x2c8
90005730:	f240 8247 	bls.w	90005bc2 <_ZN15Screen1ViewBaseC1Ev+0xa6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005734:	f8d8 3000 	ldr.w	r3, [r8]
90005738:	2b00      	cmp	r3, #0
9000573a:	f000 82b0 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
9000573e:	7d9a      	ldrb	r2, [r3, #22]
90005740:	4b2e      	ldr	r3, [pc, #184]	@ (900057fc <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
90005742:	681b      	ldr	r3, [r3, #0]
90005744:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005748:	4b2d      	ldr	r3, [pc, #180]	@ (90005800 <_ZN15Screen1ViewBaseC1Ev+0x6a8>)
9000574a:	6818      	ldr	r0, [r3, #0]
9000574c:	f000 fc4a 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005750:	f8da 2000 	ldr.w	r2, [sl]
90005754:	492b      	ldr	r1, [pc, #172]	@ (90005804 <_ZN15Screen1ViewBaseC1Ev+0x6ac>)
90005756:	4683      	mov	fp, r0
90005758:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000575a:	428b      	cmp	r3, r1
9000575c:	f040 828d 	bne.w	90005c7a <_ZN15Screen1ViewBaseC1Ev+0xb22>
90005760:	f8ba 9004 	ldrh.w	r9, [sl, #4]
90005764:	6c93      	ldr	r3, [r2, #72]	@ 0x48
90005766:	4659      	mov	r1, fp
90005768:	4650      	mov	r0, sl
9000576a:	4798      	blx	r3
9000576c:	fb19 f900 	smulbb	r9, r9, r0
90005770:	f8da 3000 	ldr.w	r3, [sl]
90005774:	4659      	mov	r1, fp
90005776:	fa1f f989 	uxth.w	r9, r9
9000577a:	4650      	mov	r0, sl
9000577c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000577e:	4798      	blx	r3
90005780:	4481      	add	r9, r0
90005782:	fa0f f989 	sxth.w	r9, r9
        color = col;
90005786:	f04f 33ff 	mov.w	r3, #4294967295
9000578a:	9907      	ldr	r1, [sp, #28]
9000578c:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000578e:	f8a4 92d6 	strh.w	r9, [r4, #726]	@ 0x2d6
90005792:	f8c4 52b8 	str.w	r5, [r4, #696]	@ 0x2b8
        colorPressed = col;
90005796:	e9c4 33b3 	strd	r3, r3, [r4, #716]	@ 0x2cc
9000579a:	f00a fa91 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000579e:	4b1e      	ldr	r3, [pc, #120]	@ (90005818 <_ZN15Screen1ViewBaseC1Ev+0x6c0>)
    buttonWithLabelF.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
900057a0:	a917      	add	r1, sp, #92	@ 0x5c
900057a2:	aa18      	add	r2, sp, #96	@ 0x60
900057a4:	f8c4 32dc 	str.w	r3, [r4, #732]	@ 0x2dc
900057a8:	2301      	movs	r3, #1
900057aa:	9808      	ldr	r0, [sp, #32]
900057ac:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
900057b0:	2302      	movs	r3, #2
900057b2:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
900057b6:	f00d f9a6 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900057ba:	210a      	movs	r1, #10
        if (typedText.hasValidId())
900057bc:	883b      	ldrh	r3, [r7, #0]
900057be:	428b      	cmp	r3, r1
900057c0:	f8a4 1310 	strh.w	r1, [r4, #784]	@ 0x310
900057c4:	f240 8200 	bls.w	90005bc8 <_ZN15Screen1ViewBaseC1Ev+0xa70>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900057c8:	f8d8 3000 	ldr.w	r3, [r8]
900057cc:	2b00      	cmp	r3, #0
900057ce:	f000 8266 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
900057d2:	7d1a      	ldrb	r2, [r3, #20]
900057d4:	4b09      	ldr	r3, [pc, #36]	@ (900057fc <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
900057d6:	681b      	ldr	r3, [r3, #0]
900057d8:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900057dc:	4b08      	ldr	r3, [pc, #32]	@ (90005800 <_ZN15Screen1ViewBaseC1Ev+0x6a8>)
900057de:	6818      	ldr	r0, [r3, #0]
900057e0:	f000 fc00 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900057e4:	f8da 2000 	ldr.w	r2, [sl]
900057e8:	4906      	ldr	r1, [pc, #24]	@ (90005804 <_ZN15Screen1ViewBaseC1Ev+0x6ac>)
900057ea:	4683      	mov	fp, r0
900057ec:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900057ee:	428b      	cmp	r3, r1
900057f0:	f040 823d 	bne.w	90005c6e <_ZN15Screen1ViewBaseC1Ev+0xb16>
900057f4:	f8ba 9004 	ldrh.w	r9, [sl, #4]
900057f8:	e010      	b.n	9000581c <_ZN15Screen1ViewBaseC1Ev+0x6c4>
900057fa:	bf00      	nop
900057fc:	24021c3c 	.word	0x24021c3c
90005800:	24021c40 	.word	0x24021c40
90005804:	90004875 	.word	0x90004875
90005808:	007e013b 	.word	0x007e013b
9000580c:	007e0181 	.word	0x007e0181
90005810:	00c40046 	.word	0x00c40046
90005814:	00c4008c 	.word	0x00c4008c
90005818:	00c400d2 	.word	0x00c400d2
9000581c:	6c93      	ldr	r3, [r2, #72]	@ 0x48
9000581e:	4659      	mov	r1, fp
90005820:	4650      	mov	r0, sl
90005822:	4798      	blx	r3
90005824:	fb19 f900 	smulbb	r9, r9, r0
90005828:	f8da 3000 	ldr.w	r3, [sl]
9000582c:	4659      	mov	r1, fp
9000582e:	fa1f f989 	uxth.w	r9, r9
90005832:	4650      	mov	r0, sl
90005834:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005836:	4798      	blx	r3
90005838:	4481      	add	r9, r0
9000583a:	fa0f f989 	sxth.w	r9, r9
        color = col;
9000583e:	f04f 33ff 	mov.w	r3, #4294967295
90005842:	9908      	ldr	r1, [sp, #32]
90005844:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005846:	f8a4 931e 	strh.w	r9, [r4, #798]	@ 0x31e
9000584a:	f8c4 5300 	str.w	r5, [r4, #768]	@ 0x300
        colorPressed = col;
9000584e:	e9c4 33c5 	strd	r3, r3, [r4, #788]	@ 0x314
90005852:	f00a fa35 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005856:	4bc6      	ldr	r3, [pc, #792]	@ (90005b70 <_ZN15Screen1ViewBaseC1Ev+0xa18>)
    buttonWithLabelG.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
90005858:	a917      	add	r1, sp, #92	@ 0x5c
9000585a:	aa18      	add	r2, sp, #96	@ 0x60
9000585c:	f8c4 3324 	str.w	r3, [r4, #804]	@ 0x324
90005860:	2301      	movs	r3, #1
90005862:	9809      	ldr	r0, [sp, #36]	@ 0x24
90005864:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
90005868:	2302      	movs	r3, #2
9000586a:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
9000586e:	f00d f94a 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005872:	2109      	movs	r1, #9
        if (typedText.hasValidId())
90005874:	883b      	ldrh	r3, [r7, #0]
90005876:	428b      	cmp	r3, r1
90005878:	f8a4 1358 	strh.w	r1, [r4, #856]	@ 0x358
9000587c:	f240 81a7 	bls.w	90005bce <_ZN15Screen1ViewBaseC1Ev+0xa76>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005880:	f8d8 3000 	ldr.w	r3, [r8]
90005884:	2b00      	cmp	r3, #0
90005886:	f000 820a 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
9000588a:	7c9a      	ldrb	r2, [r3, #18]
9000588c:	4bb9      	ldr	r3, [pc, #740]	@ (90005b74 <_ZN15Screen1ViewBaseC1Ev+0xa1c>)
9000588e:	681b      	ldr	r3, [r3, #0]
90005890:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005894:	4bb8      	ldr	r3, [pc, #736]	@ (90005b78 <_ZN15Screen1ViewBaseC1Ev+0xa20>)
90005896:	6818      	ldr	r0, [r3, #0]
90005898:	f000 fba4 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000589c:	f8da 2000 	ldr.w	r2, [sl]
900058a0:	49b6      	ldr	r1, [pc, #728]	@ (90005b7c <_ZN15Screen1ViewBaseC1Ev+0xa24>)
900058a2:	4683      	mov	fp, r0
900058a4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900058a6:	428b      	cmp	r3, r1
900058a8:	f040 81db 	bne.w	90005c62 <_ZN15Screen1ViewBaseC1Ev+0xb0a>
900058ac:	f8ba 9004 	ldrh.w	r9, [sl, #4]
900058b0:	6c93      	ldr	r3, [r2, #72]	@ 0x48
900058b2:	4659      	mov	r1, fp
900058b4:	4650      	mov	r0, sl
900058b6:	4798      	blx	r3
900058b8:	fb19 f900 	smulbb	r9, r9, r0
900058bc:	f8da 3000 	ldr.w	r3, [sl]
900058c0:	4659      	mov	r1, fp
900058c2:	fa1f f989 	uxth.w	r9, r9
900058c6:	4650      	mov	r0, sl
900058c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900058ca:	4798      	blx	r3
900058cc:	4481      	add	r9, r0
900058ce:	fa0f f989 	sxth.w	r9, r9
        color = col;
900058d2:	f04f 33ff 	mov.w	r3, #4294967295
900058d6:	9909      	ldr	r1, [sp, #36]	@ 0x24
900058d8:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900058da:	f8a4 9366 	strh.w	r9, [r4, #870]	@ 0x366
900058de:	f8c4 5348 	str.w	r5, [r4, #840]	@ 0x348
        colorPressed = col;
900058e2:	e9c4 33d7 	strd	r3, r3, [r4, #860]	@ 0x35c
900058e6:	f00a f9eb 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900058ea:	4ba5      	ldr	r3, [pc, #660]	@ (90005b80 <_ZN15Screen1ViewBaseC1Ev+0xa28>)
    buttonWithLabelH.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
900058ec:	a917      	add	r1, sp, #92	@ 0x5c
900058ee:	aa18      	add	r2, sp, #96	@ 0x60
900058f0:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
900058f4:	2301      	movs	r3, #1
900058f6:	980a      	ldr	r0, [sp, #40]	@ 0x28
900058f8:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
900058fc:	2302      	movs	r3, #2
900058fe:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
90005902:	f00d f900 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005906:	2107      	movs	r1, #7
        if (typedText.hasValidId())
90005908:	883b      	ldrh	r3, [r7, #0]
9000590a:	428b      	cmp	r3, r1
9000590c:	f8a4 13a0 	strh.w	r1, [r4, #928]	@ 0x3a0
90005910:	f240 8160 	bls.w	90005bd4 <_ZN15Screen1ViewBaseC1Ev+0xa7c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005914:	f8d8 3000 	ldr.w	r3, [r8]
90005918:	2b00      	cmp	r3, #0
9000591a:	f000 81c0 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
9000591e:	7b9a      	ldrb	r2, [r3, #14]
90005920:	4b94      	ldr	r3, [pc, #592]	@ (90005b74 <_ZN15Screen1ViewBaseC1Ev+0xa1c>)
90005922:	681b      	ldr	r3, [r3, #0]
90005924:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005928:	4b93      	ldr	r3, [pc, #588]	@ (90005b78 <_ZN15Screen1ViewBaseC1Ev+0xa20>)
9000592a:	6818      	ldr	r0, [r3, #0]
9000592c:	f000 fb5a 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005930:	f8da 2000 	ldr.w	r2, [sl]
90005934:	4991      	ldr	r1, [pc, #580]	@ (90005b7c <_ZN15Screen1ViewBaseC1Ev+0xa24>)
90005936:	4683      	mov	fp, r0
90005938:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000593a:	428b      	cmp	r3, r1
9000593c:	f040 818b 	bne.w	90005c56 <_ZN15Screen1ViewBaseC1Ev+0xafe>
90005940:	f8ba 9004 	ldrh.w	r9, [sl, #4]
90005944:	6c93      	ldr	r3, [r2, #72]	@ 0x48
90005946:	4659      	mov	r1, fp
90005948:	4650      	mov	r0, sl
9000594a:	4798      	blx	r3
9000594c:	fb19 f900 	smulbb	r9, r9, r0
90005950:	f8da 3000 	ldr.w	r3, [sl]
90005954:	4659      	mov	r1, fp
90005956:	fa1f f989 	uxth.w	r9, r9
9000595a:	4650      	mov	r0, sl
9000595c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000595e:	4798      	blx	r3
90005960:	4481      	add	r9, r0
90005962:	fa0f f989 	sxth.w	r9, r9
        color = col;
90005966:	f04f 33ff 	mov.w	r3, #4294967295
9000596a:	990a      	ldr	r1, [sp, #40]	@ 0x28
9000596c:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000596e:	f8a4 93ae 	strh.w	r9, [r4, #942]	@ 0x3ae
90005972:	f8c4 5390 	str.w	r5, [r4, #912]	@ 0x390
        colorPressed = col;
90005976:	e9c4 33e9 	strd	r3, r3, [r4, #932]	@ 0x3a4
9000597a:	f00a f9a1 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000597e:	4b81      	ldr	r3, [pc, #516]	@ (90005b84 <_ZN15Screen1ViewBaseC1Ev+0xa2c>)
    buttonWithLabelA.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
90005980:	a917      	add	r1, sp, #92	@ 0x5c
90005982:	aa18      	add	r2, sp, #96	@ 0x60
90005984:	f8c4 33b4 	str.w	r3, [r4, #948]	@ 0x3b4
90005988:	2301      	movs	r3, #1
9000598a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9000598c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
90005990:	2302      	movs	r3, #2
90005992:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
90005996:	f00d f8b6 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
9000599a:	2108      	movs	r1, #8
        if (typedText.hasValidId())
9000599c:	883b      	ldrh	r3, [r7, #0]
9000599e:	428b      	cmp	r3, r1
900059a0:	f8a4 13e8 	strh.w	r1, [r4, #1000]	@ 0x3e8
900059a4:	f240 8119 	bls.w	90005bda <_ZN15Screen1ViewBaseC1Ev+0xa82>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900059a8:	f8d8 3000 	ldr.w	r3, [r8]
900059ac:	2b00      	cmp	r3, #0
900059ae:	f000 8176 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
900059b2:	7c1a      	ldrb	r2, [r3, #16]
900059b4:	4b6f      	ldr	r3, [pc, #444]	@ (90005b74 <_ZN15Screen1ViewBaseC1Ev+0xa1c>)
900059b6:	681b      	ldr	r3, [r3, #0]
900059b8:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900059bc:	4b6e      	ldr	r3, [pc, #440]	@ (90005b78 <_ZN15Screen1ViewBaseC1Ev+0xa20>)
900059be:	6818      	ldr	r0, [r3, #0]
900059c0:	f000 fb10 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900059c4:	f8da 2000 	ldr.w	r2, [sl]
900059c8:	496c      	ldr	r1, [pc, #432]	@ (90005b7c <_ZN15Screen1ViewBaseC1Ev+0xa24>)
900059ca:	4683      	mov	fp, r0
900059cc:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900059ce:	428b      	cmp	r3, r1
900059d0:	f040 815f 	bne.w	90005c92 <_ZN15Screen1ViewBaseC1Ev+0xb3a>
900059d4:	f8ba 9004 	ldrh.w	r9, [sl, #4]
900059d8:	6c93      	ldr	r3, [r2, #72]	@ 0x48
900059da:	4659      	mov	r1, fp
900059dc:	4650      	mov	r0, sl
900059de:	4798      	blx	r3
900059e0:	fb19 f900 	smulbb	r9, r9, r0
900059e4:	f8da 3000 	ldr.w	r3, [sl]
900059e8:	4659      	mov	r1, fp
900059ea:	fa1f f989 	uxth.w	r9, r9
900059ee:	4650      	mov	r0, sl
900059f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900059f2:	4798      	blx	r3
900059f4:	4481      	add	r9, r0
900059f6:	fa0f f989 	sxth.w	r9, r9
        color = col;
900059fa:	f04f 3aff 	mov.w	sl, #4294967295
900059fe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90005a00:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005a02:	f8a4 93f6 	strh.w	r9, [r4, #1014]	@ 0x3f6
90005a06:	f8c4 53d8 	str.w	r5, [r4, #984]	@ 0x3d8
90005a0a:	f04f 0900 	mov.w	r9, #0
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90005a0e:	f06f 1b06 	mvn.w	fp, #393222	@ 0x60006
        colorPressed = col;
90005a12:	e9c4 aafb 	strd	sl, sl, [r4, #1004]	@ 0x3ec
90005a16:	f00a f953 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonRIGHT.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_FORWARD_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_FORWARD_IOS_50_50_FFFFFF_SVG_ID));
90005a1a:	ab18      	add	r3, sp, #96	@ 0x60
90005a1c:	aa16      	add	r2, sp, #88	@ 0x58
90005a1e:	a915      	add	r1, sp, #84	@ 0x54
90005a20:	9300      	str	r3, [sp, #0]
90005a22:	4b59      	ldr	r3, [pc, #356]	@ (90005b88 <_ZN15Screen1ViewBaseC1Ev+0xa30>)
90005a24:	980c      	ldr	r0, [sp, #48]	@ 0x30
90005a26:	f8c4 33fc 	str.w	r3, [r4, #1020]	@ 0x3fc
90005a2a:	2306      	movs	r3, #6
90005a2c:	f8ad 9054 	strh.w	r9, [sp, #84]	@ 0x54
90005a30:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
90005a34:	2307      	movs	r3, #7
90005a36:	f8ad 9058 	strh.w	r9, [sp, #88]	@ 0x58
90005a3a:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
90005a3e:	ab17      	add	r3, sp, #92	@ 0x5c
90005a40:	f00d f99b 	bl	90012d7a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005a44:	990c      	ldr	r1, [sp, #48]	@ 0x30
90005a46:	4630      	mov	r0, r6
90005a48:	f8c4 5420 	str.w	r5, [r4, #1056]	@ 0x420
90005a4c:	f8c4 b430 	str.w	fp, [r4, #1072]	@ 0x430
90005a50:	f00a f936 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonLEFT.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_50_50_FFFFFF_SVG_ID));
90005a54:	a818      	add	r0, sp, #96	@ 0x60
90005a56:	ab17      	add	r3, sp, #92	@ 0x5c
90005a58:	aa16      	add	r2, sp, #88	@ 0x58
90005a5a:	9000      	str	r0, [sp, #0]
90005a5c:	a915      	add	r1, sp, #84	@ 0x54
90005a5e:	484b      	ldr	r0, [pc, #300]	@ (90005b8c <_ZN15Screen1ViewBaseC1Ev+0xa34>)
90005a60:	f8ad 9054 	strh.w	r9, [sp, #84]	@ 0x54
90005a64:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90005a68:	2004      	movs	r0, #4
90005a6a:	f8ad 9058 	strh.w	r9, [sp, #88]	@ 0x58
90005a6e:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90005a72:	2005      	movs	r0, #5
90005a74:	f8ad 0060 	strh.w	r0, [sp, #96]	@ 0x60
90005a78:	980d      	ldr	r0, [sp, #52]	@ 0x34
90005a7a:	f00d f97e 	bl	90012d7a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005a7e:	f8c4 545c 	str.w	r5, [r4, #1116]	@ 0x45c
90005a82:	990d      	ldr	r1, [sp, #52]	@ 0x34
90005a84:	4630      	mov	r0, r6
90005a86:	f8c4 b46c 	str.w	fp, [r4, #1132]	@ 0x46c
    textArea1.setXY(228, 22);
90005a8a:	f504 658e 	add.w	r5, r4, #1136	@ 0x470
90005a8e:	f00a f917 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
90005a92:	f8d4 3470 	ldr.w	r3, [r4, #1136]	@ 0x470
        linespace = space;
90005a96:	f8a4 94a4 	strh.w	r9, [r4, #1188]	@ 0x4a4
90005a9a:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        rect.x = x;
90005a9e:	4b3c      	ldr	r3, [pc, #240]	@ (90005b90 <_ZN15Screen1ViewBaseC1Ev+0xa38>)
90005aa0:	f8c4 3474 	str.w	r3, [r4, #1140]	@ 0x474
        color = newColor;
90005aa4:	4b3b      	ldr	r3, [pc, #236]	@ (90005b94 <_ZN15Screen1ViewBaseC1Ev+0xa3c>)
90005aa6:	f8c4 34a0 	str.w	r3, [r4, #1184]	@ 0x4a0
90005aaa:	4b3b      	ldr	r3, [pc, #236]	@ (90005b98 <_ZN15Screen1ViewBaseC1Ev+0xa40>)
90005aac:	429a      	cmp	r2, r3
90005aae:	f040 8097 	bne.w	90005be0 <_ZN15Screen1ViewBaseC1Ev+0xa88>
        boundingArea = calculateBoundingArea();
90005ab2:	f8c4 a4b0 	str.w	sl, [r4, #1200]	@ 0x4b0
90005ab6:	f8c4 94ac 	str.w	r9, [r4, #1196]	@ 0x4ac
90005aba:	f8c4 94b4 	str.w	r9, [r4, #1204]	@ 0x4b4
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005abe:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A25W).getText());
90005ac2:	f204 48bc 	addw	r8, r4, #1212	@ 0x4bc
90005ac6:	2b00      	cmp	r3, #0
90005ac8:	f000 80f5 	beq.w	90005cb6 <_ZN15Screen1ViewBaseC1Ev+0xb5e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005acc:	883b      	ldrh	r3, [r7, #0]
90005ace:	2b00      	cmp	r3, #0
90005ad0:	f000 80eb 	beq.w	90005caa <_ZN15Screen1ViewBaseC1Ev+0xb52>
        return texts->getText(typedTextId);
90005ad4:	4b28      	ldr	r3, [pc, #160]	@ (90005b78 <_ZN15Screen1ViewBaseC1Ev+0xa20>)
90005ad6:	2100      	movs	r1, #0
90005ad8:	6818      	ldr	r0, [r3, #0]
90005ada:	f000 fa83 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
90005ade:	4a2f      	ldr	r2, [pc, #188]	@ (90005b9c <_ZN15Screen1ViewBaseC1Ev+0xa44>)
90005ae0:	4603      	mov	r3, r0
90005ae2:	210a      	movs	r1, #10
90005ae4:	4640      	mov	r0, r8
90005ae6:	f013 f993 	bl	90018e10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
90005aea:	4628      	mov	r0, r5
        wc1 = value;
90005aec:	f8c4 84b8 	str.w	r8, [r4, #1208]	@ 0x4b8
90005af0:	f00c ff8c 	bl	90012a0c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90005af4:	4b2a      	ldr	r3, [pc, #168]	@ (90005ba0 <_ZN15Screen1ViewBaseC1Ev+0xa48>)
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AGBD));
90005af6:	a918      	add	r1, sp, #96	@ 0x60
90005af8:	4628      	mov	r0, r5
90005afa:	9318      	str	r3, [sp, #96]	@ 0x60
90005afc:	2301      	movs	r3, #1
90005afe:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
90005b02:	f00c ffa3 	bl	90012a4c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005b06:	4630      	mov	r0, r6
90005b08:	4629      	mov	r1, r5
90005b0a:	f00a f8d9 	bl	9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005b0e:	4620      	mov	r0, r4
90005b10:	b01b      	add	sp, #108	@ 0x6c
90005b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005b16:	f8d8 3000 	ldr.w	r3, [r8]
90005b1a:	2b00      	cmp	r3, #0
90005b1c:	f000 80bf 	beq.w	90005c9e <_ZN15Screen1ViewBaseC1Ev+0xb46>
        return fonts[typedTexts[typedTextId].fontIdx];
90005b20:	7b1a      	ldrb	r2, [r3, #12]
90005b22:	4b14      	ldr	r3, [pc, #80]	@ (90005b74 <_ZN15Screen1ViewBaseC1Ev+0xa1c>)
90005b24:	681b      	ldr	r3, [r3, #0]
90005b26:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005b2a:	4a13      	ldr	r2, [pc, #76]	@ (90005b78 <_ZN15Screen1ViewBaseC1Ev+0xa20>)
        return fonts[typedTexts[typedTextId].fontIdx];
90005b2c:	930e      	str	r3, [sp, #56]	@ 0x38
        return texts->getText(typedTextId);
90005b2e:	6810      	ldr	r0, [r2, #0]
90005b30:	f000 fa58 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005b34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90005b36:	4601      	mov	r1, r0
90005b38:	f8df c040 	ldr.w	ip, [pc, #64]	@ 90005b7c <_ZN15Screen1ViewBaseC1Ev+0xa24>
90005b3c:	6818      	ldr	r0, [r3, #0]
90005b3e:	6b82      	ldr	r2, [r0, #56]	@ 0x38
90005b40:	4562      	cmp	r2, ip
90005b42:	d164      	bne.n	90005c0e <_ZN15Screen1ViewBaseC1Ev+0xab6>
90005b44:	f8b3 b004 	ldrh.w	fp, [r3, #4]
90005b48:	6c82      	ldr	r2, [r0, #72]	@ 0x48
90005b4a:	4618      	mov	r0, r3
90005b4c:	910f      	str	r1, [sp, #60]	@ 0x3c
90005b4e:	930e      	str	r3, [sp, #56]	@ 0x38
90005b50:	4790      	blx	r2
90005b52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90005b54:	fb1b fb00 	smulbb	fp, fp, r0
90005b58:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90005b5a:	681a      	ldr	r2, [r3, #0]
90005b5c:	4618      	mov	r0, r3
90005b5e:	fa1f fb8b 	uxth.w	fp, fp
90005b62:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90005b64:	4798      	blx	r3
90005b66:	4483      	add	fp, r0
90005b68:	fa0f fb8b 	sxth.w	fp, fp
90005b6c:	e42d      	b.n	900053ca <_ZN15Screen1ViewBaseC1Ev+0x272>
90005b6e:	bf00      	nop
90005b70:	00c40118 	.word	0x00c40118
90005b74:	24021c3c 	.word	0x24021c3c
90005b78:	24021c40 	.word	0x24021c40
90005b7c:	90004875 	.word	0x90004875
90005b80:	00c401a4 	.word	0x00c401a4
90005b84:	00c4015e 	.word	0x00c4015e
90005b88:	001c0199 	.word	0x001c0199
90005b8c:	001c0023 	.word	0x001c0023
90005b90:	001600e4 	.word	0x001600e4
90005b94:	ffffd13b 	.word	0xffffd13b
90005b98:	90004d9d 	.word	0x90004d9d
90005b9c:	9002cf20 	.word	0x9002cf20
90005ba0:	9002c9d8 	.word	0x9002c9d8
90005ba4:	f04f 0a00 	mov.w	sl, #0
90005ba8:	e459      	b.n	9000545e <_ZN15Screen1ViewBaseC1Ev+0x306>
90005baa:	f04f 0900 	mov.w	r9, #0
90005bae:	e4c1      	b.n	90005534 <_ZN15Screen1ViewBaseC1Ev+0x3dc>
90005bb0:	f04f 0900 	mov.w	r9, #0
90005bb4:	e508      	b.n	900055c8 <_ZN15Screen1ViewBaseC1Ev+0x470>
90005bb6:	f04f 0900 	mov.w	r9, #0
90005bba:	e550      	b.n	9000565e <_ZN15Screen1ViewBaseC1Ev+0x506>
90005bbc:	f04f 0900 	mov.w	r9, #0
90005bc0:	e597      	b.n	900056f2 <_ZN15Screen1ViewBaseC1Ev+0x59a>
90005bc2:	f04f 0900 	mov.w	r9, #0
90005bc6:	e5de      	b.n	90005786 <_ZN15Screen1ViewBaseC1Ev+0x62e>
90005bc8:	f04f 0900 	mov.w	r9, #0
90005bcc:	e637      	b.n	9000583e <_ZN15Screen1ViewBaseC1Ev+0x6e6>
90005bce:	f04f 0900 	mov.w	r9, #0
90005bd2:	e67e      	b.n	900058d2 <_ZN15Screen1ViewBaseC1Ev+0x77a>
90005bd4:	f04f 0900 	mov.w	r9, #0
90005bd8:	e6c5      	b.n	90005966 <_ZN15Screen1ViewBaseC1Ev+0x80e>
90005bda:	f04f 0900 	mov.w	r9, #0
90005bde:	e70c      	b.n	900059fa <_ZN15Screen1ViewBaseC1Ev+0x8a2>
90005be0:	f10d 0940 	add.w	r9, sp, #64	@ 0x40
90005be4:	4629      	mov	r1, r5
90005be6:	4648      	mov	r0, r9
90005be8:	f7ff f8d8 	bl	90004d9c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
90005bec:	f204 43ac 	addw	r3, r4, #1196	@ 0x4ac
90005bf0:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
90005bf4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005bf8:	e761      	b.n	90005abe <_ZN15Screen1ViewBaseC1Ev+0x966>
90005bfa:	4618      	mov	r0, r3
90005bfc:	910f      	str	r1, [sp, #60]	@ 0x3c
90005bfe:	930e      	str	r3, [sp, #56]	@ 0x38
90005c00:	4790      	blx	r2
90005c02:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90005c04:	4605      	mov	r5, r0
90005c06:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90005c08:	6818      	ldr	r0, [r3, #0]
90005c0a:	f7ff bba9 	b.w	90005360 <_ZN15Screen1ViewBaseC1Ev+0x208>
90005c0e:	4618      	mov	r0, r3
90005c10:	910f      	str	r1, [sp, #60]	@ 0x3c
90005c12:	930e      	str	r3, [sp, #56]	@ 0x38
90005c14:	4790      	blx	r2
90005c16:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90005c18:	4683      	mov	fp, r0
90005c1a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90005c1c:	6818      	ldr	r0, [r3, #0]
90005c1e:	e793      	b.n	90005b48 <_ZN15Screen1ViewBaseC1Ev+0x9f0>
90005c20:	4650      	mov	r0, sl
90005c22:	4798      	blx	r3
90005c24:	f8da 2000 	ldr.w	r2, [sl]
90005c28:	4681      	mov	r9, r0
90005c2a:	e507      	b.n	9000563c <_ZN15Screen1ViewBaseC1Ev+0x4e4>
90005c2c:	4650      	mov	r0, sl
90005c2e:	4798      	blx	r3
90005c30:	f8da 2000 	ldr.w	r2, [sl]
90005c34:	4681      	mov	r9, r0
90005c36:	e4b6      	b.n	900055a6 <_ZN15Screen1ViewBaseC1Ev+0x44e>
90005c38:	4650      	mov	r0, sl
90005c3a:	4798      	blx	r3
90005c3c:	f8da 2000 	ldr.w	r2, [sl]
90005c40:	4681      	mov	r9, r0
90005c42:	e466      	b.n	90005512 <_ZN15Screen1ViewBaseC1Ev+0x3ba>
90005c44:	910e      	str	r1, [sp, #56]	@ 0x38
90005c46:	4658      	mov	r0, fp
90005c48:	4798      	blx	r3
90005c4a:	f8db 2000 	ldr.w	r2, [fp]
90005c4e:	4682      	mov	sl, r0
90005c50:	990e      	ldr	r1, [sp, #56]	@ 0x38
90005c52:	f7ff bbf3 	b.w	9000543c <_ZN15Screen1ViewBaseC1Ev+0x2e4>
90005c56:	4650      	mov	r0, sl
90005c58:	4798      	blx	r3
90005c5a:	f8da 2000 	ldr.w	r2, [sl]
90005c5e:	4681      	mov	r9, r0
90005c60:	e670      	b.n	90005944 <_ZN15Screen1ViewBaseC1Ev+0x7ec>
90005c62:	4650      	mov	r0, sl
90005c64:	4798      	blx	r3
90005c66:	f8da 2000 	ldr.w	r2, [sl]
90005c6a:	4681      	mov	r9, r0
90005c6c:	e620      	b.n	900058b0 <_ZN15Screen1ViewBaseC1Ev+0x758>
90005c6e:	4650      	mov	r0, sl
90005c70:	4798      	blx	r3
90005c72:	f8da 2000 	ldr.w	r2, [sl]
90005c76:	4681      	mov	r9, r0
90005c78:	e5d0      	b.n	9000581c <_ZN15Screen1ViewBaseC1Ev+0x6c4>
90005c7a:	4650      	mov	r0, sl
90005c7c:	4798      	blx	r3
90005c7e:	f8da 2000 	ldr.w	r2, [sl]
90005c82:	4681      	mov	r9, r0
90005c84:	e56e      	b.n	90005764 <_ZN15Screen1ViewBaseC1Ev+0x60c>
90005c86:	4650      	mov	r0, sl
90005c88:	4798      	blx	r3
90005c8a:	f8da 2000 	ldr.w	r2, [sl]
90005c8e:	4681      	mov	r9, r0
90005c90:	e51e      	b.n	900056d0 <_ZN15Screen1ViewBaseC1Ev+0x578>
90005c92:	4650      	mov	r0, sl
90005c94:	4798      	blx	r3
90005c96:	f8da 2000 	ldr.w	r2, [sl]
90005c9a:	4681      	mov	r9, r0
90005c9c:	e69c      	b.n	900059d8 <_ZN15Screen1ViewBaseC1Ev+0x880>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005c9e:	4b09      	ldr	r3, [pc, #36]	@ (90005cc4 <_ZN15Screen1ViewBaseC1Ev+0xb6c>)
90005ca0:	216c      	movs	r1, #108	@ 0x6c
90005ca2:	4a09      	ldr	r2, [pc, #36]	@ (90005cc8 <_ZN15Screen1ViewBaseC1Ev+0xb70>)
90005ca4:	4809      	ldr	r0, [pc, #36]	@ (90005ccc <_ZN15Screen1ViewBaseC1Ev+0xb74>)
90005ca6:	f022 fd3b 	bl	90028720 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005caa:	4b09      	ldr	r3, [pc, #36]	@ (90005cd0 <_ZN15Screen1ViewBaseC1Ev+0xb78>)
90005cac:	2161      	movs	r1, #97	@ 0x61
90005cae:	4a09      	ldr	r2, [pc, #36]	@ (90005cd4 <_ZN15Screen1ViewBaseC1Ev+0xb7c>)
90005cb0:	4806      	ldr	r0, [pc, #24]	@ (90005ccc <_ZN15Screen1ViewBaseC1Ev+0xb74>)
90005cb2:	f022 fd35 	bl	90028720 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005cb6:	4b03      	ldr	r3, [pc, #12]	@ (90005cc4 <_ZN15Screen1ViewBaseC1Ev+0xb6c>)
90005cb8:	2160      	movs	r1, #96	@ 0x60
90005cba:	4a06      	ldr	r2, [pc, #24]	@ (90005cd4 <_ZN15Screen1ViewBaseC1Ev+0xb7c>)
90005cbc:	4803      	ldr	r0, [pc, #12]	@ (90005ccc <_ZN15Screen1ViewBaseC1Ev+0xb74>)
90005cbe:	f022 fd2f 	bl	90028720 <__assert_func>
90005cc2:	bf00      	nop
90005cc4:	9002cdcc 	.word	0x9002cdcc
90005cc8:	9002ce10 	.word	0x9002ce10
90005ccc:	9002ce4c 	.word	0x9002ce4c
90005cd0:	9002ce94 	.word	0x9002ce94
90005cd4:	9002ced4 	.word	0x9002ced4

90005cd8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005cd8:	4770      	bx	lr
90005cda:	bf00      	nop

90005cdc <_Z23getFont_verdana_10_4bppv>:
{
90005cdc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005cde:	4d18      	ldr	r5, [pc, #96]	@ (90005d40 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90005ce0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005ce2:	682c      	ldr	r4, [r5, #0]
90005ce4:	f3bf 8f5b 	dmb	ish
90005ce8:	f014 0401 	ands.w	r4, r4, #1
90005cec:	d002      	beq.n	90005cf4 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90005cee:	4815      	ldr	r0, [pc, #84]	@ (90005d44 <_Z23getFont_verdana_10_4bppv+0x68>)
90005cf0:	b00f      	add	sp, #60	@ 0x3c
90005cf2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005cf4:	4628      	mov	r0, r5
90005cf6:	f022 f99d 	bl	90028034 <__cxa_guard_acquire>
90005cfa:	2800      	cmp	r0, #0
90005cfc:	d0f7      	beq.n	90005cee <_Z23getFont_verdana_10_4bppv+0x12>
90005cfe:	213f      	movs	r1, #63	@ 0x3f
90005d00:	2201      	movs	r2, #1
90005d02:	230a      	movs	r3, #10
90005d04:	2004      	movs	r0, #4
90005d06:	9204      	str	r2, [sp, #16]
90005d08:	9300      	str	r3, [sp, #0]
90005d0a:	9003      	str	r0, [sp, #12]
90005d0c:	480d      	ldr	r0, [pc, #52]	@ (90005d44 <_Z23getFont_verdana_10_4bppv+0x68>)
90005d0e:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90005d12:	490d      	ldr	r1, [pc, #52]	@ (90005d48 <_Z23getFont_verdana_10_4bppv+0x6c>)
90005d14:	9108      	str	r1, [sp, #32]
90005d16:	490d      	ldr	r1, [pc, #52]	@ (90005d4c <_Z23getFont_verdana_10_4bppv+0x70>)
90005d18:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005d1c:	9107      	str	r1, [sp, #28]
90005d1e:	490c      	ldr	r1, [pc, #48]	@ (90005d50 <_Z23getFont_verdana_10_4bppv+0x74>)
90005d20:	e9cd 4405 	strd	r4, r4, [sp, #20]
90005d24:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005d28:	f7fe ffc6 	bl	90004cb8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005d2c:	4809      	ldr	r0, [pc, #36]	@ (90005d54 <_Z23getFont_verdana_10_4bppv+0x78>)
90005d2e:	f022 fd15 	bl	9002875c <atexit>
90005d32:	4628      	mov	r0, r5
90005d34:	f022 f98a 	bl	9002804c <__cxa_guard_release>
}
90005d38:	4802      	ldr	r0, [pc, #8]	@ (90005d44 <_Z23getFont_verdana_10_4bppv+0x68>)
90005d3a:	b00f      	add	sp, #60	@ 0x3c
90005d3c:	bd30      	pop	{r4, r5, pc}
90005d3e:	bf00      	nop
90005d40:	24007b20 	.word	0x24007b20
90005d44:	24007b24 	.word	0x24007b24
90005d48:	9002dfd4 	.word	0x9002dfd4
90005d4c:	9002e2c0 	.word	0x9002e2c0
90005d50:	90206e40 	.word	0x90206e40
90005d54:	90005cd9 	.word	0x90005cd9

90005d58 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 9, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005d58:	4770      	bx	lr
90005d5a:	bf00      	nop

90005d5c <_Z23getFont_verdana_20_4bppv>:
{
90005d5c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 9, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005d5e:	4d18      	ldr	r5, [pc, #96]	@ (90005dc0 <_Z23getFont_verdana_20_4bppv+0x64>)
{
90005d60:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 9, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005d62:	682c      	ldr	r4, [r5, #0]
90005d64:	f3bf 8f5b 	dmb	ish
90005d68:	f014 0401 	ands.w	r4, r4, #1
90005d6c:	d002      	beq.n	90005d74 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90005d6e:	4815      	ldr	r0, [pc, #84]	@ (90005dc4 <_Z23getFont_verdana_20_4bppv+0x68>)
90005d70:	b00f      	add	sp, #60	@ 0x3c
90005d72:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 9, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005d74:	4628      	mov	r0, r5
90005d76:	f022 f95d 	bl	90028034 <__cxa_guard_acquire>
90005d7a:	2800      	cmp	r0, #0
90005d7c:	d0f7      	beq.n	90005d6e <_Z23getFont_verdana_20_4bppv+0x12>
90005d7e:	4a12      	ldr	r2, [pc, #72]	@ (90005dc8 <_Z23getFont_verdana_20_4bppv+0x6c>)
90005d80:	213f      	movs	r1, #63	@ 0x3f
90005d82:	2314      	movs	r3, #20
90005d84:	480f      	ldr	r0, [pc, #60]	@ (90005dc4 <_Z23getFont_verdana_20_4bppv+0x68>)
90005d86:	9208      	str	r2, [sp, #32]
90005d88:	2201      	movs	r2, #1
90005d8a:	9300      	str	r3, [sp, #0]
90005d8c:	9204      	str	r2, [sp, #16]
90005d8e:	2204      	movs	r2, #4
90005d90:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90005d94:	490d      	ldr	r1, [pc, #52]	@ (90005dcc <_Z23getFont_verdana_20_4bppv+0x70>)
90005d96:	9203      	str	r2, [sp, #12]
90005d98:	2209      	movs	r2, #9
90005d9a:	9107      	str	r1, [sp, #28]
90005d9c:	490c      	ldr	r1, [pc, #48]	@ (90005dd0 <_Z23getFont_verdana_20_4bppv+0x74>)
90005d9e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005da2:	e9cd 4405 	strd	r4, r4, [sp, #20]
90005da6:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005daa:	f7fe ff85 	bl	90004cb8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005dae:	4809      	ldr	r0, [pc, #36]	@ (90005dd4 <_Z23getFont_verdana_20_4bppv+0x78>)
90005db0:	f022 fcd4 	bl	9002875c <atexit>
90005db4:	4628      	mov	r0, r5
90005db6:	f022 f949 	bl	9002804c <__cxa_guard_release>
}
90005dba:	4802      	ldr	r0, [pc, #8]	@ (90005dc4 <_Z23getFont_verdana_20_4bppv+0x68>)
90005dbc:	b00f      	add	sp, #60	@ 0x3c
90005dbe:	bd30      	pop	{r4, r5, pc}
90005dc0:	24007b50 	.word	0x24007b50
90005dc4:	24007b54 	.word	0x24007b54
90005dc8:	9002dfd8 	.word	0x9002dfd8
90005dcc:	9002e2c4 	.word	0x9002e2c4
90005dd0:	90206e50 	.word	0x90206e50
90005dd4:	90005d59 	.word	0x90005d59

90005dd8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005dd8:	4770      	bx	lr
90005dda:	bf00      	nop

90005ddc <_Z23getFont_verdana_40_4bppv>:
{
90005ddc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005dde:	4d19      	ldr	r5, [pc, #100]	@ (90005e44 <_Z23getFont_verdana_40_4bppv+0x68>)
{
90005de0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005de2:	682c      	ldr	r4, [r5, #0]
90005de4:	f3bf 8f5b 	dmb	ish
90005de8:	f014 0401 	ands.w	r4, r4, #1
90005dec:	d002      	beq.n	90005df4 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90005dee:	4816      	ldr	r0, [pc, #88]	@ (90005e48 <_Z23getFont_verdana_40_4bppv+0x6c>)
90005df0:	b00f      	add	sp, #60	@ 0x3c
90005df2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005df4:	4628      	mov	r0, r5
90005df6:	f022 f91d 	bl	90028034 <__cxa_guard_acquire>
90005dfa:	2800      	cmp	r0, #0
90005dfc:	d0f7      	beq.n	90005dee <_Z23getFont_verdana_40_4bppv+0x12>
90005dfe:	4a13      	ldr	r2, [pc, #76]	@ (90005e4c <_Z23getFont_verdana_40_4bppv+0x70>)
90005e00:	213f      	movs	r1, #63	@ 0x3f
90005e02:	2302      	movs	r3, #2
90005e04:	2028      	movs	r0, #40	@ 0x28
90005e06:	9208      	str	r2, [sp, #32]
90005e08:	2201      	movs	r2, #1
90005e0a:	9000      	str	r0, [sp, #0]
90005e0c:	9204      	str	r2, [sp, #16]
90005e0e:	2204      	movs	r2, #4
90005e10:	9401      	str	r4, [sp, #4]
90005e12:	480d      	ldr	r0, [pc, #52]	@ (90005e48 <_Z23getFont_verdana_40_4bppv+0x6c>)
90005e14:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90005e18:	490d      	ldr	r1, [pc, #52]	@ (90005e50 <_Z23getFont_verdana_40_4bppv+0x74>)
90005e1a:	e9cd 3305 	strd	r3, r3, [sp, #20]
90005e1e:	9107      	str	r1, [sp, #28]
90005e20:	2330      	movs	r3, #48	@ 0x30
90005e22:	490c      	ldr	r1, [pc, #48]	@ (90005e54 <_Z23getFont_verdana_40_4bppv+0x78>)
90005e24:	e9cd 4202 	strd	r4, r2, [sp, #8]
90005e28:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005e2c:	225f      	movs	r2, #95	@ 0x5f
90005e2e:	f7fe ff43 	bl	90004cb8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005e32:	4809      	ldr	r0, [pc, #36]	@ (90005e58 <_Z23getFont_verdana_40_4bppv+0x7c>)
90005e34:	f022 fc92 	bl	9002875c <atexit>
90005e38:	4628      	mov	r0, r5
90005e3a:	f022 f907 	bl	9002804c <__cxa_guard_release>
}
90005e3e:	4802      	ldr	r0, [pc, #8]	@ (90005e48 <_Z23getFont_verdana_40_4bppv+0x6c>)
90005e40:	b00f      	add	sp, #60	@ 0x3c
90005e42:	bd30      	pop	{r4, r5, pc}
90005e44:	24007b80 	.word	0x24007b80
90005e48:	24007b84 	.word	0x24007b84
90005e4c:	9002dfdc 	.word	0x9002dfdc
90005e50:	9002e2c8 	.word	0x9002e2c8
90005e54:	90206ed0 	.word	0x90206ed0
90005e58:	90005dd9 	.word	0x90005dd9

90005e5c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90005e5c:	2000      	movs	r0, #0
90005e5e:	4770      	bx	lr

90005e60 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90005e60:	2000      	movs	r0, #0
90005e62:	4770      	bx	lr

90005e64 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005e64:	b40e      	push	{r1, r2, r3}
90005e66:	b500      	push	{lr}
90005e68:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005e6a:	2100      	movs	r1, #0
{
90005e6c:	ab03      	add	r3, sp, #12
90005e6e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90005e72:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005e74:	f010 fc68 	bl	90016748 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005e78:	b002      	add	sp, #8
90005e7a:	f85d eb04 	ldr.w	lr, [sp], #4
90005e7e:	b003      	add	sp, #12
90005e80:	4770      	bx	lr
90005e82:	bf00      	nop

90005e84 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005e84:	b40c      	push	{r2, r3}
90005e86:	b500      	push	{lr}
90005e88:	b083      	sub	sp, #12
90005e8a:	ab04      	add	r3, sp, #16
90005e8c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005e90:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90005e92:	f010 fc59 	bl	90016748 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005e96:	b003      	add	sp, #12
90005e98:	f85d eb04 	ldr.w	lr, [sp], #4
90005e9c:	b002      	add	sp, #8
90005e9e:	4770      	bx	lr

90005ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005ea0:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90005ea2:	b510      	push	{r4, lr}
90005ea4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90005ea6:	b133      	cbz	r3, 90005eb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90005ea8:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90005eaa:	b39b      	cbz	r3, 90005f14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90005eac:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90005eae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90005eb2:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90005eb4:	b923      	cbnz	r3, 90005ec0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90005eb6:	4620      	mov	r0, r4
}
90005eb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90005ebc:	f012 b902 	b.w	900180c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005ec0:	f012 f9fe 	bl	900182c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005ec4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90005ec6:	2b01      	cmp	r3, #1
90005ec8:	d92a      	bls.n	90005f20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90005eca:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90005ecc:	1c53      	adds	r3, r2, #1
90005ece:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005ed0:	2b09      	cmp	r3, #9
90005ed2:	d812      	bhi.n	90005efa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90005ed4:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90005ed8:	f640 103f 	movw	r0, #2367	@ 0x93f
90005edc:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90005ede:	4281      	cmp	r1, r0
90005ee0:	d1e9      	bne.n	90005eb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005ee2:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005ee6:	0052      	lsls	r2, r2, #1
90005ee8:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90005eea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90005eee:	4422      	add	r2, r4
90005ef0:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90005ef4:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
90005ef6:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90005ef8:	e7dd      	b.n	90005eb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90005efa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90005efe:	f640 113f 	movw	r1, #2367	@ 0x93f
90005f02:	89db      	ldrh	r3, [r3, #14]
90005f04:	428b      	cmp	r3, r1
90005f06:	d1d6      	bne.n	90005eb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005f08:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005f0c:	2300      	movs	r3, #0
90005f0e:	0052      	lsls	r2, r2, #1
90005f10:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90005f12:	e7ea      	b.n	90005eea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90005f14:	4b05      	ldr	r3, [pc, #20]	@ (90005f2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90005f16:	21c5      	movs	r1, #197	@ 0xc5
90005f18:	4a05      	ldr	r2, [pc, #20]	@ (90005f30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90005f1a:	4806      	ldr	r0, [pc, #24]	@ (90005f34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90005f1c:	f022 fc00 	bl	90028720 <__assert_func>
            assert(offset < used);
90005f20:	4b05      	ldr	r3, [pc, #20]	@ (90005f38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90005f22:	21cb      	movs	r1, #203	@ 0xcb
90005f24:	4a05      	ldr	r2, [pc, #20]	@ (90005f3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90005f26:	4803      	ldr	r0, [pc, #12]	@ (90005f34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90005f28:	f022 fbfa 	bl	90028720 <__assert_func>
90005f2c:	9002d03c 	.word	0x9002d03c
90005f30:	9002d048 	.word	0x9002d048
90005f34:	9002d0f4 	.word	0x9002d0f4
90005f38:	9002d140 	.word	0x9002d140
90005f3c:	9002d150 	.word	0x9002d150

90005f40 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90005f40:	f012 b889 	b.w	90018056 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90005f44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90005f44:	b510      	push	{r4, lr}
90005f46:	b086      	sub	sp, #24
90005f48:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90005f4c:	ac0a      	add	r4, sp, #40	@ 0x28
{
90005f4e:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005f52:	461a      	mov	r2, r3
90005f54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90005f56:	4661      	mov	r1, ip
90005f58:	9401      	str	r4, [sp, #4]
90005f5a:	9300      	str	r3, [sp, #0]
90005f5c:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90005f5e:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005f60:	f00f f840 	bl	90014fe4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90005f64:	b006      	add	sp, #24
90005f66:	bd10      	pop	{r4, pc}

90005f68 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90005f68:	b9e0      	cbnz	r0, 90005fa4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90005f6a:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90005f6c:	4b13      	ldr	r3, [pc, #76]	@ (90005fbc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90005f6e:	681b      	ldr	r3, [r3, #0]
90005f70:	b1cb      	cbz	r3, 90005fa6 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005f72:	4c13      	ldr	r4, [pc, #76]	@ (90005fc0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005f74:	4813      	ldr	r0, [pc, #76]	@ (90005fc4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005f76:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005f7a:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005f7c:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005f7e:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005f80:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005f82:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005f84:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90005f86:	4b10      	ldr	r3, [pc, #64]	@ (90005fc8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90005f88:	2200      	movs	r2, #0
90005f8a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90005f8c:	f000 f83a 	bl	90006004 <_ZN17TypedTextDatabase8getFontsEv>
90005f90:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90005f92:	f000 f835 	bl	90006000 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90005f96:	4b0d      	ldr	r3, [pc, #52]	@ (90005fcc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90005f98:	4a0d      	ldr	r2, [pc, #52]	@ (90005fd0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90005f9a:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90005f9c:	4b0d      	ldr	r3, [pc, #52]	@ (90005fd4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90005f9e:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005fa0:	8018      	strh	r0, [r3, #0]
    }
}
90005fa2:	bd38      	pop	{r3, r4, r5, pc}
90005fa4:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005fa6:	4c0c      	ldr	r4, [pc, #48]	@ (90005fd8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90005fa8:	4905      	ldr	r1, [pc, #20]	@ (90005fc0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005faa:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90005fac:	480b      	ldr	r0, [pc, #44]	@ (90005fdc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90005fae:	4b05      	ldr	r3, [pc, #20]	@ (90005fc4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005fb0:	4a0b      	ldr	r2, [pc, #44]	@ (90005fe0 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90005fb2:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90005fb4:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90005fb6:	2c00      	cmp	r4, #0
90005fb8:	d1e5      	bne.n	90005f86 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90005fba:	bd38      	pop	{r3, r4, r5, pc}
90005fbc:	24007bbc 	.word	0x24007bbc
90005fc0:	24007bb4 	.word	0x24007bb4
90005fc4:	24007bb0 	.word	0x24007bb0
90005fc8:	24007bb8 	.word	0x24007bb8
90005fcc:	24021c34 	.word	0x24021c34
90005fd0:	24021c3c 	.word	0x24021c3c
90005fd4:	24021c38 	.word	0x24021c38
90005fd8:	90207480 	.word	0x90207480
90005fdc:	9020743c 	.word	0x9020743c
90005fe0:	90207404 	.word	0x90207404

90005fe4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90005fe4:	4a04      	ldr	r2, [pc, #16]	@ (90005ff8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90005fe6:	4b05      	ldr	r3, [pc, #20]	@ (90005ffc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90005fe8:	6812      	ldr	r2, [r2, #0]
90005fea:	681b      	ldr	r3, [r3, #0]
90005fec:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90005ff0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90005ff4:	4770      	bx	lr
90005ff6:	bf00      	nop
90005ff8:	24007bb0 	.word	0x24007bb0
90005ffc:	24007bb4 	.word	0x24007bb4

90006000 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90006000:	200e      	movs	r0, #14
90006002:	4770      	bx	lr

90006004 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90006004:	4800      	ldr	r0, [pc, #0]	@ (90006008 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90006006:	4770      	bx	lr
90006008:	24007bc0 	.word	0x24007bc0

9000600c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
9000600c:	b510      	push	{r4, lr}
};
9000600e:	4c05      	ldr	r4, [pc, #20]	@ (90006024 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90006010:	f7ff fea4 	bl	90005d5c <_Z23getFont_verdana_20_4bppv>
};
90006014:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90006016:	f7ff fee1 	bl	90005ddc <_Z23getFont_verdana_40_4bppv>
};
9000601a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
9000601c:	f7ff fe5e 	bl	90005cdc <_Z23getFont_verdana_10_4bppv>
};
90006020:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90006022:	bd10      	pop	{r4, pc}
90006024:	24007bc0 	.word	0x24007bc0

90006028 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
90006028:	b410      	push	{r4}
    pointArray = 0;
9000602a:	2400      	movs	r4, #0
9000602c:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
9000602e:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90006030:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90006032:	601c      	str	r4, [r3, #0]
}
90006034:	f85d 4b04 	ldr.w	r4, [sp], #4
90006038:	4770      	bx	lr
9000603a:	bf00      	nop

9000603c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
9000603c:	4770      	bx	lr
9000603e:	bf00      	nop

90006040 <_ZN19FrontendApplicationD0Ev>:
90006040:	b510      	push	{r4, lr}
90006042:	4604      	mov	r4, r0
90006044:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90006048:	f021 fff2 	bl	90028030 <_ZdlPvj>
9000604c:	4620      	mov	r0, r4
9000604e:	bd10      	pop	{r4, pc}

90006050 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006050:	b510      	push	{r4, lr}
90006052:	4604      	mov	r4, r0
    {
        model.tick();
90006054:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90006058:	f000 f816 	bl	90006088 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
9000605c:	4620      	mov	r0, r4
    }
9000605e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90006062:	f00f bca5 	b.w	900159b0 <_ZN8touchgfx11Application15handleTickEventEv>
90006066:	bf00      	nop

90006068 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006068:	b510      	push	{r4, lr}
9000606a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
9000606c:	f7fe fd86 	bl	90004b7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90006070:	4b01      	ldr	r3, [pc, #4]	@ (90006078 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90006072:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90006074:	6023      	str	r3, [r4, #0]
}
90006076:	bd10      	pop	{r4, pc}
90006078:	9002d22c 	.word	0x9002d22c

9000607c <_ZN5ModelC1Ev>:
	extern osMessageQueueId_t noteQueueHandle;
	extern osMessageQueueId_t stateQueueHandle;
	extern osMessageQueueId_t soundQueueHandle;
}

Model::Model() : modelListener(0)
9000607c:	2200      	movs	r2, #0
9000607e:	e9c0 2200 	strd	r2, r2, [r0]
90006082:	6082      	str	r2, [r0, #8]
{

}
90006084:	4770      	bx	lr
90006086:	bf00      	nop

90006088 <_ZN5Model4tickEv>:

void Model::tick()
{
90006088:	b510      	push	{r4, lr}
9000608a:	4601      	mov	r1, r0
9000608c:	b082      	sub	sp, #8
	int counter = 0;
9000608e:	2300      	movs	r3, #0
	osStatus_t status = osMessageQueueGet(soundQueueHandle, &counter, NULL, 0U); //wait for message
90006090:	4c07      	ldr	r4, [pc, #28]	@ (900060b0 <_ZN5Model4tickEv+0x28>)
90006092:	461a      	mov	r2, r3
90006094:	6820      	ldr	r0, [r4, #0]
{
90006096:	460c      	mov	r4, r1
	osStatus_t status = osMessageQueueGet(soundQueueHandle, &counter, NULL, 0U); //wait for message
90006098:	a901      	add	r1, sp, #4
	int counter = 0;
9000609a:	9301      	str	r3, [sp, #4]
	osStatus_t status = osMessageQueueGet(soundQueueHandle, &counter, NULL, 0U); //wait for message
9000609c:	f007 f94c 	bl	9000d338 <osMessageQueueGet>
	if(status == osOK) {
900060a0:	b920      	cbnz	r0, 900060ac <_ZN5Model4tickEv+0x24>
		modelListener->updateCount(counter);
900060a2:	6820      	ldr	r0, [r4, #0]
900060a4:	9901      	ldr	r1, [sp, #4]
900060a6:	6803      	ldr	r3, [r0, #0]
900060a8:	689b      	ldr	r3, [r3, #8]
900060aa:	4798      	blx	r3
	}
}
900060ac:	b002      	add	sp, #8
900060ae:	bd10      	pop	{r4, pc}
900060b0:	240076e0 	.word	0x240076e0

900060b4 <_ZN5Model8sendNoteEi>:

void Model::sendNote(int note) {
900060b4:	b430      	push	{r4, r5}
	newnote = note;
	osMessageQueuePut(noteQueueHandle, &newnote, 0U, 0U);
900060b6:	2300      	movs	r3, #0
void Model::sendNote(int note) {
900060b8:	460c      	mov	r4, r1
	osMessageQueuePut(noteQueueHandle, &newnote, 0U, 0U);
900060ba:	4d04      	ldr	r5, [pc, #16]	@ (900060cc <_ZN5Model8sendNoteEi+0x18>)
	newnote = note;
900060bc:	4601      	mov	r1, r0
	osMessageQueuePut(noteQueueHandle, &newnote, 0U, 0U);
900060be:	461a      	mov	r2, r3
900060c0:	6828      	ldr	r0, [r5, #0]
	newnote = note;
900060c2:	f841 4f04 	str.w	r4, [r1, #4]!
}
900060c6:	bc30      	pop	{r4, r5}
	osMessageQueuePut(noteQueueHandle, &newnote, 0U, 0U);
900060c8:	f007 b8fa 	b.w	9000d2c0 <osMessageQueuePut>
900060cc:	240076e8 	.word	0x240076e8

900060d0 <_ZN5Model9sendStateEi>:

void Model::sendState(int state) {
900060d0:	b430      	push	{r4, r5}
	newstate = state;
	osMessageQueuePut(stateQueueHandle, &newstate, 0U, 0U);
900060d2:	2300      	movs	r3, #0
void Model::sendState(int state) {
900060d4:	460c      	mov	r4, r1
	osMessageQueuePut(stateQueueHandle, &newstate, 0U, 0U);
900060d6:	4d04      	ldr	r5, [pc, #16]	@ (900060e8 <_ZN5Model9sendStateEi+0x18>)
	newstate = state;
900060d8:	4601      	mov	r1, r0
	osMessageQueuePut(stateQueueHandle, &newstate, 0U, 0U);
900060da:	461a      	mov	r2, r3
900060dc:	6828      	ldr	r0, [r5, #0]
	newstate = state;
900060de:	f841 4f08 	str.w	r4, [r1, #8]!
}
900060e2:	bc30      	pop	{r4, r5}
	osMessageQueuePut(stateQueueHandle, &newstate, 0U, 0U);
900060e4:	f007 b8ec 	b.w	9000d2c0 <osMessageQueuePut>
900060e8:	240076e4 	.word	0x240076e4

900060ec <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
900060ec:	4770      	bx	lr
900060ee:	bf00      	nop

900060f0 <_ZThn4_N16Screen1PresenterD1Ev>:
900060f0:	3804      	subs	r0, #4
900060f2:	4770      	bx	lr

900060f4 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
900060f4:	4770      	bx	lr
900060f6:	bf00      	nop

900060f8 <_ZN16Screen1Presenter11updateCountEi>:
	model->sendState(state);
}

void Screen1Presenter::updateCount(int counter)
{
	view.updateCount(counter);
900060f8:	68c0      	ldr	r0, [r0, #12]
900060fa:	6803      	ldr	r3, [r0, #0]
900060fc:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900060fe:	4718      	bx	r3

90006100 <_ZN16Screen1PresenterD0Ev>:
90006100:	b510      	push	{r4, lr}
90006102:	4604      	mov	r4, r0
90006104:	2110      	movs	r1, #16
90006106:	f021 ff93 	bl	90028030 <_ZdlPvj>
9000610a:	4620      	mov	r0, r4
9000610c:	bd10      	pop	{r4, pc}
9000610e:	bf00      	nop

90006110 <_ZThn4_N16Screen1PresenterD0Ev>:
90006110:	b510      	push	{r4, lr}
90006112:	1f04      	subs	r4, r0, #4
90006114:	2110      	movs	r1, #16
90006116:	4620      	mov	r0, r4
90006118:	f021 ff8a 	bl	90028030 <_ZdlPvj>
9000611c:	4620      	mov	r0, r4
9000611e:	bd10      	pop	{r4, pc}

90006120 <_ZN16Screen1Presenter8sendNoteEi>:
	model->sendNote(note);
90006120:	6880      	ldr	r0, [r0, #8]
90006122:	f7ff bfc7 	b.w	900060b4 <_ZN5Model8sendNoteEi>
90006126:	bf00      	nop

90006128 <_ZN16Screen1Presenter9sendStateEi>:
	model->sendState(state);
90006128:	6880      	ldr	r0, [r0, #8]
9000612a:	f7ff bfd1 	b.w	900060d0 <_ZN5Model9sendStateEi>
9000612e:	bf00      	nop

90006130 <_ZThn4_N16Screen1Presenter11updateCountEi>:

    virtual void sendNote(int note);
    virtual void sendState(int state);
    virtual void updateCount(int counter);
90006130:	6880      	ldr	r0, [r0, #8]
90006132:	6803      	ldr	r3, [r0, #0]
90006134:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90006136:	4718      	bx	r3

90006138 <_ZN16Screen1PresenterC1ER11Screen1View>:
    : view(v)
90006138:	4a05      	ldr	r2, [pc, #20]	@ (90006150 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
9000613a:	60c1      	str	r1, [r0, #12]
9000613c:	6002      	str	r2, [r0, #0]
Screen1Presenter::Screen1Presenter(Screen1View& v)
9000613e:	b410      	push	{r4}
    ModelListener() : model(0) {}
90006140:	2400      	movs	r4, #0
90006142:	6084      	str	r4, [r0, #8]
    : view(v)
90006144:	f102 0424 	add.w	r4, r2, #36	@ 0x24
90006148:	6044      	str	r4, [r0, #4]
}
9000614a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000614e:	4770      	bx	lr
90006150:	9002d280 	.word	0x9002d280

90006154 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
90006154:	4770      	bx	lr
90006156:	bf00      	nop

90006158 <_ZN11Screen1View5playCEv>:

void Screen1View::playC()
{
	presenter->sendNote(0);
90006158:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9000615a:	2100      	movs	r1, #0
9000615c:	6803      	ldr	r3, [r0, #0]
9000615e:	691b      	ldr	r3, [r3, #16]
90006160:	4718      	bx	r3
90006162:	bf00      	nop

90006164 <_ZN11Screen1View7playCISEv>:
}
void Screen1View::playCIS()
{
	presenter->sendNote(1);
90006164:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006166:	2101      	movs	r1, #1
90006168:	6803      	ldr	r3, [r0, #0]
9000616a:	691b      	ldr	r3, [r3, #16]
9000616c:	4718      	bx	r3
9000616e:	bf00      	nop

90006170 <_ZN11Screen1View5playDEv>:
}
void Screen1View::playD()
{
	presenter->sendNote(2);
90006170:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006172:	2102      	movs	r1, #2
90006174:	6803      	ldr	r3, [r0, #0]
90006176:	691b      	ldr	r3, [r3, #16]
90006178:	4718      	bx	r3
9000617a:	bf00      	nop

9000617c <_ZN11Screen1View7playDISEv>:
}
void Screen1View::playDIS()
{
	presenter->sendNote(3);
9000617c:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9000617e:	2103      	movs	r1, #3
90006180:	6803      	ldr	r3, [r0, #0]
90006182:	691b      	ldr	r3, [r3, #16]
90006184:	4718      	bx	r3
90006186:	bf00      	nop

90006188 <_ZN11Screen1View5playEEv>:
}
void Screen1View::playE()
{
	presenter->sendNote(4);
90006188:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9000618a:	2104      	movs	r1, #4
9000618c:	6803      	ldr	r3, [r0, #0]
9000618e:	691b      	ldr	r3, [r3, #16]
90006190:	4718      	bx	r3
90006192:	bf00      	nop

90006194 <_ZN11Screen1View5playFEv>:
}
void Screen1View::playF()
{
	presenter->sendNote(5);
90006194:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006196:	2105      	movs	r1, #5
90006198:	6803      	ldr	r3, [r0, #0]
9000619a:	691b      	ldr	r3, [r3, #16]
9000619c:	4718      	bx	r3
9000619e:	bf00      	nop

900061a0 <_ZN11Screen1View7playFISEv>:
}
void Screen1View::playFIS()
{
	presenter->sendNote(6);
900061a0:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900061a2:	2106      	movs	r1, #6
900061a4:	6803      	ldr	r3, [r0, #0]
900061a6:	691b      	ldr	r3, [r3, #16]
900061a8:	4718      	bx	r3
900061aa:	bf00      	nop

900061ac <_ZN11Screen1View5playGEv>:
}
void Screen1View::playG()
{
	presenter->sendNote(7);
900061ac:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900061ae:	2107      	movs	r1, #7
900061b0:	6803      	ldr	r3, [r0, #0]
900061b2:	691b      	ldr	r3, [r3, #16]
900061b4:	4718      	bx	r3
900061b6:	bf00      	nop

900061b8 <_ZN11Screen1View7playGISEv>:
}
void Screen1View::playGIS()
{
	presenter->sendNote(8);
900061b8:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900061ba:	2108      	movs	r1, #8
900061bc:	6803      	ldr	r3, [r0, #0]
900061be:	691b      	ldr	r3, [r3, #16]
900061c0:	4718      	bx	r3
900061c2:	bf00      	nop

900061c4 <_ZN11Screen1View5playAEv>:
}
void Screen1View::playA()
{
	presenter->sendNote(9);
900061c4:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900061c6:	2109      	movs	r1, #9
900061c8:	6803      	ldr	r3, [r0, #0]
900061ca:	691b      	ldr	r3, [r3, #16]
900061cc:	4718      	bx	r3
900061ce:	bf00      	nop

900061d0 <_ZN11Screen1View7playAISEv>:
}
void Screen1View::playAIS()
{
	presenter->sendNote(10);
900061d0:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900061d2:	210a      	movs	r1, #10
900061d4:	6803      	ldr	r3, [r0, #0]
900061d6:	691b      	ldr	r3, [r3, #16]
900061d8:	4718      	bx	r3
900061da:	bf00      	nop

900061dc <_ZN11Screen1View5playHEv>:
}
void Screen1View::playH()
{
	presenter->sendNote(11);
900061dc:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900061de:	210b      	movs	r1, #11
900061e0:	6803      	ldr	r3, [r0, #0]
900061e2:	691b      	ldr	r3, [r3, #16]
900061e4:	4718      	bx	r3
900061e6:	bf00      	nop

900061e8 <_ZN11Screen1View8playNoneEv>:
}
void Screen1View::playNone()
{
	presenter->sendNote(12);
900061e8:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900061ea:	210c      	movs	r1, #12
900061ec:	6803      	ldr	r3, [r0, #0]
900061ee:	691b      	ldr	r3, [r3, #16]
900061f0:	4718      	bx	r3
900061f2:	bf00      	nop

900061f4 <_ZN11Screen1View13functionRIGHTEv>:
}
void Screen1View::functionRIGHT()
{
	presenter->sendState(2);
900061f4:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900061f6:	2102      	movs	r1, #2
900061f8:	6803      	ldr	r3, [r0, #0]
900061fa:	695b      	ldr	r3, [r3, #20]
900061fc:	4718      	bx	r3
900061fe:	bf00      	nop

90006200 <_ZN11Screen1View12functionLEFTEv>:
}
void Screen1View::functionLEFT()
{
	presenter->sendState(0);
90006200:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006202:	2100      	movs	r1, #0
90006204:	6803      	ldr	r3, [r0, #0]
90006206:	695b      	ldr	r3, [r3, #20]
90006208:	4718      	bx	r3
9000620a:	bf00      	nop

9000620c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
9000620c:	4b03      	ldr	r3, [pc, #12]	@ (9000621c <_ZN11Screen1ViewD1Ev+0x10>)
9000620e:	b510      	push	{r4, lr}
90006210:	4604      	mov	r4, r0
90006212:	6003      	str	r3, [r0, #0]
90006214:	f7fe fdea 	bl	90004dec <_ZN15Screen1ViewBaseD1Ev>
90006218:	4620      	mov	r0, r4
9000621a:	bd10      	pop	{r4, pc}
9000621c:	9002d2bc 	.word	0x9002d2bc

90006220 <_ZN11Screen1ViewD0Ev>:
90006220:	4b06      	ldr	r3, [pc, #24]	@ (9000623c <_ZN11Screen1ViewD0Ev+0x1c>)
90006222:	b510      	push	{r4, lr}
90006224:	4604      	mov	r4, r0
90006226:	6003      	str	r3, [r0, #0]
90006228:	f7fe fde0 	bl	90004dec <_ZN15Screen1ViewBaseD1Ev>
9000622c:	f44f 619c 	mov.w	r1, #1248	@ 0x4e0
90006230:	4620      	mov	r0, r4
90006232:	f021 fefd 	bl	90028030 <_ZdlPvj>
90006236:	4620      	mov	r0, r4
90006238:	bd10      	pop	{r4, pc}
9000623a:	bf00      	nop
9000623c:	9002d2bc 	.word	0x9002d2bc

90006240 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
90006240:	b510      	push	{r4, lr}
90006242:	4604      	mov	r4, r0
90006244:	f7fe ff88 	bl	90005158 <_ZN15Screen1ViewBaseC1Ev>
90006248:	4b01      	ldr	r3, [pc, #4]	@ (90006250 <_ZN11Screen1ViewC1Ev+0x10>)
}
9000624a:	4620      	mov	r0, r4
Screen1View::Screen1View()
9000624c:	6023      	str	r3, [r4, #0]
}
9000624e:	bd10      	pop	{r4, pc}
90006250:	9002d2bc 	.word	0x9002d2bc

90006254 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
90006254:	f7fe bdcc 	b.w	90004df0 <_ZN15Screen1ViewBase11setupScreenEv>

90006258 <_ZN11Screen1View11updateCountEi>:
}
void Screen1View::updateCount(int counter)
{
90006258:	b510      	push	{r4, lr}
9000625a:	4604      	mov	r4, r0
9000625c:	460b      	mov	r3, r1
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%u", counter);
9000625e:	4a06      	ldr	r2, [pc, #24]	@ (90006278 <_ZN11Screen1View11updateCountEi+0x20>)
90006260:	210a      	movs	r1, #10
90006262:	f200 40bc 	addw	r0, r0, #1212	@ 0x4bc
90006266:	f012 fdd3 	bl	90018e10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
9000626a:	f504 608e 	add.w	r0, r4, #1136	@ 0x470
}
9000626e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
90006272:	f010 bb94 	b.w	9001699e <_ZNK8touchgfx8Drawable10invalidateEv>
90006276:	bf00      	nop
90006278:	9002d2b0 	.word	0x9002d2b0

9000627c <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
9000627c:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006280:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90006282:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006286:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
9000628a:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
9000628c:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
9000628e:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006292:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90006296:	4770      	bx	lr

90006298 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006298:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9000629c:	2b01      	cmp	r3, #1
9000629e:	d102      	bne.n	900062a6 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
900062a0:	2300      	movs	r3, #0
900062a2:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
900062a6:	2000      	movs	r0, #0
900062a8:	4770      	bx	lr
900062aa:	bf00      	nop

900062ac <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
900062ac:	2000      	movs	r0, #0
900062ae:	4770      	bx	lr

900062b0 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900062b0:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900062b2:	6904      	ldr	r4, [r0, #16]
900062b4:	8900      	ldrh	r0, [r0, #8]
900062b6:	46a4      	mov	ip, r4
}
900062b8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900062bc:	4760      	bx	ip
900062be:	bf00      	nop

900062c0 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900062c0:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
900062c2:	68c4      	ldr	r4, [r0, #12]
900062c4:	8900      	ldrh	r0, [r0, #8]
900062c6:	46a4      	mov	ip, r4
}
900062c8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
900062cc:	4760      	bx	ip
900062ce:	bf00      	nop

900062d0 <FT5336_GestureConfig>:
{
900062d0:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
900062d2:	f100 0518 	add.w	r5, r0, #24
{
900062d6:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
900062d8:	7809      	ldrb	r1, [r1, #0]
900062da:	4628      	mov	r0, r5
900062dc:	f000 f96c 	bl	900065b8 <ft5336_radian_value>
900062e0:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
900062e2:	7931      	ldrb	r1, [r6, #4]
900062e4:	4628      	mov	r0, r5
900062e6:	f000 f975 	bl	900065d4 <ft5336_offset_left_right>
900062ea:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
900062ec:	7a31      	ldrb	r1, [r6, #8]
900062ee:	4628      	mov	r0, r5
900062f0:	f000 f97e 	bl	900065f0 <ft5336_offset_up_down>
900062f4:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
900062f6:	7b31      	ldrb	r1, [r6, #12]
900062f8:	4628      	mov	r0, r5
900062fa:	f000 f987 	bl	9000660c <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900062fe:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006300:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006302:	4628      	mov	r0, r5
90006304:	f000 f990 	bl	90006628 <ft5336_distance_up_down>
90006308:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000630a:	7d31      	ldrb	r1, [r6, #20]
9000630c:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000630e:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006310:	f000 f998 	bl	90006644 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006314:	42c4      	cmn	r4, r0
}
90006316:	bf14      	ite	ne
90006318:	f04f 30ff 	movne.w	r0, #4294967295
9000631c:	2000      	moveq	r0, #0
9000631e:	bd70      	pop	{r4, r5, r6, pc}

90006320 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006320:	3018      	adds	r0, #24
90006322:	f000 b9ab 	b.w	9000667c <ft5336_chip_id>
90006326:	bf00      	nop

90006328 <FT5336_GetState>:
{
90006328:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000632a:	f100 0518 	add.w	r5, r0, #24
{
9000632e:	b083      	sub	sp, #12
90006330:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006332:	4628      	mov	r0, r5
90006334:	a901      	add	r1, sp, #4
90006336:	f000 f931 	bl	9000659c <ft5336_td_status>
9000633a:	bb10      	cbnz	r0, 90006382 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
9000633c:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006340:	2b05      	cmp	r3, #5
90006342:	bf94      	ite	ls
90006344:	4619      	movls	r1, r3
90006346:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006348:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000634a:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
9000634c:	4628      	mov	r0, r5
9000634e:	2103      	movs	r1, #3
90006350:	eb0d 0203 	add.w	r2, sp, r3
90006354:	f000 f910 	bl	90006578 <ft5336_read_reg>
90006358:	b9b0      	cbnz	r0, 90006388 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000635a:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000635e:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006362:	0212      	lsls	r2, r2, #8
90006364:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006368:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000636a:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000636e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006372:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006374:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006378:	430b      	orrs	r3, r1
9000637a:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
9000637e:	b003      	add	sp, #12
90006380:	bd30      	pop	{r4, r5, pc}
90006382:	f04f 31ff 	mov.w	r1, #4294967295
90006386:	e7df      	b.n	90006348 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006388:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000638c:	e7f7      	b.n	9000637e <FT5336_GetState+0x56>
9000638e:	bf00      	nop

90006390 <FT5336_GetMultiTouchState>:
{
90006390:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006392:	f100 0518 	add.w	r5, r0, #24
{
90006396:	b088      	sub	sp, #32
90006398:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000639a:	4628      	mov	r0, r5
9000639c:	4669      	mov	r1, sp
9000639e:	f000 f8fd 	bl	9000659c <ft5336_td_status>
900063a2:	2800      	cmp	r0, #0
900063a4:	f040 809a 	bne.w	900064dc <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900063a8:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900063ac:	2b05      	cmp	r3, #5
900063ae:	bf94      	ite	ls
900063b0:	4619      	movls	r1, r3
900063b2:	2100      	movhi	r1, #0
900063b4:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900063b6:	231e      	movs	r3, #30
900063b8:	466a      	mov	r2, sp
900063ba:	4628      	mov	r0, r5
900063bc:	2103      	movs	r1, #3
900063be:	f000 f8db 	bl	90006578 <ft5336_read_reg>
900063c2:	2800      	cmp	r0, #0
900063c4:	f040 808d 	bne.w	900064e2 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900063c8:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900063cc:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900063d0:	020a      	lsls	r2, r1, #8
900063d2:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900063d6:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900063d8:	f89d c007 	ldrb.w	ip, [sp, #7]
900063dc:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900063e0:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900063e2:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900063e6:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900063ea:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900063ec:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900063f0:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900063f2:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900063f4:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900063f6:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900063f8:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900063fc:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900063fe:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006402:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006406:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006408:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000640a:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000640e:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006410:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006412:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006414:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006418:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000641a:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000641c:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006420:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006424:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006426:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006428:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000642a:	ea45 050c 	orr.w	r5, r5, ip
9000642e:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006432:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006436:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006438:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000643a:	0212      	lsls	r2, r2, #8
9000643c:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006440:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006442:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006446:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000644a:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000644c:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000644e:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006452:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006454:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006458:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000645a:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000645c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006460:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006462:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006466:	4313      	orrs	r3, r2
90006468:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000646a:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000646c:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006470:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006474:	020a      	lsls	r2, r1, #8
90006476:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000647a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000647c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006480:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006482:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006486:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006488:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000648c:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000648e:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006490:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006494:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006496:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006498:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000649a:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000649e:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900064a0:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900064a4:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064a6:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900064aa:	f89d 301d 	ldrb.w	r3, [sp, #29]
900064ae:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900064b0:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900064b2:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900064b4:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900064b8:	6625      	str	r5, [r4, #96]	@ 0x60
900064ba:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064bc:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900064c0:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064c2:	021b      	lsls	r3, r3, #8
900064c4:	f89d 101b 	ldrb.w	r1, [sp, #27]
900064c8:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
900064cc:	430b      	orrs	r3, r1
900064ce:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064d0:	f89d 3019 	ldrb.w	r3, [sp, #25]
900064d4:	4313      	orrs	r3, r2
900064d6:	6163      	str	r3, [r4, #20]
}
900064d8:	b008      	add	sp, #32
900064da:	bd70      	pop	{r4, r5, r6, pc}
900064dc:	f04f 31ff 	mov.w	r1, #4294967295
900064e0:	e768      	b.n	900063b4 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
900064e2:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900064e6:	e7f7      	b.n	900064d8 <FT5336_GetMultiTouchState+0x148>

900064e8 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
900064e8:	3018      	adds	r0, #24
900064ea:	f000 b84d 	b.w	90006588 <ft5336_gest_id>
900064ee:	bf00      	nop

900064f0 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
900064f0:	2101      	movs	r1, #1
900064f2:	3018      	adds	r0, #24
900064f4:	f000 b8b4 	b.w	90006660 <ft5336_g_mode>

900064f8 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
900064f8:	2100      	movs	r1, #0
900064fa:	3018      	adds	r0, #24
900064fc:	f000 b8b0 	b.w	90006660 <ft5336_g_mode>

90006500 <FT5336_Init>:
{
90006500:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006502:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90006506:	b98d      	cbnz	r5, 9000652c <FT5336_Init+0x2c>
    pObj->IO.Init();
90006508:	4606      	mov	r6, r0
9000650a:	4604      	mov	r4, r0
9000650c:	f856 3b18 	ldr.w	r3, [r6], #24
90006510:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006512:	4629      	mov	r1, r5
90006514:	4630      	mov	r0, r6
90006516:	f000 f8a3 	bl	90006660 <ft5336_g_mode>
  if(ret != FT5336_OK)
9000651a:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
9000651c:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006520:	bf18      	it	ne
90006522:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006524:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90006528:	4240      	negs	r0, r0
}
9000652a:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
9000652c:	2000      	movs	r0, #0
}
9000652e:	bd70      	pop	{r4, r5, r6, pc}

90006530 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90006530:	2000      	movs	r0, #0
90006532:	4770      	bx	lr

90006534 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006534:	b1c0      	cbz	r0, 90006568 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006536:	890a      	ldrh	r2, [r1, #8]
{
90006538:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
9000653a:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
9000653e:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006540:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006544:	694a      	ldr	r2, [r1, #20]
90006546:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
9000654a:	4909      	ldr	r1, [pc, #36]	@ (90006570 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
9000654c:	60c5      	str	r5, [r0, #12]
9000654e:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006552:	4a08      	ldr	r2, [pc, #32]	@ (90006574 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006554:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006558:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
9000655a:	b10b      	cbz	r3, 90006560 <FT5336_RegisterBusIO+0x2c>
}
9000655c:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
9000655e:	4718      	bx	r3
}
90006560:	f04f 30ff 	mov.w	r0, #4294967295
90006564:	bc30      	pop	{r4, r5}
90006566:	4770      	bx	lr
90006568:	f04f 30ff 	mov.w	r0, #4294967295
9000656c:	4770      	bx	lr
9000656e:	bf00      	nop
90006570:	900062b1 	.word	0x900062b1
90006574:	900062c1 	.word	0x900062c1

90006578 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006578:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000657a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
9000657e:	46a4      	mov	ip, r4
}
90006580:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006584:	4760      	bx	ip
90006586:	bf00      	nop

90006588 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006588:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000658a:	2301      	movs	r3, #1
{
9000658c:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000658e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006592:	4619      	mov	r1, r3
90006594:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006596:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000659a:	4760      	bx	ip

9000659c <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
9000659c:	b538      	push	{r3, r4, r5, lr}
9000659e:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900065a0:	2301      	movs	r3, #1
900065a2:	2102      	movs	r1, #2
900065a4:	4622      	mov	r2, r4
900065a6:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
900065aa:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
900065ac:	b918      	cbnz	r0, 900065b6 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900065ae:	7823      	ldrb	r3, [r4, #0]
900065b0:	f003 030f 	and.w	r3, r3, #15
900065b4:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
900065b6:	bd38      	pop	{r3, r4, r5, pc}

900065b8 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
900065b8:	b510      	push	{r4, lr}
900065ba:	460c      	mov	r4, r1
900065bc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900065be:	2301      	movs	r3, #1
900065c0:	2191      	movs	r1, #145	@ 0x91
{
900065c2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900065c6:	f10d 0207 	add.w	r2, sp, #7
900065ca:	6804      	ldr	r4, [r0, #0]
900065cc:	6880      	ldr	r0, [r0, #8]
900065ce:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
900065d0:	b002      	add	sp, #8
900065d2:	bd10      	pop	{r4, pc}

900065d4 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
900065d4:	b510      	push	{r4, lr}
900065d6:	460c      	mov	r4, r1
900065d8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900065da:	2301      	movs	r3, #1
900065dc:	2192      	movs	r1, #146	@ 0x92
{
900065de:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900065e2:	f10d 0207 	add.w	r2, sp, #7
900065e6:	6804      	ldr	r4, [r0, #0]
900065e8:	6880      	ldr	r0, [r0, #8]
900065ea:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
900065ec:	b002      	add	sp, #8
900065ee:	bd10      	pop	{r4, pc}

900065f0 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
900065f0:	b510      	push	{r4, lr}
900065f2:	460c      	mov	r4, r1
900065f4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900065f6:	2301      	movs	r3, #1
900065f8:	2193      	movs	r1, #147	@ 0x93
{
900065fa:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900065fe:	f10d 0207 	add.w	r2, sp, #7
90006602:	6804      	ldr	r4, [r0, #0]
90006604:	6880      	ldr	r0, [r0, #8]
90006606:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006608:	b002      	add	sp, #8
9000660a:	bd10      	pop	{r4, pc}

9000660c <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
9000660c:	b510      	push	{r4, lr}
9000660e:	460c      	mov	r4, r1
90006610:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006612:	2301      	movs	r3, #1
90006614:	2194      	movs	r1, #148	@ 0x94
{
90006616:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000661a:	f10d 0207 	add.w	r2, sp, #7
9000661e:	6804      	ldr	r4, [r0, #0]
90006620:	6880      	ldr	r0, [r0, #8]
90006622:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006624:	b002      	add	sp, #8
90006626:	bd10      	pop	{r4, pc}

90006628 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006628:	b510      	push	{r4, lr}
9000662a:	460c      	mov	r4, r1
9000662c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000662e:	2301      	movs	r3, #1
90006630:	2195      	movs	r1, #149	@ 0x95
{
90006632:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006636:	f10d 0207 	add.w	r2, sp, #7
9000663a:	6804      	ldr	r4, [r0, #0]
9000663c:	6880      	ldr	r0, [r0, #8]
9000663e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006640:	b002      	add	sp, #8
90006642:	bd10      	pop	{r4, pc}

90006644 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006644:	b510      	push	{r4, lr}
90006646:	460c      	mov	r4, r1
90006648:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000664a:	2301      	movs	r3, #1
9000664c:	2196      	movs	r1, #150	@ 0x96
{
9000664e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006652:	f10d 0207 	add.w	r2, sp, #7
90006656:	6804      	ldr	r4, [r0, #0]
90006658:	6880      	ldr	r0, [r0, #8]
9000665a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
9000665c:	b002      	add	sp, #8
9000665e:	bd10      	pop	{r4, pc}

90006660 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006660:	b510      	push	{r4, lr}
90006662:	460c      	mov	r4, r1
90006664:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006666:	2301      	movs	r3, #1
90006668:	21a4      	movs	r1, #164	@ 0xa4
{
9000666a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000666e:	f10d 0207 	add.w	r2, sp, #7
90006672:	6804      	ldr	r4, [r0, #0]
90006674:	6880      	ldr	r0, [r0, #8]
90006676:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90006678:	b002      	add	sp, #8
9000667a:	bd10      	pop	{r4, pc}

9000667c <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
9000667c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000667e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90006682:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006684:	2301      	movs	r3, #1
90006686:	46a4      	mov	ip, r4
90006688:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
9000668a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000668e:	4760      	bx	ip

90006690 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90006690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006692:	680b      	ldr	r3, [r1, #0]
{
90006694:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006696:	4c2a      	ldr	r4, [pc, #168]	@ (90006740 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006698:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
9000669c:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
9000669e:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
900066a0:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066a2:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
900066a4:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900066a6:	2301      	movs	r3, #1
900066a8:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
900066aa:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066ac:	f005 ffba 	bl	9000c624 <HAL_SDRAM_SendCommand>
900066b0:	2800      	cmp	r0, #0
900066b2:	d142      	bne.n	9000673a <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
900066b4:	f000 ff48 	bl	90007548 <HAL_GetTick>
900066b8:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
900066ba:	f000 ff45 	bl	90007548 <HAL_GetTick>
900066be:	4286      	cmp	r6, r0
900066c0:	d0fb      	beq.n	900066ba <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900066c2:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900066c4:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
900066c6:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066c8:	491d      	ldr	r1, [pc, #116]	@ (90006740 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900066ca:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
900066cc:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
900066ce:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066d0:	4638      	mov	r0, r7
900066d2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
900066d6:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
900066d8:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066da:	f005 ffa3 	bl	9000c624 <HAL_SDRAM_SendCommand>
900066de:	bb60      	cbnz	r0, 9000673a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066e0:	4917      	ldr	r1, [pc, #92]	@ (90006740 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
900066e2:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
900066e6:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066e8:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
900066ea:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
900066ee:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066f0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
900066f4:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066f6:	f005 ff95 	bl	9000c624 <HAL_SDRAM_SendCommand>
900066fa:	b9f0      	cbnz	r0, 9000673a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066fc:	4910      	ldr	r1, [pc, #64]	@ (90006740 <MT48LC4M32B2_Init+0xb0>)
900066fe:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006700:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006704:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006706:	696a      	ldr	r2, [r5, #20]
90006708:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
9000670a:	69aa      	ldr	r2, [r5, #24]
9000670c:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000670e:	69ea      	ldr	r2, [r5, #28]
90006710:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90006712:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006714:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006716:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006718:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000671c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006720:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006722:	f005 ff7f 	bl	9000c624 <HAL_SDRAM_SendCommand>
90006726:	b940      	cbnz	r0, 9000673a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006728:	68a9      	ldr	r1, [r5, #8]
9000672a:	4638      	mov	r0, r7
9000672c:	f005 ff9a 	bl	9000c664 <HAL_SDRAM_ProgramRefreshRate>
90006730:	3800      	subs	r0, #0
90006732:	bf18      	it	ne
90006734:	2001      	movne	r0, #1
90006736:	4240      	negs	r0, r0
}
90006738:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
9000673a:	f04f 30ff 	mov.w	r0, #4294967295
}
9000673e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90006740:	24007bd0 	.word	0x24007bd0

90006744 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006744:	4a10      	ldr	r2, [pc, #64]	@ (90006788 <BSP_I2C4_DeInit+0x44>)
{
90006746:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006748:	6813      	ldr	r3, [r2, #0]
9000674a:	3b01      	subs	r3, #1
9000674c:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
9000674e:	b10b      	cbz	r3, 90006754 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90006750:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90006752:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006754:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90006758:	480c      	ldr	r0, [pc, #48]	@ (9000678c <BSP_I2C4_DeInit+0x48>)
9000675a:	f001 fab7 	bl	90007ccc <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
9000675e:	480b      	ldr	r0, [pc, #44]	@ (9000678c <BSP_I2C4_DeInit+0x48>)
90006760:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90006764:	f001 fab2 	bl	90007ccc <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006768:	4a09      	ldr	r2, [pc, #36]	@ (90006790 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
9000676a:	480a      	ldr	r0, [pc, #40]	@ (90006794 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
9000676c:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90006770:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006774:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006778:	f001 feb4 	bl	900084e4 <HAL_I2C_DeInit>
9000677c:	2800      	cmp	r0, #0
9000677e:	d0e7      	beq.n	90006750 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90006780:	f06f 0007 	mvn.w	r0, #7
}
90006784:	bd08      	pop	{r3, pc}
90006786:	bf00      	nop
90006788:	24008638 	.word	0x24008638
9000678c:	58020c00 	.word	0x58020c00
90006790:	58024400 	.word	0x58024400
90006794:	24007be0 	.word	0x24007be0

90006798 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90006798:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
9000679a:	2201      	movs	r2, #1
{
9000679c:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
9000679e:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900067a2:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
900067a6:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900067aa:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
900067ae:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900067b0:	f001 fe3c 	bl	9000842c <HAL_I2C_Init>
900067b4:	b108      	cbz	r0, 900067ba <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900067b6:	2001      	movs	r0, #1
}
900067b8:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900067ba:	4601      	mov	r1, r0
900067bc:	4620      	mov	r0, r4
900067be:	f002 f8af 	bl	90008920 <HAL_I2CEx_ConfigAnalogFilter>
900067c2:	2800      	cmp	r0, #0
900067c4:	d1f7      	bne.n	900067b6 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
900067c6:	4601      	mov	r1, r0
900067c8:	4620      	mov	r0, r4
900067ca:	f002 f8d3 	bl	90008974 <HAL_I2CEx_ConfigDigitalFilter>
900067ce:	3800      	subs	r0, #0
900067d0:	bf18      	it	ne
900067d2:	2001      	movne	r0, #1
}
900067d4:	bd10      	pop	{r4, pc}
900067d6:	bf00      	nop

900067d8 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
900067d8:	4b9a      	ldr	r3, [pc, #616]	@ (90006a44 <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
900067da:	489b      	ldr	r0, [pc, #620]	@ (90006a48 <BSP_I2C4_Init+0x270>)
900067dc:	4a9b      	ldr	r2, [pc, #620]	@ (90006a4c <BSP_I2C4_Init+0x274>)
{
900067de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
900067e2:	681c      	ldr	r4, [r3, #0]
{
900067e4:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
900067e6:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
900067e8:	b11c      	cbz	r4, 900067f2 <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
900067ea:	2000      	movs	r0, #0
}
900067ec:	b01d      	add	sp, #116	@ 0x74
900067ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
900067f2:	2201      	movs	r2, #1
900067f4:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
900067f6:	f002 f88d 	bl	90008914 <HAL_I2C_GetState>
900067fa:	2800      	cmp	r0, #0
900067fc:	d1f5      	bne.n	900067ea <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900067fe:	4d94      	ldr	r5, [pc, #592]	@ (90006a50 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006800:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
90006804:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006806:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006808:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000680c:	f04f 0800 	mov.w	r8, #0
90006810:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006814:	f043 0308 	orr.w	r3, r3, #8
90006818:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000681c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90006820:	f003 0308 	and.w	r3, r3, #8
90006824:	9313      	str	r3, [sp, #76]	@ 0x4c
90006826:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006828:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000682c:	f043 0308 	orr.w	r3, r3, #8
90006830:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90006834:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006838:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000683a:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000683e:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006842:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006844:	a916      	add	r1, sp, #88	@ 0x58
90006846:	4883      	ldr	r0, [pc, #524]	@ (90006a54 <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006848:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000684a:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000684e:	f001 f8fb 	bl	90007a48 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006852:	2312      	movs	r3, #18
90006854:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006858:	a916      	add	r1, sp, #88	@ 0x58
9000685a:	487e      	ldr	r0, [pc, #504]	@ (90006a54 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
9000685c:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000685e:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
90006862:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006866:	f001 f8ef 	bl	90007a48 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
9000686a:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
9000686e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90006872:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
90006876:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
9000687a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
9000687e:	9315      	str	r3, [sp, #84]	@ 0x54
90006880:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
90006882:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90006886:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000688a:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
9000688e:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90006892:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006896:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000689a:	f004 fdd9 	bl	9000b450 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
9000689e:	2800      	cmp	r0, #0
900068a0:	f000 81fd 	beq.w	90006c9e <BSP_I2C4_Init+0x4c6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900068a4:	4b6c      	ldr	r3, [pc, #432]	@ (90006a58 <BSP_I2C4_Init+0x280>)
  if (tsdadel_max <= 0)
900068a6:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
900068a8:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068ac:	4e6b      	ldr	r6, [pc, #428]	@ (90006a5c <BSP_I2C4_Init+0x284>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900068ae:	eb03 0350 	add.w	r3, r3, r0, lsr #1
900068b2:	9401      	str	r4, [sp, #4]
900068b4:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
900068b8:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900068ba:	9700      	str	r7, [sp, #0]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900068bc:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900068c0:	f5c3 7cc3 	rsb	ip, r3, #390	@ 0x186
900068c4:	4b66      	ldr	r3, [pc, #408]	@ (90006a60 <BSP_I2C4_Init+0x288>)
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900068c6:	007a      	lsls	r2, r7, #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
900068c8:	f1c1 0e32 	rsb	lr, r1, #50	@ 0x32
900068cc:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
900068ce:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
900068d2:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
900068d4:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
900068d8:	4689      	mov	r9, r1
900068da:	4622      	mov	r2, r4
900068dc:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900068de:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
900068e2:	46b8      	mov	r8, r7
900068e4:	eb07 0347 	add.w	r3, r7, r7, lsl #1
900068e8:	bf2c      	ite	cs
900068ea:	2001      	movcs	r0, #1
900068ec:	2000      	movcc	r0, #0
900068ee:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
900068f2:	f000 0001 	and.w	r0, r0, #1
900068f6:	eb07 0187 	add.w	r1, r7, r7, lsl #2
900068fa:	bf88      	it	hi
900068fc:	2000      	movhi	r0, #0
900068fe:	459e      	cmp	lr, r3
90006900:	eb07 0483 	add.w	r4, r7, r3, lsl #2
90006904:	9004      	str	r0, [sp, #16]
90006906:	bf8c      	ite	hi
90006908:	2000      	movhi	r0, #0
9000690a:	2001      	movls	r0, #1
9000690c:	459c      	cmp	ip, r3
9000690e:	940f      	str	r4, [sp, #60]	@ 0x3c
90006910:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
90006914:	bf38      	it	cc
90006916:	2000      	movcc	r0, #0
90006918:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
9000691c:	9006      	str	r0, [sp, #24]
9000691e:	eb07 0041 	add.w	r0, r7, r1, lsl #1
90006922:	9005      	str	r0, [sp, #20]
90006924:	bf94      	ite	ls
90006926:	2001      	movls	r0, #1
90006928:	2000      	movhi	r0, #0
9000692a:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
9000692e:	f000 0401 	and.w	r4, r0, #1
90006932:	bf38      	it	cc
90006934:	2400      	movcc	r4, #0
90006936:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006938:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000693c:	9407      	str	r4, [sp, #28]
9000693e:	bf8c      	ite	hi
90006940:	2400      	movhi	r4, #0
90006942:	2401      	movls	r4, #1
90006944:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006946:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006948:	bf38      	it	cc
9000694a:	2400      	movcc	r4, #0
9000694c:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
90006950:	bf98      	it	ls
90006952:	2001      	movls	r0, #1
90006954:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90006958:	9408      	str	r4, [sp, #32]
9000695a:	465c      	mov	r4, fp
9000695c:	f000 0001 	and.w	r0, r0, #1
90006960:	bf38      	it	cc
90006962:	2000      	movcc	r0, #0
90006964:	45de      	cmp	lr, fp
90006966:	9009      	str	r0, [sp, #36]	@ 0x24
90006968:	4658      	mov	r0, fp
9000696a:	bf8c      	ite	hi
9000696c:	2000      	movhi	r0, #0
9000696e:	2001      	movls	r0, #1
90006970:	45dc      	cmp	ip, fp
90006972:	bf38      	it	cc
90006974:	2000      	movcc	r0, #0
90006976:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
9000697a:	4683      	mov	fp, r0
9000697c:	bf94      	ite	ls
9000697e:	f04f 0b01 	movls.w	fp, #1
90006982:	f04f 0b00 	movhi.w	fp, #0
90006986:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
9000698a:	900a      	str	r0, [sp, #40]	@ 0x28
9000698c:	f00b 0b01 	and.w	fp, fp, #1
90006990:	bf38      	it	cc
90006992:	f04f 0b00 	movcc.w	fp, #0
90006996:	4658      	mov	r0, fp
90006998:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
9000699c:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
900069a0:	45de      	cmp	lr, fp
900069a2:	bf8c      	ite	hi
900069a4:	2000      	movhi	r0, #0
900069a6:	2001      	movls	r0, #1
900069a8:	45dc      	cmp	ip, fp
900069aa:	bf38      	it	cc
900069ac:	2000      	movcc	r0, #0
900069ae:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
900069b2:	900c      	str	r0, [sp, #48]	@ 0x30
900069b4:	bf98      	it	ls
900069b6:	f04f 0b01 	movls.w	fp, #1
900069ba:	9805      	ldr	r0, [sp, #20]
900069bc:	bf88      	it	hi
900069be:	f04f 0b00 	movhi.w	fp, #0
900069c2:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
900069c6:	f00b 0b01 	and.w	fp, fp, #1
900069ca:	4601      	mov	r1, r0
900069cc:	bf38      	it	cc
900069ce:	f04f 0b00 	movcc.w	fp, #0
900069d2:	4586      	cmp	lr, r0
900069d4:	bf8c      	ite	hi
900069d6:	2100      	movhi	r1, #0
900069d8:	2101      	movls	r1, #1
900069da:	4584      	cmp	ip, r0
900069dc:	4620      	mov	r0, r4
900069de:	bf38      	it	cc
900069e0:	2100      	movcc	r1, #0
900069e2:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
900069e6:	910d      	str	r1, [sp, #52]	@ 0x34
900069e8:	bf94      	ite	ls
900069ea:	2101      	movls	r1, #1
900069ec:	2100      	movhi	r1, #0
900069ee:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
900069f2:	f001 0101 	and.w	r1, r1, #1
900069f6:	bf38      	it	cc
900069f8:	2100      	movcc	r1, #0
900069fa:	910e      	str	r1, [sp, #56]	@ 0x38
900069fc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900069fe:	4571      	cmp	r1, lr
90006a00:	460b      	mov	r3, r1
90006a02:	bf34      	ite	cc
90006a04:	2300      	movcc	r3, #0
90006a06:	2301      	movcs	r3, #1
90006a08:	4561      	cmp	r1, ip
90006a0a:	bf88      	it	hi
90006a0c:	2300      	movhi	r3, #0
90006a0e:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90006a12:	930f      	str	r3, [sp, #60]	@ 0x3c
90006a14:	bf94      	ite	ls
90006a16:	2301      	movls	r3, #1
90006a18:	2300      	movhi	r3, #0
90006a1a:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
90006a1e:	f04f 0400 	mov.w	r4, #0
90006a22:	f003 0301 	and.w	r3, r3, #1
90006a26:	bf38      	it	cc
90006a28:	2300      	movcc	r3, #0
90006a2a:	9310      	str	r3, [sp, #64]	@ 0x40
90006a2c:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90006a30:	459e      	cmp	lr, r3
90006a32:	bf8c      	ite	hi
90006a34:	2100      	movhi	r1, #0
90006a36:	2101      	movls	r1, #1
90006a38:	459c      	cmp	ip, r3
90006a3a:	bf38      	it	cc
90006a3c:	2100      	movcc	r1, #0
90006a3e:	9105      	str	r1, [sp, #20]
90006a40:	e014      	b.n	90006a6c <BSP_I2C4_Init+0x294>
90006a42:	bf00      	nop
90006a44:	24008638 	.word	0x24008638
90006a48:	24007be0 	.word	0x24007be0
90006a4c:	58001c00 	.word	0x58001c00
90006a50:	58024400 	.word	0x58024400
90006a54:	58020c00 	.word	0x58020c00
90006a58:	3b9aca00 	.word	0x3b9aca00
90006a5c:	24007c38 	.word	0x24007c38
90006a60:	24007c34 	.word	0x24007c34
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006a64:	2c10      	cmp	r4, #16
90006a66:	44b8      	add	r8, r7
90006a68:	f000 8273 	beq.w	90006f52 <BSP_I2C4_Init+0x77a>
      if (tscldel >= (uint32_t)tscldel_min)
90006a6c:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
90006a70:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006a72:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90006a76:	d3f5      	bcc.n	90006a64 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90006a78:	ebba 0105 	subs.w	r1, sl, r5
90006a7c:	bf18      	it	ne
90006a7e:	2101      	movne	r1, #1
90006a80:	f1be 0f00 	cmp.w	lr, #0
90006a84:	bf18      	it	ne
90006a86:	2100      	movne	r1, #0
90006a88:	2900      	cmp	r1, #0
90006a8a:	f040 8250 	bne.w	90006f2e <BSP_I2C4_Init+0x756>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006a8e:	45bc      	cmp	ip, r7
90006a90:	bf34      	ite	cc
90006a92:	2100      	movcc	r1, #0
90006a94:	2101      	movcs	r1, #1
90006a96:	45be      	cmp	lr, r7
90006a98:	bf88      	it	hi
90006a9a:	2100      	movhi	r1, #0
            if(presc != prev_presc)
90006a9c:	45aa      	cmp	sl, r5
90006a9e:	bf0c      	ite	eq
90006aa0:	2100      	moveq	r1, #0
90006aa2:	f001 0101 	andne.w	r1, r1, #1
90006aa6:	2900      	cmp	r1, #0
90006aa8:	f000 8103 	beq.w	90006cb2 <BSP_I2C4_Init+0x4da>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006aac:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006ab0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ab4:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ab6:	46b2      	mov	sl, r6
90006ab8:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006abc:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ac0:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006ac4:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ac6:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ac8:	f200 81aa 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006acc:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006ace:	9a06      	ldr	r2, [sp, #24]
90006ad0:	45aa      	cmp	sl, r5
90006ad2:	bf0c      	ite	eq
90006ad4:	2200      	moveq	r2, #0
90006ad6:	f002 0201 	andne.w	r2, r2, #1
90006ada:	2a00      	cmp	r2, #0
90006adc:	f000 8105 	beq.w	90006cea <BSP_I2C4_Init+0x512>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ae0:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006ae4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ae8:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006aea:	46b2      	mov	sl, r6
90006aec:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006af0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006af4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006af8:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006afa:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006afc:	f200 8190 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006b00:	4611      	mov	r1, r2
90006b02:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006b04:	9a08      	ldr	r2, [sp, #32]
90006b06:	45aa      	cmp	sl, r5
90006b08:	bf0c      	ite	eq
90006b0a:	2200      	moveq	r2, #0
90006b0c:	f002 0201 	andne.w	r2, r2, #1
90006b10:	2a00      	cmp	r2, #0
90006b12:	f000 8105 	beq.w	90006d20 <BSP_I2C4_Init+0x548>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b16:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006b1a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b1e:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b20:	46b2      	mov	sl, r6
90006b22:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b26:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b2a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006b2e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b30:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b32:	f200 8175 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006b36:	4611      	mov	r1, r2
90006b38:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006b3a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90006b3c:	45aa      	cmp	sl, r5
90006b3e:	bf0c      	ite	eq
90006b40:	2200      	moveq	r2, #0
90006b42:	f002 0201 	andne.w	r2, r2, #1
90006b46:	2a00      	cmp	r2, #0
90006b48:	f000 8104 	beq.w	90006d54 <BSP_I2C4_Init+0x57c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b4c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006b50:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b54:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b56:	46b2      	mov	sl, r6
90006b58:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b5c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b60:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006b64:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b66:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b68:	f200 815a 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006b6c:	4611      	mov	r1, r2
90006b6e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006b70:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90006b72:	45aa      	cmp	sl, r5
90006b74:	bf0c      	ite	eq
90006b76:	2200      	moveq	r2, #0
90006b78:	f002 0201 	andne.w	r2, r2, #1
90006b7c:	2a00      	cmp	r2, #0
90006b7e:	f000 8103 	beq.w	90006d88 <BSP_I2C4_Init+0x5b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b82:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006b86:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b8a:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b8c:	46b2      	mov	sl, r6
90006b8e:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b92:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b96:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006b9a:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b9c:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b9e:	f200 813f 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006ba2:	4611      	mov	r1, r2
90006ba4:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006ba6:	980d      	ldr	r0, [sp, #52]	@ 0x34
90006ba8:	4555      	cmp	r5, sl
90006baa:	bf0c      	ite	eq
90006bac:	2000      	moveq	r0, #0
90006bae:	f000 0001 	andne.w	r0, r0, #1
90006bb2:	2800      	cmp	r0, #0
90006bb4:	f000 8101 	beq.w	90006dba <BSP_I2C4_Init+0x5e2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006bb8:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006bbc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006bc0:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006bc2:	46b2      	mov	sl, r6
90006bc4:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006bc8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006bcc:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006bd0:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006bd2:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006bd4:	f200 8124 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006bd8:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006bda:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90006bdc:	4555      	cmp	r5, sl
90006bde:	bf0c      	ite	eq
90006be0:	2200      	moveq	r2, #0
90006be2:	f002 0201 	andne.w	r2, r2, #1
90006be6:	2a00      	cmp	r2, #0
90006be8:	f000 8100 	beq.w	90006dec <BSP_I2C4_Init+0x614>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006bec:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006bf0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006bf4:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006bf6:	46b2      	mov	sl, r6
90006bf8:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006bfc:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c00:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006c04:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006c06:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006c08:	f200 810a 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006c0c:	4610      	mov	r0, r2
90006c0e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006c10:	9a05      	ldr	r2, [sp, #20]
90006c12:	4555      	cmp	r5, sl
90006c14:	bf0c      	ite	eq
90006c16:	2200      	moveq	r2, #0
90006c18:	f002 0201 	andne.w	r2, r2, #1
90006c1c:	2a00      	cmp	r2, #0
90006c1e:	f000 8182 	beq.w	90006f26 <BSP_I2C4_Init+0x74e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c22:	eb09 0189 	add.w	r1, r9, r9, lsl #2
90006c26:	f8df a360 	ldr.w	sl, [pc, #864]	@ 90006f88 <BSP_I2C4_Init+0x7b0>
              I2c_valid_timing_nbr ++;
90006c2a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c2e:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
90006c32:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006c36:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006c3a:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006c3c:	f04f 030f 	mov.w	r3, #15
90006c40:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006c42:	f200 80ed 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006c46:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006c48:	e70c      	b.n	90006a64 <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006c4a:	9a06      	ldr	r2, [sp, #24]
90006c4c:	4661      	mov	r1, ip
90006c4e:	f109 0914 	add.w	r9, r9, #20
90006c52:	3201      	adds	r2, #1
90006c54:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90006c58:	e9dd 3c0c 	ldrd	r3, ip, [sp, #48]	@ 0x30
90006c5c:	4572      	cmp	r2, lr
90006c5e:	9206      	str	r2, [sp, #24]
90006c60:	f040 8103 	bne.w	90006e6a <BSP_I2C4_Init+0x692>
        if (idx < I2C_VALID_TIMING_NBR)
90006c64:	9b01      	ldr	r3, [sp, #4]
90006c66:	2b7f      	cmp	r3, #127	@ 0x7f
90006c68:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
90006c6c:	d817      	bhi.n	90006c9e <BSP_I2C4_Init+0x4c6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006c6e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90006c72:	eb00 0283 	add.w	r2, r0, r3, lsl #2
90006c76:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006c7a:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90006c7c:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006c7e:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006c80:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006c84:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006c88:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006c8c:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006c8e:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006c90:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006c92:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006c96:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006c98:	430b      	orrs	r3, r1
90006c9a:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006c9e:	4621      	mov	r1, r4
90006ca0:	48b7      	ldr	r0, [pc, #732]	@ (90006f80 <BSP_I2C4_Init+0x7a8>)
90006ca2:	f7ff fd79 	bl	90006798 <MX_I2C4_Init>
90006ca6:	2800      	cmp	r0, #0
90006ca8:	f43f ad9f 	beq.w	900067ea <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
90006cac:	f06f 0007 	mvn.w	r0, #7
  return ret;
90006cb0:	e59c      	b.n	900067ec <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
90006cb2:	4611      	mov	r1, r2
90006cb4:	9a04      	ldr	r2, [sp, #16]
90006cb6:	45aa      	cmp	sl, r5
90006cb8:	bf0c      	ite	eq
90006cba:	2200      	moveq	r2, #0
90006cbc:	f002 0201 	andne.w	r2, r2, #1
90006cc0:	2a00      	cmp	r2, #0
90006cc2:	f43f af04 	beq.w	90006ace <BSP_I2C4_Init+0x2f6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cc6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006cca:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006cce:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cd0:	46b2      	mov	sl, r6
90006cd2:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006cd6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cda:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006cde:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ce0:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ce2:	f200 809d 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006ce6:	4611      	mov	r1, r2
90006ce8:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006cea:	9a07      	ldr	r2, [sp, #28]
90006cec:	45aa      	cmp	sl, r5
90006cee:	bf0c      	ite	eq
90006cf0:	2200      	moveq	r2, #0
90006cf2:	f002 0201 	andne.w	r2, r2, #1
90006cf6:	2a00      	cmp	r2, #0
90006cf8:	f43f af04 	beq.w	90006b04 <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cfc:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006d00:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d04:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d06:	46b2      	mov	sl, r6
90006d08:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d0c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d10:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006d14:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d16:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d18:	f200 8082 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006d1c:	4611      	mov	r1, r2
90006d1e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006d20:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90006d22:	45aa      	cmp	sl, r5
90006d24:	bf0c      	ite	eq
90006d26:	2200      	moveq	r2, #0
90006d28:	f002 0201 	andne.w	r2, r2, #1
90006d2c:	2a00      	cmp	r2, #0
90006d2e:	f43f af04 	beq.w	90006b3a <BSP_I2C4_Init+0x362>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d32:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006d36:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d3a:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d3c:	46b2      	mov	sl, r6
90006d3e:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d42:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d46:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006d4a:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d4c:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d4e:	d867      	bhi.n	90006e20 <BSP_I2C4_Init+0x648>
90006d50:	4611      	mov	r1, r2
90006d52:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006d54:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90006d56:	45aa      	cmp	sl, r5
90006d58:	bf0c      	ite	eq
90006d5a:	2200      	moveq	r2, #0
90006d5c:	f002 0201 	andne.w	r2, r2, #1
90006d60:	2a00      	cmp	r2, #0
90006d62:	f43f af05 	beq.w	90006b70 <BSP_I2C4_Init+0x398>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d66:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006d6a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d6e:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d70:	46b2      	mov	sl, r6
90006d72:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d76:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d7a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006d7e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d80:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d82:	d84d      	bhi.n	90006e20 <BSP_I2C4_Init+0x648>
90006d84:	4611      	mov	r1, r2
90006d86:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006d88:	45aa      	cmp	sl, r5
90006d8a:	bf0c      	ite	eq
90006d8c:	2200      	moveq	r2, #0
90006d8e:	f00b 0201 	andne.w	r2, fp, #1
90006d92:	2a00      	cmp	r2, #0
90006d94:	f43f af07 	beq.w	90006ba6 <BSP_I2C4_Init+0x3ce>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d98:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006d9c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006da0:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006da2:	46b2      	mov	sl, r6
90006da4:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006da8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006dac:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006db0:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006db2:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006db4:	d834      	bhi.n	90006e20 <BSP_I2C4_Init+0x648>
90006db6:	4611      	mov	r1, r2
90006db8:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006dba:	980e      	ldr	r0, [sp, #56]	@ 0x38
90006dbc:	4555      	cmp	r5, sl
90006dbe:	bf0c      	ite	eq
90006dc0:	2000      	moveq	r0, #0
90006dc2:	f000 0001 	andne.w	r0, r0, #1
90006dc6:	2800      	cmp	r0, #0
90006dc8:	f000 80af 	beq.w	90006f2a <BSP_I2C4_Init+0x752>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006dcc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006dd0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006dd4:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006dd6:	46b2      	mov	sl, r6
90006dd8:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ddc:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006de0:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006de4:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006de6:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006de8:	d81a      	bhi.n	90006e20 <BSP_I2C4_Init+0x648>
90006dea:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006dec:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90006dee:	4555      	cmp	r5, sl
90006df0:	bf0c      	ite	eq
90006df2:	2200      	moveq	r2, #0
90006df4:	f002 0201 	andne.w	r2, r2, #1
90006df8:	2a00      	cmp	r2, #0
90006dfa:	f43f af09 	beq.w	90006c10 <BSP_I2C4_Init+0x438>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006dfe:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006e02:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e06:	46b2      	mov	sl, r6
90006e08:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
90006e0c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e10:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006e14:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e16:	f04f 030e 	mov.w	r3, #14
90006e1a:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e1c:	f67f af13 	bls.w	90006c46 <BSP_I2C4_Init+0x46e>
90006e20:	4b58      	ldr	r3, [pc, #352]	@ (90006f84 <BSP_I2C4_Init+0x7ac>)
90006e22:	4650      	mov	r0, sl
90006e24:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
90006e26:	4649      	mov	r1, r9
90006e28:	9a02      	ldr	r2, [sp, #8]
90006e2a:	f8c3 9000 	str.w	r9, [r3]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006e2e:	2500      	movs	r5, #0
90006e30:	9f00      	ldr	r7, [sp, #0]
90006e32:	f240 2657 	movw	r6, #599	@ 0x257
90006e36:	f240 4301 	movw	r3, #1025	@ 0x401
90006e3a:	9506      	str	r5, [sp, #24]
90006e3c:	f04f 35ff 	mov.w	r5, #4294967295
90006e40:	42be      	cmp	r6, r7
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006e42:	468e      	mov	lr, r1
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006e44:	9501      	str	r5, [sp, #4]
90006e46:	f102 0532 	add.w	r5, r2, #50	@ 0x32
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006e4a:	9408      	str	r4, [sp, #32]
90006e4c:	eba3 0302 	sub.w	r3, r3, r2
90006e50:	bf38      	it	cc
90006e52:	463e      	movcc	r6, r7
90006e54:	f8df 9130 	ldr.w	r9, [pc, #304]	@ 90006f88 <BSP_I2C4_Init+0x7b0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006e58:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
90006e5c:	f6a2 0c34 	subw	ip, r2, #2100	@ 0x834
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006e60:	f240 4a12 	movw	sl, #1042	@ 0x412
90006e64:	4639      	mov	r1, r7
90006e66:	462c      	mov	r4, r5
90006e68:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006e6a:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006e6e:	2500      	movs	r5, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006e70:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006e74:	1a1a      	subs	r2, r3, r0
90006e76:	1827      	adds	r7, r4, r0
90006e78:	ea4f 0842 	mov.w	r8, r2, lsl #1
90006e7c:	eb0c 0200 	add.w	r2, ip, r0
90006e80:	e9cd 3c0c 	strd	r3, ip, [sp, #48]	@ 0x30
90006e84:	9207      	str	r2, [sp, #28]
90006e86:	468c      	mov	ip, r1
90006e88:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90006e8c:	e006      	b.n	90006e9c <BSP_I2C4_Init+0x6c4>
90006e8e:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90006e92:	4407      	add	r7, r0
90006e94:	eba8 0800 	sub.w	r8, r8, r0
90006e98:	f43f aed7 	beq.w	90006c4a <BSP_I2C4_Init+0x472>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006e9c:	f240 5314 	movw	r3, #1300	@ 0x514
90006ea0:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006ea2:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006ea4:	429f      	cmp	r7, r3
90006ea6:	d9f2      	bls.n	90006e8e <BSP_I2C4_Init+0x6b6>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006ea8:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006eac:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90006eb0:	d2ed      	bcs.n	90006e8e <BSP_I2C4_Init+0x6b6>
90006eb2:	f640 0e34 	movw	lr, #2100	@ 0x834
90006eb6:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006eb8:	2200      	movs	r2, #0
90006eba:	ebae 0e03 	sub.w	lr, lr, r3
90006ebe:	9b07      	ldr	r3, [sp, #28]
90006ec0:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90006ec4:	e9cd 7804 	strd	r7, r8, [sp, #16]
90006ec8:	443b      	add	r3, r7
90006eca:	f8dd c004 	ldr.w	ip, [sp, #4]
90006ece:	f8dd 8018 	ldr.w	r8, [sp, #24]
90006ed2:	e005      	b.n	90006ee0 <BSP_I2C4_Init+0x708>
90006ed4:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90006ed8:	4403      	add	r3, r0
90006eda:	eba4 0400 	sub.w	r4, r4, r0
90006ede:	d01a      	beq.n	90006f16 <BSP_I2C4_Init+0x73e>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006ee0:	eb0e 0103 	add.w	r1, lr, r3
90006ee4:	4617      	mov	r7, r2
90006ee6:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90006eea:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006eec:	42b1      	cmp	r1, r6
90006eee:	d9f1      	bls.n	90006ed4 <BSP_I2C4_Init+0x6fc>
90006ef0:	4555      	cmp	r5, sl
90006ef2:	d8ef      	bhi.n	90006ed4 <BSP_I2C4_Init+0x6fc>
            if (error < 0)
90006ef4:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90006ef8:	bf28      	it	cs
90006efa:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90006efc:	458b      	cmp	fp, r1
90006efe:	d9e9      	bls.n	90006ed4 <BSP_I2C4_Init+0x6fc>
              I2c_valid_timing[count].sclh = sclh;
90006f00:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006f02:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
90006f06:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
90006f08:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006f0a:	4403      	add	r3, r0
90006f0c:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90006f10:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006f14:	d1e4      	bne.n	90006ee0 <BSP_I2C4_Init+0x708>
90006f16:	f8cd c004 	str.w	ip, [sp, #4]
90006f1a:	9d02      	ldr	r5, [sp, #8]
90006f1c:	f8dd 8014 	ldr.w	r8, [sp, #20]
90006f20:	e9dd c703 	ldrd	ip, r7, [sp, #12]
90006f24:	e7b3      	b.n	90006e8e <BSP_I2C4_Init+0x6b6>
90006f26:	4602      	mov	r2, r0
90006f28:	e59c      	b.n	90006a64 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90006f2a:	4608      	mov	r0, r1
90006f2c:	e655      	b.n	90006bda <BSP_I2C4_Init+0x402>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f2e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006f32:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f36:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f38:	46b2      	mov	sl, r6
90006f3a:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f3e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f42:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006f46:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f48:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f4a:	f63f af69 	bhi.w	90006e20 <BSP_I2C4_Init+0x648>
90006f4e:	46aa      	mov	sl, r5
90006f50:	e6b0      	b.n	90006cb4 <BSP_I2C4_Init+0x4dc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90006f52:	3501      	adds	r5, #1
90006f54:	9b00      	ldr	r3, [sp, #0]
90006f56:	2d10      	cmp	r5, #16
90006f58:	441f      	add	r7, r3
90006f5a:	f47f acc0 	bne.w	900068de <BSP_I2C4_Init+0x106>
90006f5e:	4693      	mov	fp, r2
90006f60:	9c01      	ldr	r4, [sp, #4]
90006f62:	9911      	ldr	r1, [sp, #68]	@ 0x44
90006f64:	9a02      	ldr	r2, [sp, #8]
90006f66:	f1bb 0f00 	cmp.w	fp, #0
90006f6a:	d003      	beq.n	90006f74 <BSP_I2C4_Init+0x79c>
90006f6c:	4b05      	ldr	r3, [pc, #20]	@ (90006f84 <BSP_I2C4_Init+0x7ac>)
90006f6e:	4649      	mov	r1, r9
90006f70:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006f74:	2900      	cmp	r1, #0
90006f76:	f43f ae92 	beq.w	90006c9e <BSP_I2C4_Init+0x4c6>
90006f7a:	4803      	ldr	r0, [pc, #12]	@ (90006f88 <BSP_I2C4_Init+0x7b0>)
90006f7c:	e757      	b.n	90006e2e <BSP_I2C4_Init+0x656>
90006f7e:	bf00      	nop
90006f80:	24007be0 	.word	0x24007be0
90006f84:	24007c34 	.word	0x24007c34
90006f88:	24007c38 	.word	0x24007c38

90006f8c <BSP_I2C4_WriteReg>:
{
90006f8c:	b530      	push	{r4, r5, lr}
90006f8e:	4614      	mov	r4, r2
90006f90:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90006f92:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90006f96:	460a      	mov	r2, r1
90006f98:	9301      	str	r3, [sp, #4]
90006f9a:	4601      	mov	r1, r0
90006f9c:	2301      	movs	r3, #1
90006f9e:	4809      	ldr	r0, [pc, #36]	@ (90006fc4 <BSP_I2C4_WriteReg+0x38>)
90006fa0:	9502      	str	r5, [sp, #8]
90006fa2:	9400      	str	r4, [sp, #0]
90006fa4:	f001 fab8 	bl	90008518 <HAL_I2C_Mem_Write>
90006fa8:	b908      	cbnz	r0, 90006fae <BSP_I2C4_WriteReg+0x22>
}
90006faa:	b005      	add	sp, #20
90006fac:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006fae:	4805      	ldr	r0, [pc, #20]	@ (90006fc4 <BSP_I2C4_WriteReg+0x38>)
90006fb0:	f001 fcb4 	bl	9000891c <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90006fb4:	2804      	cmp	r0, #4
90006fb6:	bf14      	ite	ne
90006fb8:	f06f 0003 	mvnne.w	r0, #3
90006fbc:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90006fc0:	e7f3      	b.n	90006faa <BSP_I2C4_WriteReg+0x1e>
90006fc2:	bf00      	nop
90006fc4:	24007be0 	.word	0x24007be0

90006fc8 <BSP_I2C4_ReadReg>:
{
90006fc8:	b530      	push	{r4, r5, lr}
90006fca:	4614      	mov	r4, r2
90006fcc:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90006fce:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90006fd2:	460a      	mov	r2, r1
90006fd4:	9301      	str	r3, [sp, #4]
90006fd6:	4601      	mov	r1, r0
90006fd8:	2301      	movs	r3, #1
90006fda:	4809      	ldr	r0, [pc, #36]	@ (90007000 <BSP_I2C4_ReadReg+0x38>)
90006fdc:	9502      	str	r5, [sp, #8]
90006fde:	9400      	str	r4, [sp, #0]
90006fe0:	f001 fb98 	bl	90008714 <HAL_I2C_Mem_Read>
90006fe4:	b908      	cbnz	r0, 90006fea <BSP_I2C4_ReadReg+0x22>
}
90006fe6:	b005      	add	sp, #20
90006fe8:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006fea:	4805      	ldr	r0, [pc, #20]	@ (90007000 <BSP_I2C4_ReadReg+0x38>)
90006fec:	f001 fc96 	bl	9000891c <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90006ff0:	2804      	cmp	r0, #4
90006ff2:	bf14      	ite	ne
90006ff4:	f06f 0003 	mvnne.w	r0, #3
90006ff8:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90006ffc:	e7f3      	b.n	90006fe6 <BSP_I2C4_ReadReg+0x1e>
90006ffe:	bf00      	nop
90007000:	24007be0 	.word	0x24007be0

90007004 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90007004:	f000 baa0 	b.w	90007548 <HAL_GetTick>

90007008 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90007008:	b970      	cbnz	r0, 90007028 <BSP_SDRAM_DeInit+0x20>
{
9000700a:	b510      	push	{r4, lr}
9000700c:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000700e:	4808      	ldr	r0, [pc, #32]	@ (90007030 <BSP_SDRAM_DeInit+0x28>)
90007010:	f005 fafa 	bl	9000c608 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007014:	207a      	movs	r0, #122	@ 0x7a
90007016:	f000 faff 	bl	90007618 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000701a:	4b06      	ldr	r3, [pc, #24]	@ (90007034 <BSP_SDRAM_DeInit+0x2c>)
9000701c:	4806      	ldr	r0, [pc, #24]	@ (90007038 <BSP_SDRAM_DeInit+0x30>)
9000701e:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007020:	f003 fac0 	bl	9000a5a4 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007024:	4620      	mov	r0, r4
}
90007026:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007028:	f06f 0001 	mvn.w	r0, #1
}
9000702c:	4770      	bx	lr
9000702e:	bf00      	nop
90007030:	24008734 	.word	0x24008734
90007034:	52000040 	.word	0x52000040
90007038:	2400863c 	.word	0x2400863c

9000703c <MX_SDRAM_BANK2_Init>:
{
9000703c:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000703e:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007040:	2200      	movs	r2, #0
{
90007042:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007044:	4c13      	ldr	r4, [pc, #76]	@ (90007094 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007046:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007048:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000704a:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
9000704c:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
9000704e:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90007050:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90007052:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007054:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90007058:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
9000705a:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000705c:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
9000705e:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007060:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007062:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007066:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007068:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000706c:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000706e:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007070:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90007074:	2204      	movs	r2, #4
90007076:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000707a:	2202      	movs	r2, #2
9000707c:	2302      	movs	r3, #2
9000707e:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007082:	4b05      	ldr	r3, [pc, #20]	@ (90007098 <MX_SDRAM_BANK2_Init+0x5c>)
90007084:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007086:	f005 fa95 	bl	9000c5b4 <HAL_SDRAM_Init>
}
9000708a:	3800      	subs	r0, #0
9000708c:	bf18      	it	ne
9000708e:	2001      	movne	r0, #1
90007090:	b009      	add	sp, #36	@ 0x24
90007092:	bd30      	pop	{r4, r5, pc}
90007094:	24008734 	.word	0x24008734
90007098:	52004140 	.word	0x52004140

9000709c <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
9000709c:	2800      	cmp	r0, #0
9000709e:	f040 80cd 	bne.w	9000723c <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
900070a2:	4b69      	ldr	r3, [pc, #420]	@ (90007248 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
900070a4:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
900070a6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900070aa:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
900070ae:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
900070b0:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
900070b4:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
900070b6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900070ba:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900070bc:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
900070be:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900070c0:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900070c4:	4c61      	ldr	r4, [pc, #388]	@ (9000724c <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900070c6:	4e62      	ldr	r6, [pc, #392]	@ (90007250 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900070c8:	9200      	str	r2, [sp, #0]
900070ca:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
900070cc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900070d0:	430a      	orrs	r2, r1
900070d2:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900070d6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900070da:	400a      	ands	r2, r1
900070dc:	9201      	str	r2, [sp, #4]
900070de:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
900070e0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900070e4:	f042 0208 	orr.w	r2, r2, #8
900070e8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900070ec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900070f0:	f002 0208 	and.w	r2, r2, #8
900070f4:	9202      	str	r2, [sp, #8]
900070f6:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900070f8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900070fc:	f042 0210 	orr.w	r2, r2, #16
90007100:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007104:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007108:	f002 0210 	and.w	r2, r2, #16
9000710c:	9203      	str	r2, [sp, #12]
9000710e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007110:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007114:	f042 0220 	orr.w	r2, r2, #32
90007118:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000711c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007120:	f002 0220 	and.w	r2, r2, #32
90007124:	9204      	str	r2, [sp, #16]
90007126:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007128:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000712c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007130:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007134:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007138:	f002 0240 	and.w	r2, r2, #64	@ 0x40
9000713c:	9205      	str	r2, [sp, #20]
9000713e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007140:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007144:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90007148:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000714c:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000714e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007152:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007154:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007158:	483e      	ldr	r0, [pc, #248]	@ (90007254 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
9000715a:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000715c:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000715e:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007162:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007164:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007166:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007168:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000716c:	f000 fc6c 	bl	90007a48 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007170:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007174:	a907      	add	r1, sp, #28
90007176:	4838      	ldr	r0, [pc, #224]	@ (90007258 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007178:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000717a:	f000 fc65 	bl	90007a48 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000717e:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007182:	a907      	add	r1, sp, #28
90007184:	4835      	ldr	r0, [pc, #212]	@ (9000725c <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007186:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007188:	f000 fc5e 	bl	90007a48 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000718c:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007190:	a907      	add	r1, sp, #28
90007192:	4833      	ldr	r0, [pc, #204]	@ (90007260 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007194:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007196:	f000 fc57 	bl	90007a48 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000719a:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000719c:	a907      	add	r1, sp, #28
9000719e:	4831      	ldr	r0, [pc, #196]	@ (90007264 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900071a0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900071a2:	f000 fc51 	bl	90007a48 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900071a6:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900071a8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900071ac:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
900071b0:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900071b2:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
900071b4:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900071b6:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900071b8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900071bc:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900071be:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900071c0:	4a29      	ldr	r2, [pc, #164]	@ (90007268 <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900071c2:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900071c4:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900071c6:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900071c8:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
900071cc:	f640 0308 	movw	r3, #2056	@ 0x808
900071d0:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900071d2:	2320      	movs	r3, #32
900071d4:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900071d6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
900071da:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900071de:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
900071e0:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
900071e4:	f003 f9de 	bl	9000a5a4 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
900071e8:	4620      	mov	r0, r4
900071ea:	f003 f961 	bl	9000a4b0 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
900071ee:	462a      	mov	r2, r5
900071f0:	210f      	movs	r1, #15
900071f2:	207a      	movs	r0, #122	@ 0x7a
900071f4:	f000 f9c6 	bl	90007584 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
900071f8:	207a      	movs	r0, #122	@ 0x7a
900071fa:	f000 f9ff 	bl	900075fc <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
900071fe:	2210      	movs	r2, #16
90007200:	2104      	movs	r1, #4
90007202:	4630      	mov	r0, r6
90007204:	f7ff ff1a 	bl	9000703c <MX_SDRAM_BANK2_Init>
90007208:	4603      	mov	r3, r0
9000720a:	b9d0      	cbnz	r0, 90007242 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000720c:	4917      	ldr	r1, [pc, #92]	@ (9000726c <BSP_SDRAM_Init+0x1d0>)
9000720e:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007210:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007212:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007214:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007216:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
9000721a:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
9000721c:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007220:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007224:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007228:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000722c:	f7ff fa30 	bl	90006690 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007230:	2800      	cmp	r0, #0
90007232:	bf18      	it	ne
90007234:	f06f 0004 	mvnne.w	r0, #4
}
90007238:	b00d      	add	sp, #52	@ 0x34
9000723a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000723c:	f06f 0001 	mvn.w	r0, #1
}
90007240:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90007242:	f04f 30ff 	mov.w	r0, #4294967295
90007246:	e7f7      	b.n	90007238 <BSP_SDRAM_Init+0x19c>
90007248:	58024400 	.word	0x58024400
9000724c:	240086a8 	.word	0x240086a8
90007250:	24008734 	.word	0x24008734
90007254:	58020c00 	.word	0x58020c00
90007258:	58021000 	.word	0x58021000
9000725c:	58021400 	.word	0x58021400
90007260:	58021800 	.word	0x58021800
90007264:	58021c00 	.word	0x58021c00
90007268:	52000040 	.word	0x52000040
9000726c:	24008714 	.word	0x24008714

90007270 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007270:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007274:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90007276:	2800      	cmp	r0, #0
90007278:	d16b      	bne.n	90007352 <BSP_TS_Init+0xe2>
9000727a:	680b      	ldr	r3, [r1, #0]
9000727c:	460d      	mov	r5, r1
9000727e:	1e5a      	subs	r2, r3, #1
90007280:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90007284:	d265      	bcs.n	90007352 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007286:	684a      	ldr	r2, [r1, #4]
90007288:	1e51      	subs	r1, r2, #1
9000728a:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
9000728e:	d260      	bcs.n	90007352 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90007290:	4293      	cmp	r3, r2
90007292:	bf28      	it	cs
90007294:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007296:	68ea      	ldr	r2, [r5, #12]
90007298:	429a      	cmp	r2, r3
9000729a:	d85a      	bhi.n	90007352 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
9000729c:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
9000729e:	4b31      	ldr	r3, [pc, #196]	@ (90007364 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900072a0:	4c31      	ldr	r4, [pc, #196]	@ (90007368 <BSP_TS_Init+0xf8>)
900072a2:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
900072a4:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
900072a8:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900072aa:	4a30      	ldr	r2, [pc, #192]	@ (9000736c <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900072ac:	4b30      	ldr	r3, [pc, #192]	@ (90007370 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900072ae:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900072b0:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900072b2:	4a30      	ldr	r2, [pc, #192]	@ (90007374 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
900072b4:	4b30      	ldr	r3, [pc, #192]	@ (90007378 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
900072b6:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900072b8:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900072ba:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
900072bc:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900072be:	f7ff f939 	bl	90006534 <FT5336_RegisterBusIO>
900072c2:	2800      	cmp	r0, #0
900072c4:	d14b      	bne.n	9000735e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
900072c6:	a901      	add	r1, sp, #4
900072c8:	4620      	mov	r0, r4
900072ca:	f7ff f829 	bl	90006320 <FT5336_ReadID>
900072ce:	2800      	cmp	r0, #0
900072d0:	d145      	bne.n	9000735e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
900072d2:	9b01      	ldr	r3, [sp, #4]
900072d4:	2b51      	cmp	r3, #81	@ 0x51
900072d6:	d142      	bne.n	9000735e <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
900072d8:	4b28      	ldr	r3, [pc, #160]	@ (9000737c <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
900072da:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
900072dc:	4f28      	ldr	r7, [pc, #160]	@ (90007380 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
900072de:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90007388 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
900072e2:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
900072e4:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
900072e8:	681b      	ldr	r3, [r3, #0]
900072ea:	4798      	blx	r3
900072ec:	4606      	mov	r6, r0
900072ee:	2800      	cmp	r0, #0
900072f0:	d135      	bne.n	9000735e <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900072f2:	4c24      	ldr	r4, [pc, #144]	@ (90007384 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900072f4:	a902      	add	r1, sp, #8
900072f6:	6838      	ldr	r0, [r7, #0]
900072f8:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900072fc:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007300:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007302:	e9c4 7200 	strd	r7, r2, [r4]
90007306:	68aa      	ldr	r2, [r5, #8]
90007308:	60a2      	str	r2, [r4, #8]
9000730a:	68ea      	ldr	r2, [r5, #12]
9000730c:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000730e:	4798      	blx	r3
90007310:	2800      	cmp	r0, #0
90007312:	db18      	blt.n	90007346 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007314:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007318:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000731c:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000731e:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007322:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007324:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007326:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007328:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000732a:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000732e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007332:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007336:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000733a:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000733c:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
9000733e:	4630      	mov	r0, r6
90007340:	b008      	add	sp, #32
90007342:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007346:	f06f 0604 	mvn.w	r6, #4
}
9000734a:	4630      	mov	r0, r6
9000734c:	b008      	add	sp, #32
9000734e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007352:	f06f 0601 	mvn.w	r6, #1
}
90007356:	4630      	mov	r0, r6
90007358:	b008      	add	sp, #32
9000735a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
9000735e:	f04f 36ff 	mov.w	r6, #4294967295
90007362:	e7ec      	b.n	9000733e <BSP_TS_Init+0xce>
90007364:	900067d9 	.word	0x900067d9
90007368:	24008768 	.word	0x24008768
9000736c:	90006745 	.word	0x90006745
90007370:	90006fc9 	.word	0x90006fc9
90007374:	90006f8d 	.word	0x90006f8d
90007378:	90007005 	.word	0x90007005
9000737c:	24000054 	.word	0x24000054
90007380:	240087d0 	.word	0x240087d0
90007384:	24008790 	.word	0x24008790
90007388:	240087d4 	.word	0x240087d4

9000738c <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
9000738c:	2800      	cmp	r0, #0
9000738e:	d154      	bne.n	9000743a <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007390:	4b2b      	ldr	r3, [pc, #172]	@ (90007440 <BSP_TS_GetState+0xb4>)
90007392:	4a2c      	ldr	r2, [pc, #176]	@ (90007444 <BSP_TS_GetState+0xb8>)
90007394:	681b      	ldr	r3, [r3, #0]
90007396:	6810      	ldr	r0, [r2, #0]
90007398:	691b      	ldr	r3, [r3, #16]
{
9000739a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000739e:	b084      	sub	sp, #16
900073a0:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900073a2:	a901      	add	r1, sp, #4
900073a4:	4798      	blx	r3
900073a6:	2800      	cmp	r0, #0
900073a8:	db3f      	blt.n	9000742a <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
900073aa:	4b27      	ldr	r3, [pc, #156]	@ (90007448 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
900073ac:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
900073ae:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
900073b0:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
900073b2:	b930      	cbnz	r0, 900073c2 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
900073b4:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900073b6:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
900073ba:	2000      	movs	r0, #0
}
900073bc:	b004      	add	sp, #16
900073be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900073c2:	689f      	ldr	r7, [r3, #8]
900073c4:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
900073c6:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900073ca:	d433      	bmi.n	90007434 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
900073cc:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
900073ce:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
900073d0:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
900073d4:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
900073d8:	d003      	beq.n	900073e2 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
900073da:	f10e 32ff 	add.w	r2, lr, #4294967295
900073de:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
900073e2:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
900073e6:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
900073e8:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
900073ea:	bf48      	it	mi
900073ec:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
900073f0:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900073f4:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
900073f6:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900073f8:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
900073fc:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007400:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007404:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007406:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007408:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000740a:	bf8c      	ite	hi
9000740c:	1b90      	subhi	r0, r2, r6
9000740e:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007410:	42a9      	cmp	r1, r5
90007412:	bf8c      	ite	hi
90007414:	1b4f      	subhi	r7, r1, r5
90007416:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007418:	42b8      	cmp	r0, r7
9000741a:	bf38      	it	cc
9000741c:	4638      	movcc	r0, r7
9000741e:	68df      	ldr	r7, [r3, #12]
90007420:	4287      	cmp	r7, r0
90007422:	d2c8      	bcs.n	900073b6 <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007424:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007426:	62d9      	str	r1, [r3, #44]	@ 0x2c
90007428:	e7c7      	b.n	900073ba <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000742a:	f06f 0004 	mvn.w	r0, #4
}
9000742e:	b004      	add	sp, #16
90007430:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90007434:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007436:	4642      	mov	r2, r8
90007438:	e7ca      	b.n	900073d0 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
9000743a:	f06f 0001 	mvn.w	r0, #1
}
9000743e:	4770      	bx	lr
90007440:	240087d4 	.word	0x240087d4
90007444:	240087d0 	.word	0x240087d0
90007448:	24008790 	.word	0x24008790

9000744c <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
9000744c:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000744e:	4c19      	ldr	r4, [pc, #100]	@ (900074b4 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007450:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007452:	4b19      	ldr	r3, [pc, #100]	@ (900074b8 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007454:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007458:	4818      	ldr	r0, [pc, #96]	@ (900074bc <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000745a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000745e:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90007462:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007464:	4c16      	ldr	r4, [pc, #88]	@ (900074c0 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90007466:	f041 0101 	orr.w	r1, r1, #1
9000746a:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
9000746c:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
9000746e:	6819      	ldr	r1, [r3, #0]
90007470:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007472:	4914      	ldr	r1, [pc, #80]	@ (900074c4 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90007474:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90007476:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90007478:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
9000747a:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
9000747c:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
9000747e:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007480:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90007482:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90007484:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
90007486:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90007488:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
9000748a:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
9000748c:	6818      	ldr	r0, [r3, #0]
9000748e:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
90007492:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90007494:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007496:	6823      	ldr	r3, [r4, #0]
90007498:	4019      	ands	r1, r3
9000749a:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000749e:	d203      	bcs.n	900074a8 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
900074a0:	4b09      	ldr	r3, [pc, #36]	@ (900074c8 <SystemInit+0x7c>)
900074a2:	2201      	movs	r2, #1
900074a4:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900074a8:	4a08      	ldr	r2, [pc, #32]	@ (900074cc <SystemInit+0x80>)
900074aa:	4b02      	ldr	r3, [pc, #8]	@ (900074b4 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
900074ac:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900074b0:	609a      	str	r2, [r3, #8]
}
900074b2:	4770      	bx	lr
900074b4:	e000ed00 	.word	0xe000ed00
900074b8:	58024400 	.word	0x58024400
900074bc:	eaf6ed7f 	.word	0xeaf6ed7f
900074c0:	5c001000 	.word	0x5c001000
900074c4:	ffff0000 	.word	0xffff0000
900074c8:	51008000 	.word	0x51008000
900074cc:	90000000 	.word	0x90000000

900074d0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
900074d0:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
900074d2:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900074d4:	4c12      	ldr	r4, [pc, #72]	@ (90007520 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
900074d6:	f000 f843 	bl	90007560 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900074da:	f003 fdb9 	bl	9000b050 <HAL_RCC_GetSysClockFreq>
900074de:	4b11      	ldr	r3, [pc, #68]	@ (90007524 <HAL_Init+0x54>)
900074e0:	4911      	ldr	r1, [pc, #68]	@ (90007528 <HAL_Init+0x58>)
900074e2:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900074e4:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900074e6:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900074ea:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900074ee:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900074f0:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900074f2:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
900074f6:	490d      	ldr	r1, [pc, #52]	@ (9000752c <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900074f8:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900074fc:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900074fe:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007502:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007504:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007506:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007508:	f7fd f896 	bl	90004638 <HAL_InitTick>
9000750c:	b110      	cbz	r0, 90007514 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000750e:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007510:	4620      	mov	r0, r4
90007512:	bd10      	pop	{r4, pc}
90007514:	4604      	mov	r4, r0
  HAL_MspInit();
90007516:	f7fc fdbd 	bl	90004094 <HAL_MspInit>
}
9000751a:	4620      	mov	r0, r4
9000751c:	bd10      	pop	{r4, pc}
9000751e:	bf00      	nop
90007520:	24000084 	.word	0x24000084
90007524:	58024400 	.word	0x58024400
90007528:	9002d328 	.word	0x9002d328
9000752c:	24000088 	.word	0x24000088

90007530 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007530:	4a03      	ldr	r2, [pc, #12]	@ (90007540 <HAL_IncTick+0x10>)
90007532:	4b04      	ldr	r3, [pc, #16]	@ (90007544 <HAL_IncTick+0x14>)
90007534:	6811      	ldr	r1, [r2, #0]
90007536:	781b      	ldrb	r3, [r3, #0]
90007538:	440b      	add	r3, r1
9000753a:	6013      	str	r3, [r2, #0]
}
9000753c:	4770      	bx	lr
9000753e:	bf00      	nop
90007540:	240087d8 	.word	0x240087d8
90007544:	2400008c 	.word	0x2400008c

90007548 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007548:	4b01      	ldr	r3, [pc, #4]	@ (90007550 <HAL_GetTick+0x8>)
9000754a:	6818      	ldr	r0, [r3, #0]
}
9000754c:	4770      	bx	lr
9000754e:	bf00      	nop
90007550:	240087d8 	.word	0x240087d8

90007554 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007554:	4b01      	ldr	r3, [pc, #4]	@ (9000755c <HAL_GetREVID+0x8>)
90007556:	6818      	ldr	r0, [r3, #0]
}
90007558:	0c00      	lsrs	r0, r0, #16
9000755a:	4770      	bx	lr
9000755c:	5c001000 	.word	0x5c001000

90007560 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007560:	4906      	ldr	r1, [pc, #24]	@ (9000757c <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007562:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007566:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007568:	4b05      	ldr	r3, [pc, #20]	@ (90007580 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000756a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000756c:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007570:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007574:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90007576:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90007578:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
9000757a:	4770      	bx	lr
9000757c:	e000ed00 	.word	0xe000ed00
90007580:	05fa0000 	.word	0x05fa0000

90007584 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007584:	4b1a      	ldr	r3, [pc, #104]	@ (900075f0 <HAL_NVIC_SetPriority+0x6c>)
90007586:	68db      	ldr	r3, [r3, #12]
90007588:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
9000758c:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000758e:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007592:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007596:	f1be 0f04 	cmp.w	lr, #4
9000759a:	bf28      	it	cs
9000759c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900075a0:	f1bc 0f06 	cmp.w	ip, #6
900075a4:	d91a      	bls.n	900075dc <HAL_NVIC_SetPriority+0x58>
900075a6:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
900075aa:	f04f 33ff 	mov.w	r3, #4294967295
900075ae:	fa03 f30c 	lsl.w	r3, r3, ip
900075b2:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900075b6:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
900075ba:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900075bc:	fa03 f30e 	lsl.w	r3, r3, lr
900075c0:	ea21 0303 	bic.w	r3, r1, r3
900075c4:	fa03 f30c 	lsl.w	r3, r3, ip
900075c8:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900075cc:	ea4f 1303 	mov.w	r3, r3, lsl #4
900075d0:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
900075d2:	db06      	blt.n	900075e2 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900075d4:	4a07      	ldr	r2, [pc, #28]	@ (900075f4 <HAL_NVIC_SetPriority+0x70>)
900075d6:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
900075d8:	f85d fb04 	ldr.w	pc, [sp], #4
900075dc:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900075de:	4694      	mov	ip, r2
900075e0:	e7e9      	b.n	900075b6 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900075e2:	f000 000f 	and.w	r0, r0, #15
900075e6:	4a04      	ldr	r2, [pc, #16]	@ (900075f8 <HAL_NVIC_SetPriority+0x74>)
900075e8:	5413      	strb	r3, [r2, r0]
900075ea:	f85d fb04 	ldr.w	pc, [sp], #4
900075ee:	bf00      	nop
900075f0:	e000ed00 	.word	0xe000ed00
900075f4:	e000e400 	.word	0xe000e400
900075f8:	e000ed14 	.word	0xe000ed14

900075fc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
900075fc:	2800      	cmp	r0, #0
900075fe:	db07      	blt.n	90007610 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007600:	2301      	movs	r3, #1
90007602:	f000 011f 	and.w	r1, r0, #31
90007606:	4a03      	ldr	r2, [pc, #12]	@ (90007614 <HAL_NVIC_EnableIRQ+0x18>)
90007608:	0940      	lsrs	r0, r0, #5
9000760a:	408b      	lsls	r3, r1
9000760c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90007610:	4770      	bx	lr
90007612:	bf00      	nop
90007614:	e000e100 	.word	0xe000e100

90007618 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007618:	2800      	cmp	r0, #0
9000761a:	db0c      	blt.n	90007636 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000761c:	0943      	lsrs	r3, r0, #5
9000761e:	2201      	movs	r2, #1
90007620:	f000 001f 	and.w	r0, r0, #31
90007624:	4904      	ldr	r1, [pc, #16]	@ (90007638 <HAL_NVIC_DisableIRQ+0x20>)
90007626:	3320      	adds	r3, #32
90007628:	4082      	lsls	r2, r0
9000762a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000762e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007632:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007636:	4770      	bx	lr
90007638:	e000e100 	.word	0xe000e100

9000763c <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000763c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007640:	4b04      	ldr	r3, [pc, #16]	@ (90007654 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90007642:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007644:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007646:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000764a:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
9000764c:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90007650:	4770      	bx	lr
90007652:	bf00      	nop
90007654:	e000ed00 	.word	0xe000ed00

90007658 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90007658:	4b06      	ldr	r3, [pc, #24]	@ (90007674 <HAL_MPU_Enable+0x1c>)
9000765a:	f040 0001 	orr.w	r0, r0, #1
9000765e:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90007662:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007664:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90007668:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000766a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000766e:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90007672:	4770      	bx	lr
90007674:	e000ed00 	.word	0xe000ed00

90007678 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90007678:	4a16      	ldr	r2, [pc, #88]	@ (900076d4 <HAL_MPU_ConfigRegion+0x5c>)
9000767a:	7843      	ldrb	r3, [r0, #1]
9000767c:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90007680:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
90007684:	f023 0301 	bic.w	r3, r3, #1
90007688:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
9000768c:	6843      	ldr	r3, [r0, #4]
9000768e:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007692:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007694:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007698:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
9000769a:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000769c:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900076a0:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900076a4:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
900076a6:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900076a8:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
900076ac:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900076b0:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
900076b4:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900076b6:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
900076ba:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900076be:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900076c2:	7a01      	ldrb	r1, [r0, #8]
900076c4:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
900076c8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900076cc:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
900076d0:	4770      	bx	lr
900076d2:	bf00      	nop
900076d4:	e000ed00 	.word	0xe000ed00

900076d8 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
900076d8:	2800      	cmp	r0, #0
900076da:	d036      	beq.n	9000774a <HAL_CRC_Init+0x72>
{
900076dc:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
900076de:	7f43      	ldrb	r3, [r0, #29]
900076e0:	4604      	mov	r4, r0
900076e2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900076e6:	b363      	cbz	r3, 90007742 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
900076e8:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900076ea:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
900076ec:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900076ee:	b9f3      	cbnz	r3, 9000772e <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
900076f0:	6823      	ldr	r3, [r4, #0]
900076f2:	4a17      	ldr	r2, [pc, #92]	@ (90007750 <HAL_CRC_Init+0x78>)
900076f4:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
900076f6:	689a      	ldr	r2, [r3, #8]
900076f8:	f022 0218 	bic.w	r2, r2, #24
900076fc:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
900076fe:	7962      	ldrb	r2, [r4, #5]
90007700:	b18a      	cbz	r2, 90007726 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90007702:	6922      	ldr	r2, [r4, #16]
90007704:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007706:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007708:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000770c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90007710:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90007712:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007714:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007716:	689a      	ldr	r2, [r3, #8]
90007718:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000771c:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000771e:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007720:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90007722:	7761      	strb	r1, [r4, #29]
}
90007724:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007726:	f04f 32ff 	mov.w	r2, #4294967295
9000772a:	611a      	str	r2, [r3, #16]
9000772c:	e7eb      	b.n	90007706 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000772e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90007732:	4620      	mov	r0, r4
90007734:	f000 f80e 	bl	90007754 <HAL_CRCEx_Polynomial_Set>
90007738:	b908      	cbnz	r0, 9000773e <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000773a:	6823      	ldr	r3, [r4, #0]
9000773c:	e7df      	b.n	900076fe <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000773e:	2001      	movs	r0, #1
}
90007740:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90007742:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90007744:	f7fc fcc0 	bl	900040c8 <HAL_CRC_MspInit>
90007748:	e7ce      	b.n	900076e8 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000774a:	2001      	movs	r0, #1
}
9000774c:	4770      	bx	lr
9000774e:	bf00      	nop
90007750:	04c11db7 	.word	0x04c11db7

90007754 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007754:	07cb      	lsls	r3, r1, #31
90007756:	d51a      	bpl.n	9000778e <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90007758:	231f      	movs	r3, #31
{
9000775a:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000775c:	3b01      	subs	r3, #1
9000775e:	1c5c      	adds	r4, r3, #1
90007760:	fa21 fc03 	lsr.w	ip, r1, r3
90007764:	d015      	beq.n	90007792 <HAL_CRCEx_Polynomial_Set+0x3e>
90007766:	f01c 0f01 	tst.w	ip, #1
9000776a:	d0f7      	beq.n	9000775c <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
9000776c:	2a18      	cmp	r2, #24
9000776e:	d811      	bhi.n	90007794 <HAL_CRCEx_Polynomial_Set+0x40>
90007770:	e8df f002 	tbb	[pc, r2]
90007774:	10101016 	.word	0x10101016
90007778:	10101010 	.word	0x10101010
9000777c:	10101024 	.word	0x10101024
90007780:	10101010 	.word	0x10101010
90007784:	10101021 	.word	0x10101021
90007788:	10101010 	.word	0x10101010
9000778c:	14          	.byte	0x14
9000778d:	00          	.byte	0x00
9000778e:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90007790:	4770      	bx	lr
    switch (PolyLength)
90007792:	b12a      	cbz	r2, 900077a0 <HAL_CRCEx_Polynomial_Set+0x4c>
90007794:	2001      	movs	r0, #1
}
90007796:	f85d 4b04 	ldr.w	r4, [sp], #4
9000779a:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
9000779c:	2b06      	cmp	r3, #6
9000779e:	d8f9      	bhi.n	90007794 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900077a0:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900077a2:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900077a4:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900077a6:	68a3      	ldr	r3, [r4, #8]
900077a8:	f023 0318 	bic.w	r3, r3, #24
900077ac:	4313      	orrs	r3, r2
900077ae:	60a3      	str	r3, [r4, #8]
}
900077b0:	f85d 4b04 	ldr.w	r4, [sp], #4
900077b4:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
900077b6:	2b07      	cmp	r3, #7
900077b8:	d9f2      	bls.n	900077a0 <HAL_CRCEx_Polynomial_Set+0x4c>
900077ba:	e7eb      	b.n	90007794 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
900077bc:	2b0f      	cmp	r3, #15
900077be:	d9ef      	bls.n	900077a0 <HAL_CRCEx_Polynomial_Set+0x4c>
900077c0:	e7e8      	b.n	90007794 <HAL_CRCEx_Polynomial_Set+0x40>
900077c2:	bf00      	nop

900077c4 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
900077c4:	2800      	cmp	r0, #0
900077c6:	d035      	beq.n	90007834 <HAL_DMA2D_Init+0x70>
{
900077c8:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
900077ca:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
900077ce:	4604      	mov	r4, r0
900077d0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900077d4:	b34b      	cbz	r3, 9000782a <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900077d6:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900077d8:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900077da:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900077dc:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900077e0:	69e1      	ldr	r1, [r4, #28]
900077e2:	681d      	ldr	r5, [r3, #0]
900077e4:	4814      	ldr	r0, [pc, #80]	@ (90007838 <HAL_DMA2D_Init+0x74>)
900077e6:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900077e8:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900077ea:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900077ec:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900077ee:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900077f0:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900077f2:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900077f4:	4302      	orrs	r2, r0
900077f6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
900077f8:	4810      	ldr	r0, [pc, #64]	@ (9000783c <HAL_DMA2D_Init+0x78>)
900077fa:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900077fc:	4910      	ldr	r1, [pc, #64]	@ (90007840 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900077fe:	4302      	orrs	r2, r0
90007800:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007802:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90007804:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007806:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000780a:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000780c:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000780e:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007810:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90007812:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007816:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007818:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000781c:	430a      	orrs	r2, r1
9000781e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007820:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007822:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007824:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90007828:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000782a:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000782e:	f7fc fc63 	bl	900040f8 <HAL_DMA2D_MspInit>
90007832:	e7d0      	b.n	900077d6 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007834:	2001      	movs	r0, #1
}
90007836:	4770      	bx	lr
90007838:	fff8ffbf 	.word	0xfff8ffbf
9000783c:	fffffef8 	.word	0xfffffef8
90007840:	ffff0000 	.word	0xffff0000

90007844 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90007844:	4770      	bx	lr
90007846:	bf00      	nop

90007848 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90007848:	4770      	bx	lr
9000784a:	bf00      	nop

9000784c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000784c:	6803      	ldr	r3, [r0, #0]
{
9000784e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007850:	685d      	ldr	r5, [r3, #4]
{
90007852:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007854:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007856:	07ea      	lsls	r2, r5, #31
90007858:	d501      	bpl.n	9000785e <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
9000785a:	05f1      	lsls	r1, r6, #23
9000785c:	d456      	bmi.n	9000790c <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000785e:	06aa      	lsls	r2, r5, #26
90007860:	d501      	bpl.n	90007866 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90007862:	04b3      	lsls	r3, r6, #18
90007864:	d43b      	bmi.n	900078de <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007866:	0728      	lsls	r0, r5, #28
90007868:	d501      	bpl.n	9000786e <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000786a:	0531      	lsls	r1, r6, #20
9000786c:	d421      	bmi.n	900078b2 <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000786e:	076a      	lsls	r2, r5, #29
90007870:	d501      	bpl.n	90007876 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90007872:	0573      	lsls	r3, r6, #21
90007874:	d472      	bmi.n	9000795c <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007876:	07a8      	lsls	r0, r5, #30
90007878:	d501      	bpl.n	9000787e <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
9000787a:	05b1      	lsls	r1, r6, #22
9000787c:	d404      	bmi.n	90007888 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000787e:	06ea      	lsls	r2, r5, #27
90007880:	d501      	bpl.n	90007886 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007882:	04f3      	lsls	r3, r6, #19
90007884:	d457      	bmi.n	90007936 <HAL_DMA2D_IRQHandler+0xea>
}
90007886:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007888:	6823      	ldr	r3, [r4, #0]
9000788a:	681a      	ldr	r2, [r3, #0]
9000788c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90007890:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007892:	2202      	movs	r2, #2
90007894:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007896:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007898:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000789a:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
9000789c:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000789e:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900078a2:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
900078a6:	6a23      	ldr	r3, [r4, #32]
900078a8:	2b00      	cmp	r3, #0
900078aa:	d0e8      	beq.n	9000787e <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
900078ac:	4620      	mov	r0, r4
900078ae:	4798      	blx	r3
900078b0:	e7e5      	b.n	9000787e <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
900078b2:	6823      	ldr	r3, [r4, #0]
900078b4:	681a      	ldr	r2, [r3, #0]
900078b6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900078ba:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
900078bc:	2208      	movs	r2, #8
900078be:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900078c0:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
900078c2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900078c4:	4313      	orrs	r3, r2
900078c6:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900078c8:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900078cc:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900078ce:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900078d0:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900078d4:	2b00      	cmp	r3, #0
900078d6:	d0ca      	beq.n	9000786e <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
900078d8:	4620      	mov	r0, r4
900078da:	4798      	blx	r3
900078dc:	e7c7      	b.n	9000786e <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
900078de:	6823      	ldr	r3, [r4, #0]
900078e0:	681a      	ldr	r2, [r3, #0]
900078e2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
900078e6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
900078e8:	2220      	movs	r2, #32
900078ea:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900078ec:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
900078ee:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900078f0:	f043 0302 	orr.w	r3, r3, #2
900078f4:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900078f6:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900078fa:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900078fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900078fe:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007902:	2b00      	cmp	r3, #0
90007904:	d0af      	beq.n	90007866 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90007906:	4620      	mov	r0, r4
90007908:	4798      	blx	r3
9000790a:	e7ac      	b.n	90007866 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000790c:	681a      	ldr	r2, [r3, #0]
9000790e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90007912:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007914:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90007916:	f042 0201 	orr.w	r2, r2, #1
9000791a:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000791c:	2201      	movs	r2, #1
9000791e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007920:	2304      	movs	r3, #4
90007922:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007926:	2300      	movs	r3, #0
90007928:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000792c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9000792e:	2b00      	cmp	r3, #0
90007930:	d095      	beq.n	9000785e <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90007932:	4798      	blx	r3
90007934:	e793      	b.n	9000785e <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007936:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007938:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000793a:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000793c:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000793e:	681a      	ldr	r2, [r3, #0]
90007940:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90007944:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007946:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007948:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000794a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
9000794c:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007950:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007952:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007956:	f7ff ff77 	bl	90007848 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000795a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000795c:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000795e:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007960:	681a      	ldr	r2, [r3, #0]
90007962:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90007966:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90007968:	2204      	movs	r2, #4
9000796a:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000796c:	f7ff ff6a 	bl	90007844 <HAL_DMA2D_LineEventCallback>
90007970:	e781      	b.n	90007876 <HAL_DMA2D_IRQHandler+0x2a>
90007972:	bf00      	nop

90007974 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007974:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90007978:	2a01      	cmp	r2, #1
9000797a:	d05f      	beq.n	90007a3c <HAL_DMA2D_ConfigLayer+0xc8>
9000797c:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000797e:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007982:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007984:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90007988:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000798c:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
9000798e:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007990:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90007994:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007998:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000799a:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000799c:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000799e:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900079a0:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900079a2:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900079a6:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900079aa:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900079ac:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900079ae:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900079b2:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900079b6:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900079b8:	d923      	bls.n	90007a02 <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
900079ba:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900079be:	b971      	cbnz	r1, 900079de <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900079c0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900079c2:	491f      	ldr	r1, [pc, #124]	@ (90007a40 <HAL_DMA2D_ConfigLayer+0xcc>)
900079c4:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900079c6:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900079c8:	4311      	orrs	r1, r2
900079ca:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900079cc:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
900079ce:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
900079d0:	2101      	movs	r1, #1

  return HAL_OK;
900079d2:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
900079d4:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
900079d8:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
900079dc:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
900079de:	2d0b      	cmp	r5, #11
900079e0:	d12a      	bne.n	90007a38 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
900079e2:	6c00      	ldr	r0, [r0, #64]	@ 0x40
900079e4:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
900079e8:	4816      	ldr	r0, [pc, #88]	@ (90007a44 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900079ea:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900079ee:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900079f0:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900079f4:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900079f6:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900079fa:	430a      	orrs	r2, r1
900079fc:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900079fe:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007a00:	e7e5      	b.n	900079ce <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007a02:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90007a06:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007a08:	b959      	cbnz	r1, 90007a22 <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007a0a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007a0c:	490c      	ldr	r1, [pc, #48]	@ (90007a40 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007a0e:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007a10:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007a12:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007a14:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007a16:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007a1a:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007a1c:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007a1e:	62a0      	str	r0, [r4, #40]	@ 0x28
90007a20:	e7d5      	b.n	900079ce <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007a22:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007a24:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007a28:	4905      	ldr	r1, [pc, #20]	@ (90007a40 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007a2a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007a2c:	4029      	ands	r1, r5
90007a2e:	4311      	orrs	r1, r2
90007a30:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007a32:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007a34:	6226      	str	r6, [r4, #32]
90007a36:	e7ca      	b.n	900079ce <HAL_DMA2D_ConfigLayer+0x5a>
90007a38:	4801      	ldr	r0, [pc, #4]	@ (90007a40 <HAL_DMA2D_ConfigLayer+0xcc>)
90007a3a:	e7d6      	b.n	900079ea <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90007a3c:	2002      	movs	r0, #2
}
90007a3e:	4770      	bx	lr
90007a40:	00ccfff0 	.word	0x00ccfff0
90007a44:	00c0fff0 	.word	0x00c0fff0

90007a48 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90007a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007a4c:	680c      	ldr	r4, [r1, #0]
{
90007a4e:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007a50:	2c00      	cmp	r4, #0
90007a52:	f000 80a5 	beq.w	90007ba0 <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
90007a56:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007a58:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90007a5c:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007a60:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007a62:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
90007a66:	ea1c 0a04 	ands.w	sl, ip, r4
90007a6a:	f000 8094 	beq.w	90007b96 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007a6e:	9900      	ldr	r1, [sp, #0]
90007a70:	005f      	lsls	r7, r3, #1
90007a72:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007a74:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007a76:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007a7a:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007a7e:	f102 38ff 	add.w	r8, r2, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007a82:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007a84:	f1b8 0f01 	cmp.w	r8, #1
90007a88:	f240 808d 	bls.w	90007ba6 <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007a8c:	2a03      	cmp	r2, #3
90007a8e:	f040 80cb 	bne.w	90007c28 <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007a92:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
90007a94:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007a96:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007a9a:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007a9e:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90007aa2:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007aa4:	d077      	beq.n	90007b96 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007aa6:	4e7f      	ldr	r6, [pc, #508]	@ (90007ca4 <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007aa8:	f003 0703 	and.w	r7, r3, #3
90007aac:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007aae:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007ab2:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007ab4:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007ab8:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007abc:	497a      	ldr	r1, [pc, #488]	@ (90007ca8 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007abe:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
90007ac2:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
90007ac6:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007aca:	4288      	cmp	r0, r1
90007acc:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007ad0:	f002 0202 	and.w	r2, r2, #2
90007ad4:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
90007ad8:	9203      	str	r2, [sp, #12]
90007ada:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90007adc:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007ade:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007ae2:	d031      	beq.n	90007b48 <HAL_GPIO_Init+0x100>
90007ae4:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
90007ae8:	4288      	cmp	r0, r1
90007aea:	f000 80b0 	beq.w	90007c4e <HAL_GPIO_Init+0x206>
90007aee:	496f      	ldr	r1, [pc, #444]	@ (90007cac <HAL_GPIO_Init+0x264>)
90007af0:	4288      	cmp	r0, r1
90007af2:	f000 80b2 	beq.w	90007c5a <HAL_GPIO_Init+0x212>
90007af6:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 90007cb0 <HAL_GPIO_Init+0x268>
90007afa:	4560      	cmp	r0, ip
90007afc:	f000 80a1 	beq.w	90007c42 <HAL_GPIO_Init+0x1fa>
90007b00:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 90007cb4 <HAL_GPIO_Init+0x26c>
90007b04:	4560      	cmp	r0, ip
90007b06:	f000 80b4 	beq.w	90007c72 <HAL_GPIO_Init+0x22a>
90007b0a:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 90007cb8 <HAL_GPIO_Init+0x270>
90007b0e:	4560      	cmp	r0, ip
90007b10:	f000 80b5 	beq.w	90007c7e <HAL_GPIO_Init+0x236>
90007b14:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 90007cbc <HAL_GPIO_Init+0x274>
90007b18:	4560      	cmp	r0, ip
90007b1a:	f000 80a4 	beq.w	90007c66 <HAL_GPIO_Init+0x21e>
90007b1e:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 90007cc0 <HAL_GPIO_Init+0x278>
90007b22:	4560      	cmp	r0, ip
90007b24:	f000 80b1 	beq.w	90007c8a <HAL_GPIO_Init+0x242>
90007b28:	f8df c198 	ldr.w	ip, [pc, #408]	@ 90007cc4 <HAL_GPIO_Init+0x27c>
90007b2c:	4560      	cmp	r0, ip
90007b2e:	f000 80b2 	beq.w	90007c96 <HAL_GPIO_Init+0x24e>
90007b32:	f8df c194 	ldr.w	ip, [pc, #404]	@ 90007cc8 <HAL_GPIO_Init+0x280>
90007b36:	4560      	cmp	r0, ip
90007b38:	bf0c      	ite	eq
90007b3a:	f04f 0c09 	moveq.w	ip, #9
90007b3e:	f04f 0c0a 	movne.w	ip, #10
90007b42:	fa0c f707 	lsl.w	r7, ip, r7
90007b46:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90007b48:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90007b4a:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90007b4c:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
90007b50:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
90007b54:	bf4c      	ite	mi
90007b56:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
90007b5a:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90007b5c:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
90007b5e:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
90007b62:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
90007b66:	bf54      	ite	pl
90007b68:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90007b6a:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90007b6e:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
90007b70:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
90007b74:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90007b78:	bf54      	ite	pl
90007b7a:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90007b7c:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90007b80:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90007b82:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90007b86:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90007b8a:	bf54      	ite	pl
90007b8c:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90007b8e:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
90007b92:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
90007b96:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007b98:	fa34 f203 	lsrs.w	r2, r4, r3
90007b9c:	f47f af61 	bne.w	90007a62 <HAL_GPIO_Init+0x1a>
  }
}
90007ba0:	b005      	add	sp, #20
90007ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
90007ba6:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007ba8:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
90007baa:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
90007bae:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007bb0:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
90007bb4:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007bb8:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
90007bba:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007bbe:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
90007bc0:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007bc4:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
90007bc8:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007bcc:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007bd0:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007bd4:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
90007bd8:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007bdc:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
90007be0:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007be4:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007be8:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90007bec:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007bf0:	f47f af4f 	bne.w	90007a92 <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007bf4:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007bf8:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
90007bfa:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007bfe:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007c02:	6909      	ldr	r1, [r1, #16]
90007c04:	eb00 0888 	add.w	r8, r0, r8, lsl #2
90007c08:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
90007c0c:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007c10:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007c12:	210f      	movs	r1, #15
90007c14:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007c18:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007c1a:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007c1e:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
90007c22:	f8c8 c020 	str.w	ip, [r8, #32]
90007c26:	e734      	b.n	90007a92 <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007c28:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
90007c2a:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007c2e:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007c30:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007c34:	fa01 fc07 	lsl.w	ip, r1, r7
90007c38:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90007c3c:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007c40:	e727      	b.n	90007a92 <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007c42:	f04f 0c03 	mov.w	ip, #3
90007c46:	fa0c f707 	lsl.w	r7, ip, r7
90007c4a:	433a      	orrs	r2, r7
90007c4c:	e77c      	b.n	90007b48 <HAL_GPIO_Init+0x100>
90007c4e:	f04f 0c01 	mov.w	ip, #1
90007c52:	fa0c f707 	lsl.w	r7, ip, r7
90007c56:	433a      	orrs	r2, r7
90007c58:	e776      	b.n	90007b48 <HAL_GPIO_Init+0x100>
90007c5a:	f04f 0c02 	mov.w	ip, #2
90007c5e:	fa0c f707 	lsl.w	r7, ip, r7
90007c62:	433a      	orrs	r2, r7
90007c64:	e770      	b.n	90007b48 <HAL_GPIO_Init+0x100>
90007c66:	f04f 0c06 	mov.w	ip, #6
90007c6a:	fa0c f707 	lsl.w	r7, ip, r7
90007c6e:	433a      	orrs	r2, r7
90007c70:	e76a      	b.n	90007b48 <HAL_GPIO_Init+0x100>
90007c72:	f04f 0c04 	mov.w	ip, #4
90007c76:	fa0c f707 	lsl.w	r7, ip, r7
90007c7a:	433a      	orrs	r2, r7
90007c7c:	e764      	b.n	90007b48 <HAL_GPIO_Init+0x100>
90007c7e:	f04f 0c05 	mov.w	ip, #5
90007c82:	fa0c f707 	lsl.w	r7, ip, r7
90007c86:	433a      	orrs	r2, r7
90007c88:	e75e      	b.n	90007b48 <HAL_GPIO_Init+0x100>
90007c8a:	f04f 0c07 	mov.w	ip, #7
90007c8e:	fa0c f707 	lsl.w	r7, ip, r7
90007c92:	433a      	orrs	r2, r7
90007c94:	e758      	b.n	90007b48 <HAL_GPIO_Init+0x100>
90007c96:	f04f 0c08 	mov.w	ip, #8
90007c9a:	fa0c f707 	lsl.w	r7, ip, r7
90007c9e:	433a      	orrs	r2, r7
90007ca0:	e752      	b.n	90007b48 <HAL_GPIO_Init+0x100>
90007ca2:	bf00      	nop
90007ca4:	58024400 	.word	0x58024400
90007ca8:	58020000 	.word	0x58020000
90007cac:	58020800 	.word	0x58020800
90007cb0:	58020c00 	.word	0x58020c00
90007cb4:	58021000 	.word	0x58021000
90007cb8:	58021400 	.word	0x58021400
90007cbc:	58021800 	.word	0x58021800
90007cc0:	58021c00 	.word	0x58021c00
90007cc4:	58022000 	.word	0x58022000
90007cc8:	58022400 	.word	0x58022400

90007ccc <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90007ccc:	2900      	cmp	r1, #0
90007cce:	f000 80ac 	beq.w	90007e2a <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
90007cd2:	2300      	movs	r3, #0
{
90007cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
90007cd8:	2601      	movs	r6, #1
{
90007cda:	b083      	sub	sp, #12
90007cdc:	f8df a168 	ldr.w	sl, [pc, #360]	@ 90007e48 <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007ce0:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007ce4:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
90007ce8:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
90007cec:	ea12 0c01 	ands.w	ip, r2, r1
90007cf0:	d073      	beq.n	90007dda <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
90007cf2:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007cf6:	f003 0403 	and.w	r4, r3, #3
90007cfa:	4455      	add	r5, sl
90007cfc:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
90007cfe:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007d00:	fa08 fe04 	lsl.w	lr, r8, r4
90007d04:	ea0e 0707 	and.w	r7, lr, r7
90007d08:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007d0a:	4f4b      	ldr	r7, [pc, #300]	@ (90007e38 <HAL_GPIO_DeInit+0x16c>)
90007d0c:	42b8      	cmp	r0, r7
90007d0e:	d027      	beq.n	90007d60 <HAL_GPIO_DeInit+0x94>
90007d10:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
90007d14:	42b8      	cmp	r0, r7
90007d16:	d067      	beq.n	90007de8 <HAL_GPIO_DeInit+0x11c>
90007d18:	4f48      	ldr	r7, [pc, #288]	@ (90007e3c <HAL_GPIO_DeInit+0x170>)
90007d1a:	42b8      	cmp	r0, r7
90007d1c:	d067      	beq.n	90007dee <HAL_GPIO_DeInit+0x122>
90007d1e:	4f48      	ldr	r7, [pc, #288]	@ (90007e40 <HAL_GPIO_DeInit+0x174>)
90007d20:	42b8      	cmp	r0, r7
90007d22:	d06e      	beq.n	90007e02 <HAL_GPIO_DeInit+0x136>
90007d24:	4f47      	ldr	r7, [pc, #284]	@ (90007e44 <HAL_GPIO_DeInit+0x178>)
90007d26:	42b8      	cmp	r0, r7
90007d28:	d070      	beq.n	90007e0c <HAL_GPIO_DeInit+0x140>
90007d2a:	f8df b120 	ldr.w	fp, [pc, #288]	@ 90007e4c <HAL_GPIO_DeInit+0x180>
90007d2e:	4558      	cmp	r0, fp
90007d30:	d062      	beq.n	90007df8 <HAL_GPIO_DeInit+0x12c>
90007d32:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 90007e50 <HAL_GPIO_DeInit+0x184>
90007d36:	4558      	cmp	r0, fp
90007d38:	d072      	beq.n	90007e20 <HAL_GPIO_DeInit+0x154>
90007d3a:	f8df b118 	ldr.w	fp, [pc, #280]	@ 90007e54 <HAL_GPIO_DeInit+0x188>
90007d3e:	4558      	cmp	r0, fp
90007d40:	d074      	beq.n	90007e2c <HAL_GPIO_DeInit+0x160>
90007d42:	f8df b114 	ldr.w	fp, [pc, #276]	@ 90007e58 <HAL_GPIO_DeInit+0x18c>
90007d46:	4558      	cmp	r0, fp
90007d48:	d065      	beq.n	90007e16 <HAL_GPIO_DeInit+0x14a>
90007d4a:	f8df b110 	ldr.w	fp, [pc, #272]	@ 90007e5c <HAL_GPIO_DeInit+0x190>
90007d4e:	4558      	cmp	r0, fp
90007d50:	bf14      	ite	ne
90007d52:	f04f 0b0a 	movne.w	fp, #10
90007d56:	f04f 0b09 	moveq.w	fp, #9
90007d5a:	fa0b f404 	lsl.w	r4, fp, r4
90007d5e:	e000      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007d60:	2400      	movs	r4, #0
90007d62:	9f01      	ldr	r7, [sp, #4]
90007d64:	42a7      	cmp	r7, r4
90007d66:	d119      	bne.n	90007d9c <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007d68:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
90007d6c:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
90007d70:	ea27 070c 	bic.w	r7, r7, ip
90007d74:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90007d78:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
90007d7c:	ea27 070c 	bic.w	r7, r7, ip
90007d80:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90007d84:	6867      	ldr	r7, [r4, #4]
90007d86:	ea27 070c 	bic.w	r7, r7, ip
90007d8a:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007d8c:	6827      	ldr	r7, [r4, #0]
90007d8e:	ea27 070c 	bic.w	r7, r7, ip
90007d92:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90007d94:	68ac      	ldr	r4, [r5, #8]
90007d96:	ea24 040e 	bic.w	r4, r4, lr
90007d9a:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007d9c:	005d      	lsls	r5, r3, #1
90007d9e:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007da0:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007da2:	fa09 f505 	lsl.w	r5, r9, r5
90007da6:	eb00 0787 	add.w	r7, r0, r7, lsl #2
90007daa:	432c      	orrs	r4, r5
90007dac:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007dae:	f003 0407 	and.w	r4, r3, #7
90007db2:	f8d7 c020 	ldr.w	ip, [r7, #32]
90007db6:	00a4      	lsls	r4, r4, #2
90007db8:	fa08 f404 	lsl.w	r4, r8, r4
90007dbc:	ea2c 0404 	bic.w	r4, ip, r4
90007dc0:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007dc2:	68c4      	ldr	r4, [r0, #12]
90007dc4:	ea24 0405 	bic.w	r4, r4, r5
90007dc8:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90007dca:	6844      	ldr	r4, [r0, #4]
90007dcc:	ea24 0202 	bic.w	r2, r4, r2
90007dd0:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007dd2:	6882      	ldr	r2, [r0, #8]
90007dd4:	ea22 0205 	bic.w	r2, r2, r5
90007dd8:	6082      	str	r2, [r0, #8]
    }

    position++;
90007dda:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90007ddc:	fa31 f203 	lsrs.w	r2, r1, r3
90007de0:	d182      	bne.n	90007ce8 <HAL_GPIO_DeInit+0x1c>
  }
}
90007de2:	b003      	add	sp, #12
90007de4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007de8:	fa06 f404 	lsl.w	r4, r6, r4
90007dec:	e7b9      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007dee:	f04f 0b02 	mov.w	fp, #2
90007df2:	fa0b f404 	lsl.w	r4, fp, r4
90007df6:	e7b4      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007df8:	f04f 0b05 	mov.w	fp, #5
90007dfc:	fa0b f404 	lsl.w	r4, fp, r4
90007e00:	e7af      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007e02:	f04f 0b03 	mov.w	fp, #3
90007e06:	fa0b f404 	lsl.w	r4, fp, r4
90007e0a:	e7aa      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007e0c:	f04f 0b04 	mov.w	fp, #4
90007e10:	fa0b f404 	lsl.w	r4, fp, r4
90007e14:	e7a5      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007e16:	f04f 0b08 	mov.w	fp, #8
90007e1a:	fa0b f404 	lsl.w	r4, fp, r4
90007e1e:	e7a0      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007e20:	f04f 0b06 	mov.w	fp, #6
90007e24:	fa0b f404 	lsl.w	r4, fp, r4
90007e28:	e79b      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007e2a:	4770      	bx	lr
90007e2c:	f04f 0b07 	mov.w	fp, #7
90007e30:	fa0b f404 	lsl.w	r4, fp, r4
90007e34:	e795      	b.n	90007d62 <HAL_GPIO_DeInit+0x96>
90007e36:	bf00      	nop
90007e38:	58020000 	.word	0x58020000
90007e3c:	58020800 	.word	0x58020800
90007e40:	58020c00 	.word	0x58020c00
90007e44:	58021000 	.word	0x58021000
90007e48:	58000400 	.word	0x58000400
90007e4c:	58021400 	.word	0x58021400
90007e50:	58021800 	.word	0x58021800
90007e54:	58021c00 	.word	0x58021c00
90007e58:	58022000 	.word	0x58022000
90007e5c:	58022400 	.word	0x58022400

90007e60 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90007e60:	6903      	ldr	r3, [r0, #16]
90007e62:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90007e64:	bf14      	ite	ne
90007e66:	2001      	movne	r0, #1
90007e68:	2000      	moveq	r0, #0
90007e6a:	4770      	bx	lr

90007e6c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90007e6c:	b902      	cbnz	r2, 90007e70 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90007e6e:	0409      	lsls	r1, r1, #16
90007e70:	6181      	str	r1, [r0, #24]
  }
}
90007e72:	4770      	bx	lr

90007e74 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90007e74:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90007e76:	ea01 0203 	and.w	r2, r1, r3
90007e7a:	ea21 0103 	bic.w	r1, r1, r3
90007e7e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
90007e82:	6181      	str	r1, [r0, #24]
}
90007e84:	4770      	bx	lr
90007e86:	bf00      	nop

90007e88 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @param  Status The actual Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90007e88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007e8c:	6803      	ldr	r3, [r0, #0]
90007e8e:	699a      	ldr	r2, [r3, #24]
90007e90:	0414      	lsls	r4, r2, #16
90007e92:	f140 8088 	bpl.w	90007fa6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11e>
90007e96:	4604      	mov	r4, r0
90007e98:	4688      	mov	r8, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007e9a:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007e9e:	699e      	ldr	r6, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007ea0:	f016 0610 	ands.w	r6, r6, #16
90007ea4:	f000 8082 	beq.w	90007fac <I2C_WaitOnFlagUntilTimeout.constprop.0+0x124>
  uint32_t error_code = 0;
90007ea8:	2600      	movs	r6, #0
  uint32_t tickstart = Tickstart;
90007eaa:	4645      	mov	r5, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007eac:	f8c3 901c 	str.w	r9, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90007eb0:	4637      	mov	r7, r6

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007eb2:	699a      	ldr	r2, [r3, #24]
90007eb4:	0692      	lsls	r2, r2, #26
90007eb6:	d427      	bmi.n	90007f08 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x80>
90007eb8:	bb4f      	cbnz	r7, 90007f0e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007eba:	f7ff fb45 	bl	90007548 <HAL_GetTick>
90007ebe:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007ec0:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007ec2:	2819      	cmp	r0, #25
90007ec4:	d9f5      	bls.n	90007eb2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007ec6:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007ec8:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007ecc:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007ece:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007ed0:	0409      	lsls	r1, r1, #16
90007ed2:	d50b      	bpl.n	90007eec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp1 != I2C_CR2_STOP) && \
90007ed4:	0440      	lsls	r0, r0, #17
90007ed6:	d409      	bmi.n	90007eec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
90007ed8:	2a20      	cmp	r2, #32
90007eda:	d007      	beq.n	90007eec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007edc:	685a      	ldr	r2, [r3, #4]
90007ede:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007ee2:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
90007ee4:	f7ff fb30 	bl	90007548 <HAL_GetTick>
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007ee8:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90007eea:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007eec:	699a      	ldr	r2, [r3, #24]
90007eee:	0691      	lsls	r1, r2, #26
90007ef0:	d4df      	bmi.n	90007eb2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007ef2:	f7ff fb29 	bl	90007548 <HAL_GetTick>
90007ef6:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ef8:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007efa:	2819      	cmp	r0, #25
90007efc:	d9f6      	bls.n	90007eec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007efe:	699a      	ldr	r2, [r3, #24]
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007f00:	2620      	movs	r6, #32

              status = HAL_ERROR;
90007f02:	2701      	movs	r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f04:	0692      	lsls	r2, r2, #26
90007f06:	d5d7      	bpl.n	90007eb8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x30>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
90007f08:	b90f      	cbnz	r7, 90007f0e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007f0a:	2220      	movs	r2, #32
90007f0c:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90007f0e:	f046 0604 	orr.w	r6, r6, #4

    status = HAL_ERROR;
90007f12:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90007f14:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007f16:	05d7      	lsls	r7, r2, #23
90007f18:	d531      	bpl.n	90007f7e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf6>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007f1a:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f1e:	0550      	lsls	r0, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007f20:	f046 0601 	orr.w	r6, r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007f24:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f26:	d504      	bpl.n	90007f32 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xaa>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007f28:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007f2c:	f046 0608 	orr.w	r6, r6, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007f30:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007f32:	0592      	lsls	r2, r2, #22
90007f34:	d504      	bpl.n	90007f40 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007f36:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007f3a:	f046 0602 	orr.w	r6, r6, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007f3e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007f40:	699a      	ldr	r2, [r3, #24]
90007f42:	0795      	lsls	r5, r2, #30
90007f44:	d501      	bpl.n	90007f4a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xc2>
    hi2c->Instance->TXDR = 0x00U;
90007f46:	2200      	movs	r2, #0
90007f48:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007f4a:	699a      	ldr	r2, [r3, #24]
90007f4c:	07d0      	lsls	r0, r2, #31
90007f4e:	d403      	bmi.n	90007f58 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd0>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007f50:	699a      	ldr	r2, [r3, #24]
90007f52:	f042 0201 	orr.w	r2, r2, #1
90007f56:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90007f58:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90007f5a:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007f5c:	4d19      	ldr	r5, [pc, #100]	@ (90007fc4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007f5e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007f60:	402a      	ands	r2, r5
90007f62:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007f64:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90007f66:	4333      	orrs	r3, r6
90007f68:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007f6a:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007f6e:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007f72:	2300      	movs	r3, #0
      return HAL_ERROR;
90007f74:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007f76:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90007f7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f7e:	0551      	lsls	r1, r2, #21
90007f80:	d4d2      	bmi.n	90007f28 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa0>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007f82:	0597      	lsls	r7, r2, #22
90007f84:	d4d7      	bmi.n	90007f36 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xae>
  if (status != HAL_OK)
90007f86:	2d00      	cmp	r5, #0
90007f88:	d1da      	bne.n	90007f40 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007f8a:	f7ff fadd 	bl	90007548 <HAL_GetTick>
90007f8e:	eba0 0008 	sub.w	r0, r0, r8
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007f92:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007f94:	2819      	cmp	r0, #25
90007f96:	d902      	bls.n	90007f9e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x116>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007f98:	699a      	ldr	r2, [r3, #24]
90007f9a:	0411      	lsls	r1, r2, #16
90007f9c:	d408      	bmi.n	90007fb0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007f9e:	699a      	ldr	r2, [r3, #24]
90007fa0:	0412      	lsls	r2, r2, #16
90007fa2:	f53f af7c 	bmi.w	90007e9e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x16>
  return HAL_OK;
90007fa6:	2000      	movs	r0, #0
}
90007fa8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007fac:	4635      	mov	r5, r6
90007fae:	e7b1      	b.n	90007f14 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x8c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007fb0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007fb2:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007fb4:	4313      	orrs	r3, r2
90007fb6:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007fb8:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007fbc:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90007fc0:	e7d7      	b.n	90007f72 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xea>
90007fc2:	bf00      	nop
90007fc4:	fe00e800 	.word	0xfe00e800

90007fc8 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90007fc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007fcc:	6803      	ldr	r3, [r0, #0]
{
90007fce:	4680      	mov	r8, r0
90007fd0:	460d      	mov	r5, r1
90007fd2:	4692      	mov	sl, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007fd4:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007fd6:	699c      	ldr	r4, [r3, #24]
90007fd8:	f014 0402 	ands.w	r4, r4, #2
90007fdc:	f040 80a5 	bne.w	9000812a <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
90007fe0:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007fe2:	f012 0c10 	ands.w	ip, r2, #16
90007fe6:	d078      	beq.n	900080da <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
90007fe8:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
90007fea:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007fec:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007fee:	1c68      	adds	r0, r5, #1
90007ff0:	d001      	beq.n	90007ff6 <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
90007ff2:	e041      	b.n	90008078 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
90007ff4:	b92e      	cbnz	r6, 90008002 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
90007ff6:	699a      	ldr	r2, [r3, #24]
90007ff8:	0691      	lsls	r1, r2, #26
90007ffa:	d5fb      	bpl.n	90007ff4 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
    if (status == HAL_OK)
90007ffc:	b90e      	cbnz	r6, 90008002 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007ffe:	2220      	movs	r2, #32
90008000:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90008002:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90008004:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008008:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000800a:	05d0      	lsls	r0, r2, #23
9000800c:	d569      	bpl.n	900080e2 <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000800e:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008012:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008014:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008018:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000801a:	d504      	bpl.n	90008026 <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000801c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008020:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008024:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008026:	0595      	lsls	r5, r2, #22
90008028:	d504      	bpl.n	90008034 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000802a:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000802e:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008032:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008034:	699a      	ldr	r2, [r3, #24]
90008036:	0790      	lsls	r0, r2, #30
90008038:	d501      	bpl.n	9000803e <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
9000803a:	2200      	movs	r2, #0
9000803c:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000803e:	699a      	ldr	r2, [r3, #24]
90008040:	07d1      	lsls	r1, r2, #31
90008042:	d403      	bmi.n	9000804c <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008044:	699a      	ldr	r2, [r3, #24]
90008046:	f042 0201 	orr.w	r2, r2, #1
9000804a:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000804c:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000804e:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008050:	4c37      	ldr	r4, [pc, #220]	@ (90008130 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008052:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008054:	4022      	ands	r2, r4
90008056:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008058:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
9000805c:	ea43 030c 	orr.w	r3, r3, ip
90008060:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008064:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008068:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
9000806c:	2300      	movs	r3, #0
      return HAL_ERROR;
9000806e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008070:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
90008074:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008078:	699a      	ldr	r2, [r3, #24]
9000807a:	0692      	lsls	r2, r2, #26
9000807c:	d4be      	bmi.n	90007ffc <I2C_WaitOnTXISFlagUntilTimeout+0x34>
9000807e:	2e00      	cmp	r6, #0
90008080:	d1bf      	bne.n	90008002 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008082:	f7ff fa61 	bl	90007548 <HAL_GetTick>
90008086:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000808a:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000808e:	4285      	cmp	r5, r0
90008090:	d301      	bcc.n	90008096 <I2C_WaitOnTXISFlagUntilTimeout+0xce>
90008092:	2d00      	cmp	r5, #0
90008094:	d1f0      	bne.n	90008078 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008096:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008098:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000809c:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000809e:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900080a0:	0409      	lsls	r1, r1, #16
900080a2:	d50c      	bpl.n	900080be <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
900080a4:	0441      	lsls	r1, r0, #17
900080a6:	d40a      	bmi.n	900080be <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
900080a8:	2a20      	cmp	r2, #32
900080aa:	d008      	beq.n	900080be <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900080ac:	685a      	ldr	r2, [r3, #4]
900080ae:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900080b2:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900080b4:	f7ff fa48 	bl	90007548 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900080b8:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
900080bc:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900080be:	699a      	ldr	r2, [r3, #24]
900080c0:	0692      	lsls	r2, r2, #26
900080c2:	d494      	bmi.n	90007fee <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900080c4:	f7ff fa40 	bl	90007548 <HAL_GetTick>
900080c8:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900080cc:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900080d0:	2819      	cmp	r0, #25
900080d2:	d9f4      	bls.n	900080be <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900080d4:	2420      	movs	r4, #32
              status = HAL_ERROR;
900080d6:	2601      	movs	r6, #1
900080d8:	e789      	b.n	90007fee <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
900080da:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
900080dc:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900080de:	05d0      	lsls	r0, r2, #23
900080e0:	d495      	bmi.n	9000800e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900080e2:	0556      	lsls	r6, r2, #21
900080e4:	d49a      	bmi.n	9000801c <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900080e6:	0594      	lsls	r4, r2, #22
900080e8:	d49f      	bmi.n	9000802a <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
900080ea:	2900      	cmp	r1, #0
900080ec:	d1a2      	bne.n	90008034 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
900080ee:	1c6a      	adds	r2, r5, #1
900080f0:	f43f af71 	beq.w	90007fd6 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900080f4:	f7ff fa28 	bl	90007548 <HAL_GetTick>
900080f8:	eba0 030a 	sub.w	r3, r0, sl
900080fc:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900080fe:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008102:	d802      	bhi.n	9000810a <I2C_WaitOnTXISFlagUntilTimeout+0x142>
90008104:	2d00      	cmp	r5, #0
90008106:	f47f af65 	bne.w	90007fd4 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000810a:	699a      	ldr	r2, [r3, #24]
9000810c:	f012 0202 	ands.w	r2, r2, #2
90008110:	f47f af60 	bne.w	90007fd4 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008114:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008118:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000811a:	430b      	orrs	r3, r1
9000811c:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008120:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008124:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
90008128:	e7a0      	b.n	9000806c <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
9000812a:	2000      	movs	r0, #0
}
9000812c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008130:	fe00e800 	.word	0xfe00e800

90008134 <I2C_WaitOnFlagUntilTimeout>:
{
90008134:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008138:	461c      	mov	r4, r3
9000813a:	4683      	mov	fp, r0
9000813c:	460e      	mov	r6, r1
9000813e:	4615      	mov	r5, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008140:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008142:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008146:	699a      	ldr	r2, [r3, #24]
90008148:	ea36 0202 	bics.w	r2, r6, r2
9000814c:	bf0c      	ite	eq
9000814e:	2201      	moveq	r2, #1
90008150:	2200      	movne	r2, #0
90008152:	42aa      	cmp	r2, r5
90008154:	f040 80af 	bne.w	900082b6 <I2C_WaitOnFlagUntilTimeout+0x182>
  uint32_t itflag   = hi2c->Instance->ISR;
90008158:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000815a:	f012 0c10 	ands.w	ip, r2, #16
9000815e:	d07d      	beq.n	9000825c <I2C_WaitOnFlagUntilTimeout+0x128>
  uint32_t error_code = 0;
90008160:	f04f 0900 	mov.w	r9, #0
  uint32_t tickstart = Tickstart;
90008164:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008168:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000816c:	464f      	mov	r7, r9
9000816e:	1c60      	adds	r0, r4, #1
90008170:	d001      	beq.n	90008176 <I2C_WaitOnFlagUntilTimeout+0x42>
90008172:	e041      	b.n	900081f8 <I2C_WaitOnFlagUntilTimeout+0xc4>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008174:	b92f      	cbnz	r7, 90008182 <I2C_WaitOnFlagUntilTimeout+0x4e>
90008176:	699a      	ldr	r2, [r3, #24]
90008178:	0691      	lsls	r1, r2, #26
9000817a:	d5fb      	bpl.n	90008174 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
9000817c:	b90f      	cbnz	r7, 90008182 <I2C_WaitOnFlagUntilTimeout+0x4e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000817e:	2220      	movs	r2, #32
90008180:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90008182:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90008184:	f049 0c04 	orr.w	ip, r9, #4
    status = HAL_ERROR;
90008188:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000818a:	05d7      	lsls	r7, r2, #23
9000818c:	d56a      	bpl.n	90008264 <I2C_WaitOnFlagUntilTimeout+0x130>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000818e:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008192:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008194:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008198:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000819a:	d504      	bpl.n	900081a6 <I2C_WaitOnFlagUntilTimeout+0x72>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000819c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900081a0:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900081a4:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900081a6:	0592      	lsls	r2, r2, #22
900081a8:	d504      	bpl.n	900081b4 <I2C_WaitOnFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900081aa:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900081ae:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900081b2:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900081b4:	699a      	ldr	r2, [r3, #24]
900081b6:	0790      	lsls	r0, r2, #30
900081b8:	d501      	bpl.n	900081be <I2C_WaitOnFlagUntilTimeout+0x8a>
    hi2c->Instance->TXDR = 0x00U;
900081ba:	2200      	movs	r2, #0
900081bc:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900081be:	699a      	ldr	r2, [r3, #24]
900081c0:	07d1      	lsls	r1, r2, #31
900081c2:	d403      	bmi.n	900081cc <I2C_WaitOnFlagUntilTimeout+0x98>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900081c4:	699a      	ldr	r2, [r3, #24]
900081c6:	f042 0201 	orr.w	r2, r2, #1
900081ca:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900081cc:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900081ce:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900081d0:	4c3a      	ldr	r4, [pc, #232]	@ (900082bc <I2C_WaitOnFlagUntilTimeout+0x188>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900081d2:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900081d4:	4022      	ands	r2, r4
900081d6:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900081d8:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
900081dc:	ea43 030c 	orr.w	r3, r3, ip
900081e0:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900081e4:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900081e8:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
900081ec:	2300      	movs	r3, #0
      return HAL_ERROR;
900081ee:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
900081f0:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
900081f4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900081f8:	699a      	ldr	r2, [r3, #24]
900081fa:	0692      	lsls	r2, r2, #26
900081fc:	d4be      	bmi.n	9000817c <I2C_WaitOnFlagUntilTimeout+0x48>
900081fe:	2f00      	cmp	r7, #0
90008200:	d1bf      	bne.n	90008182 <I2C_WaitOnFlagUntilTimeout+0x4e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008202:	f7ff f9a1 	bl	90007548 <HAL_GetTick>
90008206:	eba0 000a 	sub.w	r0, r0, sl
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000820a:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000820e:	4284      	cmp	r4, r0
90008210:	d301      	bcc.n	90008216 <I2C_WaitOnFlagUntilTimeout+0xe2>
90008212:	2c00      	cmp	r4, #0
90008214:	d1f0      	bne.n	900081f8 <I2C_WaitOnFlagUntilTimeout+0xc4>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008216:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
90008218:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000821c:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
9000821e:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008220:	0400      	lsls	r0, r0, #16
90008222:	d50c      	bpl.n	9000823e <I2C_WaitOnFlagUntilTimeout+0x10a>
              (tmp1 != I2C_CR2_STOP) && \
90008224:	0449      	lsls	r1, r1, #17
90008226:	d40a      	bmi.n	9000823e <I2C_WaitOnFlagUntilTimeout+0x10a>
90008228:	2a20      	cmp	r2, #32
9000822a:	d008      	beq.n	9000823e <I2C_WaitOnFlagUntilTimeout+0x10a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000822c:	685a      	ldr	r2, [r3, #4]
9000822e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008232:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008234:	f7ff f988 	bl	90007548 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008238:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
9000823c:	4682      	mov	sl, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000823e:	699a      	ldr	r2, [r3, #24]
90008240:	0692      	lsls	r2, r2, #26
90008242:	d494      	bmi.n	9000816e <I2C_WaitOnFlagUntilTimeout+0x3a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008244:	f7ff f980 	bl	90007548 <HAL_GetTick>
90008248:	eba0 000a 	sub.w	r0, r0, sl
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000824c:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008250:	2819      	cmp	r0, #25
90008252:	d9f4      	bls.n	9000823e <I2C_WaitOnFlagUntilTimeout+0x10a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008254:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90008258:	2701      	movs	r7, #1
9000825a:	e788      	b.n	9000816e <I2C_WaitOnFlagUntilTimeout+0x3a>
  itflag = hi2c->Instance->ISR;
9000825c:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
9000825e:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008260:	05d7      	lsls	r7, r2, #23
90008262:	d494      	bmi.n	9000818e <I2C_WaitOnFlagUntilTimeout+0x5a>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008264:	0550      	lsls	r0, r2, #21
90008266:	d499      	bmi.n	9000819c <I2C_WaitOnFlagUntilTimeout+0x68>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008268:	0597      	lsls	r7, r2, #22
9000826a:	d49e      	bmi.n	900081aa <I2C_WaitOnFlagUntilTimeout+0x76>
  if (status != HAL_OK)
9000826c:	2900      	cmp	r1, #0
9000826e:	d1a1      	bne.n	900081b4 <I2C_WaitOnFlagUntilTimeout+0x80>
    if (Timeout != HAL_MAX_DELAY)
90008270:	1c62      	adds	r2, r4, #1
90008272:	f43f af68 	beq.w	90008146 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008276:	f7ff f967 	bl	90007548 <HAL_GetTick>
9000827a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9000827c:	1ac3      	subs	r3, r0, r3
9000827e:	42a3      	cmp	r3, r4
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008280:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008284:	d802      	bhi.n	9000828c <I2C_WaitOnFlagUntilTimeout+0x158>
90008286:	2c00      	cmp	r4, #0
90008288:	f47f af5d 	bne.w	90008146 <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000828c:	699a      	ldr	r2, [r3, #24]
9000828e:	ea36 0202 	bics.w	r2, r6, r2
90008292:	bf0c      	ite	eq
90008294:	2201      	moveq	r2, #1
90008296:	2200      	movne	r2, #0
90008298:	42aa      	cmp	r2, r5
9000829a:	f47f af54 	bne.w	90008146 <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000829e:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900082a2:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900082a4:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900082a6:	430b      	orrs	r3, r1
900082a8:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900082ac:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900082b0:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
900082b4:	e79a      	b.n	900081ec <I2C_WaitOnFlagUntilTimeout+0xb8>
  return HAL_OK;
900082b6:	2000      	movs	r0, #0
}
900082b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900082bc:	fe00e800 	.word	0xfe00e800

900082c0 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900082c0:	6803      	ldr	r3, [r0, #0]
{
900082c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900082c6:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900082c8:	699a      	ldr	r2, [r3, #24]
900082ca:	0694      	lsls	r4, r2, #26
900082cc:	f100 8092 	bmi.w	900083f4 <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
900082d0:	4605      	mov	r5, r0
900082d2:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900082d4:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
900082d8:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900082da:	f012 0c10 	ands.w	ip, r2, #16
900082de:	f000 808c 	beq.w	900083fa <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
900082e2:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
900082e4:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900082e6:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
900082ea:	46a2      	mov	sl, r4
900082ec:	1c70      	adds	r0, r6, #1
900082ee:	d003      	beq.n	900082f8 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
900082f0:	e043      	b.n	9000837a <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900082f2:	f1ba 0f00 	cmp.w	sl, #0
900082f6:	d107      	bne.n	90008308 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
900082f8:	699a      	ldr	r2, [r3, #24]
900082fa:	0691      	lsls	r1, r2, #26
900082fc:	d5f9      	bpl.n	900082f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
900082fe:	f1ba 0f00 	cmp.w	sl, #0
90008302:	d101      	bne.n	90008308 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008304:	2220      	movs	r2, #32
90008306:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008308:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
9000830c:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000830e:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008310:	05d0      	lsls	r0, r2, #23
90008312:	d55a      	bpl.n	900083ca <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008314:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008318:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000831a:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000831e:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008320:	d504      	bpl.n	9000832c <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008322:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008326:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000832a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000832c:	0596      	lsls	r6, r2, #22
9000832e:	d504      	bpl.n	9000833a <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008330:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008334:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008338:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000833a:	699a      	ldr	r2, [r3, #24]
9000833c:	0790      	lsls	r0, r2, #30
9000833e:	d501      	bpl.n	90008344 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90008340:	2200      	movs	r2, #0
90008342:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008344:	699a      	ldr	r2, [r3, #24]
90008346:	07d1      	lsls	r1, r2, #31
90008348:	d403      	bmi.n	90008352 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000834a:	699a      	ldr	r2, [r3, #24]
9000834c:	f042 0201 	orr.w	r2, r2, #1
90008350:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008352:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008354:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008356:	4c33      	ldr	r4, [pc, #204]	@ (90008424 <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008358:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000835a:	4022      	ands	r2, r4
9000835c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000835e:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90008360:	ea43 030c 	orr.w	r3, r3, ip
90008364:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008366:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000836a:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
9000836e:	2300      	movs	r3, #0
      return HAL_ERROR;
90008370:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90008372:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90008376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000837a:	699a      	ldr	r2, [r3, #24]
9000837c:	0692      	lsls	r2, r2, #26
9000837e:	d4be      	bmi.n	900082fe <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
90008380:	f1ba 0f00 	cmp.w	sl, #0
90008384:	d1c0      	bne.n	90008308 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008386:	f7ff f8df 	bl	90007548 <HAL_GetTick>
9000838a:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000838e:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008390:	4286      	cmp	r6, r0
90008392:	d301      	bcc.n	90008398 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
90008394:	2e00      	cmp	r6, #0
90008396:	d1f0      	bne.n	9000837a <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008398:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000839a:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000839e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900083a0:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900083a2:	0409      	lsls	r1, r1, #16
900083a4:	d503      	bpl.n	900083ae <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
900083a6:	0441      	lsls	r1, r0, #17
900083a8:	d401      	bmi.n	900083ae <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
900083aa:	2a20      	cmp	r2, #32
900083ac:	d130      	bne.n	90008410 <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900083ae:	699a      	ldr	r2, [r3, #24]
900083b0:	0692      	lsls	r2, r2, #26
900083b2:	d49b      	bmi.n	900082ec <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900083b4:	f7ff f8c8 	bl	90007548 <HAL_GetTick>
900083b8:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900083bc:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900083be:	2819      	cmp	r0, #25
900083c0:	d9f5      	bls.n	900083ae <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900083c2:	2420      	movs	r4, #32
              status = HAL_ERROR;
900083c4:	f04f 0a01 	mov.w	sl, #1
900083c8:	e790      	b.n	900082ec <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900083ca:	0550      	lsls	r0, r2, #21
900083cc:	d4a9      	bmi.n	90008322 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900083ce:	0594      	lsls	r4, r2, #22
900083d0:	d4ae      	bmi.n	90008330 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
900083d2:	2900      	cmp	r1, #0
900083d4:	d1b1      	bne.n	9000833a <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900083d6:	f7ff f8b7 	bl	90007548 <HAL_GetTick>
900083da:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
900083dc:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900083de:	42b0      	cmp	r0, r6
900083e0:	d800      	bhi.n	900083e4 <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
900083e2:	b91e      	cbnz	r6, 900083ec <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
900083e4:	699a      	ldr	r2, [r3, #24]
900083e6:	f012 0220 	ands.w	r2, r2, #32
900083ea:	d008      	beq.n	900083fe <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900083ec:	699a      	ldr	r2, [r3, #24]
900083ee:	0692      	lsls	r2, r2, #26
900083f0:	f57f af72 	bpl.w	900082d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
900083f4:	2000      	movs	r0, #0
}
900083f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
900083fa:	4661      	mov	r1, ip
900083fc:	e787      	b.n	9000830e <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900083fe:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008400:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008402:	430b      	orrs	r3, r1
90008404:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008406:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
9000840a:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
9000840e:	e7ae      	b.n	9000836e <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008410:	685a      	ldr	r2, [r3, #4]
90008412:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008416:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008418:	f7ff f896 	bl	90007548 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000841c:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000841e:	4681      	mov	r9, r0
90008420:	e7c5      	b.n	900083ae <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008422:	bf00      	nop
90008424:	fe00e800 	.word	0xfe00e800

90008428 <HAL_I2C_MspInit>:
}
90008428:	4770      	bx	lr
9000842a:	bf00      	nop

9000842c <HAL_I2C_Init>:
  if (hi2c == NULL)
9000842c:	2800      	cmp	r0, #0
9000842e:	d053      	beq.n	900084d8 <HAL_I2C_Init+0xac>
{
90008430:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90008432:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90008436:	4604      	mov	r4, r0
90008438:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000843c:	2b00      	cmp	r3, #0
9000843e:	d046      	beq.n	900084ce <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90008440:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008442:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008444:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008446:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
9000844a:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000844c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008450:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008452:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008456:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90008458:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000845a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000845c:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000845e:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008460:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90008464:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008466:	d009      	beq.n	9000847c <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008468:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000846c:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000846e:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008470:	d107      	bne.n	90008482 <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008472:	685a      	ldr	r2, [r3, #4]
90008474:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90008478:	605a      	str	r2, [r3, #4]
9000847a:	e006      	b.n	9000848a <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000847c:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008480:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008482:	685a      	ldr	r2, [r3, #4]
90008484:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008488:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000848a:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000848c:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008490:	4912      	ldr	r1, [pc, #72]	@ (900084dc <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008492:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008494:	4301      	orrs	r1, r0
90008496:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90008498:	68d9      	ldr	r1, [r3, #12]
9000849a:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
9000849e:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
900084a0:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900084a4:	4302      	orrs	r2, r0
900084a6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900084aa:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900084ae:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900084b0:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900084b2:	4301      	orrs	r1, r0
  return HAL_OK;
900084b4:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900084b6:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
900084b8:	6819      	ldr	r1, [r3, #0]
900084ba:	f041 0101 	orr.w	r1, r1, #1
900084be:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900084c0:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
900084c2:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
900084c6:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900084c8:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
900084cc:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
900084ce:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
900084d2:	f7ff ffa9 	bl	90008428 <HAL_I2C_MspInit>
900084d6:	e7b3      	b.n	90008440 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
900084d8:	2001      	movs	r0, #1
}
900084da:	4770      	bx	lr
900084dc:	02008000 	.word	0x02008000

900084e0 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
900084e0:	4770      	bx	lr
900084e2:	bf00      	nop

900084e4 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
900084e4:	b1b0      	cbz	r0, 90008514 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
900084e6:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900084e8:	2324      	movs	r3, #36	@ 0x24
{
900084ea:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
900084ec:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
900084f0:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
900084f2:	6813      	ldr	r3, [r2, #0]
900084f4:	f023 0301 	bic.w	r3, r3, #1
900084f8:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
900084fa:	f7ff fff1 	bl	900084e0 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900084fe:	2300      	movs	r3, #0
90008500:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90008502:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008504:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90008508:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000850c:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000850e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
90008512:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90008514:	2001      	movs	r0, #1
}
90008516:	4770      	bx	lr

90008518 <HAL_I2C_Mem_Write>:
{
90008518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000851c:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
9000851e:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90008522:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
90008524:	2820      	cmp	r0, #32
{
90008526:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
9000852a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
9000852c:	d11e      	bne.n	9000856c <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
9000852e:	4698      	mov	r8, r3
90008530:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90008532:	b1bb      	cbz	r3, 90008564 <HAL_I2C_Mem_Write+0x4c>
90008534:	f1ba 0f00 	cmp.w	sl, #0
90008538:	d014      	beq.n	90008564 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
9000853a:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
9000853e:	2b01      	cmp	r3, #1
90008540:	d014      	beq.n	9000856c <HAL_I2C_Mem_Write+0x54>
90008542:	2301      	movs	r3, #1
90008544:	460d      	mov	r5, r1
90008546:	4691      	mov	r9, r2
90008548:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
9000854c:	f7fe fffc 	bl	90007548 <HAL_GetTick>
90008550:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008552:	4620      	mov	r0, r4
90008554:	4631      	mov	r1, r6
90008556:	f7ff fc97 	bl	90007e88 <I2C_WaitOnFlagUntilTimeout.constprop.0>
9000855a:	b158      	cbz	r0, 90008574 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
9000855c:	2001      	movs	r0, #1
}
9000855e:	b003      	add	sp, #12
90008560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008564:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008568:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000856a:	e7f7      	b.n	9000855c <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
9000856c:	2002      	movs	r0, #2
}
9000856e:	b003      	add	sp, #12
90008570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008574:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008576:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000857a:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
9000857c:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000857e:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90008580:	4a5f      	ldr	r2, [pc, #380]	@ (90008700 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008582:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008586:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008588:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000858a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000858e:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008590:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008592:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008596:	684b      	ldr	r3, [r1, #4]
90008598:	4013      	ands	r3, r2
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000859a:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000859e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900085a2:	4a58      	ldr	r2, [pc, #352]	@ (90008704 <HAL_I2C_Mem_Write+0x1ec>)
900085a4:	ea43 030b 	orr.w	r3, r3, fp
900085a8:	431a      	orrs	r2, r3
900085aa:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900085ac:	4632      	mov	r2, r6
900085ae:	4639      	mov	r1, r7
900085b0:	f7ff fd0a 	bl	90007fc8 <I2C_WaitOnTXISFlagUntilTimeout>
900085b4:	2800      	cmp	r0, #0
900085b6:	d176      	bne.n	900086a6 <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900085b8:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900085bc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900085be:	d169      	bne.n	90008694 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900085c0:	fa5f f289 	uxtb.w	r2, r9
900085c4:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
900085c6:	463b      	mov	r3, r7
900085c8:	2200      	movs	r2, #0
900085ca:	2180      	movs	r1, #128	@ 0x80
900085cc:	4620      	mov	r0, r4
900085ce:	9600      	str	r6, [sp, #0]
900085d0:	f7ff fdb0 	bl	90008134 <I2C_WaitOnFlagUntilTimeout>
900085d4:	2800      	cmp	r0, #0
900085d6:	d166      	bne.n	900086a6 <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900085d8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900085da:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900085dc:	b29b      	uxth	r3, r3
900085de:	2bff      	cmp	r3, #255	@ 0xff
900085e0:	d965      	bls.n	900086ae <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
900085e2:	6853      	ldr	r3, [r2, #4]
900085e4:	4948      	ldr	r1, [pc, #288]	@ (90008708 <HAL_I2C_Mem_Write+0x1f0>)
900085e6:	400b      	ands	r3, r1
900085e8:	4948      	ldr	r1, [pc, #288]	@ (9000870c <HAL_I2C_Mem_Write+0x1f4>)
900085ea:	ea43 030b 	orr.w	r3, r3, fp
900085ee:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900085f0:	23ff      	movs	r3, #255	@ 0xff
900085f2:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900085f4:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
900085f6:	e003      	b.n	90008600 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
900085f8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900085fa:	b29b      	uxth	r3, r3
900085fc:	2b00      	cmp	r3, #0
900085fe:	d069      	beq.n	900086d4 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008600:	4632      	mov	r2, r6
90008602:	4639      	mov	r1, r7
90008604:	4620      	mov	r0, r4
90008606:	f7ff fcdf 	bl	90007fc8 <I2C_WaitOnTXISFlagUntilTimeout>
9000860a:	4602      	mov	r2, r0
9000860c:	2800      	cmp	r0, #0
9000860e:	d1a5      	bne.n	9000855c <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008610:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008612:	6825      	ldr	r5, [r4, #0]
90008614:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90008618:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000861a:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
9000861c:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008620:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90008622:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008624:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90008628:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000862a:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
9000862e:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90008630:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008634:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
90008636:	b289      	uxth	r1, r1
90008638:	2b00      	cmp	r3, #0
9000863a:	d1dd      	bne.n	900085f8 <HAL_I2C_Mem_Write+0xe0>
9000863c:	2900      	cmp	r1, #0
9000863e:	d0db      	beq.n	900085f8 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008640:	463b      	mov	r3, r7
90008642:	2180      	movs	r1, #128	@ 0x80
90008644:	4620      	mov	r0, r4
90008646:	9600      	str	r6, [sp, #0]
90008648:	f7ff fd74 	bl	90008134 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000864c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008650:	2800      	cmp	r0, #0
90008652:	d183      	bne.n	9000855c <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008654:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008656:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90008708 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000865a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000865c:	492b      	ldr	r1, [pc, #172]	@ (9000870c <HAL_I2C_Mem_Write+0x1f4>)
9000865e:	4670      	mov	r0, lr
90008660:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008662:	4563      	cmp	r3, ip
90008664:	d909      	bls.n	9000867a <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90008666:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008668:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000866c:	ea03 030e 	and.w	r3, r3, lr
90008670:	ea43 030b 	orr.w	r3, r3, fp
90008674:	4319      	orrs	r1, r3
90008676:	6051      	str	r1, [r2, #4]
}
90008678:	e7be      	b.n	900085f8 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
9000867a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000867c:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
9000867e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008680:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90008682:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008684:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008686:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
9000868a:	430b      	orrs	r3, r1
9000868c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008690:	6053      	str	r3, [r2, #4]
}
90008692:	e7b1      	b.n	900085f8 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008694:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008698:	4639      	mov	r1, r7
9000869a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000869c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000869e:	4632      	mov	r2, r6
900086a0:	f7ff fc92 	bl	90007fc8 <I2C_WaitOnTXISFlagUntilTimeout>
900086a4:	b188      	cbz	r0, 900086ca <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
900086a6:	2300      	movs	r3, #0
900086a8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900086ac:	e756      	b.n	9000855c <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
900086ae:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900086b0:	4815      	ldr	r0, [pc, #84]	@ (90008708 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
900086b2:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900086b4:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
900086b6:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900086b8:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900086ba:	4001      	ands	r1, r0
900086bc:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
900086c0:	430b      	orrs	r3, r1
900086c2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900086c6:	6053      	str	r3, [r2, #4]
}
900086c8:	e79a      	b.n	90008600 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900086ca:	fa5f f289 	uxtb.w	r2, r9
900086ce:	6823      	ldr	r3, [r4, #0]
900086d0:	629a      	str	r2, [r3, #40]	@ 0x28
900086d2:	e778      	b.n	900085c6 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900086d4:	4632      	mov	r2, r6
900086d6:	4639      	mov	r1, r7
900086d8:	4620      	mov	r0, r4
900086da:	f7ff fdf1 	bl	900082c0 <I2C_WaitOnSTOPFlagUntilTimeout>
900086de:	2800      	cmp	r0, #0
900086e0:	f47f af3c 	bne.w	9000855c <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900086e4:	6823      	ldr	r3, [r4, #0]
900086e6:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900086e8:	4d09      	ldr	r5, [pc, #36]	@ (90008710 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900086ea:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900086ec:	685a      	ldr	r2, [r3, #4]
900086ee:	402a      	ands	r2, r5
900086f0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900086f2:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900086f6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900086fa:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900086fe:	e72e      	b.n	9000855e <HAL_I2C_Mem_Write+0x46>
90008700:	fc009800 	.word	0xfc009800
90008704:	01002000 	.word	0x01002000
90008708:	fc009c00 	.word	0xfc009c00
9000870c:	01ff0000 	.word	0x01ff0000
90008710:	fe00e800 	.word	0xfe00e800

90008714 <HAL_I2C_Mem_Read>:
{
90008714:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008718:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
9000871a:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
9000871e:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
90008720:	2820      	cmp	r0, #32
{
90008722:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90008726:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90008728:	d11e      	bne.n	90008768 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
9000872a:	4698      	mov	r8, r3
9000872c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9000872e:	b1bb      	cbz	r3, 90008760 <HAL_I2C_Mem_Read+0x4c>
90008730:	f1ba 0f00 	cmp.w	sl, #0
90008734:	d014      	beq.n	90008760 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
90008736:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
9000873a:	2b01      	cmp	r3, #1
9000873c:	d014      	beq.n	90008768 <HAL_I2C_Mem_Read+0x54>
9000873e:	2301      	movs	r3, #1
90008740:	460d      	mov	r5, r1
90008742:	4691      	mov	r9, r2
90008744:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008748:	f7fe fefe 	bl	90007548 <HAL_GetTick>
9000874c:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
9000874e:	4620      	mov	r0, r4
90008750:	4631      	mov	r1, r6
90008752:	f7ff fb99 	bl	90007e88 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90008756:	b158      	cbz	r0, 90008770 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
90008758:	2001      	movs	r0, #1
}
9000875a:	b002      	add	sp, #8
9000875c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008760:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008764:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90008766:	e7f7      	b.n	90008758 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
90008768:	2002      	movs	r0, #2
}
9000876a:	b002      	add	sp, #8
9000876c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008770:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008772:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
90008776:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
90008778:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000877a:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
9000877c:	495f      	ldr	r1, [pc, #380]	@ (900088fc <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000877e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008782:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008784:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008786:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000878a:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000878c:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
9000878e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008792:	6853      	ldr	r3, [r2, #4]
90008794:	400b      	ands	r3, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008796:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000879a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000879e:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
900087a0:	432b      	orrs	r3, r5
900087a2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
900087a6:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900087a8:	4632      	mov	r2, r6
900087aa:	f7ff fc0d 	bl	90007fc8 <I2C_WaitOnTXISFlagUntilTimeout>
900087ae:	2800      	cmp	r0, #0
900087b0:	d177      	bne.n	900088a2 <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900087b2:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900087b6:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900087b8:	d16a      	bne.n	90008890 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900087ba:	fa5f f289 	uxtb.w	r2, r9
900087be:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
900087c0:	463b      	mov	r3, r7
900087c2:	2200      	movs	r2, #0
900087c4:	2140      	movs	r1, #64	@ 0x40
900087c6:	4620      	mov	r0, r4
900087c8:	9600      	str	r6, [sp, #0]
900087ca:	f7ff fcb3 	bl	90008134 <I2C_WaitOnFlagUntilTimeout>
900087ce:	2800      	cmp	r0, #0
900087d0:	d167      	bne.n	900088a2 <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900087d2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900087d4:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900087d6:	b29b      	uxth	r3, r3
900087d8:	2bff      	cmp	r3, #255	@ 0xff
900087da:	d966      	bls.n	900088aa <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
900087dc:	6853      	ldr	r3, [r2, #4]
900087de:	4947      	ldr	r1, [pc, #284]	@ (900088fc <HAL_I2C_Mem_Read+0x1e8>)
900087e0:	400b      	ands	r3, r1
900087e2:	4947      	ldr	r1, [pc, #284]	@ (90008900 <HAL_I2C_Mem_Read+0x1ec>)
900087e4:	432b      	orrs	r3, r5
900087e6:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900087e8:	23ff      	movs	r3, #255	@ 0xff
900087ea:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900087ec:	6051      	str	r1, [r2, #4]
}
900087ee:	e003      	b.n	900087f8 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
900087f0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900087f2:	b29b      	uxth	r3, r3
900087f4:	2b00      	cmp	r3, #0
900087f6:	d06b      	beq.n	900088d0 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
900087f8:	463b      	mov	r3, r7
900087fa:	2200      	movs	r2, #0
900087fc:	2104      	movs	r1, #4
900087fe:	4620      	mov	r0, r4
90008800:	9600      	str	r6, [sp, #0]
90008802:	f7ff fc97 	bl	90008134 <I2C_WaitOnFlagUntilTimeout>
90008806:	2800      	cmp	r0, #0
90008808:	d1a6      	bne.n	90008758 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000880a:	6821      	ldr	r1, [r4, #0]
9000880c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000880e:	6a49      	ldr	r1, [r1, #36]	@ 0x24
90008810:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
90008812:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008816:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
90008818:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
9000881a:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
9000881e:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90008820:	3101      	adds	r1, #1
      hi2c->XferCount--;
90008822:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90008826:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
90008828:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
9000882a:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000882e:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008830:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008832:	b289      	uxth	r1, r1
90008834:	2b00      	cmp	r3, #0
90008836:	d1db      	bne.n	900087f0 <HAL_I2C_Mem_Read+0xdc>
90008838:	2900      	cmp	r1, #0
9000883a:	d0d9      	beq.n	900087f0 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000883c:	4602      	mov	r2, r0
9000883e:	463b      	mov	r3, r7
90008840:	2180      	movs	r1, #128	@ 0x80
90008842:	4620      	mov	r0, r4
90008844:	9600      	str	r6, [sp, #0]
90008846:	f7ff fc75 	bl	90008134 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000884a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000884e:	2800      	cmp	r0, #0
90008850:	d182      	bne.n	90008758 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008852:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008854:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 90008910 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008858:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000885a:	492a      	ldr	r1, [pc, #168]	@ (90008904 <HAL_I2C_Mem_Read+0x1f0>)
9000885c:	4670      	mov	r0, lr
9000885e:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008860:	4563      	cmp	r3, ip
90008862:	d908      	bls.n	90008876 <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90008864:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008866:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000886a:	ea03 030e 	and.w	r3, r3, lr
9000886e:	432b      	orrs	r3, r5
90008870:	4319      	orrs	r1, r3
90008872:	6051      	str	r1, [r2, #4]
}
90008874:	e7bc      	b.n	900087f0 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
90008876:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008878:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
9000887a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000887c:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
9000887e:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008880:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008882:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90008886:	430b      	orrs	r3, r1
90008888:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000888c:	6053      	str	r3, [r2, #4]
}
9000888e:	e7af      	b.n	900087f0 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008890:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008894:	4639      	mov	r1, r7
90008896:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008898:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000889a:	4632      	mov	r2, r6
9000889c:	f7ff fb94 	bl	90007fc8 <I2C_WaitOnTXISFlagUntilTimeout>
900088a0:	b188      	cbz	r0, 900088c6 <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
900088a2:	2300      	movs	r3, #0
900088a4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900088a8:	e756      	b.n	90008758 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
900088aa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900088ac:	4813      	ldr	r0, [pc, #76]	@ (900088fc <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
900088ae:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900088b0:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
900088b2:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900088b4:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900088b6:	4001      	ands	r1, r0
900088b8:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
900088bc:	430b      	orrs	r3, r1
900088be:	4912      	ldr	r1, [pc, #72]	@ (90008908 <HAL_I2C_Mem_Read+0x1f4>)
900088c0:	4319      	orrs	r1, r3
900088c2:	6051      	str	r1, [r2, #4]
}
900088c4:	e798      	b.n	900087f8 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900088c6:	fa5f f289 	uxtb.w	r2, r9
900088ca:	6823      	ldr	r3, [r4, #0]
900088cc:	629a      	str	r2, [r3, #40]	@ 0x28
900088ce:	e777      	b.n	900087c0 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900088d0:	4632      	mov	r2, r6
900088d2:	4639      	mov	r1, r7
900088d4:	4620      	mov	r0, r4
900088d6:	f7ff fcf3 	bl	900082c0 <I2C_WaitOnSTOPFlagUntilTimeout>
900088da:	2800      	cmp	r0, #0
900088dc:	f47f af3c 	bne.w	90008758 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900088e0:	6823      	ldr	r3, [r4, #0]
900088e2:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900088e4:	4d09      	ldr	r5, [pc, #36]	@ (9000890c <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900088e6:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900088e8:	685a      	ldr	r2, [r3, #4]
900088ea:	402a      	ands	r2, r5
900088ec:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900088ee:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900088f2:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900088f6:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900088fa:	e72e      	b.n	9000875a <HAL_I2C_Mem_Read+0x46>
900088fc:	fc009800 	.word	0xfc009800
90008900:	01ff2400 	.word	0x01ff2400
90008904:	01ff0000 	.word	0x01ff0000
90008908:	02002400 	.word	0x02002400
9000890c:	fe00e800 	.word	0xfe00e800
90008910:	fc009c00 	.word	0xfc009c00

90008914 <HAL_I2C_GetState>:
  return hi2c->State;
90008914:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90008918:	4770      	bx	lr
9000891a:	bf00      	nop

9000891c <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000891c:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
9000891e:	4770      	bx	lr

90008920 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008920:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90008924:	2a20      	cmp	r2, #32
90008926:	d123      	bne.n	90008970 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90008928:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000892c:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90008930:	4603      	mov	r3, r0
90008932:	2a01      	cmp	r2, #1
90008934:	d01c      	beq.n	90008970 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008936:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008938:	2024      	movs	r0, #36	@ 0x24
{
9000893a:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000893c:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008940:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90008944:	6810      	ldr	r0, [r2, #0]
90008946:	f020 0001 	bic.w	r0, r0, #1
9000894a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000894c:	6810      	ldr	r0, [r2, #0]
9000894e:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
90008952:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90008954:	6810      	ldr	r0, [r2, #0]
90008956:	4301      	orrs	r1, r0

    return HAL_OK;
90008958:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000895a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000895c:	6811      	ldr	r1, [r2, #0]
9000895e:	f041 0101 	orr.w	r1, r1, #1
90008962:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008964:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008968:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000896c:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90008970:	2002      	movs	r0, #2
}
90008972:	4770      	bx	lr

90008974 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008974:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90008978:	2a20      	cmp	r2, #32
9000897a:	d122      	bne.n	900089c2 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000897c:	4603      	mov	r3, r0
{
9000897e:	b500      	push	{lr}
90008980:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008984:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90008988:	2a01      	cmp	r2, #1
9000898a:	d01c      	beq.n	900089c6 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000898c:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000898e:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008990:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008994:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90008998:	6810      	ldr	r0, [r2, #0]
9000899a:	f020 0001 	bic.w	r0, r0, #1
9000899e:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
900089a0:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
900089a2:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
900089a6:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
900089aa:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
900089ac:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
900089ae:	6811      	ldr	r1, [r2, #0]
900089b0:	f041 0101 	orr.w	r1, r1, #1
900089b4:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900089b6:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900089ba:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900089be:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900089c2:	2002      	movs	r0, #2
}
900089c4:	4770      	bx	lr
    __HAL_LOCK(hi2c);
900089c6:	2002      	movs	r0, #2
}
900089c8:	f85d fb04 	ldr.w	pc, [sp], #4

900089cc <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
900089cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900089d0:	4699      	mov	r9, r3
900089d2:	4680      	mov	r8, r0
900089d4:	460d      	mov	r5, r1
900089d6:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
900089d8:	7803      	ldrb	r3, [r0, #0]
900089da:	2601      	movs	r6, #1
  p = 0;
900089dc:	2700      	movs	r7, #0
900089de:	e005      	b.n	900089ec <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
900089e0:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
900089e4:	19da      	adds	r2, r3, r7
900089e6:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
900089ea:	d83a      	bhi.n	90008a62 <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
900089ec:	19e8      	adds	r0, r5, r7
900089ee:	461a      	mov	r2, r3
900089f0:	4631      	mov	r1, r6
    while (i != 0UL)
900089f2:	b113      	cbz	r3, 900089fa <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
900089f4:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
900089f6:	f020 f92f 	bl	90028c58 <memset>
  for (l = 0; l < 16UL; l++)
900089fa:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
900089fc:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
90008a00:	d1ee      	bne.n	900089e0 <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
90008a02:	2300      	movs	r3, #0
90008a04:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
90008a06:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90008a0a:	7829      	ldrb	r1, [r5, #0]
90008a0c:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
90008a0e:	b329      	cbz	r1, 90008a5c <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
90008a10:	4699      	mov	r9, r3
90008a12:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008a16:	2701      	movs	r7, #1
  p = 0;
90008a18:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90008a1a:	4291      	cmp	r1, r2
90008a1c:	d124      	bne.n	90008a68 <JPEG_Bits_To_SizeCodes+0x9c>
90008a1e:	eb06 0008 	add.w	r0, r6, r8
90008a22:	eb05 0c06 	add.w	ip, r5, r6
90008a26:	464b      	mov	r3, r9
90008a28:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90008a2c:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
90008a30:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
90008a32:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90008a36:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90008a38:	4596      	cmp	lr, r2
90008a3a:	d0f7      	beq.n	90008a2c <JPEG_Bits_To_SizeCodes+0x60>
90008a3c:	3601      	adds	r6, #1
90008a3e:	eba6 0609 	sub.w	r6, r6, r9
      p++;
90008a42:	440e      	add	r6, r1
    if(si > 31UL)
90008a44:	2a1f      	cmp	r2, #31
90008a46:	d80c      	bhi.n	90008a62 <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008a48:	fa07 f102 	lsl.w	r1, r7, r2
90008a4c:	4299      	cmp	r1, r3
90008a4e:	d908      	bls.n	90008a62 <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
90008a50:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90008a52:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90008a56:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90008a58:	2900      	cmp	r1, #0
90008a5a:	d1de      	bne.n	90008a1a <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
90008a5c:	2000      	movs	r0, #0
}
90008a5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
90008a62:	2001      	movs	r0, #1
}
90008a64:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
90008a68:	464b      	mov	r3, r9
90008a6a:	e7eb      	b.n	90008a44 <JPEG_Bits_To_SizeCodes+0x78>

90008a6c <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90008a6c:	b5f0      	push	{r4, r5, r6, r7, lr}
90008a6e:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
90008a72:	460d      	mov	r5, r1
90008a74:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008a76:	ab01      	add	r3, sp, #4
90008a78:	aa43      	add	r2, sp, #268	@ 0x10c
90008a7a:	a902      	add	r1, sp, #8
90008a7c:	f7ff ffa6 	bl	900089cc <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008a80:	b9d0      	cbnz	r0, 90008ab8 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90008a82:	9f01      	ldr	r7, [sp, #4]
90008a84:	b1c7      	cbz	r7, 90008ab8 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90008a86:	370f      	adds	r7, #15
90008a88:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90008a8c:	a902      	add	r1, sp, #8
90008a8e:	f104 0c0f 	add.w	ip, r4, #15
90008a92:	4427      	add	r7, r4
90008a94:	e009      	b.n	90008aaa <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008a96:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90008a9a:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008a9c:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008aa0:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008aa4:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008aa6:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90008aa8:	d006      	beq.n	90008ab8 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90008aaa:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008aae:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008ab0:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008ab4:	d9ef      	bls.n	90008a96 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008ab6:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008ab8:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90008abc:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008abe:	bf00      	nop

90008ac0 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008ac4:	6804      	ldr	r4, [r0, #0]
{
90008ac6:	b093      	sub	sp, #76	@ 0x4c
90008ac8:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008aca:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90008ace:	429a      	cmp	r2, r3
90008ad0:	f000 809d 	beq.w	90008c0e <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90008ad4:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90008ad8:	429a      	cmp	r2, r3
90008ada:	d003      	beq.n	90008ae4 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008adc:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008ade:	b013      	add	sp, #76	@ 0x4c
90008ae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008ae4:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90008ae8:	a903      	add	r1, sp, #12
90008aea:	f7ff ffbf 	bl	90008a6c <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90008aee:	2800      	cmp	r0, #0
90008af0:	d1f5      	bne.n	90008ade <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90008af2:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008af6:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008afa:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90008afe:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b00:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90008b04:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b06:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90008b0a:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b0e:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
90008b12:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b16:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
90008b1a:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b1c:	f89d 9015 	ldrb.w	r9, [sp, #21]
90008b20:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b24:	f89d c014 	ldrb.w	ip, [sp, #20]
90008b28:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b2c:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b30:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b34:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b38:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b3a:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b3e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90008b42:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90008b46:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b4a:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b4e:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b52:	f89d 7011 	ldrb.w	r7, [sp, #17]
90008b56:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b5a:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90008b5c:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b60:	f89d 2010 	ldrb.w	r2, [sp, #16]
90008b64:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b68:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90008b6a:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b6e:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b70:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90008b74:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b78:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b7c:	f89d 600f 	ldrb.w	r6, [sp, #15]
90008b80:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b84:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b88:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b8a:	9b01      	ldr	r3, [sp, #4]
90008b8c:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b90:	f89d 500d 	ldrb.w	r5, [sp, #13]
90008b94:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b98:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90008b9c:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ba0:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90008ba2:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ba6:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008baa:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90008bae:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bb2:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bb6:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bba:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90008bbe:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90008bc2:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90008bc6:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bca:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90008bce:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bd0:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90008bd4:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90008bd6:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90008bda:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bde:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
90008be2:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008be4:	f89d 2020 	ldrb.w	r2, [sp, #32]
90008be8:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90008bea:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90008bee:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bf2:	f89d 301c 	ldrb.w	r3, [sp, #28]
90008bf6:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bf8:	f89d 3018 	ldrb.w	r3, [sp, #24]
90008bfc:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90008c00:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90008c04:	f844 3c18 	str.w	r3, [r4, #-24]
}
90008c08:	b013      	add	sp, #76	@ 0x4c
90008c0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008c0e:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
90008c12:	e769      	b.n	90008ae8 <JPEG_Set_HuffDC_Mem+0x28>

90008c14 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90008c14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008c18:	6804      	ldr	r4, [r0, #0]
{
90008c1a:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
90008c1e:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008c20:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90008c24:	429a      	cmp	r2, r3
90008c26:	d041      	beq.n	90008cac <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90008c28:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90008c2c:	429a      	cmp	r2, r3
90008c2e:	d004      	beq.n	90008c3a <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008c30:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008c32:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90008c36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008c3a:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008c3e:	4628      	mov	r0, r5
90008c40:	466b      	mov	r3, sp
90008c42:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
90008c46:	a901      	add	r1, sp, #4
90008c48:	f7ff fec0 	bl	900089cc <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008c4c:	2800      	cmp	r0, #0
90008c4e:	d1f0      	bne.n	90008c32 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90008c50:	9b00      	ldr	r3, [sp, #0]
90008c52:	b373      	cbz	r3, 90008cb2 <JPEG_Set_HuffAC_Mem+0x9e>
90008c54:	330f      	adds	r3, #15
90008c56:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
90008c5a:	af01      	add	r7, sp, #4
90008c5c:	f105 020f 	add.w	r2, r5, #15
90008c60:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008c64:	ae42      	add	r6, sp, #264	@ 0x108
90008c66:	e011      	b.n	90008c8c <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
90008c68:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90008c6c:	2ba1      	cmp	r3, #161	@ 0xa1
90008c6e:	d8df      	bhi.n	90008c30 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008c70:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008c74:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90008c78:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90008c7c:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008c7e:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008c82:	46b1      	mov	r9, r6
90008c84:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008c88:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90008c8a:	d014      	beq.n	90008cb6 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90008c8c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90008c90:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
90008c92:	2900      	cmp	r1, #0
90008c94:	d0ec      	beq.n	90008c70 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
90008c96:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90008c98:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90008c9c:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90008c9e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90008ca2:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90008ca6:	d1df      	bne.n	90008c68 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
90008ca8:	23a1      	movs	r3, #161	@ 0xa1
90008caa:	e7e1      	b.n	90008c70 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008cac:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90008cb0:	e7c5      	b.n	90008c3e <JPEG_Set_HuffAC_Mem+0x2a>
90008cb2:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
90008cb6:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
90008cba:	4a1a      	ldr	r2, [pc, #104]	@ (90008d24 <JPEG_Set_HuffAC_Mem+0x110>)
90008cbc:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90008cc0:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90008cc2:	6023      	str	r3, [r4, #0]
90008cc4:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90008cc8:	6063      	str	r3, [r4, #4]
90008cca:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
90008cce:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90008cd0:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90008cd4:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90008cd6:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
90008cda:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
90008cde:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90008ce0:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90008ce4:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90008ce6:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90008cea:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008cec:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008cf0:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008cf4:	0212      	lsls	r2, r2, #8
90008cf6:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008cfa:	021b      	lsls	r3, r3, #8
90008cfc:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d00:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
90008d04:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d06:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d0a:	433a      	orrs	r2, r7
    while (i > 1UL)
90008d0c:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d0e:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
90008d12:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008d16:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
90008d1a:	d1e7      	bne.n	90008cec <JPEG_Set_HuffAC_Mem+0xd8>
}
90008d1c:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90008d20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008d24:	0fd10fd0 	.word	0x0fd10fd0

90008d28 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90008d28:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90008d2a:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90008d2c:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
90008d30:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90008d32:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008d34:	f002 0203 	and.w	r2, r2, #3
90008d38:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90008d3a:	685a      	ldr	r2, [r3, #4]
90008d3c:	bf0c      	ite	eq
90008d3e:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
90008d42:	f022 0208 	bicne.w	r2, r2, #8
90008d46:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008d48:	681a      	ldr	r2, [r3, #0]
90008d4a:	f022 0201 	bic.w	r2, r2, #1
90008d4e:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008d50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008d52:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008d56:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008d58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008d5a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008d5e:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008d60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008d62:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008d66:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008d68:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90008d6a:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008d6e:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90008d70:	681a      	ldr	r2, [r3, #0]
90008d72:	f042 0201 	orr.w	r2, r2, #1
90008d76:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008d78:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008d7a:	f002 020c 	and.w	r2, r2, #12
90008d7e:	2a08      	cmp	r2, #8
90008d80:	d00a      	beq.n	90008d98 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008d82:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008d84:	f002 020c 	and.w	r2, r2, #12
90008d88:	2a0c      	cmp	r2, #12
90008d8a:	d000      	beq.n	90008d8e <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90008d8c:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90008d8e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008d90:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008d94:	631a      	str	r2, [r3, #48]	@ 0x30
}
90008d96:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90008d98:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008d9a:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
90008d9e:	631a      	str	r2, [r3, #48]	@ 0x30
90008da0:	4770      	bx	lr
90008da2:	bf00      	nop

90008da4 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008da4:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008da6:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
90008da8:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008daa:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
90008dac:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008dae:	42aa      	cmp	r2, r5
90008db0:	d32a      	bcc.n	90008e08 <JPEG_DMA_StartProcess+0x64>
90008db2:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008db4:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008db6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008db8:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008dba:	42b3      	cmp	r3, r6
90008dbc:	d324      	bcc.n	90008e08 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008dbe:	4f19      	ldr	r7, [pc, #100]	@ (90008e24 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008dc0:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 90008e30 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008dc4:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008dc6:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008dca:	4917      	ldr	r1, [pc, #92]	@ (90008e28 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90008dcc:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008dce:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90008dd0:	4916      	ldr	r1, [pc, #88]	@ (90008e2c <JPEG_DMA_StartProcess+0x88>)
90008dd2:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90008dd4:	b1a5      	cbz	r5, 90008e00 <JPEG_DMA_StartProcess+0x5c>
90008dd6:	b19e      	cbz	r6, 90008e00 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008dd8:	fbb2 f1f5 	udiv	r1, r2, r5
90008ddc:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008de0:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008de2:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008de4:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008de6:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008de8:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
90008dea:	fbb3 f2f6 	udiv	r2, r3, r6
90008dee:	fb06 3212 	mls	r2, r6, r2, r3
90008df2:	1a9b      	subs	r3, r3, r2
90008df4:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008df6:	9500      	str	r5, [sp, #0]
90008df8:	69e2      	ldr	r2, [r4, #28]
90008dfa:	f001 fc23 	bl	9000a644 <HAL_MDMA_Start_IT>
90008dfe:	b130      	cbz	r0, 90008e0e <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008e00:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008e02:	f043 0304 	orr.w	r3, r3, #4
90008e06:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90008e08:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90008e0a:	b003      	add	sp, #12
90008e0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90008e0e:	6822      	ldr	r2, [r4, #0]
90008e10:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90008e12:	69a1      	ldr	r1, [r4, #24]
90008e14:	3240      	adds	r2, #64	@ 0x40
90008e16:	9500      	str	r5, [sp, #0]
90008e18:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90008e1a:	f001 fc13 	bl	9000a644 <HAL_MDMA_Start_IT>
90008e1e:	2800      	cmp	r0, #0
90008e20:	d0f3      	beq.n	90008e0a <JPEG_DMA_StartProcess+0x66>
90008e22:	e7ed      	b.n	90008e00 <JPEG_DMA_StartProcess+0x5c>
90008e24:	90009411 	.word	0x90009411
90008e28:	90009685 	.word	0x90009685
90008e2c:	90009705 	.word	0x90009705
90008e30:	9000943d 	.word	0x9000943d

90008e34 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008e34:	6803      	ldr	r3, [r0, #0]
90008e36:	685a      	ldr	r2, [r3, #4]
90008e38:	f002 0203 	and.w	r2, r2, #3
90008e3c:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90008e3e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90008e42:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008e44:	d018      	beq.n	90008e78 <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90008e46:	685a      	ldr	r2, [r3, #4]
90008e48:	f012 0203 	ands.w	r2, r2, #3
90008e4c:	d10b      	bne.n	90008e66 <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008e4e:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008e50:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008e54:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008e56:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008e58:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008e5a:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008e5e:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008e62:	2100      	movs	r1, #0
90008e64:	e02f      	b.n	90008ec6 <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90008e66:	685a      	ldr	r2, [r3, #4]
90008e68:	f002 0203 	and.w	r2, r2, #3
90008e6c:	2a03      	cmp	r2, #3
90008e6e:	f000 8097 	beq.w	90008fa0 <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
90008e72:	2001      	movs	r0, #1
}
90008e74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008e78:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008e7a:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008e7c:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008e80:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008e82:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008e84:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008e88:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008e8a:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90008e8c:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008e8e:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008e92:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008e94:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008e96:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008e9a:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90008e9e:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008ea2:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008ea6:	d105      	bne.n	90008eb4 <HAL_JPEG_GetInfo.part.0+0x80>
90008ea8:	2a01      	cmp	r2, #1
90008eaa:	d103      	bne.n	90008eb4 <HAL_JPEG_GetInfo.part.0+0x80>
90008eac:	070d      	lsls	r5, r1, #28
90008eae:	d1d8      	bne.n	90008e62 <HAL_JPEG_GetInfo.part.0+0x2e>
90008eb0:	2102      	movs	r1, #2
90008eb2:	e008      	b.n	90008ec6 <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008eb4:	433e      	orrs	r6, r7
90008eb6:	0734      	lsls	r4, r6, #28
90008eb8:	d0d3      	beq.n	90008e62 <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008eba:	430f      	orrs	r7, r1
90008ebc:	0739      	lsls	r1, r7, #28
90008ebe:	d1d0      	bne.n	90008e62 <HAL_JPEG_GetInfo.part.0+0x2e>
90008ec0:	2a03      	cmp	r2, #3
90008ec2:	d1ce      	bne.n	90008e62 <HAL_JPEG_GetInfo.part.0+0x2e>
90008ec4:	2101      	movs	r1, #1
90008ec6:	4a42      	ldr	r2, [pc, #264]	@ (90008fd0 <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90008ec8:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90008ecc:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90008ed0:	2600      	movs	r6, #0
90008ed2:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008ed6:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90008eda:	f241 3188 	movw	r1, #5000	@ 0x1388
90008ede:	e033      	b.n	90008f48 <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008ee0:	f892 8001 	ldrb.w	r8, [r2, #1]
90008ee4:	fb0e f707 	mul.w	r7, lr, r7
90008ee8:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008eea:	f815 8008 	ldrb.w	r8, [r5, r8]
90008eee:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008ef2:	2f64      	cmp	r7, #100	@ 0x64
90008ef4:	d958      	bls.n	90008fa8 <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
90008ef6:	fbb1 f7f7 	udiv	r7, r1, r7
90008efa:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008efc:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90008f00:	2f01      	cmp	r7, #1
90008f02:	d03d      	beq.n	90008f80 <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008f04:	f892 8002 	ldrb.w	r8, [r2, #2]
90008f08:	fb0e f707 	mul.w	r7, lr, r7
90008f0c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008f0e:	f815 8008 	ldrb.w	r8, [r5, r8]
90008f12:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008f16:	2f64      	cmp	r7, #100	@ 0x64
90008f18:	d955      	bls.n	90008fc6 <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
90008f1a:	fbb1 f7f7 	udiv	r7, r1, r7
90008f1e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f20:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90008f22:	2b01      	cmp	r3, #1
90008f24:	d030      	beq.n	90008f88 <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008f26:	78d7      	ldrb	r7, [r2, #3]
90008f28:	fb0e f303 	mul.w	r3, lr, r3
90008f2c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008f2e:	5def      	ldrb	r7, [r5, r7]
90008f30:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90008f34:	2b64      	cmp	r3, #100	@ 0x64
90008f36:	d93c      	bls.n	90008fb2 <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
90008f38:	fbb1 f3f3 	udiv	r3, r1, r3
90008f3c:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008f3e:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90008f40:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008f44:	4294      	cmp	r4, r2
90008f46:	d025      	beq.n	90008f94 <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
90008f48:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f4c:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90008f4e:	2f01      	cmp	r7, #1
90008f50:	d028      	beq.n	90008fa4 <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008f52:	f892 8000 	ldrb.w	r8, [r2]
90008f56:	fb0e f707 	mul.w	r7, lr, r7
90008f5a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008f5c:	f815 8008 	ldrb.w	r8, [r5, r8]
90008f60:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008f64:	2f64      	cmp	r7, #100	@ 0x64
90008f66:	d929      	bls.n	90008fbc <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
90008f68:	fbb1 f7f7 	udiv	r7, r1, r7
90008f6c:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f6e:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90008f72:	2f01      	cmp	r7, #1
90008f74:	d1b4      	bne.n	90008ee0 <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f76:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90008f7a:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008f7c:	2f01      	cmp	r7, #1
90008f7e:	d1c1      	bne.n	90008f04 <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f80:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90008f82:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008f84:	2b01      	cmp	r3, #1
90008f86:	d1ce      	bne.n	90008f26 <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008f88:	3204      	adds	r2, #4
        quality += 100UL;
90008f8a:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90008f8c:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008f90:	4294      	cmp	r4, r2
90008f92:	d1d9      	bne.n	90008f48 <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
90008f94:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90008f96:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90008f98:	f8c9 6010 	str.w	r6, [r9, #16]
}
90008f9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008fa0:	2130      	movs	r1, #48	@ 0x30
90008fa2:	e76a      	b.n	90008e7a <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
90008fa4:	3664      	adds	r6, #100	@ 0x64
90008fa6:	e7e2      	b.n	90008f6e <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
90008fa8:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008fac:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008fb0:	e7a4      	b.n	90008efc <HAL_JPEG_GetInfo.part.0+0xc8>
90008fb2:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90008fb6:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90008fba:	e7c0      	b.n	90008f3e <HAL_JPEG_GetInfo.part.0+0x10a>
90008fbc:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008fc0:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008fc4:	e7d3      	b.n	90008f6e <HAL_JPEG_GetInfo.part.0+0x13a>
90008fc6:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008fca:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008fce:	e7a7      	b.n	90008f20 <HAL_JPEG_GetInfo.part.0+0xec>
90008fd0:	9002d3b8 	.word	0x9002d3b8

90008fd4 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90008fd4:	2800      	cmp	r0, #0
90008fd6:	f000 8107 	beq.w	900091e8 <HAL_JPEG_Init+0x214>
{
90008fda:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90008fdc:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90008fe0:	4605      	mov	r5, r0
90008fe2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008fe6:	2b00      	cmp	r3, #0
90008fe8:	f000 80f9 	beq.w	900091de <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
90008fec:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008fee:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
90008ff0:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008ff2:	497e      	ldr	r1, [pc, #504]	@ (900091ec <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008ff4:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90008ff8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008ffa:	f042 0201 	orr.w	r2, r2, #1
90008ffe:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009000:	6822      	ldr	r2, [r4, #0]
90009002:	f022 0201 	bic.w	r2, r2, #1
90009006:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009008:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000900a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000900e:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009010:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009012:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009016:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009018:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000901a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000901e:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009020:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90009022:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009026:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009028:	4a71      	ldr	r2, [pc, #452]	@ (900091f0 <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000902a:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000902c:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
9000902e:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009030:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009034:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90009038:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
9000903c:	4b6d      	ldr	r3, [pc, #436]	@ (900091f4 <HAL_JPEG_Init+0x220>)
9000903e:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90009042:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009046:	496c      	ldr	r1, [pc, #432]	@ (900091f8 <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009048:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000904c:	4b6b      	ldr	r3, [pc, #428]	@ (900091fc <HAL_JPEG_Init+0x228>)
9000904e:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90009052:	4a6b      	ldr	r2, [pc, #428]	@ (90009200 <HAL_JPEG_Init+0x22c>)
90009054:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009058:	4b6a      	ldr	r3, [pc, #424]	@ (90009204 <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000905a:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000905e:	496a      	ldr	r1, [pc, #424]	@ (90009208 <HAL_JPEG_Init+0x234>)
90009060:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90009064:	4a69      	ldr	r2, [pc, #420]	@ (9000920c <HAL_JPEG_Init+0x238>)
90009066:	4b6a      	ldr	r3, [pc, #424]	@ (90009210 <HAL_JPEG_Init+0x23c>)
90009068:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
9000906c:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
90009070:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009074:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
90009078:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
9000907c:	4a65      	ldr	r2, [pc, #404]	@ (90009214 <HAL_JPEG_Init+0x240>)
9000907e:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009080:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009084:	4313      	orrs	r3, r2
  *address = value;
90009086:	4a64      	ldr	r2, [pc, #400]	@ (90009218 <HAL_JPEG_Init+0x244>)
90009088:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
9000908c:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009090:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90009094:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009096:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000909a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000909c:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
900090a0:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
900090a4:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900090a6:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
900090aa:	ea43 030c 	orr.w	r3, r3, ip
900090ae:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900090b2:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
900090b6:	d1eb      	bne.n	90009090 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
900090b8:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900090bc:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
900090c0:	4954      	ldr	r1, [pc, #336]	@ (90009214 <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900090c2:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
900090c4:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
900090c6:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
900090ca:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
900090ce:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
900090d2:	400b      	ands	r3, r1
  *address = value;
900090d4:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900090d8:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
900090dc:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
900090e0:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900090e4:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
900090e8:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
900090ec:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
900090ee:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
900090f2:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
900090f6:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
900090fa:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900090fc:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900090fe:	4b47      	ldr	r3, [pc, #284]	@ (9000921c <HAL_JPEG_Init+0x248>)
  *address = value;
90009100:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009104:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009108:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
9000910c:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90009110:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90009114:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009118:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000911a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
9000911e:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90009122:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90009126:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009128:	493d      	ldr	r1, [pc, #244]	@ (90009220 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000912a:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000912c:	4b3d      	ldr	r3, [pc, #244]	@ (90009224 <HAL_JPEG_Init+0x250>)
  *address = value;
9000912e:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009132:	4a3d      	ldr	r2, [pc, #244]	@ (90009228 <HAL_JPEG_Init+0x254>)
90009134:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90009138:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000913c:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90009140:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90009144:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009148:	4a38      	ldr	r2, [pc, #224]	@ (9000922c <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
9000914a:	b29b      	uxth	r3, r3
9000914c:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009150:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009154:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009158:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
9000915c:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000915e:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009162:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90009164:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009168:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
9000916c:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000916e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90009172:	ea43 030c 	orr.w	r3, r3, ip
90009176:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000917a:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000917e:	d1eb      	bne.n	90009158 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009180:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90009184:	4924      	ldr	r1, [pc, #144]	@ (90009218 <HAL_JPEG_Init+0x244>)
90009186:	4628      	mov	r0, r5
90009188:	f7ff fd44 	bl	90008c14 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000918c:	b118      	cbz	r0, 90009196 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000918e:	2301      	movs	r3, #1
    return HAL_ERROR;
90009190:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009192:	652b      	str	r3, [r5, #80]	@ 0x50
}
90009194:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90009196:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
9000919a:	4924      	ldr	r1, [pc, #144]	@ (9000922c <HAL_JPEG_Init+0x258>)
9000919c:	4628      	mov	r0, r5
9000919e:	f7ff fd39 	bl	90008c14 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
900091a2:	2800      	cmp	r0, #0
900091a4:	d1f3      	bne.n	9000918e <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
900091a6:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
900091aa:	4921      	ldr	r1, [pc, #132]	@ (90009230 <HAL_JPEG_Init+0x25c>)
900091ac:	4628      	mov	r0, r5
900091ae:	f7ff fc87 	bl	90008ac0 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
900091b2:	2800      	cmp	r0, #0
900091b4:	d1eb      	bne.n	9000918e <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
900091b6:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
900091ba:	491e      	ldr	r1, [pc, #120]	@ (90009234 <HAL_JPEG_Init+0x260>)
900091bc:	4628      	mov	r0, r5
900091be:	f7ff fc7f 	bl	90008ac0 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
900091c2:	2800      	cmp	r0, #0
900091c4:	d1e3      	bne.n	9000918e <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
900091c6:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
900091c8:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
900091ca:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
900091ce:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
900091d0:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
900091d2:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
900091d4:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
900091d8:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
900091da:	6568      	str	r0, [r5, #84]	@ 0x54
}
900091dc:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
900091de:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
900091e2:	f7fa ffad 	bl	90004140 <HAL_JPEG_MspInit>
900091e6:	e701      	b.n	90008fec <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
900091e8:	2001      	movs	r0, #1
}
900091ea:	4770      	bx	lr
900091ec:	9002d378 	.word	0x9002d378
900091f0:	9002d338 	.word	0x9002d338
900091f4:	01050100 	.word	0x01050100
900091f8:	0b0a0908 	.word	0x0b0a0908
900091fc:	07060504 	.word	0x07060504
90009200:	03020100 	.word	0x03020100
90009204:	7d010000 	.word	0x7d010000
90009208:	04040505 	.word	0x04040505
9000920c:	03040203 	.word	0x03040203
90009210:	03010200 	.word	0x03010200
90009214:	ffff0000 	.word	0xffff0000
90009218:	9002d4ac 	.word	0x9002d4ac
9000921c:	09080706 	.word	0x09080706
90009220:	01000404 	.word	0x01000404
90009224:	04040201 	.word	0x04040201
90009228:	05070403 	.word	0x05070403
9000922c:	9002d3f8 	.word	0x9002d3f8
90009230:	9002d57c 	.word	0x9002d57c
90009234:	9002d560 	.word	0x9002d560

90009238 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009238:	2b00      	cmp	r3, #0
9000923a:	bf18      	it	ne
9000923c:	2900      	cmpne	r1, #0
9000923e:	d036      	beq.n	900092ae <HAL_JPEG_Decode_DMA+0x76>
{
90009240:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009242:	fab0 f580 	clz	r5, r0
90009246:	4604      	mov	r4, r0
90009248:	096d      	lsrs	r5, r5, #5
9000924a:	b370      	cbz	r0, 900092aa <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
9000924c:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90009250:	f1bc 0f01 	cmp.w	ip, #1
90009254:	d022      	beq.n	9000929c <HAL_JPEG_Decode_DMA+0x64>
90009256:	f04f 0c01 	mov.w	ip, #1
9000925a:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000925e:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90009262:	f1bc 0f01 	cmp.w	ip, #1
90009266:	d117      	bne.n	90009298 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90009268:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000926a:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000926e:	9b04      	ldr	r3, [sp, #16]
90009270:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90009272:	2304      	movs	r3, #4
90009274:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009278:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000927a:	f023 030f 	bic.w	r3, r3, #15
9000927e:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90009280:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009282:	f043 030e 	orr.w	r3, r3, #14
90009286:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90009288:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000928a:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
9000928c:	f7ff fd4c 	bl	90008d28 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90009290:	f7ff fd88 	bl	90008da4 <JPEG_DMA_StartProcess>
90009294:	b920      	cbnz	r0, 900092a0 <HAL_JPEG_Decode_DMA+0x68>
}
90009296:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90009298:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
9000929c:	2002      	movs	r0, #2
}
9000929e:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
900092a0:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
900092a2:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
900092a6:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
900092aa:	2001      	movs	r0, #1
}
900092ac:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
900092ae:	2001      	movs	r0, #1
}
900092b0:	4770      	bx	lr
900092b2:	bf00      	nop

900092b4 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900092b4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900092b6:	f003 030c 	and.w	r3, r3, #12
900092ba:	2b0c      	cmp	r3, #12
900092bc:	d01a      	beq.n	900092f4 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900092be:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900092c0:	f003 030c 	and.w	r3, r3, #12
900092c4:	2b08      	cmp	r3, #8
900092c6:	d001      	beq.n	900092cc <HAL_JPEG_Pause+0x18>
}
900092c8:	2000      	movs	r0, #0
900092ca:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900092cc:	07ca      	lsls	r2, r1, #31
900092ce:	d41f      	bmi.n	90009310 <HAL_JPEG_Pause+0x5c>
900092d0:	f04f 3cff 	mov.w	ip, #4294967295
900092d4:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900092d8:	078b      	lsls	r3, r1, #30
900092da:	d504      	bpl.n	900092e6 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
900092dc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900092de:	4694      	mov	ip, r2
900092e0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
900092e4:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
900092e6:	6802      	ldr	r2, [r0, #0]
}
900092e8:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
900092ea:	6b13      	ldr	r3, [r2, #48]	@ 0x30
900092ec:	ea03 030c 	and.w	r3, r3, ip
900092f0:	6313      	str	r3, [r2, #48]	@ 0x30
}
900092f2:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900092f4:	07cb      	lsls	r3, r1, #31
900092f6:	d503      	bpl.n	90009300 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900092f8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900092fa:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
900092fe:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009300:	0789      	lsls	r1, r1, #30
90009302:	d5e1      	bpl.n	900092c8 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009304:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009306:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000930a:	6543      	str	r3, [r0, #84]	@ 0x54
}
9000930c:	2000      	movs	r0, #0
9000930e:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009310:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009312:	f06f 0c06 	mvn.w	ip, #6
90009316:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
9000931a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000931e:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009320:	e7da      	b.n	900092d8 <HAL_JPEG_Pause+0x24>
90009322:	bf00      	nop

90009324 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90009324:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90009326:	6282      	str	r2, [r0, #40]	@ 0x28
}
90009328:	4770      	bx	lr
9000932a:	bf00      	nop

9000932c <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000932c:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000932e:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90009330:	4770      	bx	lr
90009332:	bf00      	nop

90009334 <HAL_JPEG_Abort>:
{
90009334:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90009336:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90009338:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000933a:	6d41      	ldr	r1, [r0, #84]	@ 0x54
9000933c:	4a32      	ldr	r2, [pc, #200]	@ (90009408 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000933e:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009342:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009344:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009346:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009348:	d043      	beq.n	900093d2 <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000934a:	6822      	ldr	r2, [r4, #0]
9000934c:	6813      	ldr	r3, [r2, #0]
9000934e:	f023 0301 	bic.w	r3, r3, #1
90009352:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90009354:	f7fe f8f8 	bl	90007548 <HAL_GetTick>
90009358:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000935a:	e005      	b.n	90009368 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
9000935c:	f7fe f8f4 	bl	90007548 <HAL_GetTick>
90009360:	1b40      	subs	r0, r0, r5
90009362:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90009366:	d82b      	bhi.n	900093c0 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009368:	6823      	ldr	r3, [r4, #0]
9000936a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000936c:	0612      	lsls	r2, r2, #24
9000936e:	d4f5      	bmi.n	9000935c <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009370:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90009372:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009374:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009378:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000937a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000937c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009380:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009382:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009384:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009388:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000938a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000938c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009390:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90009392:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90009394:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90009396:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009398:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
9000939c:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
9000939e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
900093a0:	b138      	cbz	r0, 900093b2 <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
900093a2:	2306      	movs	r3, #6
    return HAL_ERROR;
900093a4:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
900093a6:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
900093aa:	2300      	movs	r3, #0
900093ac:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
900093b0:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
900093b2:	2301      	movs	r3, #1
900093b4:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
900093b8:	2300      	movs	r3, #0
900093ba:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
900093be:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
900093c0:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
900093c2:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900093c4:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
900093c6:	f042 0208 	orr.w	r2, r2, #8
900093ca:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
900093cc:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
900093d0:	e7ce      	b.n	90009370 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
900093d2:	6b40      	ldr	r0, [r0, #52]	@ 0x34
900093d4:	f001 f9a8 	bl	9000a728 <HAL_MDMA_Abort>
900093d8:	b118      	cbz	r0, 900093e2 <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
900093da:	6b63      	ldr	r3, [r4, #52]	@ 0x34
900093dc:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900093de:	2b40      	cmp	r3, #64	@ 0x40
900093e0:	d00d      	beq.n	900093fe <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
900093e2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900093e4:	f001 f9a0 	bl	9000a728 <HAL_MDMA_Abort>
900093e8:	2800      	cmp	r0, #0
900093ea:	d0ae      	beq.n	9000934a <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
900093ec:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900093ee:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900093f0:	2b40      	cmp	r3, #64	@ 0x40
900093f2:	d1aa      	bne.n	9000934a <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900093f4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900093f6:	f043 0304 	orr.w	r3, r3, #4
900093fa:	6523      	str	r3, [r4, #80]	@ 0x50
900093fc:	e7a5      	b.n	9000934a <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900093fe:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009400:	f043 0304 	orr.w	r3, r3, #4
90009404:	6523      	str	r3, [r4, #80]	@ 0x50
90009406:	e7ec      	b.n	900093e2 <HAL_JPEG_Abort+0xae>
90009408:	ffff7ff0 	.word	0xffff7ff0

9000940c <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
9000940c:	4770      	bx	lr
9000940e:	bf00      	nop

90009410 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009410:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90009412:	2101      	movs	r1, #1
{
90009414:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009416:	6803      	ldr	r3, [r0, #0]
90009418:	681a      	ldr	r2, [r3, #0]
9000941a:	f022 0201 	bic.w	r2, r2, #1
9000941e:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009420:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009422:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009426:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009428:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000942c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000942e:	f043 0304 	orr.w	r3, r3, #4
90009432:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90009434:	f7f8 fe76 	bl	90002124 <HAL_JPEG_ErrorCallback>
}
90009438:	bd08      	pop	{r3, pc}
9000943a:	bf00      	nop

9000943c <JPEG_MDMAInCpltCallback>:
{
9000943c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000943e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009440:	f248 010c 	movw	r1, #32780	@ 0x800c
{
90009444:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009446:	6822      	ldr	r2, [r4, #0]
90009448:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000944a:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
9000944e:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009450:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009452:	400b      	ands	r3, r1
90009454:	2b0c      	cmp	r3, #12
90009456:	d001      	beq.n	9000945c <JPEG_MDMAInCpltCallback+0x20>
}
90009458:	b003      	add	sp, #12
9000945a:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000945c:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000945e:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009460:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009462:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009464:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009466:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000946a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000946c:	1a9b      	subs	r3, r3, r2
9000946e:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009470:	6a21      	ldr	r1, [r4, #32]
90009472:	f7f8 fd8b 	bl	90001f8c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
90009476:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009478:	42ab      	cmp	r3, r5
9000947a:	d311      	bcc.n	900094a0 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000947c:	b305      	cbz	r5, 900094c0 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000947e:	fbb3 f2f5 	udiv	r2, r3, r5
90009482:	fb05 3212 	mls	r2, r5, r2, r3
90009486:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009488:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000948a:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000948c:	04d1      	lsls	r1, r2, #19
9000948e:	d400      	bmi.n	90009492 <JPEG_MDMAInCpltCallback+0x56>
90009490:	b963      	cbnz	r3, 900094ac <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009492:	6822      	ldr	r2, [r4, #0]
90009494:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009496:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000949a:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000949c:	b003      	add	sp, #12
9000949e:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
900094a0:	b1cb      	cbz	r3, 900094d6 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
900094a2:	0798      	lsls	r0, r3, #30
900094a4:	d119      	bne.n	900094da <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900094a6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900094a8:	04d2      	lsls	r2, r2, #19
900094aa:	d4f2      	bmi.n	90009492 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900094ac:	6822      	ldr	r2, [r4, #0]
900094ae:	2501      	movs	r5, #1
900094b0:	69a1      	ldr	r1, [r4, #24]
900094b2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900094b4:	3240      	adds	r2, #64	@ 0x40
900094b6:	9500      	str	r5, [sp, #0]
900094b8:	f001 f8c4 	bl	9000a644 <HAL_MDMA_Start_IT>
900094bc:	2800      	cmp	r0, #0
900094be:	d0e8      	beq.n	90009492 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900094c0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900094c2:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
900094c4:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900094c6:	f043 0304 	orr.w	r3, r3, #4
900094ca:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900094cc:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
900094d0:	f7f8 fe28 	bl	90002124 <HAL_JPEG_ErrorCallback>
        return;
900094d4:	e7c0      	b.n	90009458 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900094d6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900094d8:	e7db      	b.n	90009492 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
900094da:	f023 0303 	bic.w	r3, r3, #3
900094de:	3304      	adds	r3, #4
900094e0:	e7d2      	b.n	90009488 <JPEG_MDMAInCpltCallback+0x4c>
900094e2:	bf00      	nop

900094e4 <JPEG_DMA_PollResidualData>:
{
900094e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900094e6:	6802      	ldr	r2, [r0, #0]
900094e8:	2610      	movs	r6, #16
{
900094ea:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900094ec:	6d65      	ldr	r5, [r4, #84]	@ 0x54
900094ee:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
900094f2:	d11d      	bne.n	90009530 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900094f4:	6b53      	ldr	r3, [r2, #52]	@ 0x34
900094f6:	06df      	lsls	r7, r3, #27
900094f8:	d51a      	bpl.n	90009530 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
900094fa:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
900094fc:	69e7      	ldr	r7, [r4, #28]
900094fe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009500:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009502:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009504:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009506:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009508:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000950a:	69e2      	ldr	r2, [r4, #28]
9000950c:	443a      	add	r2, r7
9000950e:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009510:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009512:	69e2      	ldr	r2, [r4, #28]
90009514:	4402      	add	r2, r0
90009516:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009518:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000951a:	69e2      	ldr	r2, [r4, #28]
9000951c:	440a      	add	r2, r1
9000951e:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009520:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009522:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
90009524:	3304      	adds	r3, #4
90009526:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009528:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000952a:	4293      	cmp	r3, r2
9000952c:	d021      	beq.n	90009572 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000952e:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
90009530:	3e01      	subs	r6, #1
90009532:	d1db      	bne.n	900094ec <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90009534:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009536:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009538:	06d8      	lsls	r0, r3, #27
9000953a:	d501      	bpl.n	90009540 <JPEG_DMA_PollResidualData+0x5c>
9000953c:	048b      	lsls	r3, r1, #18
9000953e:	d417      	bmi.n	90009570 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009540:	6813      	ldr	r3, [r2, #0]
90009542:	f023 0301 	bic.w	r3, r3, #1
90009546:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90009548:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000954a:	b9eb      	cbnz	r3, 90009588 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000954c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000954e:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009550:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009552:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009554:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009558:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000955c:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009560:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009562:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009564:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009566:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000956a:	d00a      	beq.n	90009582 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000956c:	f7ff ff4e 	bl	9000940c <HAL_JPEG_EncodeCpltCallback>
}
90009570:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009572:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009574:	4620      	mov	r0, r4
90009576:	69e1      	ldr	r1, [r4, #28]
90009578:	f7f8 fd28 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000957c:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000957e:	6265      	str	r5, [r4, #36]	@ 0x24
90009580:	e7d6      	b.n	90009530 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009582:	f7f8 fdd1 	bl	90002128 <HAL_JPEG_DecodeCpltCallback>
}
90009586:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009588:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000958a:	4620      	mov	r0, r4
9000958c:	69e1      	ldr	r1, [r4, #28]
9000958e:	f7f8 fd1d 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009592:	2300      	movs	r3, #0
90009594:	6263      	str	r3, [r4, #36]	@ 0x24
90009596:	e7d9      	b.n	9000954c <JPEG_DMA_PollResidualData+0x68>

90009598 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009598:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000959a:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000959e:	d06f      	beq.n	90009680 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900095a0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900095a2:	f003 030c 	and.w	r3, r3, #12
900095a6:	2b0c      	cmp	r3, #12
{
900095a8:	b530      	push	{r4, r5, lr}
900095aa:	4604      	mov	r4, r0
900095ac:	b083      	sub	sp, #12
900095ae:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900095b0:	d007      	beq.n	900095c2 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900095b2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900095b4:	f003 030c 	and.w	r3, r3, #12
900095b8:	2b08      	cmp	r3, #8
900095ba:	d035      	beq.n	90009628 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
900095bc:	2000      	movs	r0, #0
}
900095be:	b003      	add	sp, #12
900095c0:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900095c2:	07c8      	lsls	r0, r1, #31
900095c4:	d415      	bmi.n	900095f2 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900095c6:	07a9      	lsls	r1, r5, #30
900095c8:	d5f8      	bpl.n	900095bc <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900095ca:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900095cc:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
900095d0:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
900095d2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900095d4:	041a      	lsls	r2, r3, #16
900095d6:	d44f      	bmi.n	90009678 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900095d8:	6b60      	ldr	r0, [r4, #52]	@ 0x34
900095da:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
900095dc:	2a00      	cmp	r2, #0
900095de:	d13a      	bne.n	90009656 <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900095e0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900095e2:	2206      	movs	r2, #6
    return HAL_ERROR;
900095e4:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900095e6:	f043 0304 	orr.w	r3, r3, #4
900095ea:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900095ec:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
900095f0:	e7e5      	b.n	900095be <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900095f2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900095f4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900095f6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900095fa:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900095fc:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
900095fe:	2a00      	cmp	r2, #0
90009600:	d0ee      	beq.n	900095e0 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
90009602:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009604:	fbb3 f1f2 	udiv	r1, r3, r2
90009608:	fb02 3211 	mls	r2, r2, r1, r3
9000960c:	1a9b      	subs	r3, r3, r2
9000960e:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
90009610:	2b00      	cmp	r3, #0
90009612:	d0d8      	beq.n	900095c6 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009614:	6822      	ldr	r2, [r4, #0]
90009616:	2101      	movs	r1, #1
90009618:	3240      	adds	r2, #64	@ 0x40
9000961a:	9100      	str	r1, [sp, #0]
9000961c:	69a1      	ldr	r1, [r4, #24]
9000961e:	f001 f811 	bl	9000a644 <HAL_MDMA_Start_IT>
90009622:	2800      	cmp	r0, #0
90009624:	d0cf      	beq.n	900095c6 <HAL_JPEG_Resume+0x2e>
90009626:	e7db      	b.n	900095e0 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009628:	f011 0101 	ands.w	r1, r1, #1
9000962c:	d011      	beq.n	90009652 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000962e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009630:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009632:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009634:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90009638:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000963a:	07ab      	lsls	r3, r5, #30
9000963c:	d504      	bpl.n	90009648 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000963e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
90009640:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009642:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009646:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009648:	6822      	ldr	r2, [r4, #0]
9000964a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000964c:	430b      	orrs	r3, r1
9000964e:	6313      	str	r3, [r2, #48]	@ 0x30
90009650:	e7b4      	b.n	900095bc <HAL_JPEG_Resume+0x24>
90009652:	2228      	movs	r2, #40	@ 0x28
90009654:	e7f1      	b.n	9000963a <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009656:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009658:	fbb3 f1f2 	udiv	r1, r3, r2
9000965c:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009660:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009662:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009664:	2201      	movs	r2, #1
90009666:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009668:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000966a:	9200      	str	r2, [sp, #0]
9000966c:	69e2      	ldr	r2, [r4, #28]
9000966e:	f000 ffe9 	bl	9000a644 <HAL_MDMA_Start_IT>
90009672:	2800      	cmp	r0, #0
90009674:	d0a2      	beq.n	900095bc <HAL_JPEG_Resume+0x24>
90009676:	e7b3      	b.n	900095e0 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
90009678:	4620      	mov	r0, r4
9000967a:	f7ff ff33 	bl	900094e4 <JPEG_DMA_PollResidualData>
9000967e:	e79d      	b.n	900095bc <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
90009680:	2001      	movs	r0, #1
}
90009682:	4770      	bx	lr

90009684 <JPEG_MDMAOutCpltCallback>:
{
90009684:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009686:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009688:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000968c:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000968e:	6823      	ldr	r3, [r4, #0]
90009690:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009692:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009696:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009698:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000969a:	400a      	ands	r2, r1
9000969c:	2a0c      	cmp	r2, #12
9000969e:	d001      	beq.n	900096a4 <JPEG_MDMAOutCpltCallback+0x20>
}
900096a0:	b003      	add	sp, #12
900096a2:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
900096a4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900096a6:	0692      	lsls	r2, r2, #26
900096a8:	d505      	bpl.n	900096b6 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900096aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900096ac:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900096b0:	631a      	str	r2, [r3, #48]	@ 0x30
}
900096b2:	b003      	add	sp, #12
900096b4:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900096b6:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900096b8:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900096ba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900096bc:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900096be:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900096c0:	f3c2 0210 	ubfx	r2, r2, #0, #17
900096c4:	1a9b      	subs	r3, r3, r2
900096c6:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900096c8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900096ca:	f7f8 fc7f 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900096ce:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900096d0:	049b      	lsls	r3, r3, #18
900096d2:	d501      	bpl.n	900096d8 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900096d4:	6823      	ldr	r3, [r4, #0]
900096d6:	e7e8      	b.n	900096aa <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900096d8:	6821      	ldr	r1, [r4, #0]
900096da:	2501      	movs	r5, #1
900096dc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900096de:	69e2      	ldr	r2, [r4, #28]
900096e0:	3144      	adds	r1, #68	@ 0x44
900096e2:	6b60      	ldr	r0, [r4, #52]	@ 0x34
900096e4:	9500      	str	r5, [sp, #0]
900096e6:	f000 ffad 	bl	9000a644 <HAL_MDMA_Start_IT>
900096ea:	2800      	cmp	r0, #0
900096ec:	d0f2      	beq.n	900096d4 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900096ee:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900096f0:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
900096f2:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900096f4:	f043 0304 	orr.w	r3, r3, #4
900096f8:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900096fa:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
900096fe:	f7f8 fd11 	bl	90002124 <HAL_JPEG_ErrorCallback>
          return;
90009702:	e7cd      	b.n	900096a0 <JPEG_MDMAOutCpltCallback+0x1c>

90009704 <JPEG_MDMAOutAbortCallback>:
{
90009704:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009706:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009708:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000970a:	041a      	lsls	r2, r3, #16
9000970c:	d400      	bmi.n	90009710 <JPEG_MDMAOutAbortCallback+0xc>
}
9000970e:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009710:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90009712:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009714:	681b      	ldr	r3, [r3, #0]
90009716:	695b      	ldr	r3, [r3, #20]
90009718:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000971c:	1ad3      	subs	r3, r2, r3
9000971e:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009720:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009722:	429a      	cmp	r2, r3
90009724:	d025      	beq.n	90009772 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009726:	6822      	ldr	r2, [r4, #0]
90009728:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000972a:	f015 0510 	ands.w	r5, r5, #16
9000972e:	d118      	bne.n	90009762 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
90009730:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009732:	bb4b      	cbnz	r3, 90009788 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009734:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009736:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009738:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000973a:	f023 0301 	bic.w	r3, r3, #1
9000973e:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009740:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009742:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009744:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009748:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000974c:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009750:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009752:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009754:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009756:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000975a:	d012      	beq.n	90009782 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000975c:	f7ff fe56 	bl	9000940c <HAL_JPEG_EncodeCpltCallback>
}
90009760:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009762:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009764:	049b      	lsls	r3, r3, #18
90009766:	d4d2      	bmi.n	9000970e <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009768:	4620      	mov	r0, r4
}
9000976a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000976e:	f7ff beb9 	b.w	900094e4 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009772:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009774:	4620      	mov	r0, r4
90009776:	69e1      	ldr	r1, [r4, #28]
90009778:	f7f8 fc28 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000977c:	2300      	movs	r3, #0
9000977e:	6263      	str	r3, [r4, #36]	@ 0x24
90009780:	e7d1      	b.n	90009726 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009782:	f7f8 fcd1 	bl	90002128 <HAL_JPEG_DecodeCpltCallback>
}
90009786:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009788:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000978a:	4620      	mov	r0, r4
9000978c:	69e1      	ldr	r1, [r4, #28]
9000978e:	f7f8 fc1d 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009792:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009794:	6265      	str	r5, [r4, #36]	@ 0x24
90009796:	e7cd      	b.n	90009734 <JPEG_MDMAOutAbortCallback+0x30>

90009798 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009798:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000979a:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000979c:	f002 0203 	and.w	r2, r2, #3
900097a0:	2a02      	cmp	r2, #2
{
900097a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900097a6:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900097a8:	d01e      	beq.n	900097e8 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
900097aa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900097ac:	04d7      	lsls	r7, r2, #19
900097ae:	d407      	bmi.n	900097c0 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
900097b0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900097b2:	0796      	lsls	r6, r2, #30
900097b4:	f100 811b 	bmi.w	900099ee <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
900097b8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900097ba:	0750      	lsls	r0, r2, #29
900097bc:	f100 81cc 	bmi.w	90009b58 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900097c0:	6d65      	ldr	r5, [r4, #84]	@ 0x54
900097c2:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
900097c6:	d107      	bne.n	900097d8 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
900097c8:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
900097ca:	f016 0608 	ands.w	r6, r6, #8
900097ce:	d14a      	bne.n	90009866 <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900097d0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900097d2:	06d2      	lsls	r2, r2, #27
900097d4:	f100 81fe 	bmi.w	90009bd4 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900097d8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900097da:	f002 0238 	and.w	r2, r2, #56	@ 0x38
900097de:	2a20      	cmp	r2, #32
900097e0:	d019      	beq.n	90009816 <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
900097e2:	2000      	movs	r0, #0
}
900097e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
900097e8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900097ea:	0652      	lsls	r2, r2, #25
900097ec:	d5dd      	bpl.n	900097aa <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
900097ee:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
900097f0:	4629      	mov	r1, r5
900097f2:	f7ff fb1f 	bl	90008e34 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
900097f6:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
900097f8:	4629      	mov	r1, r5
900097fa:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
900097fc:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
900097fe:	f7f8 fb97 	bl	90001f30 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009802:	6823      	ldr	r3, [r4, #0]
90009804:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009806:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000980a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000980c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000980e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90009812:	639a      	str	r2, [r3, #56]	@ 0x38
90009814:	e7c9      	b.n	900097aa <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009816:	681a      	ldr	r2, [r3, #0]
90009818:	f022 0201 	bic.w	r2, r2, #1
9000981c:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000981e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009820:	f002 020c 	and.w	r2, r2, #12
90009824:	2a08      	cmp	r2, #8
90009826:	f000 8201 	beq.w	90009c2c <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000982a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000982c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009830:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
90009832:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009834:	2b00      	cmp	r3, #0
90009836:	f040 81fe 	bne.w	90009c36 <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000983a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000983c:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000983e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009840:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009842:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009846:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000984a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000984e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009850:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009852:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009854:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009858:	f000 81e5 	beq.w	90009c26 <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000985c:	f7ff fdd6 	bl	9000940c <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009860:	2001      	movs	r0, #1
}
90009862:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009866:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009868:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000986a:	3220      	adds	r2, #32
9000986c:	4296      	cmp	r6, r2
9000986e:	f0c0 8200 	bcc.w	90009c72 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
90009872:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009874:	69e1      	ldr	r1, [r4, #28]
90009876:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009878:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000987a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000987c:	69e2      	ldr	r2, [r4, #28]
9000987e:	440a      	add	r2, r1
90009880:	0a19      	lsrs	r1, r3, #8
90009882:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009884:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009886:	69e2      	ldr	r2, [r4, #28]
90009888:	440a      	add	r2, r1
9000988a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000988c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000988e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009890:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009892:	69e2      	ldr	r2, [r4, #28]
90009894:	440a      	add	r2, r1
90009896:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009898:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000989a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000989c:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000989e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900098a0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900098a2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098a4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098a6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900098a8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098aa:	69e2      	ldr	r2, [r4, #28]
900098ac:	440a      	add	r2, r1
900098ae:	0a19      	lsrs	r1, r3, #8
900098b0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098b2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098b4:	69e2      	ldr	r2, [r4, #28]
900098b6:	440a      	add	r2, r1
900098b8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098ba:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098bc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098be:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098c0:	69e2      	ldr	r2, [r4, #28]
900098c2:	440a      	add	r2, r1
900098c4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900098c6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900098c8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900098ca:	3304      	adds	r3, #4
900098cc:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900098ce:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098d0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098d2:	69e1      	ldr	r1, [r4, #28]
900098d4:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900098d6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098d8:	69e2      	ldr	r2, [r4, #28]
900098da:	440a      	add	r2, r1
900098dc:	0a19      	lsrs	r1, r3, #8
900098de:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098e0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098e2:	69e2      	ldr	r2, [r4, #28]
900098e4:	440a      	add	r2, r1
900098e6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098e8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098ea:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098ec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098ee:	69e2      	ldr	r2, [r4, #28]
900098f0:	440a      	add	r2, r1
900098f2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900098f4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900098f6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900098f8:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098fa:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900098fc:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900098fe:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009900:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009902:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009904:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009906:	69e2      	ldr	r2, [r4, #28]
90009908:	440a      	add	r2, r1
9000990a:	0a19      	lsrs	r1, r3, #8
9000990c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000990e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009910:	69e2      	ldr	r2, [r4, #28]
90009912:	440a      	add	r2, r1
90009914:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009916:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009918:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000991a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000991c:	69e2      	ldr	r2, [r4, #28]
9000991e:	440a      	add	r2, r1
90009920:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009922:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009924:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009926:	3304      	adds	r3, #4
90009928:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000992a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000992c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000992e:	69e1      	ldr	r1, [r4, #28]
90009930:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009932:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009934:	69e2      	ldr	r2, [r4, #28]
90009936:	440a      	add	r2, r1
90009938:	0a19      	lsrs	r1, r3, #8
9000993a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000993c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000993e:	69e2      	ldr	r2, [r4, #28]
90009940:	440a      	add	r2, r1
90009942:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009944:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009946:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009948:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000994a:	69e2      	ldr	r2, [r4, #28]
9000994c:	440a      	add	r2, r1
9000994e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009950:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009952:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009954:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009956:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009958:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000995a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000995c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000995e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009960:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009962:	69e2      	ldr	r2, [r4, #28]
90009964:	440a      	add	r2, r1
90009966:	0a19      	lsrs	r1, r3, #8
90009968:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000996a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000996c:	69e2      	ldr	r2, [r4, #28]
9000996e:	440a      	add	r2, r1
90009970:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009972:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009974:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009976:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009978:	69e2      	ldr	r2, [r4, #28]
9000997a:	440a      	add	r2, r1
9000997c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000997e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009980:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009982:	3304      	adds	r3, #4
90009984:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009986:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009988:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000998a:	69e1      	ldr	r1, [r4, #28]
9000998c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000998e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009990:	69e2      	ldr	r2, [r4, #28]
90009992:	440a      	add	r2, r1
90009994:	0a19      	lsrs	r1, r3, #8
90009996:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009998:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000999a:	69e2      	ldr	r2, [r4, #28]
9000999c:	440a      	add	r2, r1
9000999e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900099a0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900099a2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900099a4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099a6:	69e2      	ldr	r2, [r4, #28]
900099a8:	440a      	add	r2, r1
900099aa:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900099ac:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900099ae:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900099b0:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900099b2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900099b4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900099b6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900099b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099ba:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900099bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099be:	69e2      	ldr	r2, [r4, #28]
900099c0:	440a      	add	r2, r1
900099c2:	0a19      	lsrs	r1, r3, #8
900099c4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900099c6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099c8:	69e2      	ldr	r2, [r4, #28]
900099ca:	440a      	add	r2, r1
900099cc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900099ce:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900099d0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900099d2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099d4:	69e2      	ldr	r2, [r4, #28]
900099d6:	440a      	add	r2, r1
900099d8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900099da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900099dc:	3304      	adds	r3, #4
900099de:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900099e0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900099e2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900099e4:	429a      	cmp	r2, r3
900099e6:	f000 8258 	beq.w	90009e9a <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900099ea:	6823      	ldr	r3, [r4, #0]
900099ec:	e6f4      	b.n	900097d8 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
900099ee:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900099f0:	2a00      	cmp	r2, #0
900099f2:	f000 8128 	beq.w	90009c46 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900099f6:	6a21      	ldr	r1, [r4, #32]
900099f8:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900099fa:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900099fc:	f240 81b9 	bls.w	90009d72 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009a00:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009a02:	6d61      	ldr	r1, [r4, #84]	@ 0x54
90009a04:	04cd      	lsls	r5, r1, #19
90009a06:	f53f aedb 	bmi.w	900097c0 <JPEG_Process+0x28>
90009a0a:	2a00      	cmp	r2, #0
90009a0c:	f43f aed8 	beq.w	900097c0 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
90009a10:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
90009a12:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
90009a16:	f200 8248 	bhi.w	90009eaa <JPEG_Process+0x712>
      if (nb_words > 0UL)
90009a1a:	2a03      	cmp	r2, #3
90009a1c:	f240 82c0 	bls.w	90009fa0 <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
90009a20:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009a22:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a24:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a26:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a2a:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a2c:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a2e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a30:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a34:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a36:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009a3a:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a3e:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a42:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009a44:	6a21      	ldr	r1, [r4, #32]
90009a46:	f101 0104 	add.w	r1, r1, #4
90009a4a:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009a4c:	f43f aeb8 	beq.w	900097c0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009a50:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009a52:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a54:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a58:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a5a:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a5c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a5e:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a62:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a64:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009a68:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a6c:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a70:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009a72:	6a21      	ldr	r1, [r4, #32]
90009a74:	f101 0104 	add.w	r1, r1, #4
90009a78:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009a7a:	f43f aea1 	beq.w	900097c0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009a7e:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009a80:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a82:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a86:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a88:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a8a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a8c:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a90:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a92:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009a96:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a9a:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a9e:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009aa0:	6a21      	ldr	r1, [r4, #32]
90009aa2:	f101 0104 	add.w	r1, r1, #4
90009aa6:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009aa8:	f43f ae8a 	beq.w	900097c0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009aac:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009aae:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ab0:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ab4:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ab6:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ab8:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aba:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009abe:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ac0:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009ac4:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ac8:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009acc:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009ace:	6a21      	ldr	r1, [r4, #32]
90009ad0:	f101 0104 	add.w	r1, r1, #4
90009ad4:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009ad6:	f43f ae73 	beq.w	900097c0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009ada:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009adc:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ade:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ae2:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ae4:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ae6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ae8:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009aec:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aee:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009af2:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009af6:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009afa:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009afc:	6a21      	ldr	r1, [r4, #32]
90009afe:	f101 0104 	add.w	r1, r1, #4
90009b02:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009b04:	f43f ae5c 	beq.w	900097c0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009b08:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009b0a:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b0c:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b10:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b12:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b14:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b16:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b1a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b1c:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009b20:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b24:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b28:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009b2a:	6a21      	ldr	r1, [r4, #32]
90009b2c:	f101 0104 	add.w	r1, r1, #4
90009b30:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009b32:	f47f ae45 	bne.w	900097c0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009b36:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b38:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b3a:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b3c:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b3e:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b40:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b42:	7849      	ldrb	r1, [r1, #1]
90009b44:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90009b48:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b4a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b4e:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b50:	6a22      	ldr	r2, [r4, #32]
90009b52:	3204      	adds	r2, #4
90009b54:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
90009b56:	e633      	b.n	900097c0 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009b58:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009b5a:	2a00      	cmp	r2, #0
90009b5c:	d073      	beq.n	90009c46 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009b5e:	6a21      	ldr	r1, [r4, #32]
90009b60:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009b62:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009b64:	f200 8182 	bhi.w	90009e6c <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009b68:	428a      	cmp	r2, r1
90009b6a:	f040 8104 	bne.w	90009d76 <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009b6e:	6a21      	ldr	r1, [r4, #32]
90009b70:	4620      	mov	r0, r4
90009b72:	f7f8 fa0b 	bl	90001f8c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009b76:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009b78:	2a04      	cmp	r2, #4
90009b7a:	d902      	bls.n	90009b82 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009b7c:	f022 0203 	bic.w	r2, r2, #3
90009b80:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009b82:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b84:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009b86:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009b88:	6d61      	ldr	r1, [r4, #84]	@ 0x54
90009b8a:	04c9      	lsls	r1, r1, #19
90009b8c:	f53f ae18 	bmi.w	900097c0 <JPEG_Process+0x28>
90009b90:	2a00      	cmp	r2, #0
90009b92:	f43f ae15 	beq.w	900097c0 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
90009b96:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b98:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
90009b9a:	f040 8177 	bne.w	90009e8c <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b9e:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009ba0:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009ba2:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009ba4:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
90009ba6:	f105 0501 	add.w	r5, r5, #1
90009baa:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009bac:	d010      	beq.n	90009bd0 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009bae:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009bb0:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009bb2:	5d45      	ldrb	r5, [r0, r5]
90009bb4:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
90009bb8:	6a25      	ldr	r5, [r4, #32]
90009bba:	f105 0501 	add.w	r5, r5, #1
90009bbe:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009bc0:	d106      	bne.n	90009bd0 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009bc2:	6a22      	ldr	r2, [r4, #32]
90009bc4:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
90009bc6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009bc8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
90009bcc:	3201      	adds	r2, #1
90009bce:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009bd0:	6419      	str	r1, [r3, #64]	@ 0x40
90009bd2:	e5f5      	b.n	900097c0 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009bd4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009bd6:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
90009bd8:	3204      	adds	r2, #4
90009bda:	4295      	cmp	r5, r2
90009bdc:	f0c0 80cd 	bcc.w	90009d7a <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
90009be0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009be2:	69e1      	ldr	r1, [r4, #28]
90009be4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009be6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009be8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009bea:	69e2      	ldr	r2, [r4, #28]
90009bec:	440a      	add	r2, r1
90009bee:	0a19      	lsrs	r1, r3, #8
90009bf0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009bf2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009bf4:	69e2      	ldr	r2, [r4, #28]
90009bf6:	440a      	add	r2, r1
90009bf8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009bfa:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009bfc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009bfe:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c00:	69e2      	ldr	r2, [r4, #28]
90009c02:	440a      	add	r2, r1
90009c04:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c06:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009c08:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
90009c0a:	3304      	adds	r3, #4
90009c0c:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009c0e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009c10:	429a      	cmp	r2, r3
90009c12:	f47f aeea 	bne.w	900099ea <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009c16:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c18:	4620      	mov	r0, r4
90009c1a:	69e1      	ldr	r1, [r4, #28]
90009c1c:	f7f8 f9d6 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c20:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009c22:	6266      	str	r6, [r4, #36]	@ 0x24
90009c24:	e5d8      	b.n	900097d8 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009c26:	f7f8 fa7f 	bl	90002128 <HAL_JPEG_DecodeCpltCallback>
90009c2a:	e619      	b.n	90009860 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009c2c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009c2e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009c32:	631a      	str	r2, [r3, #48]	@ 0x30
90009c34:	e5f9      	b.n	9000982a <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009c36:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c38:	4620      	mov	r0, r4
90009c3a:	69e1      	ldr	r1, [r4, #28]
90009c3c:	f7f8 f9c6 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009c40:	2300      	movs	r3, #0
90009c42:	6263      	str	r3, [r4, #36]	@ 0x24
90009c44:	e5f9      	b.n	9000983a <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009c46:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009c48:	f002 020c 	and.w	r2, r2, #12
90009c4c:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009c4e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009c50:	f000 811e 	beq.w	90009e90 <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009c54:	f002 020c 	and.w	r2, r2, #12
90009c58:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009c5a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009c5c:	f47f adb0 	bne.w	900097c0 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009c60:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009c64:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009c66:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009c68:	f022 0206 	bic.w	r2, r2, #6
90009c6c:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009c6e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009c70:	e5a6      	b.n	900097c0 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009c72:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c74:	4296      	cmp	r6, r2
90009c76:	f67f adaf 	bls.w	900097d8 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009c7a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009c7c:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
90009c7e:	0880      	lsrs	r0, r0, #2
90009c80:	d020      	beq.n	90009cc4 <JPEG_Process+0x52c>
90009c82:	4629      	mov	r1, r5
90009c84:	e000      	b.n	90009c88 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
90009c86:	6823      	ldr	r3, [r4, #0]
90009c88:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
90009c8a:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c8c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c8e:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009c90:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c92:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c94:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009c96:	69e2      	ldr	r2, [r4, #28]
90009c98:	4432      	add	r2, r6
90009c9a:	ea4f 2613 	mov.w	r6, r3, lsr #8
90009c9e:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009ca0:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009ca2:	69e2      	ldr	r2, [r4, #28]
90009ca4:	4432      	add	r2, r6
90009ca6:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009caa:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009cae:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009cb0:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009cb2:	69e2      	ldr	r2, [r4, #28]
90009cb4:	4432      	add	r2, r6
90009cb6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009cb8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009cba:	f103 0304 	add.w	r3, r3, #4
90009cbe:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009cc0:	d1e1      	bne.n	90009c86 <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009cc2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90009cc4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009cc6:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009cc8:	429e      	cmp	r6, r3
90009cca:	f000 8161 	beq.w	90009f90 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
90009cce:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009cd2:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009cd4:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
90009cd8:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
90009cda:	d00e      	beq.n	90009cfa <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009cdc:	f005 0303 	and.w	r3, r5, #3
90009ce0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009ce2:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009ce4:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009ce6:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009ce8:	fa27 f303 	lsr.w	r3, r7, r3
90009cec:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
90009cee:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009cf0:	69e1      	ldr	r1, [r4, #28]
90009cf2:	f103 0301 	add.w	r3, r3, #1
90009cf6:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009cf8:	d1f0      	bne.n	90009cdc <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
90009cfa:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009cfe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d00:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
90009d02:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009d06:	f7f8 f961 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009d0a:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
90009d0c:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
90009d0e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009d10:	f63f ae6b 	bhi.w	900099ea <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009d14:	ea4f 02c6 	mov.w	r2, r6, lsl #3
90009d18:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d1a:	69e0      	ldr	r0, [r4, #28]
90009d1c:	fa27 f502 	lsr.w	r5, r7, r2
90009d20:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
90009d22:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d24:	f101 0101 	add.w	r1, r1, #1
90009d28:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009d2a:	f43f ae5e 	beq.w	900099ea <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009d2e:	f102 0108 	add.w	r1, r2, #8
90009d32:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009d34:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009d36:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009d38:	fa27 f101 	lsr.w	r1, r7, r1
90009d3c:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
90009d3e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d40:	f101 0101 	add.w	r1, r1, #1
90009d44:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009d46:	f43f ae50 	beq.w	900099ea <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009d4a:	3210      	adds	r2, #16
90009d4c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d4e:	69e0      	ldr	r0, [r4, #28]
90009d50:	fa27 f202 	lsr.w	r2, r7, r2
90009d54:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
90009d56:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d58:	3201      	adds	r2, #1
90009d5a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009d5c:	2e00      	cmp	r6, #0
90009d5e:	f47f ae44 	bne.w	900099ea <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009d62:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009d64:	0e3f      	lsrs	r7, r7, #24
90009d66:	69e2      	ldr	r2, [r4, #28]
90009d68:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
90009d6a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009d6c:	3301      	adds	r3, #1
90009d6e:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009d70:	e63b      	b.n	900099ea <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009d72:	428a      	cmp	r2, r1
90009d74:	d07c      	beq.n	90009e70 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009d76:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009d78:	e522      	b.n	900097c0 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009d7a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d7c:	4295      	cmp	r5, r2
90009d7e:	f67f ad2b 	bls.w	900097d8 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009d82:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009d84:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
90009d86:	0880      	lsrs	r0, r0, #2
90009d88:	d020      	beq.n	90009dcc <JPEG_Process+0x634>
90009d8a:	4631      	mov	r1, r6
90009d8c:	e000      	b.n	90009d90 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
90009d8e:	6823      	ldr	r3, [r4, #0]
90009d90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
90009d92:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d94:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d96:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009d98:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d9a:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009d9c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009d9e:	69e2      	ldr	r2, [r4, #28]
90009da0:	442a      	add	r2, r5
90009da2:	ea4f 2513 	mov.w	r5, r3, lsr #8
90009da6:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009da8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009daa:	69e2      	ldr	r2, [r4, #28]
90009dac:	442a      	add	r2, r5
90009dae:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009db2:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009db6:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009db8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009dba:	69e2      	ldr	r2, [r4, #28]
90009dbc:	442a      	add	r2, r5
90009dbe:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009dc0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009dc2:	f103 0304 	add.w	r3, r3, #4
90009dc6:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009dc8:	d1e1      	bne.n	90009d8e <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009dca:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
90009dcc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009dce:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009dd0:	429d      	cmp	r5, r3
90009dd2:	f000 80dd 	beq.w	90009f90 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
90009dd6:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009dda:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009ddc:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
90009de0:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
90009de2:	d00e      	beq.n	90009e02 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009de4:	f006 0303 	and.w	r3, r6, #3
90009de8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009dea:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009dec:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009dee:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009df0:	fa27 f303 	lsr.w	r3, r7, r3
90009df4:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
90009df6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009df8:	69e1      	ldr	r1, [r4, #28]
90009dfa:	f103 0301 	add.w	r3, r3, #1
90009dfe:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009e00:	d1f0      	bne.n	90009de4 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
90009e02:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009e06:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009e08:	4620      	mov	r0, r4
90009e0a:	f7f8 f8df 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
90009e0e:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
90009e12:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
90009e14:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
90009e16:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009e18:	f63f ade7 	bhi.w	900099ea <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009e1c:	ea4f 02c3 	mov.w	r2, r3, lsl #3
90009e20:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009e22:	69e0      	ldr	r0, [r4, #28]
90009e24:	fa27 f502 	lsr.w	r5, r7, r2
90009e28:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
90009e2a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009e2c:	f101 0101 	add.w	r1, r1, #1
90009e30:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009e32:	f43f adda 	beq.w	900099ea <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009e36:	f102 0108 	add.w	r1, r2, #8
90009e3a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009e3c:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009e3e:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009e40:	fa27 f101 	lsr.w	r1, r7, r1
90009e44:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
90009e46:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009e48:	f101 0101 	add.w	r1, r1, #1
90009e4c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009e4e:	f43f adcc 	beq.w	900099ea <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009e52:	3210      	adds	r2, #16
90009e54:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009e56:	69e0      	ldr	r0, [r4, #28]
90009e58:	fa27 f202 	lsr.w	r2, r7, r2
90009e5c:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
90009e5e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009e60:	3201      	adds	r2, #1
90009e62:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009e64:	2b00      	cmp	r3, #0
90009e66:	f43f af7c 	beq.w	90009d62 <JPEG_Process+0x5ca>
90009e6a:	e5be      	b.n	900099ea <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009e6c:	1a52      	subs	r2, r2, r1
90009e6e:	e68b      	b.n	90009b88 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009e70:	6a21      	ldr	r1, [r4, #32]
90009e72:	4620      	mov	r0, r4
90009e74:	f7f8 f88a 	bl	90001f8c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009e78:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009e7a:	2a04      	cmp	r2, #4
90009e7c:	d902      	bls.n	90009e84 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009e7e:	f022 0203 	bic.w	r2, r2, #3
90009e82:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009e84:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e86:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009e88:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
90009e8a:	e5ba      	b.n	90009a02 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
90009e8c:	6a22      	ldr	r2, [r4, #32]
90009e8e:	e653      	b.n	90009b38 <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009e90:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009e94:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009e96:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009e98:	e492      	b.n	900097c0 <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009e9a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009e9c:	4620      	mov	r0, r4
90009e9e:	69e1      	ldr	r1, [r4, #28]
90009ea0:	f7f8 f894 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009ea4:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009ea6:	6265      	str	r5, [r4, #36]	@ 0x24
90009ea8:	e496      	b.n	900097d8 <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009eaa:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
90009eac:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eae:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009eb0:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eb2:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eb4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eb6:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009eb8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eba:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ebe:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ec0:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ec4:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009ec6:	6a21      	ldr	r1, [r4, #32]
90009ec8:	3104      	adds	r1, #4
90009eca:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ecc:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ece:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ed0:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ed2:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ed4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ed6:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ed8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eda:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ede:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ee0:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ee4:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009ee6:	6a21      	ldr	r1, [r4, #32]
90009ee8:	3104      	adds	r1, #4
90009eea:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009eec:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eee:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ef0:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ef2:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ef4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ef6:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ef8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009efa:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009efe:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f00:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f04:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009f06:	6a21      	ldr	r1, [r4, #32]
90009f08:	3104      	adds	r1, #4
90009f0a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f0c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f0e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f10:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f12:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f14:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f16:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f18:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f1a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f1e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f20:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f24:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009f26:	6a21      	ldr	r1, [r4, #32]
90009f28:	3104      	adds	r1, #4
90009f2a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f2c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f2e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f30:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f32:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f34:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f36:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f38:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f3a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f3e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f40:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f44:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009f46:	6a21      	ldr	r1, [r4, #32]
90009f48:	3104      	adds	r1, #4
90009f4a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f4c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f4e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f50:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f52:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f54:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f56:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f58:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f5a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f5e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f60:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f64:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009f66:	6a21      	ldr	r1, [r4, #32]
90009f68:	3104      	adds	r1, #4
90009f6a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f6c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f6e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f70:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f72:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f74:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f76:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f78:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f7a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f7e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f80:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f84:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009f86:	6a21      	ldr	r1, [r4, #32]
90009f88:	3104      	adds	r1, #4
90009f8a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f8c:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f8e:	e5d3      	b.n	90009b38 <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f90:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f92:	4620      	mov	r0, r4
90009f94:	f7f8 f81a 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009f98:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009f9a:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009f9c:	6262      	str	r2, [r4, #36]	@ 0x24
90009f9e:	e41b      	b.n	900097d8 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fa0:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009fa2:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009fa4:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fa6:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
90009fa8:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fac:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
90009fae:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009fb0:	f43f ae0e 	beq.w	90009bd0 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fb4:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009fb6:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fb8:	5c28      	ldrb	r0, [r5, r0]
90009fba:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
90009fbe:	6a20      	ldr	r0, [r4, #32]
90009fc0:	f100 0001 	add.w	r0, r0, #1
90009fc4:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009fc6:	f47f ae03 	bne.w	90009bd0 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fca:	6a22      	ldr	r2, [r4, #32]
90009fcc:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
90009fce:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fd0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
90009fd4:	3201      	adds	r2, #1
90009fd6:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009fd8:	e5fa      	b.n	90009bd0 <JPEG_Process+0x438>
90009fda:	bf00      	nop

90009fdc <HAL_JPEG_IRQHandler>:
{
90009fdc:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
90009fde:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90009fe2:	3b03      	subs	r3, #3
90009fe4:	2b01      	cmp	r3, #1
90009fe6:	d900      	bls.n	90009fea <HAL_JPEG_IRQHandler+0xe>
}
90009fe8:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009fea:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009fec:	4604      	mov	r4, r0
90009fee:	f003 030c 	and.w	r3, r3, #12
90009ff2:	2b08      	cmp	r3, #8
90009ff4:	d050      	beq.n	9000a098 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009ff6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009ff8:	f003 030c 	and.w	r3, r3, #12
90009ffc:	2b0c      	cmp	r3, #12
90009ffe:	d1f3      	bne.n	90009fe8 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a000:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a002:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a004:	f002 0203 	and.w	r2, r2, #3
9000a008:	2a02      	cmp	r2, #2
9000a00a:	d049      	beq.n	9000a0a0 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000a00c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a00e:	0692      	lsls	r2, r2, #26
9000a010:	d5ea      	bpl.n	90009fe8 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a012:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a014:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a016:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000a01a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a01c:	681a      	ldr	r2, [r3, #0]
9000a01e:	f022 0201 	bic.w	r2, r2, #1
9000a022:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a024:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a026:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a02a:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a02c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a02e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a032:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a034:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000a038:	2b02      	cmp	r3, #2
9000a03a:	d054      	beq.n	9000a0e6 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000a03c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a03e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000a042:	2b02      	cmp	r3, #2
9000a044:	d043      	beq.n	9000a0ce <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a046:	6803      	ldr	r3, [r0, #0]
9000a048:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a04a:	695b      	ldr	r3, [r3, #20]
9000a04c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a050:	1ad3      	subs	r3, r2, r3
9000a052:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a054:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a056:	429a      	cmp	r2, r3
9000a058:	d048      	beq.n	9000a0ec <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a05a:	6822      	ldr	r2, [r4, #0]
9000a05c:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000a05e:	f015 0510 	ands.w	r5, r5, #16
9000a062:	d138      	bne.n	9000a0d6 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000a064:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a066:	2b00      	cmp	r3, #0
9000a068:	d14b      	bne.n	9000a102 <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a06a:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a06c:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a06e:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a070:	f023 0301 	bic.w	r3, r3, #1
9000a074:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a076:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a078:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a07a:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a07e:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a082:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a086:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a088:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a08a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a08c:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a090:	d034      	beq.n	9000a0fc <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a092:	f7ff f9bb 	bl	9000940c <HAL_JPEG_EncodeCpltCallback>
}
9000a096:	bd38      	pop	{r3, r4, r5, pc}
9000a098:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000a09c:	f7ff bb7c 	b.w	90009798 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a0a0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a0a2:	0651      	lsls	r1, r2, #25
9000a0a4:	d5b2      	bpl.n	9000a00c <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a0a6:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a0a8:	4629      	mov	r1, r5
9000a0aa:	f7fe fec3 	bl	90008e34 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a0ae:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a0b0:	4629      	mov	r1, r5
9000a0b2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a0b4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a0b6:	f7f7 ff3b 	bl	90001f30 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a0ba:	6823      	ldr	r3, [r4, #0]
9000a0bc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a0be:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000a0c2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a0c4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a0c6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a0ca:	639a      	str	r2, [r3, #56]	@ 0x38
9000a0cc:	e79e      	b.n	9000a00c <HAL_JPEG_IRQHandler+0x30>
}
9000a0ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000a0d2:	f000 bb63 	b.w	9000a79c <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a0d6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a0d8:	049b      	lsls	r3, r3, #18
9000a0da:	d485      	bmi.n	90009fe8 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000a0dc:	4620      	mov	r0, r4
}
9000a0de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a0e2:	f7ff b9ff 	b.w	900094e4 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000a0e6:	f000 fb59 	bl	9000a79c <HAL_MDMA_Abort_IT>
9000a0ea:	e7a7      	b.n	9000a03c <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0ec:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0ee:	4620      	mov	r0, r4
9000a0f0:	69e1      	ldr	r1, [r4, #28]
9000a0f2:	f7f7 ff6b 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a0f6:	2300      	movs	r3, #0
9000a0f8:	6263      	str	r3, [r4, #36]	@ 0x24
9000a0fa:	e7ae      	b.n	9000a05a <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a0fc:	f7f8 f814 	bl	90002128 <HAL_JPEG_DecodeCpltCallback>
}
9000a100:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a102:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a104:	4620      	mov	r0, r4
9000a106:	69e1      	ldr	r1, [r4, #28]
9000a108:	f7f7 ff60 	bl	90001fcc <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a10c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a10e:	6265      	str	r5, [r4, #36]	@ 0x24
9000a110:	e7ab      	b.n	9000a06a <HAL_JPEG_IRQHandler+0x8e>
9000a112:	bf00      	nop

9000a114 <HAL_JPEG_GetState>:
  return hjpeg->State;
9000a114:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000a118:	4770      	bx	lr
9000a11a:	bf00      	nop

9000a11c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000a11c:	2800      	cmp	r0, #0
9000a11e:	d067      	beq.n	9000a1f0 <HAL_LTDC_Init+0xd4>
{
9000a120:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000a122:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000a126:	4604      	mov	r4, r0
9000a128:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000a12c:	2b00      	cmp	r3, #0
9000a12e:	d05a      	beq.n	9000a1e6 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a130:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a132:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a134:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a138:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a13c:	4302      	orrs	r2, r0
9000a13e:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a140:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a142:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a144:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a146:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a14a:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a14c:	4929      	ldr	r1, [pc, #164]	@ (9000a1f4 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a14e:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a150:	6998      	ldr	r0, [r3, #24]
9000a152:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000a154:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a156:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a158:	689a      	ldr	r2, [r3, #8]
9000a15a:	400a      	ands	r2, r1
9000a15c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a15e:	689a      	ldr	r2, [r3, #8]
9000a160:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a164:	69a0      	ldr	r0, [r4, #24]
9000a166:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000a168:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a16a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000a16c:	68da      	ldr	r2, [r3, #12]
9000a16e:	400a      	ands	r2, r1
9000a170:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a172:	68da      	ldr	r2, [r3, #12]
9000a174:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a178:	6a20      	ldr	r0, [r4, #32]
9000a17a:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000a17c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a17e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000a180:	691a      	ldr	r2, [r3, #16]
9000a182:	400a      	ands	r2, r1
9000a184:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a186:	691a      	ldr	r2, [r3, #16]
9000a188:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a18c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000a18e:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000a190:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a192:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000a194:	695a      	ldr	r2, [r3, #20]
9000a196:	400a      	ands	r2, r1
9000a198:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000a19a:	695a      	ldr	r2, [r3, #20]
9000a19c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000a19e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a1a2:	430a      	orrs	r2, r1
9000a1a4:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a1a6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000a1a8:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a1ac:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000a1b0:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a1b4:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a1b6:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000a1b8:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000a1bc:	432a      	orrs	r2, r5
9000a1be:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a1c2:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a1c4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a1c8:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000a1ca:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1cc:	f042 0206 	orr.w	r2, r2, #6
9000a1d0:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000a1d2:	699a      	ldr	r2, [r3, #24]
9000a1d4:	f042 0201 	orr.w	r2, r2, #1
9000a1d8:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000a1da:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a1dc:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000a1e0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000a1e4:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000a1e6:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000a1ea:	f7fa f835 	bl	90004258 <HAL_LTDC_MspInit>
9000a1ee:	e79f      	b.n	9000a130 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000a1f0:	2001      	movs	r0, #1
}
9000a1f2:	4770      	bx	lr
9000a1f4:	f000f800 	.word	0xf000f800

9000a1f8 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000a1f8:	4770      	bx	lr
9000a1fa:	bf00      	nop

9000a1fc <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000a1fc:	4770      	bx	lr
9000a1fe:	bf00      	nop

9000a200 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a200:	6803      	ldr	r3, [r0, #0]
{
9000a202:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a204:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000a206:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000a208:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000a20a:	076a      	lsls	r2, r5, #29
9000a20c:	d501      	bpl.n	9000a212 <HAL_LTDC_IRQHandler+0x12>
9000a20e:	0771      	lsls	r1, r6, #29
9000a210:	d41d      	bmi.n	9000a24e <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000a212:	07aa      	lsls	r2, r5, #30
9000a214:	d501      	bpl.n	9000a21a <HAL_LTDC_IRQHandler+0x1a>
9000a216:	07b3      	lsls	r3, r6, #30
9000a218:	d42d      	bmi.n	9000a276 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000a21a:	07e8      	lsls	r0, r5, #31
9000a21c:	d501      	bpl.n	9000a222 <HAL_LTDC_IRQHandler+0x22>
9000a21e:	07f1      	lsls	r1, r6, #31
9000a220:	d440      	bmi.n	9000a2a4 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000a222:	072a      	lsls	r2, r5, #28
9000a224:	d501      	bpl.n	9000a22a <HAL_LTDC_IRQHandler+0x2a>
9000a226:	0733      	lsls	r3, r6, #28
9000a228:	d400      	bmi.n	9000a22c <HAL_LTDC_IRQHandler+0x2c>
}
9000a22a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a22c:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a22e:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000a230:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000a232:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a234:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a236:	f022 0208 	bic.w	r2, r2, #8
9000a23a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a23c:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a23e:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000a240:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000a244:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a248:	f7ff ffd8 	bl	9000a1fc <HAL_LTDC_ReloadEventCallback>
}
9000a24c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000a24e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a250:	f022 0204 	bic.w	r2, r2, #4
9000a254:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000a256:	2204      	movs	r2, #4
9000a258:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000a25a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000a25e:	f043 0301 	orr.w	r3, r3, #1
9000a262:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000a266:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a268:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000a26c:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a270:	f7ff ffc2 	bl	9000a1f8 <HAL_LTDC_ErrorCallback>
9000a274:	e7cd      	b.n	9000a212 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a276:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000a278:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a27a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a27c:	f022 0202 	bic.w	r2, r2, #2
9000a280:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000a282:	2202      	movs	r2, #2
9000a284:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a286:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000a288:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000a28c:	f043 0302 	orr.w	r3, r3, #2
9000a290:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000a294:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a296:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000a29a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a29e:	f7ff ffab 	bl	9000a1f8 <HAL_LTDC_ErrorCallback>
9000a2a2:	e7ba      	b.n	9000a21a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a2a4:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000a2a6:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a2a8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a2aa:	f022 0201 	bic.w	r2, r2, #1
9000a2ae:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000a2b0:	2201      	movs	r2, #1
9000a2b2:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000a2b4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000a2b6:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000a2ba:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000a2be:	f7f9 f9d7 	bl	90003670 <HAL_LTDC_LineEventCallback>
9000a2c2:	e7ae      	b.n	9000a222 <HAL_LTDC_IRQHandler+0x22>

9000a2c4 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000a2c4:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000a2c8:	2b01      	cmp	r3, #1
9000a2ca:	f000 80c6 	beq.w	9000a45a <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a2ce:	2302      	movs	r3, #2
{
9000a2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2d4:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a2d8:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a2dc:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
9000a2e0:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2e2:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a2e6:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a2e8:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2ec:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a2ee:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000a2f2:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a2f4:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000a2f8:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a2fa:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2fe:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a302:	f8df a164 	ldr.w	sl, [pc, #356]	@ 9000a468 <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a306:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000a30a:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000a30e:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a310:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a312:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a316:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a318:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a31a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a31e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a320:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a324:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a326:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a328:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a32c:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a32e:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a330:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a334:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000a338:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a33a:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a33c:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000a340:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a344:	440b      	add	r3, r1
9000a346:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a34a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a34e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a352:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a356:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a35a:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a35e:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a360:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a364:	68ab      	ldr	r3, [r5, #8]
9000a366:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000a36a:	3301      	adds	r3, #1
9000a36c:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000a370:	4403      	add	r3, r0
9000a372:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a376:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a378:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000a37c:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000a380:	f023 0307 	bic.w	r3, r3, #7
9000a384:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a388:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a38c:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000a390:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000a392:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000a396:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a39a:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000a39e:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000a3a2:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a3a6:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000a3aa:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000a3ae:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000a3b2:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000a3b6:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000a3ba:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000a3be:	696b      	ldr	r3, [r5, #20]
9000a3c0:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a3c4:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a3c8:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a3ca:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a3ce:	6a28      	ldr	r0, [r5, #32]
9000a3d0:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a3d2:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a3d6:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000a3da:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
9000a3de:	2300      	movs	r3, #0
9000a3e0:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000a3e4:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000a3e6:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a3ea:	b3a1      	cbz	r1, 9000a456 <HAL_LTDC_ConfigLayer+0x192>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000a3ec:	2901      	cmp	r1, #1
9000a3ee:	d036      	beq.n	9000a45e <HAL_LTDC_ConfigLayer+0x19a>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000a3f0:	1e8b      	subs	r3, r1, #2
9000a3f2:	2907      	cmp	r1, #7
9000a3f4:	bf18      	it	ne
9000a3f6:	2b02      	cmpne	r3, #2
9000a3f8:	bf94      	ite	ls
9000a3fa:	2301      	movls	r3, #1
9000a3fc:	2300      	movhi	r3, #0
9000a3fe:	3301      	adds	r3, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a400:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a402:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a404:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a408:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a40c:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a40e:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a410:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000a414:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000a418:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000a41c:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a420:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000a424:	4b0f      	ldr	r3, [pc, #60]	@ (9000a464 <HAL_LTDC_ConfigLayer+0x1a0>)
9000a426:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
9000a42a:	400b      	ands	r3, r1
9000a42c:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a430:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a434:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000a436:	f859 3006 	ldr.w	r3, [r9, r6]
9000a43a:	4313      	orrs	r3, r2
9000a43c:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000a440:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a442:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000a446:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000a448:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000a44c:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000a450:	b003      	add	sp, #12
9000a452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000a456:	2304      	movs	r3, #4
9000a458:	e7d2      	b.n	9000a400 <HAL_LTDC_ConfigLayer+0x13c>
  __HAL_LOCK(hltdc);
9000a45a:	2002      	movs	r0, #2
}
9000a45c:	4770      	bx	lr
    tmp = 3U;
9000a45e:	2303      	movs	r3, #3
9000a460:	e7ce      	b.n	9000a400 <HAL_LTDC_ConfigLayer+0x13c>
9000a462:	bf00      	nop
9000a464:	fffff800 	.word	0xfffff800
9000a468:	fffff8f8 	.word	0xfffff8f8

9000a46c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a46c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000a470:	2a01      	cmp	r2, #1
9000a472:	d019      	beq.n	9000a4a8 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a474:	6802      	ldr	r2, [r0, #0]
9000a476:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a478:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a47a:	f04f 0c00 	mov.w	ip, #0
{
9000a47e:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a480:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a484:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a486:	4c09      	ldr	r4, [pc, #36]	@ (9000a4ac <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a488:	f020 0001 	bic.w	r0, r0, #1
9000a48c:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a48e:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a490:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a492:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000a494:	4301      	orrs	r1, r0
9000a496:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a498:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000a49c:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a49e:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000a4a2:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a4a6:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a4a8:	2002      	movs	r0, #2
}
9000a4aa:	4770      	bx	lr
9000a4ac:	50001000 	.word	0x50001000

9000a4b0 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a4b0:	b538      	push	{r3, r4, r5, lr}
9000a4b2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a4b4:	f7fd f848 	bl	90007548 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a4b8:	2c00      	cmp	r4, #0
9000a4ba:	d058      	beq.n	9000a56e <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a4bc:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a4be:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a4c0:	2100      	movs	r1, #0
9000a4c2:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a4c4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000a4c8:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a4cc:	68da      	ldr	r2, [r3, #12]
9000a4ce:	f022 0201 	bic.w	r2, r2, #1
9000a4d2:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a4d4:	e005      	b.n	9000a4e2 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a4d6:	f7fd f837 	bl	90007548 <HAL_GetTick>
9000a4da:	1b43      	subs	r3, r0, r5
9000a4dc:	2b05      	cmp	r3, #5
9000a4de:	d841      	bhi.n	9000a564 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a4e0:	6823      	ldr	r3, [r4, #0]
9000a4e2:	68da      	ldr	r2, [r3, #12]
9000a4e4:	07d2      	lsls	r2, r2, #31
9000a4e6:	d4f6      	bmi.n	9000a4d6 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a4e8:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a4ec:	69e0      	ldr	r0, [r4, #28]
9000a4ee:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a4f0:	68e1      	ldr	r1, [r4, #12]
9000a4f2:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a4f4:	4302      	orrs	r2, r0
9000a4f6:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a4f8:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a4fa:	4302      	orrs	r2, r0
9000a4fc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a4fe:	4302      	orrs	r2, r0
9000a500:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000a502:	4302      	orrs	r2, r0
9000a504:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a506:	4302      	orrs	r2, r0
9000a508:	68a0      	ldr	r0, [r4, #8]
9000a50a:	4302      	orrs	r2, r0
9000a50c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000a50e:	3801      	subs	r0, #1
9000a510:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a514:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a516:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a518:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a51c:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a51e:	d103      	bne.n	9000a528 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a520:	691a      	ldr	r2, [r3, #16]
9000a522:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000a526:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a528:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a52a:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000a52c:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a52e:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a530:	db1f      	blt.n	9000a572 <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a532:	b292      	uxth	r2, r2
9000a534:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a536:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a538:	2a00      	cmp	r2, #0
9000a53a:	db24      	blt.n	9000a586 <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a53c:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a53e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a542:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a546:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a548:	d029      	beq.n	9000a59e <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a54a:	b2c0      	uxtb	r0, r0
9000a54c:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a54e:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a550:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a552:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000a554:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a556:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a558:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a55a:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a55e:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000a562:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a564:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a566:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a568:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a56a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000a56e:	2001      	movs	r0, #1
}
9000a570:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a572:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a574:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a576:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a57a:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a57c:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a57e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a580:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a582:	2a00      	cmp	r2, #0
9000a584:	dada      	bge.n	9000a53c <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a586:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a588:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a58a:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a58e:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000a592:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a594:	6a19      	ldr	r1, [r3, #32]
9000a596:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a59a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a59c:	d1d5      	bne.n	9000a54a <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a59e:	2200      	movs	r2, #0
9000a5a0:	629a      	str	r2, [r3, #40]	@ 0x28
9000a5a2:	e7d4      	b.n	9000a54e <HAL_MDMA_Init+0x9e>

9000a5a4 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a5a4:	b1f8      	cbz	r0, 9000a5e6 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a5a6:	6802      	ldr	r2, [r0, #0]
9000a5a8:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a5aa:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a5ac:	68d0      	ldr	r0, [r2, #12]
{
9000a5ae:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a5b0:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a5b4:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a5b6:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a5b8:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a5ba:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a5bc:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a5be:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a5c0:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a5c2:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a5c4:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a5c6:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000a5c8:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000a5ca:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000a5cc:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a5ce:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a5d0:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000a5d2:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000a5d6:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000a5da:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000a5de:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a5e0:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000a5e4:	4770      	bx	lr
    return HAL_ERROR;
9000a5e6:	2001      	movs	r0, #1
}
9000a5e8:	4770      	bx	lr
9000a5ea:	bf00      	nop

9000a5ec <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000a5ec:	b308      	cbz	r0, 9000a632 <HAL_MDMA_ConfigPostRequestMask+0x46>
9000a5ee:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000a5f0:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000a5f4:	2801      	cmp	r0, #1
9000a5f6:	d01e      	beq.n	9000a636 <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000a5f8:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000a5fa:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a5fe:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000a602:	45f4      	cmp	ip, lr
9000a604:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000a608:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a60c:	d004      	beq.n	9000a618 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000a60e:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000a610:	2200      	movs	r2, #0
9000a612:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000a616:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000a618:	681c      	ldr	r4, [r3, #0]
9000a61a:	6925      	ldr	r5, [r4, #16]
9000a61c:	006d      	lsls	r5, r5, #1
9000a61e:	d4f7      	bmi.n	9000a610 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000a620:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000a622:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a624:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000a626:	b941      	cbnz	r1, 9000a63a <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a628:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000a62c:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000a62e:	2000      	movs	r0, #0
9000a630:	e7ee      	b.n	9000a610 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000a632:	2001      	movs	r0, #1
9000a634:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000a636:	2002      	movs	r0, #2
}
9000a638:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a63a:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000a63e:	6122      	str	r2, [r4, #16]
9000a640:	e7f5      	b.n	9000a62e <HAL_MDMA_ConfigPostRequestMask+0x42>
9000a642:	bf00      	nop

9000a644 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000a644:	2800      	cmp	r0, #0
9000a646:	d06b      	beq.n	9000a720 <HAL_MDMA_Start_IT+0xdc>
{
9000a648:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000a64a:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000a64e:	2c01      	cmp	r4, #1
9000a650:	d009      	beq.n	9000a666 <HAL_MDMA_Start_IT+0x22>
9000a652:	2401      	movs	r4, #1
9000a654:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a658:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000a65c:	2c01      	cmp	r4, #1
9000a65e:	d005      	beq.n	9000a66c <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000a660:	2300      	movs	r3, #0
9000a662:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000a666:	2002      	movs	r0, #2
}
9000a668:	bc70      	pop	{r4, r5, r6}
9000a66a:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a66c:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a66e:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a670:	4d2c      	ldr	r5, [pc, #176]	@ (9000a724 <HAL_MDMA_Start_IT+0xe0>)
9000a672:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a676:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a67a:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a67c:	f106 3cff 	add.w	ip, r6, #4294967295
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a680:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a684:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000a686:	6804      	ldr	r4, [r0, #0]
9000a688:	68e6      	ldr	r6, [r4, #12]
9000a68a:	f026 0601 	bic.w	r6, r6, #1
9000a68e:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a690:	6966      	ldr	r6, [r4, #20]
9000a692:	ea05 0506 	and.w	r5, r5, r6
9000a696:	ea45 0503 	orr.w	r5, r5, r3
9000a69a:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a69c:	6963      	ldr	r3, [r4, #20]
9000a69e:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000a6a2:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000a6a6:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a6a8:	f04f 031f 	mov.w	r3, #31
9000a6ac:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000a6ae:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000a6b0:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000a6b2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a6b4:	bf0c      	ite	eq
9000a6b6:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a6ba:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a6be:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000a6c2:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a6c4:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000a6c6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a6c8:	bf0c      	ite	eq
9000a6ca:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000a6ce:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000a6d2:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000a6d4:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000a6d6:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000a6d8:	68e3      	ldr	r3, [r4, #12]
9000a6da:	f043 0306 	orr.w	r3, r3, #6
9000a6de:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000a6e0:	b11a      	cbz	r2, 9000a6ea <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000a6e2:	68e3      	ldr	r3, [r4, #12]
9000a6e4:	f043 0310 	orr.w	r3, r3, #16
9000a6e8:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a6ea:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a6ec:	b11b      	cbz	r3, 9000a6f6 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000a6ee:	68e3      	ldr	r3, [r4, #12]
9000a6f0:	f043 0308 	orr.w	r3, r3, #8
9000a6f4:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000a6f6:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000a6f8:	b11b      	cbz	r3, 9000a702 <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000a6fa:	68e3      	ldr	r3, [r4, #12]
9000a6fc:	f043 0320 	orr.w	r3, r3, #32
9000a700:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000a702:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a704:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000a706:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a70a:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000a70e:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a710:	d103      	bne.n	9000a71a <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000a712:	68e3      	ldr	r3, [r4, #12]
9000a714:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a718:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000a71a:	2000      	movs	r0, #0
}
9000a71c:	bc70      	pop	{r4, r5, r6}
9000a71e:	4770      	bx	lr
    return HAL_ERROR;
9000a720:	2001      	movs	r0, #1
}
9000a722:	4770      	bx	lr
9000a724:	fffe0000 	.word	0xfffe0000

9000a728 <HAL_MDMA_Abort>:
{
9000a728:	b538      	push	{r3, r4, r5, lr}
9000a72a:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000a72c:	f7fc ff0c 	bl	90007548 <HAL_GetTick>
  if(hmdma == NULL)
9000a730:	b334      	cbz	r4, 9000a780 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a732:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000a736:	2b02      	cmp	r3, #2
9000a738:	d11d      	bne.n	9000a776 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a73a:	6822      	ldr	r2, [r4, #0]
9000a73c:	4605      	mov	r5, r0
9000a73e:	68d3      	ldr	r3, [r2, #12]
9000a740:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000a744:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000a746:	68d3      	ldr	r3, [r2, #12]
9000a748:	f023 0301 	bic.w	r3, r3, #1
9000a74c:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a74e:	e005      	b.n	9000a75c <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a750:	f7fc fefa 	bl	90007548 <HAL_GetTick>
9000a754:	1b43      	subs	r3, r0, r5
9000a756:	2b05      	cmp	r3, #5
9000a758:	d814      	bhi.n	9000a784 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a75a:	6822      	ldr	r2, [r4, #0]
9000a75c:	68d3      	ldr	r3, [r2, #12]
9000a75e:	f013 0301 	ands.w	r3, r3, #1
9000a762:	d1f5      	bne.n	9000a750 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a764:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000a766:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a768:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000a76a:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000a76c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000a770:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000a774:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a776:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000a778:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a77a:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000a77c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000a780:	2001      	movs	r0, #1
}
9000a782:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a784:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000a786:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a788:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a78a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000a78e:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a792:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a794:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000a798:	e7f2      	b.n	9000a780 <HAL_MDMA_Abort+0x58>
9000a79a:	bf00      	nop

9000a79c <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000a79c:	4603      	mov	r3, r0
9000a79e:	b128      	cbz	r0, 9000a7ac <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a7a0:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000a7a4:	2a02      	cmp	r2, #2
9000a7a6:	d003      	beq.n	9000a7b0 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a7a8:	2280      	movs	r2, #128	@ 0x80
9000a7aa:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000a7ac:	2001      	movs	r0, #1
9000a7ae:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000a7b0:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a7b2:	2104      	movs	r1, #4
  return HAL_OK;
9000a7b4:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a7b6:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000a7ba:	68d3      	ldr	r3, [r2, #12]
9000a7bc:	f023 0301 	bic.w	r3, r3, #1
9000a7c0:	60d3      	str	r3, [r2, #12]
}
9000a7c2:	4770      	bx	lr

9000a7c4 <HAL_MDMA_IRQHandler>:
{
9000a7c4:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000a7c6:	2300      	movs	r3, #0
{
9000a7c8:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a7ca:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000a7ce:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000a7d0:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a7d2:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a7d4:	4b57      	ldr	r3, [pc, #348]	@ (9000a934 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a7d6:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a7d8:	4a57      	ldr	r2, [pc, #348]	@ (9000a938 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000a7da:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a7dc:	6823      	ldr	r3, [r4, #0]
9000a7de:	441a      	add	r2, r3
9000a7e0:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000a7e4:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a7e8:	4202      	tst	r2, r0
9000a7ea:	f000 80a0 	beq.w	9000a92e <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000a7ee:	681a      	ldr	r2, [r3, #0]
9000a7f0:	07d1      	lsls	r1, r2, #31
9000a7f2:	d529      	bpl.n	9000a848 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000a7f4:	68da      	ldr	r2, [r3, #12]
9000a7f6:	0792      	lsls	r2, r2, #30
9000a7f8:	d526      	bpl.n	9000a848 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000a7fa:	68da      	ldr	r2, [r3, #12]
9000a7fc:	f022 0202 	bic.w	r2, r2, #2
9000a800:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000a802:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a804:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000a806:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a808:	bf54      	ite	pl
9000a80a:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000a80e:	f041 0102 	orrmi.w	r1, r1, #2
9000a812:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000a814:	0591      	lsls	r1, r2, #22
9000a816:	d503      	bpl.n	9000a820 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000a818:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a81a:	f041 0104 	orr.w	r1, r1, #4
9000a81e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000a820:	05d0      	lsls	r0, r2, #23
9000a822:	d503      	bpl.n	9000a82c <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000a824:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a826:	f041 0108 	orr.w	r1, r1, #8
9000a82a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000a82c:	0551      	lsls	r1, r2, #21
9000a82e:	d503      	bpl.n	9000a838 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000a830:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a832:	f041 0110 	orr.w	r1, r1, #16
9000a836:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000a838:	0510      	lsls	r0, r2, #20
9000a83a:	d503      	bpl.n	9000a844 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000a83c:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000a83e:	f042 0220 	orr.w	r2, r2, #32
9000a842:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000a844:	2201      	movs	r2, #1
9000a846:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000a848:	681a      	ldr	r2, [r3, #0]
9000a84a:	06d1      	lsls	r1, r2, #27
9000a84c:	d509      	bpl.n	9000a862 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000a84e:	68da      	ldr	r2, [r3, #12]
9000a850:	0692      	lsls	r2, r2, #26
9000a852:	d506      	bpl.n	9000a862 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a854:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000a856:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a858:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000a85a:	b112      	cbz	r2, 9000a862 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000a85c:	4620      	mov	r0, r4
9000a85e:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000a860:	6823      	ldr	r3, [r4, #0]
9000a862:	681a      	ldr	r2, [r3, #0]
9000a864:	0710      	lsls	r0, r2, #28
9000a866:	d509      	bpl.n	9000a87c <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000a868:	68da      	ldr	r2, [r3, #12]
9000a86a:	06d1      	lsls	r1, r2, #27
9000a86c:	d506      	bpl.n	9000a87c <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a86e:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000a870:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a872:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000a874:	b112      	cbz	r2, 9000a87c <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000a876:	4620      	mov	r0, r4
9000a878:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000a87a:	6823      	ldr	r3, [r4, #0]
9000a87c:	681a      	ldr	r2, [r3, #0]
9000a87e:	0752      	lsls	r2, r2, #29
9000a880:	d509      	bpl.n	9000a896 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000a882:	68da      	ldr	r2, [r3, #12]
9000a884:	0710      	lsls	r0, r2, #28
9000a886:	d506      	bpl.n	9000a896 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a888:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a88a:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a88c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a88e:	b112      	cbz	r2, 9000a896 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000a890:	4620      	mov	r0, r4
9000a892:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000a894:	6823      	ldr	r3, [r4, #0]
9000a896:	681a      	ldr	r2, [r3, #0]
9000a898:	0791      	lsls	r1, r2, #30
9000a89a:	d516      	bpl.n	9000a8ca <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000a89c:	68da      	ldr	r2, [r3, #12]
9000a89e:	0752      	lsls	r2, r2, #29
9000a8a0:	d513      	bpl.n	9000a8ca <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a8a2:	68da      	ldr	r2, [r3, #12]
9000a8a4:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000a8a8:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000a8aa:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000a8ae:	2a04      	cmp	r2, #4
9000a8b0:	d034      	beq.n	9000a91c <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a8b2:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000a8b4:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a8b6:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000a8b8:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000a8ba:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000a8bc:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000a8c0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000a8c4:	b10b      	cbz	r3, 9000a8ca <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000a8c6:	4620      	mov	r0, r4
9000a8c8:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000a8ca:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000a8cc:	2b00      	cmp	r3, #0
9000a8ce:	d02e      	beq.n	9000a92e <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000a8d0:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a8d2:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000a8d4:	4b19      	ldr	r3, [pc, #100]	@ (9000a93c <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a8d6:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000a8da:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000a8de:	68cb      	ldr	r3, [r1, #12]
9000a8e0:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a8e4:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000a8e6:	60cb      	str	r3, [r1, #12]
9000a8e8:	e002      	b.n	9000a8f0 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000a8ea:	68cb      	ldr	r3, [r1, #12]
9000a8ec:	07d8      	lsls	r0, r3, #31
9000a8ee:	d504      	bpl.n	9000a8fa <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000a8f0:	9b01      	ldr	r3, [sp, #4]
9000a8f2:	3301      	adds	r3, #1
9000a8f4:	4293      	cmp	r3, r2
9000a8f6:	9301      	str	r3, [sp, #4]
9000a8f8:	d9f7      	bls.n	9000a8ea <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000a8fa:	2300      	movs	r3, #0
9000a8fc:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a900:	68cb      	ldr	r3, [r1, #12]
9000a902:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a904:	bf4c      	ite	mi
9000a906:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000a908:	2301      	movpl	r3, #1
9000a90a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000a90e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a910:	b16b      	cbz	r3, 9000a92e <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000a912:	4620      	mov	r0, r4
}
9000a914:	b003      	add	sp, #12
9000a916:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000a91a:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000a91c:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000a91e:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000a920:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000a922:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000a926:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000a92a:	2b00      	cmp	r3, #0
9000a92c:	d1f1      	bne.n	9000a912 <HAL_MDMA_IRQHandler+0x14e>
}
9000a92e:	b003      	add	sp, #12
9000a930:	bd30      	pop	{r4, r5, pc}
9000a932:	bf00      	nop
9000a934:	24000088 	.word	0x24000088
9000a938:	adffffc0 	.word	0xadffffc0
9000a93c:	1b4e81b5 	.word	0x1b4e81b5

9000a940 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000a940:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a942:	4c10      	ldr	r4, [pc, #64]	@ (9000a984 <HAL_PWREx_ConfigSupply+0x44>)
9000a944:	68e3      	ldr	r3, [r4, #12]
9000a946:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a94a:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a94c:	d105      	bne.n	9000a95a <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a94e:	f003 0307 	and.w	r3, r3, #7
9000a952:	1a18      	subs	r0, r3, r0
9000a954:	bf18      	it	ne
9000a956:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000a958:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000a95a:	f023 0307 	bic.w	r3, r3, #7
9000a95e:	4303      	orrs	r3, r0
9000a960:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000a962:	f7fc fdf1 	bl	90007548 <HAL_GetTick>
9000a966:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a968:	e005      	b.n	9000a976 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000a96a:	f7fc fded 	bl	90007548 <HAL_GetTick>
9000a96e:	1b40      	subs	r0, r0, r5
9000a970:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a974:	d804      	bhi.n	9000a980 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a976:	6863      	ldr	r3, [r4, #4]
9000a978:	049b      	lsls	r3, r3, #18
9000a97a:	d5f6      	bpl.n	9000a96a <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000a97c:	2000      	movs	r0, #0
}
9000a97e:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000a980:	2001      	movs	r0, #1
}
9000a982:	bd38      	pop	{r3, r4, r5, pc}
9000a984:	58024800 	.word	0x58024800

9000a988 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a988:	4b33      	ldr	r3, [pc, #204]	@ (9000aa58 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000a98a:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a98c:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a98e:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a990:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000a992:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a996:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a998:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000a99c:	d036      	beq.n	9000aa0c <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a99e:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a9a2:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a9a6:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9aa:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a9ae:	fb05 f202 	mul.w	r2, r5, r2
9000a9b2:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9b4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000a9b8:	ee06 2a90 	vmov	s13, r2
9000a9bc:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000a9c0:	d002      	beq.n	9000a9c8 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000a9c2:	2902      	cmp	r1, #2
9000a9c4:	d042      	beq.n	9000aa4c <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000a9c6:	b319      	cbz	r1, 9000aa10 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9c8:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000aa5c <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000a9cc:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000a9d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a9d2:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000a9d6:	ee07 3a90 	vmov	s15, r3
9000a9da:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000a9de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a9e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000a9e6:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000a9ea:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000a9ee:	4b1a      	ldr	r3, [pc, #104]	@ (9000aa58 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000a9f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a9f2:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000a9f6:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000a9f8:	ee07 3a10 	vmov	s14, r3
9000a9fc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000aa00:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000aa04:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000aa08:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000aa0c:	bc30      	pop	{r4, r5}
9000aa0e:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000aa10:	681a      	ldr	r2, [r3, #0]
9000aa12:	0692      	lsls	r2, r2, #26
9000aa14:	d51d      	bpl.n	9000aa52 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aa16:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aa18:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aa1c:	4a10      	ldr	r2, [pc, #64]	@ (9000aa60 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aa1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aa20:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aa24:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aa28:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aa2a:	ee07 3a90 	vmov	s15, r3
9000aa2e:	ee06 2a10 	vmov	s12, r2
9000aa32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000aa36:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000aa3a:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000aa3e:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000aa42:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000aa46:	ee67 7a87 	vmul.f32	s15, s15, s14
9000aa4a:	e7d0      	b.n	9000a9ee <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aa4c:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000aa64 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000aa50:	e7bc      	b.n	9000a9cc <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aa52:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000aa68 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000aa56:	e7b9      	b.n	9000a9cc <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000aa58:	58024400 	.word	0x58024400
9000aa5c:	4a742400 	.word	0x4a742400
9000aa60:	03d09000 	.word	0x03d09000
9000aa64:	4bbebc20 	.word	0x4bbebc20
9000aa68:	4c742400 	.word	0x4c742400

9000aa6c <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000aa6c:	2800      	cmp	r0, #0
9000aa6e:	f000 82e9 	beq.w	9000b044 <HAL_RCC_OscConfig+0x5d8>
{
9000aa72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000aa74:	6803      	ldr	r3, [r0, #0]
9000aa76:	4604      	mov	r4, r0
9000aa78:	07d9      	lsls	r1, r3, #31
9000aa7a:	d52e      	bpl.n	9000aada <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aa7c:	4997      	ldr	r1, [pc, #604]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000aa7e:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000aa80:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aa82:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000aa86:	2a10      	cmp	r2, #16
9000aa88:	f000 80ee 	beq.w	9000ac68 <HAL_RCC_OscConfig+0x1fc>
9000aa8c:	2a18      	cmp	r2, #24
9000aa8e:	f000 80e6 	beq.w	9000ac5e <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000aa92:	6863      	ldr	r3, [r4, #4]
9000aa94:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000aa98:	f000 8111 	beq.w	9000acbe <HAL_RCC_OscConfig+0x252>
9000aa9c:	2b00      	cmp	r3, #0
9000aa9e:	f000 8167 	beq.w	9000ad70 <HAL_RCC_OscConfig+0x304>
9000aaa2:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000aaa6:	4b8d      	ldr	r3, [pc, #564]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000aaa8:	681a      	ldr	r2, [r3, #0]
9000aaaa:	f000 828a 	beq.w	9000afc2 <HAL_RCC_OscConfig+0x556>
9000aaae:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000aab2:	601a      	str	r2, [r3, #0]
9000aab4:	681a      	ldr	r2, [r3, #0]
9000aab6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000aaba:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000aabc:	f7fc fd44 	bl	90007548 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aac0:	4e86      	ldr	r6, [pc, #536]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000aac2:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aac4:	e005      	b.n	9000aad2 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000aac6:	f7fc fd3f 	bl	90007548 <HAL_GetTick>
9000aaca:	1b40      	subs	r0, r0, r5
9000aacc:	2864      	cmp	r0, #100	@ 0x64
9000aace:	f200 814d 	bhi.w	9000ad6c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aad2:	6833      	ldr	r3, [r6, #0]
9000aad4:	039b      	lsls	r3, r3, #14
9000aad6:	d5f6      	bpl.n	9000aac6 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000aad8:	6823      	ldr	r3, [r4, #0]
9000aada:	079d      	lsls	r5, r3, #30
9000aadc:	d470      	bmi.n	9000abc0 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000aade:	06d9      	lsls	r1, r3, #27
9000aae0:	d533      	bpl.n	9000ab4a <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aae2:	4a7e      	ldr	r2, [pc, #504]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000aae4:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000aae6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aae8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000aaec:	2b08      	cmp	r3, #8
9000aaee:	f000 80cb 	beq.w	9000ac88 <HAL_RCC_OscConfig+0x21c>
9000aaf2:	2b18      	cmp	r3, #24
9000aaf4:	f000 80c3 	beq.w	9000ac7e <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000aaf8:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000aafa:	4d78      	ldr	r5, [pc, #480]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000aafc:	2b00      	cmp	r3, #0
9000aafe:	f000 816f 	beq.w	9000ade0 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000ab02:	682b      	ldr	r3, [r5, #0]
9000ab04:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000ab08:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ab0a:	f7fc fd1d 	bl	90007548 <HAL_GetTick>
9000ab0e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000ab10:	e005      	b.n	9000ab1e <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000ab12:	f7fc fd19 	bl	90007548 <HAL_GetTick>
9000ab16:	1b80      	subs	r0, r0, r6
9000ab18:	2802      	cmp	r0, #2
9000ab1a:	f200 8127 	bhi.w	9000ad6c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000ab1e:	682b      	ldr	r3, [r5, #0]
9000ab20:	05db      	lsls	r3, r3, #23
9000ab22:	d5f6      	bpl.n	9000ab12 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ab24:	f7fc fd16 	bl	90007554 <HAL_GetREVID>
9000ab28:	f241 0303 	movw	r3, #4099	@ 0x1003
9000ab2c:	4298      	cmp	r0, r3
9000ab2e:	f200 8269 	bhi.w	9000b004 <HAL_RCC_OscConfig+0x598>
9000ab32:	6a22      	ldr	r2, [r4, #32]
9000ab34:	686b      	ldr	r3, [r5, #4]
9000ab36:	2a20      	cmp	r2, #32
9000ab38:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000ab3c:	bf0c      	ite	eq
9000ab3e:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000ab42:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000ab46:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ab48:	6823      	ldr	r3, [r4, #0]
9000ab4a:	071d      	lsls	r5, r3, #28
9000ab4c:	d516      	bpl.n	9000ab7c <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000ab4e:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000ab50:	4d62      	ldr	r5, [pc, #392]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000ab52:	2b00      	cmp	r3, #0
9000ab54:	f000 8122 	beq.w	9000ad9c <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000ab58:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000ab5a:	f043 0301 	orr.w	r3, r3, #1
9000ab5e:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000ab60:	f7fc fcf2 	bl	90007548 <HAL_GetTick>
9000ab64:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000ab66:	e005      	b.n	9000ab74 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000ab68:	f7fc fcee 	bl	90007548 <HAL_GetTick>
9000ab6c:	1b80      	subs	r0, r0, r6
9000ab6e:	2802      	cmp	r0, #2
9000ab70:	f200 80fc 	bhi.w	9000ad6c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000ab74:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000ab76:	0798      	lsls	r0, r3, #30
9000ab78:	d5f6      	bpl.n	9000ab68 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000ab7a:	6823      	ldr	r3, [r4, #0]
9000ab7c:	069a      	lsls	r2, r3, #26
9000ab7e:	d516      	bpl.n	9000abae <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000ab80:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000ab82:	4d56      	ldr	r5, [pc, #344]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000ab84:	2b00      	cmp	r3, #0
9000ab86:	f000 811a 	beq.w	9000adbe <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000ab8a:	682b      	ldr	r3, [r5, #0]
9000ab8c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000ab90:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000ab92:	f7fc fcd9 	bl	90007548 <HAL_GetTick>
9000ab96:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000ab98:	e005      	b.n	9000aba6 <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000ab9a:	f7fc fcd5 	bl	90007548 <HAL_GetTick>
9000ab9e:	1b80      	subs	r0, r0, r6
9000aba0:	2802      	cmp	r0, #2
9000aba2:	f200 80e3 	bhi.w	9000ad6c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000aba6:	682b      	ldr	r3, [r5, #0]
9000aba8:	049f      	lsls	r7, r3, #18
9000abaa:	d5f6      	bpl.n	9000ab9a <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000abac:	6823      	ldr	r3, [r4, #0]
9000abae:	0759      	lsls	r1, r3, #29
9000abb0:	f100 808b 	bmi.w	9000acca <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000abb4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000abb6:	2b00      	cmp	r3, #0
9000abb8:	f040 80bf 	bne.w	9000ad3a <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000abbc:	2000      	movs	r0, #0
}
9000abbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000abc0:	4a46      	ldr	r2, [pc, #280]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000abc2:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000abc4:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000abc6:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000abca:	d12d      	bne.n	9000ac28 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000abcc:	4b43      	ldr	r3, [pc, #268]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000abce:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000abd0:	681b      	ldr	r3, [r3, #0]
9000abd2:	0759      	lsls	r1, r3, #29
9000abd4:	d501      	bpl.n	9000abda <HAL_RCC_OscConfig+0x16e>
9000abd6:	2a00      	cmp	r2, #0
9000abd8:	d04f      	beq.n	9000ac7a <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000abda:	4d40      	ldr	r5, [pc, #256]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000abdc:	682b      	ldr	r3, [r5, #0]
9000abde:	f023 0319 	bic.w	r3, r3, #25
9000abe2:	4313      	orrs	r3, r2
9000abe4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000abe6:	f7fc fcaf 	bl	90007548 <HAL_GetTick>
9000abea:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000abec:	e005      	b.n	9000abfa <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000abee:	f7fc fcab 	bl	90007548 <HAL_GetTick>
9000abf2:	1b80      	subs	r0, r0, r6
9000abf4:	2802      	cmp	r0, #2
9000abf6:	f200 80b9 	bhi.w	9000ad6c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000abfa:	682b      	ldr	r3, [r5, #0]
9000abfc:	075b      	lsls	r3, r3, #29
9000abfe:	d5f6      	bpl.n	9000abee <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000ac00:	f7fc fca8 	bl	90007554 <HAL_GetREVID>
9000ac04:	f241 0303 	movw	r3, #4099	@ 0x1003
9000ac08:	4298      	cmp	r0, r3
9000ac0a:	f200 8110 	bhi.w	9000ae2e <HAL_RCC_OscConfig+0x3c2>
9000ac0e:	6922      	ldr	r2, [r4, #16]
9000ac10:	686b      	ldr	r3, [r5, #4]
9000ac12:	2a40      	cmp	r2, #64	@ 0x40
9000ac14:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000ac18:	bf0c      	ite	eq
9000ac1a:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000ac1e:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000ac22:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ac24:	6823      	ldr	r3, [r4, #0]
9000ac26:	e75a      	b.n	9000aade <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000ac28:	2b18      	cmp	r3, #24
9000ac2a:	f000 80fc 	beq.w	9000ae26 <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ac2e:	4d2b      	ldr	r5, [pc, #172]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000ac30:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ac32:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000ac34:	2a00      	cmp	r2, #0
9000ac36:	f000 80e5 	beq.w	9000ae04 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ac3a:	f023 0319 	bic.w	r3, r3, #25
9000ac3e:	4313      	orrs	r3, r2
9000ac40:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ac42:	f7fc fc81 	bl	90007548 <HAL_GetTick>
9000ac46:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ac48:	e005      	b.n	9000ac56 <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000ac4a:	f7fc fc7d 	bl	90007548 <HAL_GetTick>
9000ac4e:	1b80      	subs	r0, r0, r6
9000ac50:	2802      	cmp	r0, #2
9000ac52:	f200 808b 	bhi.w	9000ad6c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ac56:	682b      	ldr	r3, [r5, #0]
9000ac58:	075f      	lsls	r7, r3, #29
9000ac5a:	d5f6      	bpl.n	9000ac4a <HAL_RCC_OscConfig+0x1de>
9000ac5c:	e7d0      	b.n	9000ac00 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000ac5e:	f001 0103 	and.w	r1, r1, #3
9000ac62:	2902      	cmp	r1, #2
9000ac64:	f47f af15 	bne.w	9000aa92 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000ac68:	4a1c      	ldr	r2, [pc, #112]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000ac6a:	6812      	ldr	r2, [r2, #0]
9000ac6c:	0392      	lsls	r2, r2, #14
9000ac6e:	f57f af34 	bpl.w	9000aada <HAL_RCC_OscConfig+0x6e>
9000ac72:	6862      	ldr	r2, [r4, #4]
9000ac74:	2a00      	cmp	r2, #0
9000ac76:	f47f af30 	bne.w	9000aada <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000ac7a:	2001      	movs	r0, #1
}
9000ac7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000ac7e:	f002 0203 	and.w	r2, r2, #3
9000ac82:	2a01      	cmp	r2, #1
9000ac84:	f47f af38 	bne.w	9000aaf8 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000ac88:	4b14      	ldr	r3, [pc, #80]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000ac8a:	681b      	ldr	r3, [r3, #0]
9000ac8c:	05da      	lsls	r2, r3, #23
9000ac8e:	d502      	bpl.n	9000ac96 <HAL_RCC_OscConfig+0x22a>
9000ac90:	69e3      	ldr	r3, [r4, #28]
9000ac92:	2b80      	cmp	r3, #128	@ 0x80
9000ac94:	d1f1      	bne.n	9000ac7a <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ac96:	f7fc fc5d 	bl	90007554 <HAL_GetREVID>
9000ac9a:	f241 0303 	movw	r3, #4099	@ 0x1003
9000ac9e:	4298      	cmp	r0, r3
9000aca0:	f200 80ce 	bhi.w	9000ae40 <HAL_RCC_OscConfig+0x3d4>
9000aca4:	6a22      	ldr	r2, [r4, #32]
9000aca6:	2a20      	cmp	r2, #32
9000aca8:	f000 81bb 	beq.w	9000b022 <HAL_RCC_OscConfig+0x5b6>
9000acac:	490b      	ldr	r1, [pc, #44]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000acae:	684b      	ldr	r3, [r1, #4]
9000acb0:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000acb4:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000acb8:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000acba:	6823      	ldr	r3, [r4, #0]
9000acbc:	e745      	b.n	9000ab4a <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000acbe:	4a07      	ldr	r2, [pc, #28]	@ (9000acdc <HAL_RCC_OscConfig+0x270>)
9000acc0:	6813      	ldr	r3, [r2, #0]
9000acc2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000acc6:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000acc8:	e6f8      	b.n	9000aabc <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000acca:	4d05      	ldr	r5, [pc, #20]	@ (9000ace0 <HAL_RCC_OscConfig+0x274>)
9000accc:	682b      	ldr	r3, [r5, #0]
9000acce:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000acd2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000acd4:	f7fc fc38 	bl	90007548 <HAL_GetTick>
9000acd8:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000acda:	e008      	b.n	9000acee <HAL_RCC_OscConfig+0x282>
9000acdc:	58024400 	.word	0x58024400
9000ace0:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000ace4:	f7fc fc30 	bl	90007548 <HAL_GetTick>
9000ace8:	1b80      	subs	r0, r0, r6
9000acea:	2864      	cmp	r0, #100	@ 0x64
9000acec:	d83e      	bhi.n	9000ad6c <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000acee:	682b      	ldr	r3, [r5, #0]
9000acf0:	05da      	lsls	r2, r3, #23
9000acf2:	d5f7      	bpl.n	9000ace4 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000acf4:	68a3      	ldr	r3, [r4, #8]
9000acf6:	2b01      	cmp	r3, #1
9000acf8:	f000 818d 	beq.w	9000b016 <HAL_RCC_OscConfig+0x5aa>
9000acfc:	2b00      	cmp	r3, #0
9000acfe:	f000 8168 	beq.w	9000afd2 <HAL_RCC_OscConfig+0x566>
9000ad02:	2b05      	cmp	r3, #5
9000ad04:	4b85      	ldr	r3, [pc, #532]	@ (9000af1c <HAL_RCC_OscConfig+0x4b0>)
9000ad06:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ad08:	f000 8194 	beq.w	9000b034 <HAL_RCC_OscConfig+0x5c8>
9000ad0c:	f022 0201 	bic.w	r2, r2, #1
9000ad10:	671a      	str	r2, [r3, #112]	@ 0x70
9000ad12:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ad14:	f022 0204 	bic.w	r2, r2, #4
9000ad18:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000ad1a:	f7fc fc15 	bl	90007548 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ad1e:	4e7f      	ldr	r6, [pc, #508]	@ (9000af1c <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ad20:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000ad24:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ad26:	e004      	b.n	9000ad32 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ad28:	f7fc fc0e 	bl	90007548 <HAL_GetTick>
9000ad2c:	1b40      	subs	r0, r0, r5
9000ad2e:	42b8      	cmp	r0, r7
9000ad30:	d81c      	bhi.n	9000ad6c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ad32:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000ad34:	079b      	lsls	r3, r3, #30
9000ad36:	d5f7      	bpl.n	9000ad28 <HAL_RCC_OscConfig+0x2bc>
9000ad38:	e73c      	b.n	9000abb4 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000ad3a:	4d78      	ldr	r5, [pc, #480]	@ (9000af1c <HAL_RCC_OscConfig+0x4b0>)
9000ad3c:	692a      	ldr	r2, [r5, #16]
9000ad3e:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000ad42:	2a18      	cmp	r2, #24
9000ad44:	f000 80f0 	beq.w	9000af28 <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000ad48:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000ad4a:	682b      	ldr	r3, [r5, #0]
9000ad4c:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000ad50:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000ad52:	d07f      	beq.n	9000ae54 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000ad54:	f7fc fbf8 	bl	90007548 <HAL_GetTick>
9000ad58:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ad5a:	682b      	ldr	r3, [r5, #0]
9000ad5c:	019b      	lsls	r3, r3, #6
9000ad5e:	f57f af2d 	bpl.w	9000abbc <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ad62:	f7fc fbf1 	bl	90007548 <HAL_GetTick>
9000ad66:	1b00      	subs	r0, r0, r4
9000ad68:	2802      	cmp	r0, #2
9000ad6a:	d9f6      	bls.n	9000ad5a <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000ad6c:	2003      	movs	r0, #3
}
9000ad6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ad70:	4d6a      	ldr	r5, [pc, #424]	@ (9000af1c <HAL_RCC_OscConfig+0x4b0>)
9000ad72:	682b      	ldr	r3, [r5, #0]
9000ad74:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000ad78:	602b      	str	r3, [r5, #0]
9000ad7a:	682b      	ldr	r3, [r5, #0]
9000ad7c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000ad80:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ad82:	f7fc fbe1 	bl	90007548 <HAL_GetTick>
9000ad86:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000ad88:	e004      	b.n	9000ad94 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000ad8a:	f7fc fbdd 	bl	90007548 <HAL_GetTick>
9000ad8e:	1b80      	subs	r0, r0, r6
9000ad90:	2864      	cmp	r0, #100	@ 0x64
9000ad92:	d8eb      	bhi.n	9000ad6c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000ad94:	682b      	ldr	r3, [r5, #0]
9000ad96:	039f      	lsls	r7, r3, #14
9000ad98:	d4f7      	bmi.n	9000ad8a <HAL_RCC_OscConfig+0x31e>
9000ad9a:	e69d      	b.n	9000aad8 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000ad9c:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000ad9e:	f023 0301 	bic.w	r3, r3, #1
9000ada2:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000ada4:	f7fc fbd0 	bl	90007548 <HAL_GetTick>
9000ada8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000adaa:	e004      	b.n	9000adb6 <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000adac:	f7fc fbcc 	bl	90007548 <HAL_GetTick>
9000adb0:	1b80      	subs	r0, r0, r6
9000adb2:	2802      	cmp	r0, #2
9000adb4:	d8da      	bhi.n	9000ad6c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000adb6:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000adb8:	0799      	lsls	r1, r3, #30
9000adba:	d4f7      	bmi.n	9000adac <HAL_RCC_OscConfig+0x340>
9000adbc:	e6dd      	b.n	9000ab7a <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000adbe:	682b      	ldr	r3, [r5, #0]
9000adc0:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000adc4:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000adc6:	f7fc fbbf 	bl	90007548 <HAL_GetTick>
9000adca:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000adcc:	e004      	b.n	9000add8 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000adce:	f7fc fbbb 	bl	90007548 <HAL_GetTick>
9000add2:	1b80      	subs	r0, r0, r6
9000add4:	2802      	cmp	r0, #2
9000add6:	d8c9      	bhi.n	9000ad6c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000add8:	682b      	ldr	r3, [r5, #0]
9000adda:	0498      	lsls	r0, r3, #18
9000addc:	d4f7      	bmi.n	9000adce <HAL_RCC_OscConfig+0x362>
9000adde:	e6e5      	b.n	9000abac <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000ade0:	682b      	ldr	r3, [r5, #0]
9000ade2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000ade6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ade8:	f7fc fbae 	bl	90007548 <HAL_GetTick>
9000adec:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000adee:	e004      	b.n	9000adfa <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000adf0:	f7fc fbaa 	bl	90007548 <HAL_GetTick>
9000adf4:	1b80      	subs	r0, r0, r6
9000adf6:	2802      	cmp	r0, #2
9000adf8:	d8b8      	bhi.n	9000ad6c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000adfa:	682b      	ldr	r3, [r5, #0]
9000adfc:	05df      	lsls	r7, r3, #23
9000adfe:	d4f7      	bmi.n	9000adf0 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ae00:	6823      	ldr	r3, [r4, #0]
9000ae02:	e6a2      	b.n	9000ab4a <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000ae04:	f023 0301 	bic.w	r3, r3, #1
9000ae08:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ae0a:	f7fc fb9d 	bl	90007548 <HAL_GetTick>
9000ae0e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000ae10:	e004      	b.n	9000ae1c <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000ae12:	f7fc fb99 	bl	90007548 <HAL_GetTick>
9000ae16:	1b80      	subs	r0, r0, r6
9000ae18:	2802      	cmp	r0, #2
9000ae1a:	d8a7      	bhi.n	9000ad6c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000ae1c:	682b      	ldr	r3, [r5, #0]
9000ae1e:	0758      	lsls	r0, r3, #29
9000ae20:	d4f7      	bmi.n	9000ae12 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ae22:	6823      	ldr	r3, [r4, #0]
9000ae24:	e65b      	b.n	9000aade <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000ae26:	0790      	lsls	r0, r2, #30
9000ae28:	f47f af01 	bne.w	9000ac2e <HAL_RCC_OscConfig+0x1c2>
9000ae2c:	e6ce      	b.n	9000abcc <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000ae2e:	686b      	ldr	r3, [r5, #4]
9000ae30:	6922      	ldr	r2, [r4, #16]
9000ae32:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000ae36:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000ae3a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ae3c:	6823      	ldr	r3, [r4, #0]
9000ae3e:	e64e      	b.n	9000aade <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ae40:	4a36      	ldr	r2, [pc, #216]	@ (9000af1c <HAL_RCC_OscConfig+0x4b0>)
9000ae42:	6a21      	ldr	r1, [r4, #32]
9000ae44:	68d3      	ldr	r3, [r2, #12]
9000ae46:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000ae4a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000ae4e:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ae50:	6823      	ldr	r3, [r4, #0]
9000ae52:	e67a      	b.n	9000ab4a <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000ae54:	f7fc fb78 	bl	90007548 <HAL_GetTick>
9000ae58:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ae5a:	e004      	b.n	9000ae66 <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ae5c:	f7fc fb74 	bl	90007548 <HAL_GetTick>
9000ae60:	1b80      	subs	r0, r0, r6
9000ae62:	2802      	cmp	r0, #2
9000ae64:	d882      	bhi.n	9000ad6c <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ae66:	682b      	ldr	r3, [r5, #0]
9000ae68:	0199      	lsls	r1, r3, #6
9000ae6a:	d4f7      	bmi.n	9000ae5c <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000ae6c:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000ae6e:	4b2c      	ldr	r3, [pc, #176]	@ (9000af20 <HAL_RCC_OscConfig+0x4b4>)
9000ae70:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000ae72:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ae74:	492b      	ldr	r1, [pc, #172]	@ (9000af24 <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ae76:	4e29      	ldr	r6, [pc, #164]	@ (9000af1c <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000ae78:	4313      	orrs	r3, r2
9000ae7a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ae7c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000ae80:	62ab      	str	r3, [r5, #40]	@ 0x28
9000ae82:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000ae86:	3b01      	subs	r3, #1
9000ae88:	3a01      	subs	r2, #1
9000ae8a:	025b      	lsls	r3, r3, #9
9000ae8c:	0412      	lsls	r2, r2, #16
9000ae8e:	b29b      	uxth	r3, r3
9000ae90:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000ae94:	4313      	orrs	r3, r2
9000ae96:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000ae98:	3a01      	subs	r2, #1
9000ae9a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ae9e:	4313      	orrs	r3, r2
9000aea0:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000aea2:	3a01      	subs	r2, #1
9000aea4:	0612      	lsls	r2, r2, #24
9000aea6:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000aeaa:	4313      	orrs	r3, r2
9000aeac:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000aeae:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aeb0:	f023 0301 	bic.w	r3, r3, #1
9000aeb4:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000aeb6:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000aeb8:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000aeba:	4011      	ands	r1, r2
9000aebc:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000aec0:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000aec2:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aec4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000aec6:	f023 030c 	bic.w	r3, r3, #12
9000aeca:	4313      	orrs	r3, r2
9000aecc:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000aece:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aed0:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000aed2:	f023 0302 	bic.w	r3, r3, #2
9000aed6:	4313      	orrs	r3, r2
9000aed8:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000aeda:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aedc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000aee0:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000aee2:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aee4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000aee8:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000aeea:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aeec:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000aef0:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000aef2:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aef4:	f043 0301 	orr.w	r3, r3, #1
9000aef8:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000aefa:	682b      	ldr	r3, [r5, #0]
9000aefc:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000af00:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000af02:	f7fc fb21 	bl	90007548 <HAL_GetTick>
9000af06:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000af08:	6833      	ldr	r3, [r6, #0]
9000af0a:	019a      	lsls	r2, r3, #6
9000af0c:	f53f ae56 	bmi.w	9000abbc <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000af10:	f7fc fb1a 	bl	90007548 <HAL_GetTick>
9000af14:	1b00      	subs	r0, r0, r4
9000af16:	2802      	cmp	r0, #2
9000af18:	d9f6      	bls.n	9000af08 <HAL_RCC_OscConfig+0x49c>
9000af1a:	e727      	b.n	9000ad6c <HAL_RCC_OscConfig+0x300>
9000af1c:	58024400 	.word	0x58024400
9000af20:	fffffc0c 	.word	0xfffffc0c
9000af24:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000af28:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000af2a:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000af2c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000af2e:	f43f aea4 	beq.w	9000ac7a <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000af32:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000af36:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000af38:	428b      	cmp	r3, r1
9000af3a:	f47f ae9e 	bne.w	9000ac7a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000af3e:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000af42:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000af44:	429a      	cmp	r2, r3
9000af46:	f47f ae98 	bne.w	9000ac7a <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000af4a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000af4c:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000af50:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000af52:	429a      	cmp	r2, r3
9000af54:	f47f ae91 	bne.w	9000ac7a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000af58:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000af5a:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000af5e:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000af60:	429a      	cmp	r2, r3
9000af62:	f47f ae8a 	bne.w	9000ac7a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000af66:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000af68:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000af6c:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000af6e:	429a      	cmp	r2, r3
9000af70:	f47f ae83 	bne.w	9000ac7a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000af74:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000af76:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000af7a:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000af7c:	4298      	cmp	r0, r3
9000af7e:	f47f ae7c 	bne.w	9000ac7a <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000af82:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000af84:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000af86:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000af8a:	429a      	cmp	r2, r3
9000af8c:	f43f ae16 	beq.w	9000abbc <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000af90:	4a2d      	ldr	r2, [pc, #180]	@ (9000b048 <HAL_RCC_OscConfig+0x5dc>)
9000af92:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000af94:	f023 0301 	bic.w	r3, r3, #1
9000af98:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000af9a:	f7fc fad5 	bl	90007548 <HAL_GetTick>
9000af9e:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000afa0:	f7fc fad2 	bl	90007548 <HAL_GetTick>
9000afa4:	42a8      	cmp	r0, r5
9000afa6:	d0fb      	beq.n	9000afa0 <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000afa8:	4a27      	ldr	r2, [pc, #156]	@ (9000b048 <HAL_RCC_OscConfig+0x5dc>)
9000afaa:	4b28      	ldr	r3, [pc, #160]	@ (9000b04c <HAL_RCC_OscConfig+0x5e0>)
9000afac:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000afae:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000afb0:	4003      	ands	r3, r0
9000afb2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000afb6:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000afb8:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000afba:	f043 0301 	orr.w	r3, r3, #1
9000afbe:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000afc0:	e5fc      	b.n	9000abbc <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000afc2:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000afc6:	601a      	str	r2, [r3, #0]
9000afc8:	681a      	ldr	r2, [r3, #0]
9000afca:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000afce:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000afd0:	e574      	b.n	9000aabc <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000afd2:	4d1d      	ldr	r5, [pc, #116]	@ (9000b048 <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000afd4:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000afd8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000afda:	f023 0301 	bic.w	r3, r3, #1
9000afde:	672b      	str	r3, [r5, #112]	@ 0x70
9000afe0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000afe2:	f023 0304 	bic.w	r3, r3, #4
9000afe6:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000afe8:	f7fc faae 	bl	90007548 <HAL_GetTick>
9000afec:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000afee:	e005      	b.n	9000affc <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000aff0:	f7fc faaa 	bl	90007548 <HAL_GetTick>
9000aff4:	1b80      	subs	r0, r0, r6
9000aff6:	42b8      	cmp	r0, r7
9000aff8:	f63f aeb8 	bhi.w	9000ad6c <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000affc:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000affe:	0798      	lsls	r0, r3, #30
9000b000:	d4f6      	bmi.n	9000aff0 <HAL_RCC_OscConfig+0x584>
9000b002:	e5d7      	b.n	9000abb4 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b004:	68eb      	ldr	r3, [r5, #12]
9000b006:	6a22      	ldr	r2, [r4, #32]
9000b008:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000b00c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b010:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b012:	6823      	ldr	r3, [r4, #0]
9000b014:	e599      	b.n	9000ab4a <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b016:	4a0c      	ldr	r2, [pc, #48]	@ (9000b048 <HAL_RCC_OscConfig+0x5dc>)
9000b018:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000b01a:	f043 0301 	orr.w	r3, r3, #1
9000b01e:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b020:	e67b      	b.n	9000ad1a <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b022:	4a09      	ldr	r2, [pc, #36]	@ (9000b048 <HAL_RCC_OscConfig+0x5dc>)
9000b024:	6853      	ldr	r3, [r2, #4]
9000b026:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b02a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000b02e:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b030:	6823      	ldr	r3, [r4, #0]
9000b032:	e58a      	b.n	9000ab4a <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b034:	f042 0204 	orr.w	r2, r2, #4
9000b038:	671a      	str	r2, [r3, #112]	@ 0x70
9000b03a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b03c:	f042 0201 	orr.w	r2, r2, #1
9000b040:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b042:	e66a      	b.n	9000ad1a <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000b044:	2001      	movs	r0, #1
}
9000b046:	4770      	bx	lr
9000b048:	58024400 	.word	0x58024400
9000b04c:	ffff0007 	.word	0xffff0007

9000b050 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b050:	4a3f      	ldr	r2, [pc, #252]	@ (9000b150 <HAL_RCC_GetSysClockFreq+0x100>)
9000b052:	6913      	ldr	r3, [r2, #16]
9000b054:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b058:	2b10      	cmp	r3, #16
9000b05a:	d004      	beq.n	9000b066 <HAL_RCC_GetSysClockFreq+0x16>
9000b05c:	2b18      	cmp	r3, #24
9000b05e:	d00d      	beq.n	9000b07c <HAL_RCC_GetSysClockFreq+0x2c>
9000b060:	b11b      	cbz	r3, 9000b06a <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000b062:	483c      	ldr	r0, [pc, #240]	@ (9000b154 <HAL_RCC_GetSysClockFreq+0x104>)
9000b064:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b066:	483c      	ldr	r0, [pc, #240]	@ (9000b158 <HAL_RCC_GetSysClockFreq+0x108>)
9000b068:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b06a:	6813      	ldr	r3, [r2, #0]
9000b06c:	0699      	lsls	r1, r3, #26
9000b06e:	d548      	bpl.n	9000b102 <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b070:	6813      	ldr	r3, [r2, #0]
9000b072:	483a      	ldr	r0, [pc, #232]	@ (9000b15c <HAL_RCC_GetSysClockFreq+0x10c>)
9000b074:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b078:	40d8      	lsrs	r0, r3
9000b07a:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b07c:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000b07e:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b080:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b082:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000b084:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b088:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b08a:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b08e:	d036      	beq.n	9000b0fe <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b090:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b094:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b098:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b09c:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b0a0:	fb05 f303 	mul.w	r3, r5, r3
9000b0a4:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b0a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b0aa:	ee06 3a90 	vmov	s13, r3
9000b0ae:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000b0b2:	d002      	beq.n	9000b0ba <HAL_RCC_GetSysClockFreq+0x6a>
9000b0b4:	2902      	cmp	r1, #2
9000b0b6:	d026      	beq.n	9000b106 <HAL_RCC_GetSysClockFreq+0xb6>
9000b0b8:	b341      	cbz	r1, 9000b10c <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b0ba:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000b160 <HAL_RCC_GetSysClockFreq+0x110>
9000b0be:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000b0c2:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000b0c4:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b0c8:	ee07 3a10 	vmov	s14, r3
9000b0cc:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b0d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000b0d4:	ee37 7a26 	vadd.f32	s14, s14, s13
9000b0d8:	ee37 7a25 	vadd.f32	s14, s14, s11
9000b0dc:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b0e0:	4b1b      	ldr	r3, [pc, #108]	@ (9000b150 <HAL_RCC_GetSysClockFreq+0x100>)
9000b0e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b0e4:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b0e8:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b0ea:	ee07 3a90 	vmov	s15, r3
9000b0ee:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000b0f2:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000b0f6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000b0fa:	ee17 0a90 	vmov	r0, s15
}
9000b0fe:	bc30      	pop	{r4, r5}
9000b100:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b102:	4816      	ldr	r0, [pc, #88]	@ (9000b15c <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000b104:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b106:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000b164 <HAL_RCC_GetSysClockFreq+0x114>
9000b10a:	e7d8      	b.n	9000b0be <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b10c:	6813      	ldr	r3, [r2, #0]
9000b10e:	069b      	lsls	r3, r3, #26
9000b110:	d51a      	bpl.n	9000b148 <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b112:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b114:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b118:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b11a:	4910      	ldr	r1, [pc, #64]	@ (9000b15c <HAL_RCC_GetSysClockFreq+0x10c>)
9000b11c:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b120:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b124:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b126:	ee07 3a10 	vmov	s14, r3
9000b12a:	ee06 1a10 	vmov	s12, r1
9000b12e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000b132:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b136:	ee77 6a26 	vadd.f32	s13, s14, s13
9000b13a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000b13e:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000b142:	ee27 7a27 	vmul.f32	s14, s14, s15
9000b146:	e7cb      	b.n	9000b0e0 <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b148:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000b168 <HAL_RCC_GetSysClockFreq+0x118>
9000b14c:	e7b7      	b.n	9000b0be <HAL_RCC_GetSysClockFreq+0x6e>
9000b14e:	bf00      	nop
9000b150:	58024400 	.word	0x58024400
9000b154:	003d0900 	.word	0x003d0900
9000b158:	017d7840 	.word	0x017d7840
9000b15c:	03d09000 	.word	0x03d09000
9000b160:	4a742400 	.word	0x4a742400
9000b164:	4bbebc20 	.word	0x4bbebc20
9000b168:	4c742400 	.word	0x4c742400

9000b16c <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000b16c:	2800      	cmp	r0, #0
9000b16e:	f000 810e 	beq.w	9000b38e <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b172:	4a8d      	ldr	r2, [pc, #564]	@ (9000b3a8 <HAL_RCC_ClockConfig+0x23c>)
9000b174:	6813      	ldr	r3, [r2, #0]
9000b176:	f003 030f 	and.w	r3, r3, #15
9000b17a:	428b      	cmp	r3, r1
{
9000b17c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b180:	4604      	mov	r4, r0
9000b182:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b184:	d20c      	bcs.n	9000b1a0 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b186:	6813      	ldr	r3, [r2, #0]
9000b188:	f023 030f 	bic.w	r3, r3, #15
9000b18c:	430b      	orrs	r3, r1
9000b18e:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b190:	6813      	ldr	r3, [r2, #0]
9000b192:	f003 030f 	and.w	r3, r3, #15
9000b196:	428b      	cmp	r3, r1
9000b198:	d002      	beq.n	9000b1a0 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000b19a:	2001      	movs	r0, #1
}
9000b19c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b1a0:	6823      	ldr	r3, [r4, #0]
9000b1a2:	0758      	lsls	r0, r3, #29
9000b1a4:	d50b      	bpl.n	9000b1be <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b1a6:	4981      	ldr	r1, [pc, #516]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b1a8:	6920      	ldr	r0, [r4, #16]
9000b1aa:	698a      	ldr	r2, [r1, #24]
9000b1ac:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b1b0:	4290      	cmp	r0, r2
9000b1b2:	d904      	bls.n	9000b1be <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b1b4:	698a      	ldr	r2, [r1, #24]
9000b1b6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b1ba:	4302      	orrs	r2, r0
9000b1bc:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b1be:	0719      	lsls	r1, r3, #28
9000b1c0:	d50b      	bpl.n	9000b1da <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b1c2:	497a      	ldr	r1, [pc, #488]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b1c4:	6960      	ldr	r0, [r4, #20]
9000b1c6:	69ca      	ldr	r2, [r1, #28]
9000b1c8:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b1cc:	4290      	cmp	r0, r2
9000b1ce:	d904      	bls.n	9000b1da <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b1d0:	69ca      	ldr	r2, [r1, #28]
9000b1d2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b1d6:	4302      	orrs	r2, r0
9000b1d8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b1da:	06da      	lsls	r2, r3, #27
9000b1dc:	d50b      	bpl.n	9000b1f6 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b1de:	4973      	ldr	r1, [pc, #460]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b1e0:	69a0      	ldr	r0, [r4, #24]
9000b1e2:	69ca      	ldr	r2, [r1, #28]
9000b1e4:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b1e8:	4290      	cmp	r0, r2
9000b1ea:	d904      	bls.n	9000b1f6 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b1ec:	69ca      	ldr	r2, [r1, #28]
9000b1ee:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000b1f2:	4302      	orrs	r2, r0
9000b1f4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b1f6:	069f      	lsls	r7, r3, #26
9000b1f8:	d50b      	bpl.n	9000b212 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b1fa:	496c      	ldr	r1, [pc, #432]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b1fc:	69e0      	ldr	r0, [r4, #28]
9000b1fe:	6a0a      	ldr	r2, [r1, #32]
9000b200:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b204:	4290      	cmp	r0, r2
9000b206:	d904      	bls.n	9000b212 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b208:	6a0a      	ldr	r2, [r1, #32]
9000b20a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b20e:	4302      	orrs	r2, r0
9000b210:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b212:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b214:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b218:	f140 80ab 	bpl.w	9000b372 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b21c:	4e63      	ldr	r6, [pc, #396]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b21e:	68e0      	ldr	r0, [r4, #12]
9000b220:	69b1      	ldr	r1, [r6, #24]
9000b222:	f001 010f 	and.w	r1, r1, #15
9000b226:	4288      	cmp	r0, r1
9000b228:	d904      	bls.n	9000b234 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b22a:	69b1      	ldr	r1, [r6, #24]
9000b22c:	f021 010f 	bic.w	r1, r1, #15
9000b230:	4301      	orrs	r1, r0
9000b232:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b234:	2a00      	cmp	r2, #0
9000b236:	d030      	beq.n	9000b29a <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000b238:	4a5c      	ldr	r2, [pc, #368]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b23a:	68a1      	ldr	r1, [r4, #8]
9000b23c:	6993      	ldr	r3, [r2, #24]
9000b23e:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000b242:	430b      	orrs	r3, r1
9000b244:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b246:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b248:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b24a:	2902      	cmp	r1, #2
9000b24c:	f000 80a1 	beq.w	9000b392 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000b250:	2903      	cmp	r1, #3
9000b252:	f000 8098 	beq.w	9000b386 <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000b256:	2901      	cmp	r1, #1
9000b258:	f000 80a1 	beq.w	9000b39e <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b25c:	075f      	lsls	r7, r3, #29
9000b25e:	d59c      	bpl.n	9000b19a <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b260:	4e52      	ldr	r6, [pc, #328]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b262:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b266:	6933      	ldr	r3, [r6, #16]
9000b268:	f023 0307 	bic.w	r3, r3, #7
9000b26c:	430b      	orrs	r3, r1
9000b26e:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000b270:	f7fc f96a 	bl	90007548 <HAL_GetTick>
9000b274:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b276:	e005      	b.n	9000b284 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b278:	f7fc f966 	bl	90007548 <HAL_GetTick>
9000b27c:	1bc0      	subs	r0, r0, r7
9000b27e:	4540      	cmp	r0, r8
9000b280:	f200 808b 	bhi.w	9000b39a <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b284:	6933      	ldr	r3, [r6, #16]
9000b286:	6862      	ldr	r2, [r4, #4]
9000b288:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b28c:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000b290:	d1f2      	bne.n	9000b278 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b292:	6823      	ldr	r3, [r4, #0]
9000b294:	079e      	lsls	r6, r3, #30
9000b296:	d506      	bpl.n	9000b2a6 <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b298:	68e0      	ldr	r0, [r4, #12]
9000b29a:	4944      	ldr	r1, [pc, #272]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b29c:	698a      	ldr	r2, [r1, #24]
9000b29e:	f002 020f 	and.w	r2, r2, #15
9000b2a2:	4282      	cmp	r2, r0
9000b2a4:	d869      	bhi.n	9000b37a <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000b2a6:	4940      	ldr	r1, [pc, #256]	@ (9000b3a8 <HAL_RCC_ClockConfig+0x23c>)
9000b2a8:	680a      	ldr	r2, [r1, #0]
9000b2aa:	f002 020f 	and.w	r2, r2, #15
9000b2ae:	42aa      	cmp	r2, r5
9000b2b0:	d90a      	bls.n	9000b2c8 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b2b2:	680a      	ldr	r2, [r1, #0]
9000b2b4:	f022 020f 	bic.w	r2, r2, #15
9000b2b8:	432a      	orrs	r2, r5
9000b2ba:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b2bc:	680a      	ldr	r2, [r1, #0]
9000b2be:	f002 020f 	and.w	r2, r2, #15
9000b2c2:	42aa      	cmp	r2, r5
9000b2c4:	f47f af69 	bne.w	9000b19a <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b2c8:	0758      	lsls	r0, r3, #29
9000b2ca:	d50b      	bpl.n	9000b2e4 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b2cc:	4937      	ldr	r1, [pc, #220]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b2ce:	6920      	ldr	r0, [r4, #16]
9000b2d0:	698a      	ldr	r2, [r1, #24]
9000b2d2:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b2d6:	4290      	cmp	r0, r2
9000b2d8:	d204      	bcs.n	9000b2e4 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b2da:	698a      	ldr	r2, [r1, #24]
9000b2dc:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b2e0:	4302      	orrs	r2, r0
9000b2e2:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b2e4:	0719      	lsls	r1, r3, #28
9000b2e6:	d50b      	bpl.n	9000b300 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b2e8:	4930      	ldr	r1, [pc, #192]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b2ea:	6960      	ldr	r0, [r4, #20]
9000b2ec:	69ca      	ldr	r2, [r1, #28]
9000b2ee:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b2f2:	4290      	cmp	r0, r2
9000b2f4:	d204      	bcs.n	9000b300 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b2f6:	69ca      	ldr	r2, [r1, #28]
9000b2f8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b2fc:	4302      	orrs	r2, r0
9000b2fe:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b300:	06da      	lsls	r2, r3, #27
9000b302:	d50b      	bpl.n	9000b31c <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b304:	4929      	ldr	r1, [pc, #164]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b306:	69a0      	ldr	r0, [r4, #24]
9000b308:	69ca      	ldr	r2, [r1, #28]
9000b30a:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b30e:	4290      	cmp	r0, r2
9000b310:	d204      	bcs.n	9000b31c <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b312:	69ca      	ldr	r2, [r1, #28]
9000b314:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000b318:	4302      	orrs	r2, r0
9000b31a:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b31c:	069b      	lsls	r3, r3, #26
9000b31e:	d50b      	bpl.n	9000b338 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b320:	4a22      	ldr	r2, [pc, #136]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b322:	69e1      	ldr	r1, [r4, #28]
9000b324:	6a13      	ldr	r3, [r2, #32]
9000b326:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000b32a:	4299      	cmp	r1, r3
9000b32c:	d204      	bcs.n	9000b338 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b32e:	6a13      	ldr	r3, [r2, #32]
9000b330:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000b334:	430b      	orrs	r3, r1
9000b336:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b338:	f7ff fe8a 	bl	9000b050 <HAL_RCC_GetSysClockFreq>
9000b33c:	4a1b      	ldr	r2, [pc, #108]	@ (9000b3ac <HAL_RCC_ClockConfig+0x240>)
9000b33e:	4603      	mov	r3, r0
9000b340:	481b      	ldr	r0, [pc, #108]	@ (9000b3b0 <HAL_RCC_ClockConfig+0x244>)
9000b342:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b344:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b346:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000b34a:	4d1a      	ldr	r5, [pc, #104]	@ (9000b3b4 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b34c:	f002 020f 	and.w	r2, r2, #15
9000b350:	4c19      	ldr	r4, [pc, #100]	@ (9000b3b8 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b352:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b354:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b356:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000b35a:	4818      	ldr	r0, [pc, #96]	@ (9000b3bc <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b35c:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b360:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000b362:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000b364:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b366:	40d3      	lsrs	r3, r2
9000b368:	6023      	str	r3, [r4, #0]
}
9000b36a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000b36e:	f7f9 b963 	b.w	90004638 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b372:	2a00      	cmp	r2, #0
9000b374:	f47f af60 	bne.w	9000b238 <HAL_RCC_ClockConfig+0xcc>
9000b378:	e795      	b.n	9000b2a6 <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b37a:	698a      	ldr	r2, [r1, #24]
9000b37c:	f022 020f 	bic.w	r2, r2, #15
9000b380:	4302      	orrs	r2, r0
9000b382:	618a      	str	r2, [r1, #24]
9000b384:	e78f      	b.n	9000b2a6 <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b386:	019a      	lsls	r2, r3, #6
9000b388:	f53f af6a 	bmi.w	9000b260 <HAL_RCC_ClockConfig+0xf4>
9000b38c:	e705      	b.n	9000b19a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000b38e:	2001      	movs	r0, #1
}
9000b390:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b392:	0398      	lsls	r0, r3, #14
9000b394:	f53f af64 	bmi.w	9000b260 <HAL_RCC_ClockConfig+0xf4>
9000b398:	e6ff      	b.n	9000b19a <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000b39a:	2003      	movs	r0, #3
9000b39c:	e6fe      	b.n	9000b19c <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b39e:	05db      	lsls	r3, r3, #23
9000b3a0:	f53f af5e 	bmi.w	9000b260 <HAL_RCC_ClockConfig+0xf4>
9000b3a4:	e6f9      	b.n	9000b19a <HAL_RCC_ClockConfig+0x2e>
9000b3a6:	bf00      	nop
9000b3a8:	52002000 	.word	0x52002000
9000b3ac:	58024400 	.word	0x58024400
9000b3b0:	9002d328 	.word	0x9002d328
9000b3b4:	24000088 	.word	0x24000088
9000b3b8:	24000084 	.word	0x24000084
9000b3bc:	24000090 	.word	0x24000090

9000b3c0 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b3c0:	4a1c      	ldr	r2, [pc, #112]	@ (9000b434 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000b3c2:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b3c4:	6913      	ldr	r3, [r2, #16]
9000b3c6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b3ca:	2b10      	cmp	r3, #16
9000b3cc:	d020      	beq.n	9000b410 <HAL_RCC_GetPCLK1Freq+0x50>
9000b3ce:	2b18      	cmp	r3, #24
9000b3d0:	d029      	beq.n	9000b426 <HAL_RCC_GetPCLK1Freq+0x66>
9000b3d2:	b1fb      	cbz	r3, 9000b414 <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000b3d4:	4b18      	ldr	r3, [pc, #96]	@ (9000b438 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b3d6:	4a17      	ldr	r2, [pc, #92]	@ (9000b434 <HAL_RCC_GetPCLK1Freq+0x74>)
9000b3d8:	4918      	ldr	r1, [pc, #96]	@ (9000b43c <HAL_RCC_GetPCLK1Freq+0x7c>)
9000b3da:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b3dc:	4d18      	ldr	r5, [pc, #96]	@ (9000b440 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b3de:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b3e2:	4c18      	ldr	r4, [pc, #96]	@ (9000b444 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b3e4:	5c08      	ldrb	r0, [r1, r0]
9000b3e6:	f000 001f 	and.w	r0, r0, #31
9000b3ea:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b3ec:	6990      	ldr	r0, [r2, #24]
9000b3ee:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b3f2:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b3f4:	5c08      	ldrb	r0, [r1, r0]
9000b3f6:	f000 001f 	and.w	r0, r0, #31
9000b3fa:	40c3      	lsrs	r3, r0
9000b3fc:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000b3fe:	69d2      	ldr	r2, [r2, #28]
9000b400:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000b404:	5c88      	ldrb	r0, [r1, r2]
9000b406:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000b40a:	fa23 f000 	lsr.w	r0, r3, r0
9000b40e:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b410:	4b0d      	ldr	r3, [pc, #52]	@ (9000b448 <HAL_RCC_GetPCLK1Freq+0x88>)
9000b412:	e7e0      	b.n	9000b3d6 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b414:	6813      	ldr	r3, [r2, #0]
9000b416:	069b      	lsls	r3, r3, #26
9000b418:	d509      	bpl.n	9000b42e <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b41a:	6812      	ldr	r2, [r2, #0]
9000b41c:	4b0b      	ldr	r3, [pc, #44]	@ (9000b44c <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b41e:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b422:	40d3      	lsrs	r3, r2
9000b424:	e7d7      	b.n	9000b3d6 <HAL_RCC_GetPCLK1Freq+0x16>
9000b426:	f7ff faaf 	bl	9000a988 <HAL_RCC_GetSysClockFreq.part.0>
9000b42a:	4603      	mov	r3, r0
9000b42c:	e7d3      	b.n	9000b3d6 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b42e:	4b07      	ldr	r3, [pc, #28]	@ (9000b44c <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b430:	e7d1      	b.n	9000b3d6 <HAL_RCC_GetPCLK1Freq+0x16>
9000b432:	bf00      	nop
9000b434:	58024400 	.word	0x58024400
9000b438:	003d0900 	.word	0x003d0900
9000b43c:	9002d328 	.word	0x9002d328
9000b440:	24000088 	.word	0x24000088
9000b444:	24000084 	.word	0x24000084
9000b448:	017d7840 	.word	0x017d7840
9000b44c:	03d09000 	.word	0x03d09000

9000b450 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b450:	4a1c      	ldr	r2, [pc, #112]	@ (9000b4c4 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b452:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b454:	6913      	ldr	r3, [r2, #16]
9000b456:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b45a:	2b10      	cmp	r3, #16
9000b45c:	d020      	beq.n	9000b4a0 <HAL_RCC_GetPCLK2Freq+0x50>
9000b45e:	2b18      	cmp	r3, #24
9000b460:	d029      	beq.n	9000b4b6 <HAL_RCC_GetPCLK2Freq+0x66>
9000b462:	b1fb      	cbz	r3, 9000b4a4 <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000b464:	4b18      	ldr	r3, [pc, #96]	@ (9000b4c8 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b466:	4a17      	ldr	r2, [pc, #92]	@ (9000b4c4 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b468:	4918      	ldr	r1, [pc, #96]	@ (9000b4cc <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b46a:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b46c:	4d18      	ldr	r5, [pc, #96]	@ (9000b4d0 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b46e:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b472:	4c18      	ldr	r4, [pc, #96]	@ (9000b4d4 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b474:	5c08      	ldrb	r0, [r1, r0]
9000b476:	f000 001f 	and.w	r0, r0, #31
9000b47a:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b47c:	6990      	ldr	r0, [r2, #24]
9000b47e:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b482:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b484:	5c08      	ldrb	r0, [r1, r0]
9000b486:	f000 001f 	and.w	r0, r0, #31
9000b48a:	40c3      	lsrs	r3, r0
9000b48c:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b48e:	69d2      	ldr	r2, [r2, #28]
9000b490:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b494:	5c88      	ldrb	r0, [r1, r2]
9000b496:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b49a:	fa23 f000 	lsr.w	r0, r3, r0
9000b49e:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b4a0:	4b0d      	ldr	r3, [pc, #52]	@ (9000b4d8 <HAL_RCC_GetPCLK2Freq+0x88>)
9000b4a2:	e7e0      	b.n	9000b466 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b4a4:	6813      	ldr	r3, [r2, #0]
9000b4a6:	069b      	lsls	r3, r3, #26
9000b4a8:	d509      	bpl.n	9000b4be <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b4aa:	6812      	ldr	r2, [r2, #0]
9000b4ac:	4b0b      	ldr	r3, [pc, #44]	@ (9000b4dc <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b4ae:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b4b2:	40d3      	lsrs	r3, r2
9000b4b4:	e7d7      	b.n	9000b466 <HAL_RCC_GetPCLK2Freq+0x16>
9000b4b6:	f7ff fa67 	bl	9000a988 <HAL_RCC_GetSysClockFreq.part.0>
9000b4ba:	4603      	mov	r3, r0
9000b4bc:	e7d3      	b.n	9000b466 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b4be:	4b07      	ldr	r3, [pc, #28]	@ (9000b4dc <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b4c0:	e7d1      	b.n	9000b466 <HAL_RCC_GetPCLK2Freq+0x16>
9000b4c2:	bf00      	nop
9000b4c4:	58024400 	.word	0x58024400
9000b4c8:	003d0900 	.word	0x003d0900
9000b4cc:	9002d328 	.word	0x9002d328
9000b4d0:	24000088 	.word	0x24000088
9000b4d4:	24000084 	.word	0x24000084
9000b4d8:	017d7840 	.word	0x017d7840
9000b4dc:	03d09000 	.word	0x03d09000

9000b4e0 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b4e0:	4b13      	ldr	r3, [pc, #76]	@ (9000b530 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b4e2:	223f      	movs	r2, #63	@ 0x3f
9000b4e4:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b4e6:	691a      	ldr	r2, [r3, #16]
9000b4e8:	f002 0207 	and.w	r2, r2, #7
9000b4ec:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b4ee:	699a      	ldr	r2, [r3, #24]
9000b4f0:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000b4f4:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b4f6:	699a      	ldr	r2, [r3, #24]
9000b4f8:	f002 020f 	and.w	r2, r2, #15
9000b4fc:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b4fe:	699a      	ldr	r2, [r3, #24]
9000b500:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b504:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b506:	69da      	ldr	r2, [r3, #28]
9000b508:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b50c:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b50e:	69da      	ldr	r2, [r3, #28]
9000b510:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b514:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b516:	6a1b      	ldr	r3, [r3, #32]
{
9000b518:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b51a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b51e:	4c05      	ldr	r4, [pc, #20]	@ (9000b534 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b520:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b522:	6823      	ldr	r3, [r4, #0]
}
9000b524:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b528:	f003 030f 	and.w	r3, r3, #15
9000b52c:	600b      	str	r3, [r1, #0]
}
9000b52e:	4770      	bx	lr
9000b530:	58024400 	.word	0x58024400
9000b534:	52002000 	.word	0x52002000

9000b538 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b53a:	4c36      	ldr	r4, [pc, #216]	@ (9000b614 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b53c:	4606      	mov	r6, r0
9000b53e:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000b540:	6823      	ldr	r3, [r4, #0]
9000b542:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000b546:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b548:	f7fb fffe 	bl	90007548 <HAL_GetTick>
9000b54c:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b54e:	e004      	b.n	9000b55a <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b550:	f7fb fffa 	bl	90007548 <HAL_GetTick>
9000b554:	1b40      	subs	r0, r0, r5
9000b556:	2802      	cmp	r0, #2
9000b558:	d856      	bhi.n	9000b608 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b55a:	6823      	ldr	r3, [r4, #0]
9000b55c:	011a      	lsls	r2, r3, #4
9000b55e:	d4f7      	bmi.n	9000b550 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b560:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b562:	6832      	ldr	r2, [r6, #0]
9000b564:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b568:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b56c:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b56e:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b572:	3b01      	subs	r3, #1
9000b574:	3a01      	subs	r2, #1
9000b576:	025b      	lsls	r3, r3, #9
9000b578:	0412      	lsls	r2, r2, #16
9000b57a:	b29b      	uxth	r3, r3
9000b57c:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b580:	4313      	orrs	r3, r2
9000b582:	6872      	ldr	r2, [r6, #4]
9000b584:	3a01      	subs	r2, #1
9000b586:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b58a:	4313      	orrs	r3, r2
9000b58c:	6932      	ldr	r2, [r6, #16]
9000b58e:	3a01      	subs	r2, #1
9000b590:	0612      	lsls	r2, r2, #24
9000b592:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b596:	4313      	orrs	r3, r2
9000b598:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b59a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b59c:	6972      	ldr	r2, [r6, #20]
9000b59e:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000b5a2:	4313      	orrs	r3, r2
9000b5a4:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b5a6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b5a8:	69b3      	ldr	r3, [r6, #24]
9000b5aa:	f022 0220 	bic.w	r2, r2, #32
9000b5ae:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b5b0:	4b19      	ldr	r3, [pc, #100]	@ (9000b618 <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b5b2:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b5b4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b5b6:	f022 0210 	bic.w	r2, r2, #16
9000b5ba:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b5bc:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000b5be:	69f2      	ldr	r2, [r6, #28]
9000b5c0:	400b      	ands	r3, r1
9000b5c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b5c6:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b5c8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b5ca:	f043 0310 	orr.w	r3, r3, #16
9000b5ce:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b5d0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b5d2:	b1df      	cbz	r7, 9000b60c <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b5d4:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000b5d6:	bf0c      	ite	eq
9000b5d8:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000b5dc:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000b5e0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000b5e2:	4c0c      	ldr	r4, [pc, #48]	@ (9000b614 <RCCEx_PLL2_Config.part.0+0xdc>)
9000b5e4:	6823      	ldr	r3, [r4, #0]
9000b5e6:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000b5ea:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b5ec:	f7fb ffac 	bl	90007548 <HAL_GetTick>
9000b5f0:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b5f2:	e004      	b.n	9000b5fe <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b5f4:	f7fb ffa8 	bl	90007548 <HAL_GetTick>
9000b5f8:	1b40      	subs	r0, r0, r5
9000b5fa:	2802      	cmp	r0, #2
9000b5fc:	d804      	bhi.n	9000b608 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b5fe:	6823      	ldr	r3, [r4, #0]
9000b600:	011b      	lsls	r3, r3, #4
9000b602:	d5f7      	bpl.n	9000b5f4 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000b604:	2000      	movs	r0, #0
}
9000b606:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b608:	2003      	movs	r0, #3
}
9000b60a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b60c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000b610:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b612:	e7e6      	b.n	9000b5e2 <RCCEx_PLL2_Config.part.0+0xaa>
9000b614:	58024400 	.word	0x58024400
9000b618:	ffff0007 	.word	0xffff0007

9000b61c <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b61c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000b61e:	4c36      	ldr	r4, [pc, #216]	@ (9000b6f8 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b620:	4606      	mov	r6, r0
9000b622:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000b624:	6823      	ldr	r3, [r4, #0]
9000b626:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000b62a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b62c:	f7fb ff8c 	bl	90007548 <HAL_GetTick>
9000b630:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b632:	e004      	b.n	9000b63e <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b634:	f7fb ff88 	bl	90007548 <HAL_GetTick>
9000b638:	1b40      	subs	r0, r0, r5
9000b63a:	2802      	cmp	r0, #2
9000b63c:	d856      	bhi.n	9000b6ec <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b63e:	6823      	ldr	r3, [r4, #0]
9000b640:	009a      	lsls	r2, r3, #2
9000b642:	d4f7      	bmi.n	9000b634 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000b644:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b646:	6832      	ldr	r2, [r6, #0]
9000b648:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000b64c:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000b650:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b652:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b656:	3b01      	subs	r3, #1
9000b658:	3a01      	subs	r2, #1
9000b65a:	025b      	lsls	r3, r3, #9
9000b65c:	0412      	lsls	r2, r2, #16
9000b65e:	b29b      	uxth	r3, r3
9000b660:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b664:	4313      	orrs	r3, r2
9000b666:	6872      	ldr	r2, [r6, #4]
9000b668:	3a01      	subs	r2, #1
9000b66a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b66e:	4313      	orrs	r3, r2
9000b670:	6932      	ldr	r2, [r6, #16]
9000b672:	3a01      	subs	r2, #1
9000b674:	0612      	lsls	r2, r2, #24
9000b676:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b67a:	4313      	orrs	r3, r2
9000b67c:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000b67e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b680:	6972      	ldr	r2, [r6, #20]
9000b682:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000b686:	4313      	orrs	r3, r2
9000b688:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b68a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b68c:	69b3      	ldr	r3, [r6, #24]
9000b68e:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000b692:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b694:	4b19      	ldr	r3, [pc, #100]	@ (9000b6fc <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b696:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000b698:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b69a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000b69e:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b6a0:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000b6a2:	69f2      	ldr	r2, [r6, #28]
9000b6a4:	400b      	ands	r3, r1
9000b6a6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b6aa:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000b6ac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b6ae:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b6b2:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b6b4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b6b6:	b1df      	cbz	r7, 9000b6f0 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b6b8:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000b6ba:	bf0c      	ite	eq
9000b6bc:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000b6c0:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000b6c4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000b6c6:	4c0c      	ldr	r4, [pc, #48]	@ (9000b6f8 <RCCEx_PLL3_Config.part.0+0xdc>)
9000b6c8:	6823      	ldr	r3, [r4, #0]
9000b6ca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000b6ce:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b6d0:	f7fb ff3a 	bl	90007548 <HAL_GetTick>
9000b6d4:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b6d6:	e004      	b.n	9000b6e2 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b6d8:	f7fb ff36 	bl	90007548 <HAL_GetTick>
9000b6dc:	1b40      	subs	r0, r0, r5
9000b6de:	2802      	cmp	r0, #2
9000b6e0:	d804      	bhi.n	9000b6ec <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b6e2:	6823      	ldr	r3, [r4, #0]
9000b6e4:	009b      	lsls	r3, r3, #2
9000b6e6:	d5f7      	bpl.n	9000b6d8 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000b6e8:	2000      	movs	r0, #0
}
9000b6ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b6ec:	2003      	movs	r0, #3
}
9000b6ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b6f0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000b6f4:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b6f6:	e7e6      	b.n	9000b6c6 <RCCEx_PLL3_Config.part.0+0xaa>
9000b6f8:	58024400 	.word	0x58024400
9000b6fc:	ffff0007 	.word	0xffff0007

9000b700 <HAL_RCCEx_PeriphCLKConfig>:
{
9000b700:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b704:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000b708:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b70a:	011d      	lsls	r5, r3, #4
9000b70c:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000b710:	d525      	bpl.n	9000b75e <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b712:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000b714:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b718:	f000 8660 	beq.w	9000c3dc <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000b71c:	d814      	bhi.n	9000b748 <HAL_RCCEx_PeriphCLKConfig+0x48>
9000b71e:	2900      	cmp	r1, #0
9000b720:	f000 86fa 	beq.w	9000c518 <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000b724:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b728:	f040 8466 	bne.w	9000bff8 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b72c:	49ad      	ldr	r1, [pc, #692]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b72e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b730:	f001 0103 	and.w	r1, r1, #3
9000b734:	2903      	cmp	r1, #3
9000b736:	f000 845f 	beq.w	9000bff8 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000b73a:	2102      	movs	r1, #2
9000b73c:	3008      	adds	r0, #8
9000b73e:	f7ff fefb 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000b742:	4606      	mov	r6, r0
        break;
9000b744:	f000 be56 	b.w	9000c3f4 <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b748:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000b74c:	f040 8454 	bne.w	9000bff8 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b750:	4da4      	ldr	r5, [pc, #656]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000b752:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b754:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000b756:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000b75a:	4301      	orrs	r1, r0
9000b75c:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b75e:	05d8      	lsls	r0, r3, #23
9000b760:	d50a      	bpl.n	9000b778 <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000b762:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000b764:	2904      	cmp	r1, #4
9000b766:	d806      	bhi.n	9000b776 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000b768:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b76c:	064c04a8 	.word	0x064c04a8
9000b770:	04ad0661 	.word	0x04ad0661
9000b774:	04ad      	.short	0x04ad
9000b776:	2601      	movs	r6, #1
9000b778:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000b77a:	0599      	lsls	r1, r3, #22
9000b77c:	d524      	bpl.n	9000b7c8 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000b77e:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000b780:	2980      	cmp	r1, #128	@ 0x80
9000b782:	f000 8664 	beq.w	9000c44e <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000b786:	f200 8122 	bhi.w	9000b9ce <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000b78a:	2900      	cmp	r1, #0
9000b78c:	f000 84ac 	beq.w	9000c0e8 <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000b790:	2940      	cmp	r1, #64	@ 0x40
9000b792:	f040 8123 	bne.w	9000b9dc <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b796:	4993      	ldr	r1, [pc, #588]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b798:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b79a:	f001 0103 	and.w	r1, r1, #3
9000b79e:	2903      	cmp	r1, #3
9000b7a0:	f000 811c 	beq.w	9000b9dc <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000b7a4:	2100      	movs	r1, #0
9000b7a6:	f104 0008 	add.w	r0, r4, #8
9000b7aa:	f7ff fec5 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000b7ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b7b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b7b4:	2d00      	cmp	r5, #0
9000b7b6:	f040 851b 	bne.w	9000c1f0 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000b7ba:	4f8a      	ldr	r7, [pc, #552]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b7bc:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000b7be:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b7c0:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000b7c4:	4301      	orrs	r1, r0
9000b7c6:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b7c8:	055f      	lsls	r7, r3, #21
9000b7ca:	d528      	bpl.n	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000b7cc:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000b7d0:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000b7d4:	f000 864f 	beq.w	9000c476 <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000b7d8:	f200 8106 	bhi.w	9000b9e8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000b7dc:	2900      	cmp	r1, #0
9000b7de:	f000 8463 	beq.w	9000c0a8 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000b7e2:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b7e6:	f040 8107 	bne.w	9000b9f8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b7ea:	497e      	ldr	r1, [pc, #504]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b7ec:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b7ee:	f001 0103 	and.w	r1, r1, #3
9000b7f2:	2903      	cmp	r1, #3
9000b7f4:	f000 8100 	beq.w	9000b9f8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000b7f8:	2100      	movs	r1, #0
9000b7fa:	f104 0008 	add.w	r0, r4, #8
9000b7fe:	f7ff fe9b 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000b802:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b804:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b808:	2d00      	cmp	r5, #0
9000b80a:	f040 84f4 	bne.w	9000c1f6 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000b80e:	4f75      	ldr	r7, [pc, #468]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b810:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000b814:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b816:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000b81a:	4301      	orrs	r1, r0
9000b81c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b81e:	0518      	lsls	r0, r3, #20
9000b820:	d528      	bpl.n	9000b874 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b822:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000b826:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000b82a:	f000 85ac 	beq.w	9000c386 <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000b82e:	f200 80e6 	bhi.w	9000b9fe <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000b832:	2900      	cmp	r1, #0
9000b834:	f000 8425 	beq.w	9000c082 <HAL_RCCEx_PeriphCLKConfig+0x982>
9000b838:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000b83c:	f040 80e7 	bne.w	9000ba0e <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b840:	4968      	ldr	r1, [pc, #416]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b842:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b844:	f001 0103 	and.w	r1, r1, #3
9000b848:	2903      	cmp	r1, #3
9000b84a:	f000 80e0 	beq.w	9000ba0e <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000b84e:	2100      	movs	r1, #0
9000b850:	f104 0008 	add.w	r0, r4, #8
9000b854:	f7ff fe70 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000b858:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b85a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b85e:	2d00      	cmp	r5, #0
9000b860:	f040 84cc 	bne.w	9000c1fc <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000b864:	4f5f      	ldr	r7, [pc, #380]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b866:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000b86a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b86c:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000b870:	4301      	orrs	r1, r0
9000b872:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b874:	0199      	lsls	r1, r3, #6
9000b876:	d518      	bpl.n	9000b8aa <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000b878:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000b87a:	2920      	cmp	r1, #32
9000b87c:	f000 84ff 	beq.w	9000c27e <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000b880:	f200 80c8 	bhi.w	9000ba14 <HAL_RCCEx_PeriphCLKConfig+0x314>
9000b884:	b139      	cbz	r1, 9000b896 <HAL_RCCEx_PeriphCLKConfig+0x196>
9000b886:	2910      	cmp	r1, #16
9000b888:	f040 80c7 	bne.w	9000ba1a <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b88c:	4855      	ldr	r0, [pc, #340]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b88e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b890:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b894:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b896:	2d00      	cmp	r5, #0
9000b898:	f040 849f 	bne.w	9000c1da <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000b89c:	4f51      	ldr	r7, [pc, #324]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b89e:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000b8a0:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b8a2:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000b8a6:	4301      	orrs	r1, r0
9000b8a8:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000b8aa:	04df      	lsls	r7, r3, #19
9000b8ac:	d526      	bpl.n	9000b8fc <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b8ae:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000b8b0:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b8b4:	f000 857b 	beq.w	9000c3ae <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000b8b8:	f200 80b2 	bhi.w	9000ba20 <HAL_RCCEx_PeriphCLKConfig+0x320>
9000b8bc:	2900      	cmp	r1, #0
9000b8be:	f000 83ea 	beq.w	9000c096 <HAL_RCCEx_PeriphCLKConfig+0x996>
9000b8c2:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000b8c6:	f040 80b3 	bne.w	9000ba30 <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b8ca:	4946      	ldr	r1, [pc, #280]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b8cc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b8ce:	f001 0103 	and.w	r1, r1, #3
9000b8d2:	2903      	cmp	r1, #3
9000b8d4:	f000 80ac 	beq.w	9000ba30 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000b8d8:	2100      	movs	r1, #0
9000b8da:	f104 0008 	add.w	r0, r4, #8
9000b8de:	f7ff fe2b 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000b8e2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b8e4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b8e8:	2d00      	cmp	r5, #0
9000b8ea:	f040 848a 	bne.w	9000c202 <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000b8ee:	4f3d      	ldr	r7, [pc, #244]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b8f0:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000b8f2:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b8f4:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000b8f8:	4301      	orrs	r1, r0
9000b8fa:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b8fc:	0498      	lsls	r0, r3, #18
9000b8fe:	d524      	bpl.n	9000b94a <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b900:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000b902:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b906:	f000 8516 	beq.w	9000c336 <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000b90a:	f200 8094 	bhi.w	9000ba36 <HAL_RCCEx_PeriphCLKConfig+0x336>
9000b90e:	b191      	cbz	r1, 9000b936 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000b910:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b914:	f040 8099 	bne.w	9000ba4a <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b918:	4932      	ldr	r1, [pc, #200]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b91a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b91c:	f001 0103 	and.w	r1, r1, #3
9000b920:	2903      	cmp	r1, #3
9000b922:	f000 8092 	beq.w	9000ba4a <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000b926:	2101      	movs	r1, #1
9000b928:	f104 0008 	add.w	r0, r4, #8
9000b92c:	f7ff fe04 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000b930:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b932:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b936:	2d00      	cmp	r5, #0
9000b938:	f040 8476 	bne.w	9000c228 <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000b93c:	4f29      	ldr	r7, [pc, #164]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b93e:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000b940:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b942:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000b946:	4301      	orrs	r1, r0
9000b948:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b94a:	0459      	lsls	r1, r3, #17
9000b94c:	d523      	bpl.n	9000b996 <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b94e:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000b952:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b956:	f000 8502 	beq.w	9000c35e <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000b95a:	d879      	bhi.n	9000ba50 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000b95c:	b181      	cbz	r1, 9000b980 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000b95e:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b962:	d17d      	bne.n	9000ba60 <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b964:	491f      	ldr	r1, [pc, #124]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b966:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b968:	f001 0103 	and.w	r1, r1, #3
9000b96c:	2903      	cmp	r1, #3
9000b96e:	d077      	beq.n	9000ba60 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000b970:	2101      	movs	r1, #1
9000b972:	f104 0008 	add.w	r0, r4, #8
9000b976:	f7ff fddf 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000b97a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b97c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b980:	2d00      	cmp	r5, #0
9000b982:	f040 8454 	bne.w	9000c22e <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000b986:	4f17      	ldr	r7, [pc, #92]	@ (9000b9e4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b988:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000b98c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b98e:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b992:	4301      	orrs	r1, r0
9000b994:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b996:	041f      	lsls	r7, r3, #16
9000b998:	d50d      	bpl.n	9000b9b6 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000b99a:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000b99c:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b9a0:	f000 82e2 	beq.w	9000bf68 <HAL_RCCEx_PeriphCLKConfig+0x868>
9000b9a4:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b9a8:	f000 83f0 	beq.w	9000c18c <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000b9ac:	2900      	cmp	r1, #0
9000b9ae:	f000 82e0 	beq.w	9000bf72 <HAL_RCCEx_PeriphCLKConfig+0x872>
9000b9b2:	2601      	movs	r6, #1
9000b9b4:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000b9b6:	01d8      	lsls	r0, r3, #7
9000b9b8:	d55e      	bpl.n	9000ba78 <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000b9ba:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000b9bc:	2903      	cmp	r1, #3
9000b9be:	f200 85cd 	bhi.w	9000c55c <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000b9c2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b9c6:	0055      	.short	0x0055
9000b9c8:	04930050 	.word	0x04930050
9000b9cc:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000b9ce:	29c0      	cmp	r1, #192	@ 0xc0
9000b9d0:	f43f aef0 	beq.w	9000b7b4 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000b9d4:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000b9d8:	f43f aeec 	beq.w	9000b7b4 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000b9dc:	2601      	movs	r6, #1
9000b9de:	4635      	mov	r5, r6
9000b9e0:	e6f2      	b.n	9000b7c8 <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000b9e2:	bf00      	nop
9000b9e4:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000b9e8:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000b9ec:	f43f af0c 	beq.w	9000b808 <HAL_RCCEx_PeriphCLKConfig+0x108>
9000b9f0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000b9f4:	f43f af08 	beq.w	9000b808 <HAL_RCCEx_PeriphCLKConfig+0x108>
9000b9f8:	2601      	movs	r6, #1
9000b9fa:	4635      	mov	r5, r6
9000b9fc:	e70f      	b.n	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b9fe:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000ba02:	f43f af2c 	beq.w	9000b85e <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000ba06:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000ba0a:	f43f af28 	beq.w	9000b85e <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000ba0e:	2601      	movs	r6, #1
9000ba10:	4635      	mov	r5, r6
9000ba12:	e72f      	b.n	9000b874 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000ba14:	2930      	cmp	r1, #48	@ 0x30
9000ba16:	f43f af3e 	beq.w	9000b896 <HAL_RCCEx_PeriphCLKConfig+0x196>
9000ba1a:	2601      	movs	r6, #1
9000ba1c:	4635      	mov	r5, r6
9000ba1e:	e744      	b.n	9000b8aa <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000ba20:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000ba24:	f43f af60 	beq.w	9000b8e8 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000ba28:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000ba2c:	f43f af5c 	beq.w	9000b8e8 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000ba30:	2601      	movs	r6, #1
9000ba32:	4635      	mov	r5, r6
9000ba34:	e762      	b.n	9000b8fc <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000ba36:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000ba3a:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000ba3e:	f43f af7a 	beq.w	9000b936 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000ba42:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000ba46:	f43f af76 	beq.w	9000b936 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000ba4a:	2601      	movs	r6, #1
9000ba4c:	4635      	mov	r5, r6
9000ba4e:	e77c      	b.n	9000b94a <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000ba50:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000ba54:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000ba58:	d092      	beq.n	9000b980 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000ba5a:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000ba5e:	d08f      	beq.n	9000b980 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000ba60:	2601      	movs	r6, #1
9000ba62:	4635      	mov	r5, r6
9000ba64:	e797      	b.n	9000b996 <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ba66:	4837      	ldr	r0, [pc, #220]	@ (9000bb44 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000ba68:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000ba6a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000ba6e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000ba70:	2d00      	cmp	r5, #0
9000ba72:	f000 83b5 	beq.w	9000c1e0 <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000ba76:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000ba78:	0259      	lsls	r1, r3, #9
9000ba7a:	f100 82c0 	bmi.w	9000bffe <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ba7e:	07df      	lsls	r7, r3, #31
9000ba80:	d52f      	bpl.n	9000bae2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000ba82:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000ba84:	2928      	cmp	r1, #40	@ 0x28
9000ba86:	d82a      	bhi.n	9000bade <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000ba88:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ba8c:	002902ab 	.word	0x002902ab
9000ba90:	00290029 	.word	0x00290029
9000ba94:	00290029 	.word	0x00290029
9000ba98:	00290029 	.word	0x00290029
9000ba9c:	0029029c 	.word	0x0029029c
9000baa0:	00290029 	.word	0x00290029
9000baa4:	00290029 	.word	0x00290029
9000baa8:	00290029 	.word	0x00290029
9000baac:	0029052d 	.word	0x0029052d
9000bab0:	00290029 	.word	0x00290029
9000bab4:	00290029 	.word	0x00290029
9000bab8:	00290029 	.word	0x00290029
9000babc:	002902ab 	.word	0x002902ab
9000bac0:	00290029 	.word	0x00290029
9000bac4:	00290029 	.word	0x00290029
9000bac8:	00290029 	.word	0x00290029
9000bacc:	002902ab 	.word	0x002902ab
9000bad0:	00290029 	.word	0x00290029
9000bad4:	00290029 	.word	0x00290029
9000bad8:	00290029 	.word	0x00290029
9000badc:	02ab      	.short	0x02ab
9000bade:	2601      	movs	r6, #1
9000bae0:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bae2:	0798      	lsls	r0, r3, #30
9000bae4:	d51e      	bpl.n	9000bb24 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000bae6:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000bae8:	2905      	cmp	r1, #5
9000baea:	f200 851c 	bhi.w	9000c526 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000baee:	e8df f011 	tbh	[pc, r1, lsl #1]
9000baf2:	0015      	.short	0x0015
9000baf4:	04e80006 	.word	0x04e80006
9000baf8:	00150015 	.word	0x00150015
9000bafc:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bafe:	4911      	ldr	r1, [pc, #68]	@ (9000bb44 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000bb00:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb02:	f001 0103 	and.w	r1, r1, #3
9000bb06:	2903      	cmp	r1, #3
9000bb08:	f000 850d 	beq.w	9000c526 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000bb0c:	2101      	movs	r1, #1
9000bb0e:	f104 0008 	add.w	r0, r4, #8
9000bb12:	f7ff fd11 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000bb16:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bb18:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb1c:	2d00      	cmp	r5, #0
9000bb1e:	f000 837b 	beq.w	9000c218 <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000bb22:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bb24:	0759      	lsls	r1, r3, #29
9000bb26:	d522      	bpl.n	9000bb6e <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000bb28:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000bb2c:	2905      	cmp	r1, #5
9000bb2e:	f200 84fe 	bhi.w	9000c52e <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000bb32:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bb36:	0018      	.short	0x0018
9000bb38:	04b40009 	.word	0x04b40009
9000bb3c:	00180018 	.word	0x00180018
9000bb40:	0018      	.short	0x0018
9000bb42:	bf00      	nop
9000bb44:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb48:	49b0      	ldr	r1, [pc, #704]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bb4a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb4c:	f001 0103 	and.w	r1, r1, #3
9000bb50:	2903      	cmp	r1, #3
9000bb52:	f000 84ec 	beq.w	9000c52e <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000bb56:	2101      	movs	r1, #1
9000bb58:	f104 0008 	add.w	r0, r4, #8
9000bb5c:	f7ff fcec 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000bb60:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bb62:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb66:	2d00      	cmp	r5, #0
9000bb68:	f000 8364 	beq.w	9000c234 <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000bb6c:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bb6e:	069f      	lsls	r7, r3, #26
9000bb70:	d526      	bpl.n	9000bbc0 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bb72:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000bb76:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000bb7a:	f000 836e 	beq.w	9000c25a <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000bb7e:	f200 8194 	bhi.w	9000beaa <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000bb82:	b191      	cbz	r1, 9000bbaa <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000bb84:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000bb88:	f040 8199 	bne.w	9000bebe <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb8c:	499f      	ldr	r1, [pc, #636]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bb8e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb90:	f001 0103 	and.w	r1, r1, #3
9000bb94:	2903      	cmp	r1, #3
9000bb96:	f000 8192 	beq.w	9000bebe <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000bb9a:	2100      	movs	r1, #0
9000bb9c:	f104 0008 	add.w	r0, r4, #8
9000bba0:	f7ff fcca 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000bba4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bba6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bbaa:	2d00      	cmp	r5, #0
9000bbac:	f040 834b 	bne.w	9000c246 <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000bbb0:	4f96      	ldr	r7, [pc, #600]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bbb2:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000bbb6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bbb8:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000bbbc:	4301      	orrs	r1, r0
9000bbbe:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bbc0:	0658      	lsls	r0, r3, #25
9000bbc2:	d526      	bpl.n	9000bc12 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000bbc4:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000bbc8:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000bbcc:	f000 83a1 	beq.w	9000c312 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000bbd0:	f200 8178 	bhi.w	9000bec4 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000bbd4:	b191      	cbz	r1, 9000bbfc <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000bbd6:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000bbda:	f040 817d 	bne.w	9000bed8 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bbde:	498b      	ldr	r1, [pc, #556]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bbe0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bbe2:	f001 0103 	and.w	r1, r1, #3
9000bbe6:	2903      	cmp	r1, #3
9000bbe8:	f000 8176 	beq.w	9000bed8 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000bbec:	2100      	movs	r1, #0
9000bbee:	f104 0008 	add.w	r0, r4, #8
9000bbf2:	f7ff fca1 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000bbf6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bbf8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bbfc:	2d00      	cmp	r5, #0
9000bbfe:	f040 8328 	bne.w	9000c252 <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000bc02:	4f82      	ldr	r7, [pc, #520]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bc04:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000bc08:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bc0a:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000bc0e:	4301      	orrs	r1, r0
9000bc10:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bc12:	0619      	lsls	r1, r3, #24
9000bc14:	d526      	bpl.n	9000bc64 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000bc16:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000bc1a:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000bc1e:	f000 8353 	beq.w	9000c2c8 <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000bc22:	f200 815c 	bhi.w	9000bede <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000bc26:	b191      	cbz	r1, 9000bc4e <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000bc28:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000bc2c:	f040 8161 	bne.w	9000bef2 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc30:	4976      	ldr	r1, [pc, #472]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bc32:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc34:	f001 0103 	and.w	r1, r1, #3
9000bc38:	2903      	cmp	r1, #3
9000bc3a:	f000 815a 	beq.w	9000bef2 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000bc3e:	2100      	movs	r1, #0
9000bc40:	f104 0008 	add.w	r0, r4, #8
9000bc44:	f7ff fc78 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000bc48:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bc4a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc4e:	2d00      	cmp	r5, #0
9000bc50:	f040 82fb 	bne.w	9000c24a <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000bc54:	4f6d      	ldr	r7, [pc, #436]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bc56:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000bc5a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bc5c:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000bc60:	4301      	orrs	r1, r0
9000bc62:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bc64:	071f      	lsls	r7, r3, #28
9000bc66:	d50b      	bpl.n	9000bc80 <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000bc68:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000bc6c:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000bc70:	f000 8250 	beq.w	9000c114 <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000bc74:	4f65      	ldr	r7, [pc, #404]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bc76:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bc78:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000bc7c:	4301      	orrs	r1, r0
9000bc7e:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000bc80:	06d8      	lsls	r0, r3, #27
9000bc82:	d50b      	bpl.n	9000bc9c <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000bc84:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000bc88:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000bc8c:	f000 8257 	beq.w	9000c13e <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000bc90:	4f5e      	ldr	r7, [pc, #376]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bc92:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bc94:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000bc98:	4301      	orrs	r1, r0
9000bc9a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000bc9c:	0319      	lsls	r1, r3, #12
9000bc9e:	d50e      	bpl.n	9000bcbe <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000bca0:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000bca4:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000bca8:	f000 816e 	beq.w	9000bf88 <HAL_RCCEx_PeriphCLKConfig+0x888>
9000bcac:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000bcb0:	f000 8179 	beq.w	9000bfa6 <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000bcb4:	2900      	cmp	r1, #0
9000bcb6:	f000 827a 	beq.w	9000c1ae <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000bcba:	2601      	movs	r6, #1
9000bcbc:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bcbe:	035f      	lsls	r7, r3, #13
9000bcc0:	d50f      	bpl.n	9000bce2 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000bcc2:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000bcc6:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000bcca:	f000 82eb 	beq.w	9000c2a4 <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000bcce:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000bcd2:	f000 813d 	beq.w	9000bf50 <HAL_RCCEx_PeriphCLKConfig+0x850>
9000bcd6:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000bcda:	f000 8134 	beq.w	9000bf46 <HAL_RCCEx_PeriphCLKConfig+0x846>
9000bcde:	2601      	movs	r6, #1
9000bce0:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000bce2:	03d8      	lsls	r0, r3, #15
9000bce4:	d520      	bpl.n	9000bd28 <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000bce6:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000bce8:	2900      	cmp	r1, #0
9000bcea:	f000 8245 	beq.w	9000c178 <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000bcee:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000bcf2:	f040 8125 	bne.w	9000bf40 <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bcf6:	4945      	ldr	r1, [pc, #276]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bcf8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bcfa:	f001 0103 	and.w	r1, r1, #3
9000bcfe:	2903      	cmp	r1, #3
9000bd00:	f000 811e 	beq.w	9000bf40 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000bd04:	2102      	movs	r1, #2
9000bd06:	f104 0008 	add.w	r0, r4, #8
9000bd0a:	f7ff fc15 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000bd0e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000bd10:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd14:	2d00      	cmp	r5, #0
9000bd16:	f040 8237 	bne.w	9000c188 <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000bd1a:	4f3c      	ldr	r7, [pc, #240]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bd1c:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000bd1e:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000bd20:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000bd24:	4301      	orrs	r1, r0
9000bd26:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000bd28:	0099      	lsls	r1, r3, #2
9000bd2a:	d50e      	bpl.n	9000bd4a <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd2c:	4937      	ldr	r1, [pc, #220]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bd2e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd30:	f001 0103 	and.w	r1, r1, #3
9000bd34:	2903      	cmp	r1, #3
9000bd36:	d007      	beq.n	9000bd48 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000bd38:	2102      	movs	r1, #2
9000bd3a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd3e:	f7ff fc6d 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000bd42:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bd46:	b100      	cbz	r0, 9000bd4a <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000bd48:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000bd4a:	039f      	lsls	r7, r3, #14
9000bd4c:	f140 80e0 	bpl.w	9000bf10 <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000bd50:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000bd54:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000bd58:	f000 8205 	beq.w	9000c166 <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000bd5c:	f240 80cc 	bls.w	9000bef8 <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000bd60:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000bd64:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000bd68:	f000 80c9 	beq.w	9000befe <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000bd6c:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000bd6e:	02d8      	lsls	r0, r3, #11
9000bd70:	d506      	bpl.n	9000bd80 <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000bd72:	4826      	ldr	r0, [pc, #152]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bd74:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000bd76:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000bd78:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000bd7c:	4331      	orrs	r1, r6
9000bd7e:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000bd80:	00d9      	lsls	r1, r3, #3
9000bd82:	d507      	bpl.n	9000bd94 <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000bd84:	4821      	ldr	r0, [pc, #132]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bd86:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000bd8a:	6901      	ldr	r1, [r0, #16]
9000bd8c:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000bd90:	4331      	orrs	r1, r6
9000bd92:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000bd94:	029f      	lsls	r7, r3, #10
9000bd96:	d506      	bpl.n	9000bda6 <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000bd98:	481c      	ldr	r0, [pc, #112]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bd9a:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000bd9c:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000bd9e:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000bda2:	4331      	orrs	r1, r6
9000bda4:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000bda6:	005e      	lsls	r6, r3, #1
9000bda8:	d509      	bpl.n	9000bdbe <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000bdaa:	4918      	ldr	r1, [pc, #96]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bdac:	6908      	ldr	r0, [r1, #16]
9000bdae:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000bdb2:	6108      	str	r0, [r1, #16]
9000bdb4:	6908      	ldr	r0, [r1, #16]
9000bdb6:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000bdba:	4330      	orrs	r0, r6
9000bdbc:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000bdbe:	2b00      	cmp	r3, #0
9000bdc0:	da06      	bge.n	9000bdd0 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000bdc2:	4812      	ldr	r0, [pc, #72]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bdc4:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000bdc6:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000bdc8:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000bdcc:	4331      	orrs	r1, r6
9000bdce:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000bdd0:	0218      	lsls	r0, r3, #8
9000bdd2:	d507      	bpl.n	9000bde4 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000bdd4:	490d      	ldr	r1, [pc, #52]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bdd6:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000bdda:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000bddc:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000bde0:	4303      	orrs	r3, r0
9000bde2:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000bde4:	07d1      	lsls	r1, r2, #31
9000bde6:	d513      	bpl.n	9000be10 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bde8:	4b08      	ldr	r3, [pc, #32]	@ (9000be0c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bdea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000bdec:	f003 0303 	and.w	r3, r3, #3
9000bdf0:	2b03      	cmp	r3, #3
9000bdf2:	f000 818d 	beq.w	9000c110 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000bdf6:	2100      	movs	r1, #0
9000bdf8:	f104 0008 	add.w	r0, r4, #8
9000bdfc:	f7ff fb9c 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000be00:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000be02:	2800      	cmp	r0, #0
9000be04:	f040 8204 	bne.w	9000c210 <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000be08:	e002      	b.n	9000be10 <HAL_RCCEx_PeriphCLKConfig+0x710>
9000be0a:	bf00      	nop
9000be0c:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000be10:	0793      	lsls	r3, r2, #30
9000be12:	d50f      	bpl.n	9000be34 <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be14:	4bb2      	ldr	r3, [pc, #712]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000be16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000be18:	f003 0303 	and.w	r3, r3, #3
9000be1c:	2b03      	cmp	r3, #3
9000be1e:	f000 816c 	beq.w	9000c0fa <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000be22:	2101      	movs	r1, #1
9000be24:	f104 0008 	add.w	r0, r4, #8
9000be28:	f7ff fb86 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000be2c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000be2e:	2800      	cmp	r0, #0
9000be30:	f040 81f0 	bne.w	9000c214 <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000be34:	0757      	lsls	r7, r2, #29
9000be36:	d50f      	bpl.n	9000be58 <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be38:	4ba9      	ldr	r3, [pc, #676]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000be3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000be3c:	f003 0303 	and.w	r3, r3, #3
9000be40:	2b03      	cmp	r3, #3
9000be42:	f000 815c 	beq.w	9000c0fe <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000be46:	2102      	movs	r1, #2
9000be48:	f104 0008 	add.w	r0, r4, #8
9000be4c:	f7ff fb74 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000be50:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000be52:	2800      	cmp	r0, #0
9000be54:	f040 81d8 	bne.w	9000c208 <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000be58:	0716      	lsls	r6, r2, #28
9000be5a:	d50f      	bpl.n	9000be7c <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be5c:	4ba0      	ldr	r3, [pc, #640]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000be5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000be60:	f003 0303 	and.w	r3, r3, #3
9000be64:	2b03      	cmp	r3, #3
9000be66:	f000 814c 	beq.w	9000c102 <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000be6a:	2100      	movs	r1, #0
9000be6c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be70:	f7ff fbd4 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000be74:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000be76:	2800      	cmp	r0, #0
9000be78:	f040 81c8 	bne.w	9000c20c <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000be7c:	06d0      	lsls	r0, r2, #27
9000be7e:	d54a      	bpl.n	9000bf16 <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be80:	4b97      	ldr	r3, [pc, #604]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000be82:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000be88:	f003 0303 	and.w	r3, r3, #3
9000be8c:	2b03      	cmp	r3, #3
9000be8e:	f000 813a 	beq.w	9000c106 <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000be92:	2101      	movs	r1, #1
9000be94:	4630      	mov	r0, r6
9000be96:	f7ff fbc1 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000be9a:	2800      	cmp	r0, #0
9000be9c:	d03a      	beq.n	9000bf14 <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000be9e:	6863      	ldr	r3, [r4, #4]
9000bea0:	069a      	lsls	r2, r3, #26
9000bea2:	f140 808c 	bpl.w	9000bfbe <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000bea6:	4605      	mov	r5, r0
9000bea8:	e039      	b.n	9000bf1e <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000beaa:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000beae:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000beb2:	f43f ae7a 	beq.w	9000bbaa <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000beb6:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000beba:	f43f ae76 	beq.w	9000bbaa <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000bebe:	2601      	movs	r6, #1
9000bec0:	4635      	mov	r5, r6
9000bec2:	e67d      	b.n	9000bbc0 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000bec4:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000bec8:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000becc:	f43f ae96 	beq.w	9000bbfc <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000bed0:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000bed4:	f43f ae92 	beq.w	9000bbfc <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000bed8:	2601      	movs	r6, #1
9000beda:	4635      	mov	r5, r6
9000bedc:	e699      	b.n	9000bc12 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000bede:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000bee2:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000bee6:	f43f aeb2 	beq.w	9000bc4e <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000beea:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000beee:	f43f aeae 	beq.w	9000bc4e <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000bef2:	2601      	movs	r6, #1
9000bef4:	4635      	mov	r5, r6
9000bef6:	e6b5      	b.n	9000bc64 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000bef8:	2900      	cmp	r1, #0
9000befa:	f47f af37 	bne.w	9000bd6c <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000befe:	2d00      	cmp	r5, #0
9000bf00:	f47f af35 	bne.w	9000bd6e <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000bf04:	4d76      	ldr	r5, [pc, #472]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bf06:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000bf08:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000bf0c:	4301      	orrs	r1, r0
9000bf0e:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000bf10:	4635      	mov	r5, r6
9000bf12:	e72c      	b.n	9000bd6e <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000bf14:	6862      	ldr	r2, [r4, #4]
9000bf16:	0693      	lsls	r3, r2, #26
9000bf18:	d50d      	bpl.n	9000bf36 <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000bf1a:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf1e:	4b70      	ldr	r3, [pc, #448]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bf20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000bf22:	f003 0303 	and.w	r3, r3, #3
9000bf26:	2b03      	cmp	r3, #3
9000bf28:	d049      	beq.n	9000bfbe <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000bf2a:	2102      	movs	r1, #2
9000bf2c:	4630      	mov	r0, r6
9000bf2e:	f7ff fb75 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000bf32:	2800      	cmp	r0, #0
9000bf34:	d143      	bne.n	9000bfbe <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000bf36:	1e28      	subs	r0, r5, #0
9000bf38:	bf18      	it	ne
9000bf3a:	2001      	movne	r0, #1
}
9000bf3c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000bf40:	2601      	movs	r6, #1
9000bf42:	4635      	mov	r5, r6
9000bf44:	e6f0      	b.n	9000bd28 <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf46:	4866      	ldr	r0, [pc, #408]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bf48:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bf4a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bf4e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bf50:	2d00      	cmp	r5, #0
9000bf52:	f040 8140 	bne.w	9000c1d6 <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000bf56:	4f62      	ldr	r7, [pc, #392]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bf58:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000bf5c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bf5e:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000bf62:	4301      	orrs	r1, r0
9000bf64:	6579      	str	r1, [r7, #84]	@ 0x54
9000bf66:	e6bc      	b.n	9000bce2 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf68:	485d      	ldr	r0, [pc, #372]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bf6a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bf6c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bf70:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bf72:	2d00      	cmp	r5, #0
9000bf74:	f040 812c 	bne.w	9000c1d0 <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000bf78:	4f59      	ldr	r7, [pc, #356]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bf7a:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000bf7c:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bf7e:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000bf82:	4301      	orrs	r1, r0
9000bf84:	6539      	str	r1, [r7, #80]	@ 0x50
9000bf86:	e516      	b.n	9000b9b6 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf88:	4955      	ldr	r1, [pc, #340]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bf8a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf8c:	f001 0103 	and.w	r1, r1, #3
9000bf90:	2903      	cmp	r1, #3
9000bf92:	f43f ae92 	beq.w	9000bcba <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000bf96:	2102      	movs	r1, #2
9000bf98:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf9c:	f7ff fb3e 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000bfa0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bfa2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfa6:	2d00      	cmp	r5, #0
9000bfa8:	f040 8151 	bne.w	9000c24e <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000bfac:	4f4c      	ldr	r7, [pc, #304]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bfae:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000bfb2:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bfb4:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000bfb8:	4301      	orrs	r1, r0
9000bfba:	65b9      	str	r1, [r7, #88]	@ 0x58
9000bfbc:	e67f      	b.n	9000bcbe <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000bfbe:	2001      	movs	r0, #1
}
9000bfc0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bfc4:	4946      	ldr	r1, [pc, #280]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bfc6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bfc8:	f001 0103 	and.w	r1, r1, #3
9000bfcc:	2903      	cmp	r1, #3
9000bfce:	f43f ad86 	beq.w	9000bade <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000bfd2:	2101      	movs	r1, #1
9000bfd4:	f104 0008 	add.w	r0, r4, #8
9000bfd8:	f7ff faae 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000bfdc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bfde:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfe2:	2d00      	cmp	r5, #0
9000bfe4:	f040 8137 	bne.w	9000c256 <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000bfe8:	4f3d      	ldr	r7, [pc, #244]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bfea:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000bfec:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bfee:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000bff2:	4301      	orrs	r1, r0
9000bff4:	6579      	str	r1, [r7, #84]	@ 0x54
9000bff6:	e574      	b.n	9000bae2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000bff8:	2601      	movs	r6, #1
9000bffa:	f7ff bbb0 	b.w	9000b75e <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000bffe:	4f39      	ldr	r7, [pc, #228]	@ (9000c0e4 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000c000:	683b      	ldr	r3, [r7, #0]
9000c002:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000c006:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000c008:	f7fb fa9e 	bl	90007548 <HAL_GetTick>
9000c00c:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c00e:	e006      	b.n	9000c01e <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c010:	f7fb fa9a 	bl	90007548 <HAL_GetTick>
9000c014:	eba0 0008 	sub.w	r0, r0, r8
9000c018:	2864      	cmp	r0, #100	@ 0x64
9000c01a:	f200 8277 	bhi.w	9000c50c <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c01e:	683b      	ldr	r3, [r7, #0]
9000c020:	05da      	lsls	r2, r3, #23
9000c022:	d5f5      	bpl.n	9000c010 <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000c024:	2d00      	cmp	r5, #0
9000c026:	f040 8272 	bne.w	9000c50e <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000c02a:	4a2d      	ldr	r2, [pc, #180]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c02c:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c030:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000c032:	4059      	eors	r1, r3
9000c034:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000c038:	d00b      	beq.n	9000c052 <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c03a:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000c03c:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c03e:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000c042:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000c046:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000c048:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000c04a:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000c04e:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000c050:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000c052:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000c056:	f000 8285 	beq.w	9000c564 <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c05a:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000c05e:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000c062:	f000 8293 	beq.w	9000c58c <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000c066:	491e      	ldr	r1, [pc, #120]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c068:	690a      	ldr	r2, [r1, #16]
9000c06a:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000c06e:	610a      	str	r2, [r1, #16]
9000c070:	481b      	ldr	r0, [pc, #108]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c072:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000c076:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000c078:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c07a:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c07e:	6701      	str	r1, [r0, #112]	@ 0x70
9000c080:	e4fd      	b.n	9000ba7e <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c082:	4817      	ldr	r0, [pc, #92]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c084:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c086:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c08a:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c08c:	2d00      	cmp	r5, #0
9000c08e:	f040 80b5 	bne.w	9000c1fc <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000c092:	f7ff bbe7 	b.w	9000b864 <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c096:	4812      	ldr	r0, [pc, #72]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c098:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c09a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c09e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c0a0:	2d00      	cmp	r5, #0
9000c0a2:	f040 80ae 	bne.w	9000c202 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000c0a6:	e422      	b.n	9000b8ee <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c0a8:	480d      	ldr	r0, [pc, #52]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c0aa:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c0ac:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c0b0:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c0b2:	2d00      	cmp	r5, #0
9000c0b4:	f040 809f 	bne.w	9000c1f6 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000c0b8:	f7ff bba9 	b.w	9000b80e <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c0bc:	4808      	ldr	r0, [pc, #32]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c0be:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c0c0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c0c4:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000c0c6:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000c0c8:	2d00      	cmp	r5, #0
9000c0ca:	f040 81ad 	bne.w	9000c428 <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000c0ce:	4f04      	ldr	r7, [pc, #16]	@ (9000c0e0 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c0d0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000c0d2:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c0d4:	f021 0107 	bic.w	r1, r1, #7
9000c0d8:	4301      	orrs	r1, r0
9000c0da:	6539      	str	r1, [r7, #80]	@ 0x50
9000c0dc:	f7ff bb4d 	b.w	9000b77a <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000c0e0:	58024400 	.word	0x58024400
9000c0e4:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c0e8:	48bb      	ldr	r0, [pc, #748]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c0ea:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c0ec:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c0f0:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c0f2:	2d00      	cmp	r5, #0
9000c0f4:	d17c      	bne.n	9000c1f0 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000c0f6:	f7ff bb60 	b.w	9000b7ba <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000c0fa:	2501      	movs	r5, #1
9000c0fc:	e69a      	b.n	9000be34 <HAL_RCCEx_PeriphCLKConfig+0x734>
9000c0fe:	2501      	movs	r5, #1
9000c100:	e6aa      	b.n	9000be58 <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000c102:	2501      	movs	r5, #1
9000c104:	e6ba      	b.n	9000be7c <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c106:	0691      	lsls	r1, r2, #26
9000c108:	f57f af59 	bpl.w	9000bfbe <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000c10c:	2501      	movs	r5, #1
9000c10e:	e706      	b.n	9000bf1e <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000c110:	2501      	movs	r5, #1
9000c112:	e67d      	b.n	9000be10 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c114:	49b0      	ldr	r1, [pc, #704]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c116:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c118:	f001 0103 	and.w	r1, r1, #3
9000c11c:	2903      	cmp	r1, #3
9000c11e:	f000 820a 	beq.w	9000c536 <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000c122:	2102      	movs	r1, #2
9000c124:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c128:	f7ff fa78 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c12c:	2800      	cmp	r0, #0
9000c12e:	f000 820f 	beq.w	9000c550 <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c132:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000c136:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c138:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c13c:	e59a      	b.n	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c13e:	49a6      	ldr	r1, [pc, #664]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c140:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c142:	f001 0103 	and.w	r1, r1, #3
9000c146:	2903      	cmp	r1, #3
9000c148:	f000 81f8 	beq.w	9000c53c <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000c14c:	2102      	movs	r1, #2
9000c14e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c152:	f7ff fa63 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c156:	2800      	cmp	r0, #0
9000c158:	f040 81f3 	bne.w	9000c542 <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c15c:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c160:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c164:	e594      	b.n	9000bc90 <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c166:	4f9c      	ldr	r7, [pc, #624]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c168:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000c16a:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000c16e:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c170:	2d00      	cmp	r5, #0
9000c172:	f47f adfc 	bne.w	9000bd6e <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000c176:	e6c5      	b.n	9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c178:	4897      	ldr	r0, [pc, #604]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c17a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c17c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c180:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c182:	2d00      	cmp	r5, #0
9000c184:	f43f adc9 	beq.w	9000bd1a <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000c188:	462e      	mov	r6, r5
9000c18a:	e5cd      	b.n	9000bd28 <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c18c:	4992      	ldr	r1, [pc, #584]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c18e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c190:	f001 0103 	and.w	r1, r1, #3
9000c194:	2903      	cmp	r1, #3
9000c196:	f43f ac0c 	beq.w	9000b9b2 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000c19a:	2101      	movs	r1, #1
9000c19c:	f104 0008 	add.w	r0, r4, #8
9000c1a0:	f7ff f9ca 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000c1a4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c1a6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c1aa:	b98d      	cbnz	r5, 9000c1d0 <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000c1ac:	e6e4      	b.n	9000bf78 <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c1ae:	488a      	ldr	r0, [pc, #552]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c1b0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000c1b2:	f000 0003 	and.w	r0, r0, #3
9000c1b6:	2803      	cmp	r0, #3
9000c1b8:	f43f ad7f 	beq.w	9000bcba <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000c1bc:	f104 0008 	add.w	r0, r4, #8
9000c1c0:	f7ff f9ba 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000c1c4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c1c6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c1ca:	2d00      	cmp	r5, #0
9000c1cc:	d13f      	bne.n	9000c24e <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000c1ce:	e6ed      	b.n	9000bfac <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000c1d0:	462e      	mov	r6, r5
9000c1d2:	f7ff bbf0 	b.w	9000b9b6 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000c1d6:	462e      	mov	r6, r5
9000c1d8:	e583      	b.n	9000bce2 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000c1da:	462e      	mov	r6, r5
9000c1dc:	f7ff bb65 	b.w	9000b8aa <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000c1e0:	4f7d      	ldr	r7, [pc, #500]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c1e2:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000c1e4:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c1e6:	f021 0103 	bic.w	r1, r1, #3
9000c1ea:	4301      	orrs	r1, r0
9000c1ec:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000c1ee:	e443      	b.n	9000ba78 <HAL_RCCEx_PeriphCLKConfig+0x378>
9000c1f0:	462e      	mov	r6, r5
9000c1f2:	f7ff bae9 	b.w	9000b7c8 <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000c1f6:	462e      	mov	r6, r5
9000c1f8:	f7ff bb11 	b.w	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000c1fc:	462e      	mov	r6, r5
9000c1fe:	f7ff bb39 	b.w	9000b874 <HAL_RCCEx_PeriphCLKConfig+0x174>
9000c202:	462e      	mov	r6, r5
9000c204:	f7ff bb7a 	b.w	9000b8fc <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c208:	4605      	mov	r5, r0
9000c20a:	e625      	b.n	9000be58 <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c20c:	4605      	mov	r5, r0
9000c20e:	e635      	b.n	9000be7c <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c210:	4605      	mov	r5, r0
9000c212:	e5fd      	b.n	9000be10 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c214:	4605      	mov	r5, r0
9000c216:	e60d      	b.n	9000be34 <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000c218:	4f6f      	ldr	r7, [pc, #444]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c21a:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000c21c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c21e:	f021 0107 	bic.w	r1, r1, #7
9000c222:	4301      	orrs	r1, r0
9000c224:	6579      	str	r1, [r7, #84]	@ 0x54
9000c226:	e47d      	b.n	9000bb24 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000c228:	462e      	mov	r6, r5
9000c22a:	f7ff bb8e 	b.w	9000b94a <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000c22e:	462e      	mov	r6, r5
9000c230:	f7ff bbb1 	b.w	9000b996 <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000c234:	4f68      	ldr	r7, [pc, #416]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c236:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000c23a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c23c:	f021 0107 	bic.w	r1, r1, #7
9000c240:	4301      	orrs	r1, r0
9000c242:	65b9      	str	r1, [r7, #88]	@ 0x58
9000c244:	e493      	b.n	9000bb6e <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000c246:	462e      	mov	r6, r5
9000c248:	e4ba      	b.n	9000bbc0 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000c24a:	462e      	mov	r6, r5
9000c24c:	e50a      	b.n	9000bc64 <HAL_RCCEx_PeriphCLKConfig+0x564>
9000c24e:	462e      	mov	r6, r5
9000c250:	e535      	b.n	9000bcbe <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000c252:	462e      	mov	r6, r5
9000c254:	e4dd      	b.n	9000bc12 <HAL_RCCEx_PeriphCLKConfig+0x512>
9000c256:	462e      	mov	r6, r5
9000c258:	e443      	b.n	9000bae2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c25a:	495f      	ldr	r1, [pc, #380]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c25c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c25e:	f001 0103 	and.w	r1, r1, #3
9000c262:	2903      	cmp	r1, #3
9000c264:	f43f ae2b 	beq.w	9000bebe <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000c268:	2102      	movs	r1, #2
9000c26a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c26e:	f7ff f9d5 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c272:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c274:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c278:	2d00      	cmp	r5, #0
9000c27a:	d1e4      	bne.n	9000c246 <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000c27c:	e498      	b.n	9000bbb0 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c27e:	4956      	ldr	r1, [pc, #344]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c280:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c282:	f001 0103 	and.w	r1, r1, #3
9000c286:	2903      	cmp	r1, #3
9000c288:	f43f abc7 	beq.w	9000ba1a <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000c28c:	2102      	movs	r1, #2
9000c28e:	f104 0008 	add.w	r0, r4, #8
9000c292:	f7ff f951 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000c296:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c298:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c29c:	2d00      	cmp	r5, #0
9000c29e:	d19c      	bne.n	9000c1da <HAL_RCCEx_PeriphCLKConfig+0xada>
9000c2a0:	f7ff bafc 	b.w	9000b89c <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c2a4:	494c      	ldr	r1, [pc, #304]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c2a6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c2a8:	f001 0103 	and.w	r1, r1, #3
9000c2ac:	2903      	cmp	r1, #3
9000c2ae:	f43f ad16 	beq.w	9000bcde <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000c2b2:	2101      	movs	r1, #1
9000c2b4:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c2b8:	f7ff f9b0 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c2bc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c2be:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c2c2:	2d00      	cmp	r5, #0
9000c2c4:	d187      	bne.n	9000c1d6 <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000c2c6:	e646      	b.n	9000bf56 <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c2c8:	4943      	ldr	r1, [pc, #268]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c2ca:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c2cc:	f001 0103 	and.w	r1, r1, #3
9000c2d0:	2903      	cmp	r1, #3
9000c2d2:	f43f ae0e 	beq.w	9000bef2 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000c2d6:	2102      	movs	r1, #2
9000c2d8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c2dc:	f7ff f99e 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c2e0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c2e2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c2e6:	2d00      	cmp	r5, #0
9000c2e8:	d1af      	bne.n	9000c24a <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000c2ea:	e4b3      	b.n	9000bc54 <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c2ec:	493a      	ldr	r1, [pc, #232]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c2ee:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c2f0:	f001 0103 	and.w	r1, r1, #3
9000c2f4:	2903      	cmp	r1, #3
9000c2f6:	f000 8131 	beq.w	9000c55c <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000c2fa:	2102      	movs	r1, #2
9000c2fc:	f104 0008 	add.w	r0, r4, #8
9000c300:	f7ff f91a 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000c304:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c306:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c30a:	2d00      	cmp	r5, #0
9000c30c:	f47f abb3 	bne.w	9000ba76 <HAL_RCCEx_PeriphCLKConfig+0x376>
9000c310:	e766      	b.n	9000c1e0 <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c312:	4931      	ldr	r1, [pc, #196]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c314:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c316:	f001 0103 	and.w	r1, r1, #3
9000c31a:	2903      	cmp	r1, #3
9000c31c:	f43f addc 	beq.w	9000bed8 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000c320:	2102      	movs	r1, #2
9000c322:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c326:	f7ff f979 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c32a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c32c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c330:	2d00      	cmp	r5, #0
9000c332:	d18e      	bne.n	9000c252 <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000c334:	e465      	b.n	9000bc02 <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c336:	4928      	ldr	r1, [pc, #160]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c338:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c33a:	f001 0103 	and.w	r1, r1, #3
9000c33e:	2903      	cmp	r1, #3
9000c340:	f43f ab83 	beq.w	9000ba4a <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000c344:	2101      	movs	r1, #1
9000c346:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c34a:	f7ff f967 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c34e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c350:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c354:	2d00      	cmp	r5, #0
9000c356:	f47f af67 	bne.w	9000c228 <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000c35a:	f7ff baef 	b.w	9000b93c <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c35e:	491e      	ldr	r1, [pc, #120]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c360:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c362:	f001 0103 	and.w	r1, r1, #3
9000c366:	2903      	cmp	r1, #3
9000c368:	f43f ab7a 	beq.w	9000ba60 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000c36c:	2101      	movs	r1, #1
9000c36e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c372:	f7ff f953 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c376:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c378:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c37c:	2d00      	cmp	r5, #0
9000c37e:	f47f af56 	bne.w	9000c22e <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000c382:	f7ff bb00 	b.w	9000b986 <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c386:	4914      	ldr	r1, [pc, #80]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c388:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c38a:	f001 0103 	and.w	r1, r1, #3
9000c38e:	2903      	cmp	r1, #3
9000c390:	f43f ab3d 	beq.w	9000ba0e <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000c394:	2100      	movs	r1, #0
9000c396:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c39a:	f7ff f93f 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c39e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c3a0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c3a4:	2d00      	cmp	r5, #0
9000c3a6:	f47f af29 	bne.w	9000c1fc <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000c3aa:	f7ff ba5b 	b.w	9000b864 <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c3ae:	490a      	ldr	r1, [pc, #40]	@ (9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c3b0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c3b2:	f001 0103 	and.w	r1, r1, #3
9000c3b6:	2903      	cmp	r1, #3
9000c3b8:	f43f ab3a 	beq.w	9000ba30 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000c3bc:	2100      	movs	r1, #0
9000c3be:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c3c2:	f7ff f92b 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c3c6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c3c8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c3cc:	2d00      	cmp	r5, #0
9000c3ce:	f47f af18 	bne.w	9000c202 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000c3d2:	f7ff ba8c 	b.w	9000b8ee <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9000c3d6:	bf00      	nop
9000c3d8:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c3dc:	4973      	ldr	r1, [pc, #460]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c3de:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c3e0:	f001 0103 	and.w	r1, r1, #3
9000c3e4:	2903      	cmp	r1, #3
9000c3e6:	f43f ae07 	beq.w	9000bff8 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000c3ea:	2102      	movs	r1, #2
9000c3ec:	3028      	adds	r0, #40	@ 0x28
9000c3ee:	f7ff f915 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c3f2:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c3f4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c3f8:	2e00      	cmp	r6, #0
9000c3fa:	f47f a9b0 	bne.w	9000b75e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c3fe:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000c400:	f7ff b9a6 	b.w	9000b750 <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c404:	4969      	ldr	r1, [pc, #420]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c406:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c408:	f001 0103 	and.w	r1, r1, #3
9000c40c:	2903      	cmp	r1, #3
9000c40e:	f43f a9b2 	beq.w	9000b776 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c412:	2100      	movs	r1, #0
9000c414:	f104 0008 	add.w	r0, r4, #8
9000c418:	f7ff f88e 	bl	9000b538 <RCCEx_PLL2_Config.part.0>
9000c41c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c41e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c422:	2d00      	cmp	r5, #0
9000c424:	f43f ae53 	beq.w	9000c0ce <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9000c428:	462e      	mov	r6, r5
9000c42a:	f7ff b9a6 	b.w	9000b77a <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c42e:	495f      	ldr	r1, [pc, #380]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c430:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c432:	f001 0103 	and.w	r1, r1, #3
9000c436:	2903      	cmp	r1, #3
9000c438:	f43f a99d 	beq.w	9000b776 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c43c:	2100      	movs	r1, #0
9000c43e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c442:	f7ff f8eb 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c446:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c448:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c44c:	e63c      	b.n	9000c0c8 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c44e:	4957      	ldr	r1, [pc, #348]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c450:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c452:	f001 0103 	and.w	r1, r1, #3
9000c456:	2903      	cmp	r1, #3
9000c458:	f43f aac0 	beq.w	9000b9dc <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000c45c:	2100      	movs	r1, #0
9000c45e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c462:	f7ff f8db 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c466:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c468:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c46c:	2d00      	cmp	r5, #0
9000c46e:	f47f aebf 	bne.w	9000c1f0 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000c472:	f7ff b9a2 	b.w	9000b7ba <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c476:	494d      	ldr	r1, [pc, #308]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c478:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c47a:	f001 0103 	and.w	r1, r1, #3
9000c47e:	2903      	cmp	r1, #3
9000c480:	f43f aaba 	beq.w	9000b9f8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000c484:	2100      	movs	r1, #0
9000c486:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c48a:	f7ff f8c7 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c48e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c490:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c494:	2d00      	cmp	r5, #0
9000c496:	f47f aeae 	bne.w	9000c1f6 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000c49a:	f7ff b9b8 	b.w	9000b80e <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c49e:	4943      	ldr	r1, [pc, #268]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c4a0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c4a2:	f001 0103 	and.w	r1, r1, #3
9000c4a6:	2903      	cmp	r1, #3
9000c4a8:	d041      	beq.n	9000c52e <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000c4aa:	2101      	movs	r1, #1
9000c4ac:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c4b0:	f7ff f8b4 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c4b4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c4b6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4ba:	2d00      	cmp	r5, #0
9000c4bc:	f47f ab56 	bne.w	9000bb6c <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000c4c0:	e6b8      	b.n	9000c234 <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c4c2:	493a      	ldr	r1, [pc, #232]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c4c4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c4c6:	f001 0103 	and.w	r1, r1, #3
9000c4ca:	2903      	cmp	r1, #3
9000c4cc:	d02b      	beq.n	9000c526 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000c4ce:	2101      	movs	r1, #1
9000c4d0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c4d4:	f7ff f8a2 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c4d8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c4da:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4de:	2d00      	cmp	r5, #0
9000c4e0:	f47f ab1f 	bne.w	9000bb22 <HAL_RCCEx_PeriphCLKConfig+0x422>
9000c4e4:	e698      	b.n	9000c218 <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c4e6:	4931      	ldr	r1, [pc, #196]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c4e8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c4ea:	f001 0103 	and.w	r1, r1, #3
9000c4ee:	2903      	cmp	r1, #3
9000c4f0:	f43f aaf5 	beq.w	9000bade <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000c4f4:	2101      	movs	r1, #1
9000c4f6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c4fa:	f7ff f88f 	bl	9000b61c <RCCEx_PLL3_Config.part.0>
9000c4fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c500:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c504:	2d00      	cmp	r5, #0
9000c506:	f47f aea6 	bne.w	9000c256 <HAL_RCCEx_PeriphCLKConfig+0xb56>
9000c50a:	e56d      	b.n	9000bfe8 <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
9000c50c:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c50e:	462e      	mov	r6, r5
9000c510:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c514:	f7ff bab3 	b.w	9000ba7e <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c518:	4d24      	ldr	r5, [pc, #144]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c51a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000c51c:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000c520:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c522:	f7ff b915 	b.w	9000b750 <HAL_RCCEx_PeriphCLKConfig+0x50>
9000c526:	2601      	movs	r6, #1
9000c528:	4635      	mov	r5, r6
9000c52a:	f7ff bafb 	b.w	9000bb24 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000c52e:	2601      	movs	r6, #1
9000c530:	4635      	mov	r5, r6
9000c532:	f7ff bb1c 	b.w	9000bb6e <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9000c536:	2601      	movs	r6, #1
9000c538:	f7ff bb9c 	b.w	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
9000c53c:	2601      	movs	r6, #1
9000c53e:	f7ff bba7 	b.w	9000bc90 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c542:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000c546:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c548:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c54c:	f7ff bba0 	b.w	9000bc90 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c550:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c554:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c558:	f7ff bb8c 	b.w	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x574>
9000c55c:	2601      	movs	r6, #1
9000c55e:	4635      	mov	r5, r6
9000c560:	f7ff ba8a 	b.w	9000ba78 <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
9000c564:	f7fa fff0 	bl	90007548 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c568:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
9000c56c:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c56e:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c572:	e004      	b.n	9000c57e <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c574:	f7fa ffe8 	bl	90007548 <HAL_GetTick>
9000c578:	1bc0      	subs	r0, r0, r7
9000c57a:	4548      	cmp	r0, r9
9000c57c:	d810      	bhi.n	9000c5a0 <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c57e:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000c582:	079b      	lsls	r3, r3, #30
9000c584:	d5f6      	bpl.n	9000c574 <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c586:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c58a:	e566      	b.n	9000c05a <HAL_RCCEx_PeriphCLKConfig+0x95a>
9000c58c:	4807      	ldr	r0, [pc, #28]	@ (9000c5ac <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c58e:	4a08      	ldr	r2, [pc, #32]	@ (9000c5b0 <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
9000c590:	6901      	ldr	r1, [r0, #16]
9000c592:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c596:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000c59a:	430a      	orrs	r2, r1
9000c59c:	6102      	str	r2, [r0, #16]
9000c59e:	e567      	b.n	9000c070 <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
9000c5a0:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c5a2:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c5a6:	4635      	mov	r5, r6
9000c5a8:	f7ff ba69 	b.w	9000ba7e <HAL_RCCEx_PeriphCLKConfig+0x37e>
9000c5ac:	58024400 	.word	0x58024400
9000c5b0:	00ffffcf 	.word	0x00ffffcf

9000c5b4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c5b4:	b318      	cbz	r0, 9000c5fe <HAL_SDRAM_Init+0x4a>
{
9000c5b6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c5b8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000c5bc:	4604      	mov	r4, r0
9000c5be:	460d      	mov	r5, r1
9000c5c0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c5c4:	b1b3      	cbz	r3, 9000c5f4 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c5c6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c5c8:	2302      	movs	r3, #2
9000c5ca:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c5ce:	f851 0b04 	ldr.w	r0, [r1], #4
9000c5d2:	f000 fc57 	bl	9000ce84 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c5d6:	6862      	ldr	r2, [r4, #4]
9000c5d8:	4629      	mov	r1, r5
9000c5da:	6820      	ldr	r0, [r4, #0]
9000c5dc:	f000 fc8a 	bl	9000cef4 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c5e0:	4a08      	ldr	r2, [pc, #32]	@ (9000c604 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c5e2:	2101      	movs	r1, #1

  return HAL_OK;
9000c5e4:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c5e6:	6813      	ldr	r3, [r2, #0]
9000c5e8:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000c5ec:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c5ee:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000c5f2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c5f4:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c5f8:	f7f7 ff6c 	bl	900044d4 <HAL_SDRAM_MspInit>
9000c5fc:	e7e3      	b.n	9000c5c6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c5fe:	2001      	movs	r0, #1
}
9000c600:	4770      	bx	lr
9000c602:	bf00      	nop
9000c604:	52004000 	.word	0x52004000

9000c608 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c608:	b510      	push	{r4, lr}
9000c60a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c60c:	f7f7 ffde 	bl	900045cc <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c610:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c614:	f000 fcac 	bl	9000cf70 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c618:	2000      	movs	r0, #0
9000c61a:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c61e:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000c622:	bd10      	pop	{r4, pc}

9000c624 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c624:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c626:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c62a:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c62c:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c62e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c630:	d004      	beq.n	9000c63c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c632:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000c636:	2c01      	cmp	r4, #1
9000c638:	d001      	beq.n	9000c63e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c63a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c63c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c63e:	2302      	movs	r3, #2
9000c640:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c642:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c644:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c648:	f000 fca6 	bl	9000cf98 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c64c:	6833      	ldr	r3, [r6, #0]
9000c64e:	2b02      	cmp	r3, #2
9000c650:	d003      	beq.n	9000c65a <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c652:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000c656:	2000      	movs	r0, #0
}
9000c658:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c65a:	2305      	movs	r3, #5
9000c65c:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000c660:	e7f9      	b.n	9000c656 <HAL_SDRAM_SendCommand+0x32>
9000c662:	bf00      	nop

9000c664 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c664:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c666:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c66a:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c66c:	2b02      	cmp	r3, #2
9000c66e:	b2d8      	uxtb	r0, r3
9000c670:	d005      	beq.n	9000c67e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c672:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000c676:	2b01      	cmp	r3, #1
9000c678:	b2dd      	uxtb	r5, r3
9000c67a:	d001      	beq.n	9000c680 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c67c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c67e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c680:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c682:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c684:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c688:	f000 fc9e 	bl	9000cfc8 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c68c:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c68e:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000c692:	bd38      	pop	{r3, r4, r5, pc}

9000c694 <HAL_SPI_Init>:
#if (USE_SPI_CRC != 0UL)
  uint32_t crc_poly_msb_mask;
#endif /* USE_SPI_CRC */

  /* Check the SPI handle allocation */
  if (hspi == NULL)
9000c694:	2800      	cmp	r0, #0
9000c696:	f000 80c8 	beq.w	9000c82a <HAL_SPI_Init+0x196>
{
9000c69a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000c69e:	4604      	mov	r4, r0
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
#endif /* USE_SPI_CRC */

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
9000c6a0:	4b67      	ldr	r3, [pc, #412]	@ (9000c840 <HAL_SPI_Init+0x1ac>)
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
9000c6a2:	2000      	movs	r0, #0
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
9000c6a4:	6822      	ldr	r2, [r4, #0]
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(const SPI_HandleTypeDef *hspi)
{
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
9000c6a6:	68e1      	ldr	r1, [r4, #12]
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
9000c6a8:	429a      	cmp	r2, r3
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
9000c6aa:	62a0      	str	r0, [r4, #40]	@ 0x28
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
9000c6ac:	d016      	beq.n	9000c6dc <HAL_SPI_Init+0x48>
9000c6ae:	f5a3 4378 	sub.w	r3, r3, #63488	@ 0xf800
9000c6b2:	429a      	cmp	r2, r3
9000c6b4:	d012      	beq.n	9000c6dc <HAL_SPI_Init+0x48>
9000c6b6:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
9000c6ba:	429a      	cmp	r2, r3
9000c6bc:	f000 80ad 	beq.w	9000c81a <HAL_SPI_Init+0x186>
9000c6c0:	290f      	cmp	r1, #15
9000c6c2:	d808      	bhi.n	9000c6d6 <HAL_SPI_Init+0x42>
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000c6c4:	6be5      	ldr	r5, [r4, #60]	@ 0x3c

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
9000c6c6:	f101 0308 	add.w	r3, r1, #8
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000c6ca:	0968      	lsrs	r0, r5, #5
  data_size = (data_size + 7UL) / 8UL;
9000c6cc:	08db      	lsrs	r3, r3, #3

  return data_size * fifo_threashold;
9000c6ce:	fb00 3303 	mla	r3, r0, r3, r3
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
9000c6d2:	2b08      	cmp	r3, #8
9000c6d4:	d90a      	bls.n	9000c6ec <HAL_SPI_Init+0x58>
    return HAL_ERROR;
9000c6d6:	2001      	movs	r0, #1
}
9000c6d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
9000c6dc:	4b58      	ldr	r3, [pc, #352]	@ (9000c840 <HAL_SPI_Init+0x1ac>)
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000c6de:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
9000c6e0:	429a      	cmp	r2, r3
9000c6e2:	d06d      	beq.n	9000c7c0 <HAL_SPI_Init+0x12c>
9000c6e4:	f5a3 4378 	sub.w	r3, r3, #63488	@ 0xf800
9000c6e8:	429a      	cmp	r2, r3
9000c6ea:	d069      	beq.n	9000c7c0 <HAL_SPI_Init+0x12c>
  if (hspi->State == HAL_SPI_STATE_RESET)
9000c6ec:	f894 3081 	ldrb.w	r3, [r4, #129]	@ 0x81
9000c6f0:	f003 06ff 	and.w	r6, r3, #255	@ 0xff
9000c6f4:	2b00      	cmp	r3, #0
9000c6f6:	d071      	beq.n	9000c7dc <HAL_SPI_Init+0x148>
9000c6f8:	f04f 0800 	mov.w	r8, #0
  hspi->State = HAL_SPI_STATE_BUSY;
9000c6fc:	2302      	movs	r3, #2
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000c6fe:	6860      	ldr	r0, [r4, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
9000c700:	f8d4 e038 	ldr.w	lr, [r4, #56]	@ 0x38
  hspi->State = HAL_SPI_STATE_BUSY;
9000c704:	f884 3081 	strb.w	r3, [r4, #129]	@ 0x81
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
9000c708:	f400 0980 	and.w	r9, r0, #4194304	@ 0x400000
  __HAL_SPI_DISABLE(hspi);
9000c70c:	6813      	ldr	r3, [r2, #0]
9000c70e:	f023 0301 	bic.w	r3, r3, #1
9000c712:	6013      	str	r3, [r2, #0]
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
9000c714:	6893      	ldr	r3, [r2, #8]
9000c716:	f403 1cf8 	and.w	ip, r3, #2031616	@ 0x1f0000
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000c71a:	69a3      	ldr	r3, [r4, #24]
9000c71c:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
9000c720:	d067      	beq.n	9000c7f2 <HAL_SPI_Init+0x15e>
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
9000c722:	f1b9 0f00 	cmp.w	r9, #0
9000c726:	d001      	beq.n	9000c72c <HAL_SPI_Init+0x98>
9000c728:	2906      	cmp	r1, #6
9000c72a:	d86f      	bhi.n	9000c80c <HAL_SPI_Init+0x178>
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
9000c72c:	6817      	ldr	r7, [r2, #0]
9000c72e:	f427 7780 	bic.w	r7, r7, #256	@ 0x100
9000c732:	6017      	str	r7, [r2, #0]
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
9000c734:	4303      	orrs	r3, r0
9000c736:	6b67      	ldr	r7, [r4, #52]	@ 0x34
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
9000c738:	ea41 0108 	orr.w	r1, r1, r8
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
9000c73c:	ea43 030e 	orr.w	r3, r3, lr
9000c740:	433b      	orrs	r3, r7
9000c742:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000c744:	433b      	orrs	r3, r7
9000c746:	6927      	ldr	r7, [r4, #16]
9000c748:	433b      	orrs	r3, r7
9000c74a:	6967      	ldr	r7, [r4, #20]
9000c74c:	433b      	orrs	r3, r7
9000c74e:	6a27      	ldr	r7, [r4, #32]
9000c750:	433b      	orrs	r3, r7
9000c752:	6ce7      	ldr	r7, [r4, #76]	@ 0x4c
9000c754:	433b      	orrs	r3, r7
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
9000c756:	69e7      	ldr	r7, [r4, #28]
9000c758:	4339      	orrs	r1, r7
9000c75a:	4329      	orrs	r1, r5
9000c75c:	ea41 010c 	orr.w	r1, r1, ip
9000c760:	6091      	str	r1, [r2, #8]
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
9000c762:	68a1      	ldr	r1, [r4, #8]
9000c764:	430b      	orrs	r3, r1
9000c766:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000c768:	430b      	orrs	r3, r1
9000c76a:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000c76c:	430b      	orrs	r3, r1
9000c76e:	60d3      	str	r3, [r2, #12]
  if (hspi->Init.Mode == SPI_MODE_SLAVE)
9000c770:	b9c0      	cbnz	r0, 9000c7a4 <HAL_SPI_Init+0x110>
      MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
9000c772:	6893      	ldr	r3, [r2, #8]
9000c774:	f423 53c0 	bic.w	r3, r3, #6144	@ 0x1800
9000c778:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
9000c77c:	6093      	str	r3, [r2, #8]
    MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
9000c77e:	6893      	ldr	r3, [r2, #8]
9000c780:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
9000c784:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
9000c788:	6093      	str	r3, [r2, #8]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
9000c78a:	6d13      	ldr	r3, [r2, #80]	@ 0x50
9000c78c:	f023 0301 	bic.w	r3, r3, #1
9000c790:	6513      	str	r3, [r2, #80]	@ 0x50
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
9000c792:	2300      	movs	r3, #0
  hspi->State     = HAL_SPI_STATE_READY;
9000c794:	2201      	movs	r2, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
9000c796:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
  return HAL_OK;
9000c79a:	4618      	mov	r0, r3
  hspi->State     = HAL_SPI_STATE_READY;
9000c79c:	f884 2081 	strb.w	r2, [r4, #129]	@ 0x81
}
9000c7a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
9000c7a4:	6d13      	ldr	r3, [r2, #80]	@ 0x50
9000c7a6:	f023 0301 	bic.w	r3, r3, #1
9000c7aa:	6513      	str	r3, [r2, #80]	@ 0x50
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
9000c7ac:	f1b9 0f00 	cmp.w	r9, #0
9000c7b0:	d0ef      	beq.n	9000c792 <HAL_SPI_Init+0xfe>
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
9000c7b2:	68d3      	ldr	r3, [r2, #12]
9000c7b4:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000c7b6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9000c7ba:	430b      	orrs	r3, r1
9000c7bc:	60d3      	str	r3, [r2, #12]
9000c7be:	e7e8      	b.n	9000c792 <HAL_SPI_Init+0xfe>
  data_size = (data_size + 7UL) / 8UL;
9000c7c0:	f101 0308 	add.w	r3, r1, #8
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000c7c4:	0968      	lsrs	r0, r5, #5
  data_size = (data_size + 7UL) / 8UL;
9000c7c6:	08db      	lsrs	r3, r3, #3
  return data_size * fifo_threashold;
9000c7c8:	fb00 3303 	mla	r3, r0, r3, r3
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
9000c7cc:	2b10      	cmp	r3, #16
9000c7ce:	d882      	bhi.n	9000c6d6 <HAL_SPI_Init+0x42>
  if (hspi->State == HAL_SPI_STATE_RESET)
9000c7d0:	f894 3081 	ldrb.w	r3, [r4, #129]	@ 0x81
9000c7d4:	f003 06ff 	and.w	r6, r3, #255	@ 0xff
9000c7d8:	2b00      	cmp	r3, #0
9000c7da:	d18d      	bne.n	9000c6f8 <HAL_SPI_Init+0x64>
    HAL_SPI_MspInit(hspi);
9000c7dc:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
9000c7de:	f884 6080 	strb.w	r6, [r4, #128]	@ 0x80
    HAL_SPI_MspInit(hspi);
9000c7e2:	f7f7 fde9 	bl	900043b8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
9000c7e6:	6822      	ldr	r2, [r4, #0]
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
9000c7e8:	68e1      	ldr	r1, [r4, #12]
9000c7ea:	f8d4 8028 	ldr.w	r8, [r4, #40]	@ 0x28
9000c7ee:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
9000c7f0:	e784      	b.n	9000c6fc <HAL_SPI_Init+0x68>
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000c7f2:	f5b0 0f80 	cmp.w	r0, #4194304	@ 0x400000
9000c7f6:	d01a      	beq.n	9000c82e <HAL_SPI_Init+0x19a>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
9000c7f8:	2800      	cmp	r0, #0
9000c7fa:	d192      	bne.n	9000c722 <HAL_SPI_Init+0x8e>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
9000c7fc:	f1be 5f80 	cmp.w	lr, #268435456	@ 0x10000000
9000c800:	d194      	bne.n	9000c72c <HAL_SPI_Init+0x98>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
9000c802:	6817      	ldr	r7, [r2, #0]
9000c804:	f447 5780 	orr.w	r7, r7, #4096	@ 0x1000
9000c808:	6017      	str	r7, [r2, #0]
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
9000c80a:	e78f      	b.n	9000c72c <HAL_SPI_Init+0x98>
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
9000c80c:	6817      	ldr	r7, [r2, #0]
9000c80e:	6d26      	ldr	r6, [r4, #80]	@ 0x50
9000c810:	f427 7780 	bic.w	r7, r7, #256	@ 0x100
9000c814:	4337      	orrs	r7, r6
9000c816:	6017      	str	r7, [r2, #0]
9000c818:	e78c      	b.n	9000c734 <HAL_SPI_Init+0xa0>
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000c81a:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
  data_size = (data_size + 7UL) / 8UL;
9000c81c:	f101 0308 	add.w	r3, r1, #8
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000c820:	0968      	lsrs	r0, r5, #5
  data_size = (data_size + 7UL) / 8UL;
9000c822:	08db      	lsrs	r3, r3, #3
  return data_size * fifo_threashold;
9000c824:	fb00 3303 	mla	r3, r0, r3, r3
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
9000c828:	e7d0      	b.n	9000c7cc <HAL_SPI_Init+0x138>
    return HAL_ERROR;
9000c82a:	2001      	movs	r0, #1
}
9000c82c:	4770      	bx	lr
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000c82e:	f1be 0f00 	cmp.w	lr, #0
9000c832:	f47f af79 	bne.w	9000c728 <HAL_SPI_Init+0x94>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
9000c836:	6817      	ldr	r7, [r2, #0]
9000c838:	f447 5780 	orr.w	r7, r7, #4096	@ 0x1000
9000c83c:	6017      	str	r7, [r2, #0]
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
9000c83e:	e773      	b.n	9000c728 <HAL_SPI_Init+0x94>
9000c840:	40013000 	.word	0x40013000

9000c844 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
9000c844:	2800      	cmp	r0, #0
9000c846:	f000 8094 	beq.w	9000c972 <HAL_TIM_Base_Init+0x12e>
{
9000c84a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
9000c84c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c850:	4604      	mov	r4, r0
9000c852:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c856:	2b00      	cmp	r3, #0
9000c858:	d07b      	beq.n	9000c952 <HAL_TIM_Base_Init+0x10e>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c85a:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c85c:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c85e:	4946      	ldr	r1, [pc, #280]	@ (9000c978 <HAL_TIM_Base_Init+0x134>)
9000c860:	4846      	ldr	r0, [pc, #280]	@ (9000c97c <HAL_TIM_Base_Init+0x138>)
9000c862:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000c866:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000c86a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c86e:	eba3 0e00 	sub.w	lr, r3, r0
  tmpcr1 = TIMx->CR1;
9000c872:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c874:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c878:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c87a:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c87e:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c880:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c884:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c886:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000c88a:	d020      	beq.n	9000c8ce <HAL_TIM_Base_Init+0x8a>
9000c88c:	b9f9      	cbnz	r1, 9000c8ce <HAL_TIM_Base_Init+0x8a>
9000c88e:	f8df c0fc 	ldr.w	ip, [pc, #252]	@ 9000c98c <HAL_TIM_Base_Init+0x148>
9000c892:	4563      	cmp	r3, ip
9000c894:	d01b      	beq.n	9000c8ce <HAL_TIM_Base_Init+0x8a>
9000c896:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c89a:	4563      	cmp	r3, ip
9000c89c:	d017      	beq.n	9000c8ce <HAL_TIM_Base_Init+0x8a>
9000c89e:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c8a2:	4563      	cmp	r3, ip
9000c8a4:	d013      	beq.n	9000c8ce <HAL_TIM_Base_Init+0x8a>
9000c8a6:	f1be 0f00 	cmp.w	lr, #0
9000c8aa:	d110      	bne.n	9000c8ce <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c8ac:	4834      	ldr	r0, [pc, #208]	@ (9000c980 <HAL_TIM_Base_Init+0x13c>)
9000c8ae:	4935      	ldr	r1, [pc, #212]	@ (9000c984 <HAL_TIM_Base_Init+0x140>)
9000c8b0:	428b      	cmp	r3, r1
9000c8b2:	bf18      	it	ne
9000c8b4:	4283      	cmpne	r3, r0
9000c8b6:	d051      	beq.n	9000c95c <HAL_TIM_Base_Init+0x118>
9000c8b8:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000c8bc:	428b      	cmp	r3, r1
9000c8be:	d04d      	beq.n	9000c95c <HAL_TIM_Base_Init+0x118>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c8c0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c8c4:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000c8c6:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c8c8:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c8ca:	629d      	str	r5, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c8cc:	e01d      	b.n	9000c90a <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000c8ce:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c8d0:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000c8d4:	4302      	orrs	r2, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c8d6:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c8d8:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c8dc:	4302      	orrs	r2, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c8de:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c8e2:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000c8e4:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c8e6:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c8e8:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c8ea:	b961      	cbnz	r1, 9000c906 <HAL_TIM_Base_Init+0xc2>
9000c8ec:	f1be 0f00 	cmp.w	lr, #0
9000c8f0:	d109      	bne.n	9000c906 <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c8f2:	4925      	ldr	r1, [pc, #148]	@ (9000c988 <HAL_TIM_Base_Init+0x144>)
9000c8f4:	4a22      	ldr	r2, [pc, #136]	@ (9000c980 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c8f6:	4293      	cmp	r3, r2
9000c8f8:	bf18      	it	ne
9000c8fa:	428b      	cmpne	r3, r1
9000c8fc:	d003      	beq.n	9000c906 <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c8fe:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c902:	4293      	cmp	r3, r2
9000c904:	d101      	bne.n	9000c90a <HAL_TIM_Base_Init+0xc6>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c906:	6962      	ldr	r2, [r4, #20]
9000c908:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c90a:	2201      	movs	r2, #1
9000c90c:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
9000c90e:	691a      	ldr	r2, [r3, #16]
9000c910:	07d2      	lsls	r2, r2, #31
9000c912:	d503      	bpl.n	9000c91c <HAL_TIM_Base_Init+0xd8>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
9000c914:	691a      	ldr	r2, [r3, #16]
9000c916:	f022 0201 	bic.w	r2, r2, #1
9000c91a:	611a      	str	r2, [r3, #16]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c91c:	2301      	movs	r3, #1
  return HAL_OK;
9000c91e:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c920:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c924:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000c928:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000c92c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000c930:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
9000c934:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000c938:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c93c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000c940:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000c944:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000c948:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c94c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
9000c950:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000c952:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c956:	f7f7 fd85 	bl	90004464 <HAL_TIM_Base_MspInit>
9000c95a:	e77e      	b.n	9000c85a <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c95c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c95e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c962:	430a      	orrs	r2, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c964:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c968:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000c96a:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c96c:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c96e:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c970:	e7bf      	b.n	9000c8f2 <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
9000c972:	2001      	movs	r0, #1
}
9000c974:	4770      	bx	lr
9000c976:	bf00      	nop
9000c978:	40010000 	.word	0x40010000
9000c97c:	40010400 	.word	0x40010400
9000c980:	40014000 	.word	0x40014000
9000c984:	40014400 	.word	0x40014400
9000c988:	40014800 	.word	0x40014800
9000c98c:	40000400 	.word	0x40000400

9000c990 <HAL_TIM_Base_Start>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c990:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c994:	2b01      	cmp	r3, #1
9000c996:	d139      	bne.n	9000ca0c <HAL_TIM_Base_Start+0x7c>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c998:	6802      	ldr	r2, [r0, #0]
9000c99a:	4b1d      	ldr	r3, [pc, #116]	@ (9000ca10 <HAL_TIM_Base_Start+0x80>)
9000c99c:	491d      	ldr	r1, [pc, #116]	@ (9000ca14 <HAL_TIM_Base_Start+0x84>)
9000c99e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000c9a2:	bf18      	it	ne
9000c9a4:	429a      	cmpne	r2, r3
{
9000c9a6:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c9a8:	bf0c      	ite	eq
9000c9aa:	2301      	moveq	r3, #1
9000c9ac:	2300      	movne	r3, #0
9000c9ae:	4d1a      	ldr	r5, [pc, #104]	@ (9000ca18 <HAL_TIM_Base_Start+0x88>)
  htim->State = HAL_TIM_STATE_BUSY;
9000c9b0:	2402      	movs	r4, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c9b2:	42aa      	cmp	r2, r5
9000c9b4:	bf08      	it	eq
9000c9b6:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c9ba:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c9be:	4c17      	ldr	r4, [pc, #92]	@ (9000ca1c <HAL_TIM_Base_Start+0x8c>)
9000c9c0:	428a      	cmp	r2, r1
9000c9c2:	bf08      	it	eq
9000c9c4:	f043 0301 	orreq.w	r3, r3, #1
9000c9c8:	4815      	ldr	r0, [pc, #84]	@ (9000ca20 <HAL_TIM_Base_Start+0x90>)
9000c9ca:	f501 5180 	add.w	r1, r1, #4096	@ 0x1000
9000c9ce:	42a2      	cmp	r2, r4
9000c9d0:	bf08      	it	eq
9000c9d2:	f043 0301 	orreq.w	r3, r3, #1
9000c9d6:	4282      	cmp	r2, r0
9000c9d8:	bf08      	it	eq
9000c9da:	f043 0301 	orreq.w	r3, r3, #1
9000c9de:	428a      	cmp	r2, r1
9000c9e0:	bf08      	it	eq
9000c9e2:	f043 0301 	orreq.w	r3, r3, #1
9000c9e6:	b913      	cbnz	r3, 9000c9ee <HAL_TIM_Base_Start+0x5e>
9000c9e8:	4b0e      	ldr	r3, [pc, #56]	@ (9000ca24 <HAL_TIM_Base_Start+0x94>)
9000c9ea:	429a      	cmp	r2, r3
9000c9ec:	d107      	bne.n	9000c9fe <HAL_TIM_Base_Start+0x6e>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000c9ee:	6891      	ldr	r1, [r2, #8]
9000c9f0:	4b0d      	ldr	r3, [pc, #52]	@ (9000ca28 <HAL_TIM_Base_Start+0x98>)
9000c9f2:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000c9f4:	2b06      	cmp	r3, #6
9000c9f6:	d006      	beq.n	9000ca06 <HAL_TIM_Base_Start+0x76>
9000c9f8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000c9fc:	d003      	beq.n	9000ca06 <HAL_TIM_Base_Start+0x76>
      __HAL_TIM_ENABLE(htim);
9000c9fe:	6813      	ldr	r3, [r2, #0]
9000ca00:	f043 0301 	orr.w	r3, r3, #1
9000ca04:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000ca06:	2000      	movs	r0, #0
}
9000ca08:	bc30      	pop	{r4, r5}
9000ca0a:	4770      	bx	lr
    return HAL_ERROR;
9000ca0c:	2001      	movs	r0, #1
}
9000ca0e:	4770      	bx	lr
9000ca10:	40010000 	.word	0x40010000
9000ca14:	40000800 	.word	0x40000800
9000ca18:	40000400 	.word	0x40000400
9000ca1c:	40000c00 	.word	0x40000c00
9000ca20:	40010400 	.word	0x40010400
9000ca24:	40014000 	.word	0x40014000
9000ca28:	00010007 	.word	0x00010007

9000ca2c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000ca2c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000ca30:	2b01      	cmp	r3, #1
9000ca32:	d13d      	bne.n	9000cab0 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ca34:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000ca36:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca38:	4b1e      	ldr	r3, [pc, #120]	@ (9000cab4 <HAL_TIM_Base_Start_IT+0x88>)
9000ca3a:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000ca3e:	bf18      	it	ne
9000ca40:	429a      	cmpne	r2, r3
{
9000ca42:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca44:	bf0c      	ite	eq
9000ca46:	2301      	moveq	r3, #1
9000ca48:	2300      	movne	r3, #0
9000ca4a:	4d1b      	ldr	r5, [pc, #108]	@ (9000cab8 <HAL_TIM_Base_Start_IT+0x8c>)
9000ca4c:	4c1b      	ldr	r4, [pc, #108]	@ (9000cabc <HAL_TIM_Base_Start_IT+0x90>)
9000ca4e:	42aa      	cmp	r2, r5
9000ca50:	bf08      	it	eq
9000ca52:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000ca56:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ca5a:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca5c:	42a2      	cmp	r2, r4
9000ca5e:	bf08      	it	eq
9000ca60:	f043 0301 	orreq.w	r3, r3, #1
9000ca64:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ca68:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca6c:	4814      	ldr	r0, [pc, #80]	@ (9000cac0 <HAL_TIM_Base_Start_IT+0x94>)
9000ca6e:	42a2      	cmp	r2, r4
9000ca70:	bf08      	it	eq
9000ca72:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ca76:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca78:	4282      	cmp	r2, r0
9000ca7a:	bf08      	it	eq
9000ca7c:	f043 0301 	orreq.w	r3, r3, #1
9000ca80:	4910      	ldr	r1, [pc, #64]	@ (9000cac4 <HAL_TIM_Base_Start_IT+0x98>)
9000ca82:	428a      	cmp	r2, r1
9000ca84:	bf08      	it	eq
9000ca86:	f043 0301 	orreq.w	r3, r3, #1
9000ca8a:	b913      	cbnz	r3, 9000ca92 <HAL_TIM_Base_Start_IT+0x66>
9000ca8c:	4b0e      	ldr	r3, [pc, #56]	@ (9000cac8 <HAL_TIM_Base_Start_IT+0x9c>)
9000ca8e:	429a      	cmp	r2, r3
9000ca90:	d107      	bne.n	9000caa2 <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000ca92:	6891      	ldr	r1, [r2, #8]
9000ca94:	4b0d      	ldr	r3, [pc, #52]	@ (9000cacc <HAL_TIM_Base_Start_IT+0xa0>)
9000ca96:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000ca98:	2b06      	cmp	r3, #6
9000ca9a:	d006      	beq.n	9000caaa <HAL_TIM_Base_Start_IT+0x7e>
9000ca9c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000caa0:	d003      	beq.n	9000caaa <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000caa2:	6813      	ldr	r3, [r2, #0]
9000caa4:	f043 0301 	orr.w	r3, r3, #1
9000caa8:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000caaa:	2000      	movs	r0, #0
}
9000caac:	bc30      	pop	{r4, r5}
9000caae:	4770      	bx	lr
    return HAL_ERROR;
9000cab0:	2001      	movs	r0, #1
}
9000cab2:	4770      	bx	lr
9000cab4:	40010000 	.word	0x40010000
9000cab8:	40000400 	.word	0x40000400
9000cabc:	40000800 	.word	0x40000800
9000cac0:	40010400 	.word	0x40010400
9000cac4:	40001800 	.word	0x40001800
9000cac8:	40014000 	.word	0x40014000
9000cacc:	00010007 	.word	0x00010007

9000cad0 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
9000cad0:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
9000cad4:	2b01      	cmp	r3, #1
9000cad6:	d07e      	beq.n	9000cbd6 <HAL_TIM_ConfigClockSource+0x106>
9000cad8:	4602      	mov	r2, r0
  htim->State = HAL_TIM_STATE_BUSY;
9000cada:	2302      	movs	r3, #2
{
9000cadc:	b430      	push	{r4, r5}
  tmpsmcr = htim->Instance->SMCR;
9000cade:	6804      	ldr	r4, [r0, #0]
  __HAL_LOCK(htim);
9000cae0:	2001      	movs	r0, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000cae2:	f882 303d 	strb.w	r3, [r2, #61]	@ 0x3d
  __HAL_LOCK(htim);
9000cae6:	f882 003c 	strb.w	r0, [r2, #60]	@ 0x3c
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
9000caea:	4b58      	ldr	r3, [pc, #352]	@ (9000cc4c <HAL_TIM_ConfigClockSource+0x17c>)
  tmpsmcr = htim->Instance->SMCR;
9000caec:	68a5      	ldr	r5, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
9000caee:	402b      	ands	r3, r5
  htim->Instance->SMCR = tmpsmcr;
9000caf0:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
9000caf2:	680b      	ldr	r3, [r1, #0]
9000caf4:	2b70      	cmp	r3, #112	@ 0x70
9000caf6:	f000 8098 	beq.w	9000cc2a <HAL_TIM_ConfigClockSource+0x15a>
9000cafa:	d825      	bhi.n	9000cb48 <HAL_TIM_ConfigClockSource+0x78>
9000cafc:	2b50      	cmp	r3, #80	@ 0x50
9000cafe:	d06c      	beq.n	9000cbda <HAL_TIM_ConfigClockSource+0x10a>
9000cb00:	d938      	bls.n	9000cb74 <HAL_TIM_ConfigClockSource+0xa4>
9000cb02:	2b60      	cmp	r3, #96	@ 0x60
9000cb04:	d118      	bne.n	9000cb38 <HAL_TIM_ConfigClockSource+0x68>
                               sClockSourceConfig->ClockPolarity,
9000cb06:	684b      	ldr	r3, [r1, #4]
                               sClockSourceConfig->ClockFilter);
9000cb08:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
9000cb0a:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000cb0c:	6a20      	ldr	r0, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
  tmpccmr1 |= (TIM_ICFilter << 12U);

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
9000cb0e:	f021 01a0 	bic.w	r1, r1, #160	@ 0xa0
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000cb12:	f020 0010 	bic.w	r0, r0, #16
  tmpccer |= (TIM_ICPolarity << 4U);
9000cb16:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
9000cb1a:	4b4d      	ldr	r3, [pc, #308]	@ (9000cc50 <HAL_TIM_ConfigClockSource+0x180>)
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000cb1c:	6220      	str	r0, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
9000cb1e:	69a0      	ldr	r0, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
9000cb20:	f420 4070 	bic.w	r0, r0, #61440	@ 0xf000
  tmpccmr1 |= (TIM_ICFilter << 12U);
9000cb24:	ea40 3005 	orr.w	r0, r0, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
9000cb28:	61a0      	str	r0, [r4, #24]
  HAL_StatusTypeDef status = HAL_OK;
9000cb2a:	2000      	movs	r0, #0
  TIMx->CCER = tmpccer;
9000cb2c:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
9000cb2e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
9000cb30:	400b      	ands	r3, r1
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
9000cb32:	f043 0367 	orr.w	r3, r3, #103	@ 0x67
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
9000cb36:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
9000cb38:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
9000cb3a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
9000cb3c:	f882 103d 	strb.w	r1, [r2, #61]	@ 0x3d
  __HAL_UNLOCK(htim);
9000cb40:	f882 303c 	strb.w	r3, [r2, #60]	@ 0x3c
}
9000cb44:	bc30      	pop	{r4, r5}
9000cb46:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
9000cb48:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
9000cb4c:	d05d      	beq.n	9000cc0a <HAL_TIM_ConfigClockSource+0x13a>
9000cb4e:	d931      	bls.n	9000cbb4 <HAL_TIM_ConfigClockSource+0xe4>
9000cb50:	4940      	ldr	r1, [pc, #256]	@ (9000cc54 <HAL_TIM_ConfigClockSource+0x184>)
9000cb52:	428b      	cmp	r3, r1
9000cb54:	d006      	beq.n	9000cb64 <HAL_TIM_ConfigClockSource+0x94>
9000cb56:	d927      	bls.n	9000cba8 <HAL_TIM_ConfigClockSource+0xd8>
9000cb58:	493f      	ldr	r1, [pc, #252]	@ (9000cc58 <HAL_TIM_ConfigClockSource+0x188>)
9000cb5a:	428b      	cmp	r3, r1
9000cb5c:	d002      	beq.n	9000cb64 <HAL_TIM_ConfigClockSource+0x94>
9000cb5e:	3110      	adds	r1, #16
9000cb60:	428b      	cmp	r3, r1
9000cb62:	d1e9      	bne.n	9000cb38 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
9000cb64:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
9000cb66:	493a      	ldr	r1, [pc, #232]	@ (9000cc50 <HAL_TIM_ConfigClockSource+0x180>)
9000cb68:	4001      	ands	r1, r0
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
9000cb6a:	4319      	orrs	r1, r3
9000cb6c:	f041 0107 	orr.w	r1, r1, #7
  TIMx->SMCR = tmpsmcr;
9000cb70:	60a1      	str	r1, [r4, #8]
}
9000cb72:	e022      	b.n	9000cbba <HAL_TIM_ConfigClockSource+0xea>
  switch (sClockSourceConfig->ClockSource)
9000cb74:	2b40      	cmp	r3, #64	@ 0x40
9000cb76:	d122      	bne.n	9000cbbe <HAL_TIM_ConfigClockSource+0xee>
  tmpccer = TIMx->CCER;
9000cb78:	6a23      	ldr	r3, [r4, #32]
                               sClockSourceConfig->ClockPolarity,
9000cb7a:	6848      	ldr	r0, [r1, #4]
                               sClockSourceConfig->ClockFilter);
9000cb7c:	68cd      	ldr	r5, [r1, #12]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
9000cb7e:	f023 030a 	bic.w	r3, r3, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000cb82:	6a21      	ldr	r1, [r4, #32]
  tmpccer |= TIM_ICPolarity;
9000cb84:	4318      	orrs	r0, r3
  tmpsmcr &= ~TIM_SMCR_TS;
9000cb86:	4b32      	ldr	r3, [pc, #200]	@ (9000cc50 <HAL_TIM_ConfigClockSource+0x180>)
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000cb88:	f021 0101 	bic.w	r1, r1, #1
9000cb8c:	6221      	str	r1, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
9000cb8e:	69a1      	ldr	r1, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
9000cb90:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
9000cb94:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
9000cb98:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
9000cb9a:	6220      	str	r0, [r4, #32]
  tmpsmcr = TIMx->SMCR;
9000cb9c:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
9000cb9e:	400b      	ands	r3, r1
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
9000cba0:	f043 0347 	orr.w	r3, r3, #71	@ 0x47
  TIMx->SMCR = tmpsmcr;
9000cba4:	60a3      	str	r3, [r4, #8]
}
9000cba6:	e008      	b.n	9000cbba <HAL_TIM_ConfigClockSource+0xea>
  switch (sClockSourceConfig->ClockSource)
9000cba8:	f023 0110 	bic.w	r1, r3, #16
9000cbac:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000cbb0:	d1c2      	bne.n	9000cb38 <HAL_TIM_ConfigClockSource+0x68>
9000cbb2:	e7d7      	b.n	9000cb64 <HAL_TIM_ConfigClockSource+0x94>
9000cbb4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000cbb8:	d1be      	bne.n	9000cb38 <HAL_TIM_ConfigClockSource+0x68>
  HAL_StatusTypeDef status = HAL_OK;
9000cbba:	2000      	movs	r0, #0
9000cbbc:	e7bc      	b.n	9000cb38 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
9000cbbe:	d8bb      	bhi.n	9000cb38 <HAL_TIM_ConfigClockSource+0x68>
9000cbc0:	2b20      	cmp	r3, #32
9000cbc2:	d0cf      	beq.n	9000cb64 <HAL_TIM_ConfigClockSource+0x94>
9000cbc4:	d903      	bls.n	9000cbce <HAL_TIM_ConfigClockSource+0xfe>
9000cbc6:	2b30      	cmp	r3, #48	@ 0x30
9000cbc8:	d0cc      	beq.n	9000cb64 <HAL_TIM_ConfigClockSource+0x94>
      status = HAL_ERROR;
9000cbca:	2001      	movs	r0, #1
9000cbcc:	e7b4      	b.n	9000cb38 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
9000cbce:	f033 0110 	bics.w	r1, r3, #16
9000cbd2:	d1b1      	bne.n	9000cb38 <HAL_TIM_ConfigClockSource+0x68>
9000cbd4:	e7c6      	b.n	9000cb64 <HAL_TIM_ConfigClockSource+0x94>
  __HAL_LOCK(htim);
9000cbd6:	2002      	movs	r0, #2
}
9000cbd8:	4770      	bx	lr
  tmpccer = TIMx->CCER;
9000cbda:	6a23      	ldr	r3, [r4, #32]
                               sClockSourceConfig->ClockPolarity,
9000cbdc:	6848      	ldr	r0, [r1, #4]
                               sClockSourceConfig->ClockFilter);
9000cbde:	68cd      	ldr	r5, [r1, #12]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
9000cbe0:	f023 030a 	bic.w	r3, r3, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000cbe4:	6a21      	ldr	r1, [r4, #32]
  tmpccer |= TIM_ICPolarity;
9000cbe6:	4318      	orrs	r0, r3
  tmpsmcr &= ~TIM_SMCR_TS;
9000cbe8:	4b19      	ldr	r3, [pc, #100]	@ (9000cc50 <HAL_TIM_ConfigClockSource+0x180>)
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000cbea:	f021 0101 	bic.w	r1, r1, #1
9000cbee:	6221      	str	r1, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
9000cbf0:	69a1      	ldr	r1, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
9000cbf2:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
9000cbf6:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
9000cbfa:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
9000cbfc:	6220      	str	r0, [r4, #32]
  tmpsmcr = TIMx->SMCR;
9000cbfe:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
9000cc00:	400b      	ands	r3, r1
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
9000cc02:	f043 0357 	orr.w	r3, r3, #87	@ 0x57
  TIMx->SMCR = tmpsmcr;
9000cc06:	60a3      	str	r3, [r4, #8]
}
9000cc08:	e7d7      	b.n	9000cbba <HAL_TIM_ConfigClockSource+0xea>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000cc0a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
9000cc0e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000cc10:	432b      	orrs	r3, r5
9000cc12:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
9000cc14:	f420 417f 	bic.w	r1, r0, #65280	@ 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000cc18:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
9000cc1c:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
9000cc1e:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
9000cc20:	68a3      	ldr	r3, [r4, #8]
9000cc22:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
9000cc26:	60a3      	str	r3, [r4, #8]
      break;
9000cc28:	e7c7      	b.n	9000cbba <HAL_TIM_ConfigClockSource+0xea>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000cc2a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
9000cc2e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000cc30:	432b      	orrs	r3, r5
9000cc32:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
9000cc34:	f420 417f 	bic.w	r1, r0, #65280	@ 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000cc38:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
9000cc3c:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
9000cc3e:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
9000cc40:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
9000cc42:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
      htim->Instance->SMCR = tmpsmcr;
9000cc46:	60a3      	str	r3, [r4, #8]
      break;
9000cc48:	e7b7      	b.n	9000cbba <HAL_TIM_ConfigClockSource+0xea>
9000cc4a:	bf00      	nop
9000cc4c:	ffce0088 	.word	0xffce0088
9000cc50:	ffcfff8f 	.word	0xffcfff8f
9000cc54:	00100020 	.word	0x00100020
9000cc58:	00100030 	.word	0x00100030

9000cc5c <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000cc5c:	4770      	bx	lr
9000cc5e:	bf00      	nop

9000cc60 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000cc60:	4770      	bx	lr
9000cc62:	bf00      	nop

9000cc64 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000cc64:	4770      	bx	lr
9000cc66:	bf00      	nop

9000cc68 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000cc68:	4770      	bx	lr
9000cc6a:	bf00      	nop

9000cc6c <HAL_TIM_IRQHandler>:
{
9000cc6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t itsource = htim->Instance->DIER;
9000cc6e:	6803      	ldr	r3, [r0, #0]
{
9000cc70:	4605      	mov	r5, r0
  uint32_t itsource = htim->Instance->DIER;
9000cc72:	68de      	ldr	r6, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
9000cc74:	691c      	ldr	r4, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000cc76:	07a1      	lsls	r1, r4, #30
9000cc78:	d501      	bpl.n	9000cc7e <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000cc7a:	07b2      	lsls	r2, r6, #30
9000cc7c:	d457      	bmi.n	9000cd2e <HAL_TIM_IRQHandler+0xc2>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000cc7e:	0767      	lsls	r7, r4, #29
9000cc80:	d501      	bpl.n	9000cc86 <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000cc82:	0770      	lsls	r0, r6, #29
9000cc84:	d440      	bmi.n	9000cd08 <HAL_TIM_IRQHandler+0x9c>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000cc86:	0721      	lsls	r1, r4, #28
9000cc88:	d501      	bpl.n	9000cc8e <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000cc8a:	0732      	lsls	r2, r6, #28
9000cc8c:	d42a      	bmi.n	9000cce4 <HAL_TIM_IRQHandler+0x78>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000cc8e:	06e7      	lsls	r7, r4, #27
9000cc90:	d501      	bpl.n	9000cc96 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000cc92:	06f0      	lsls	r0, r6, #27
9000cc94:	d413      	bmi.n	9000ccbe <HAL_TIM_IRQHandler+0x52>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000cc96:	07e1      	lsls	r1, r4, #31
9000cc98:	d501      	bpl.n	9000cc9e <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000cc9a:	07f2      	lsls	r2, r6, #31
9000cc9c:	d465      	bmi.n	9000cd6a <HAL_TIM_IRQHandler+0xfe>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000cc9e:	f414 5f02 	tst.w	r4, #8320	@ 0x2080
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000cca2:	f404 7780 	and.w	r7, r4, #256	@ 0x100
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000cca6:	d052      	beq.n	9000cd4e <HAL_TIM_IRQHandler+0xe2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000cca8:	0633      	lsls	r3, r6, #24
9000ccaa:	d466      	bmi.n	9000cd7a <HAL_TIM_IRQHandler+0x10e>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000ccac:	0660      	lsls	r0, r4, #25
9000ccae:	d501      	bpl.n	9000ccb4 <HAL_TIM_IRQHandler+0x48>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000ccb0:	0671      	lsls	r1, r6, #25
9000ccb2:	d473      	bmi.n	9000cd9c <HAL_TIM_IRQHandler+0x130>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000ccb4:	06a2      	lsls	r2, r4, #26
9000ccb6:	d501      	bpl.n	9000ccbc <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000ccb8:	06b3      	lsls	r3, r6, #26
9000ccba:	d44d      	bmi.n	9000cd58 <HAL_TIM_IRQHandler+0xec>
}
9000ccbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000ccbe:	682b      	ldr	r3, [r5, #0]
9000ccc0:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000ccc4:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000ccc6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000ccc8:	2208      	movs	r2, #8
9000ccca:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000cccc:	69db      	ldr	r3, [r3, #28]
9000ccce:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000ccd2:	d174      	bne.n	9000cdbe <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000ccd4:	f7ff ffc2 	bl	9000cc5c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000ccd8:	4628      	mov	r0, r5
9000ccda:	f7ff ffc3 	bl	9000cc64 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ccde:	2300      	movs	r3, #0
9000cce0:	772b      	strb	r3, [r5, #28]
9000cce2:	e7d8      	b.n	9000cc96 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000cce4:	682b      	ldr	r3, [r5, #0]
9000cce6:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000ccea:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000ccec:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000ccee:	2204      	movs	r2, #4
9000ccf0:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000ccf2:	69db      	ldr	r3, [r3, #28]
9000ccf4:	079b      	lsls	r3, r3, #30
9000ccf6:	d15f      	bne.n	9000cdb8 <HAL_TIM_IRQHandler+0x14c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000ccf8:	f7ff ffb0 	bl	9000cc5c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000ccfc:	4628      	mov	r0, r5
9000ccfe:	f7ff ffb1 	bl	9000cc64 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cd02:	2300      	movs	r3, #0
9000cd04:	772b      	strb	r3, [r5, #28]
9000cd06:	e7c2      	b.n	9000cc8e <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000cd08:	682b      	ldr	r3, [r5, #0]
9000cd0a:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000cd0e:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000cd10:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000cd12:	2202      	movs	r2, #2
9000cd14:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000cd16:	699b      	ldr	r3, [r3, #24]
9000cd18:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000cd1c:	d149      	bne.n	9000cdb2 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cd1e:	f7ff ff9d 	bl	9000cc5c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cd22:	4628      	mov	r0, r5
9000cd24:	f7ff ff9e 	bl	9000cc64 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cd28:	2300      	movs	r3, #0
9000cd2a:	772b      	strb	r3, [r5, #28]
9000cd2c:	e7ab      	b.n	9000cc86 <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000cd2e:	f06f 0202 	mvn.w	r2, #2
9000cd32:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000cd34:	2201      	movs	r2, #1
9000cd36:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000cd38:	699b      	ldr	r3, [r3, #24]
9000cd3a:	079b      	lsls	r3, r3, #30
9000cd3c:	d136      	bne.n	9000cdac <HAL_TIM_IRQHandler+0x140>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000cd3e:	f7ff ff8d 	bl	9000cc5c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cd42:	4628      	mov	r0, r5
9000cd44:	f7ff ff8e 	bl	9000cc64 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cd48:	2300      	movs	r3, #0
9000cd4a:	772b      	strb	r3, [r5, #28]
9000cd4c:	e797      	b.n	9000cc7e <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000cd4e:	2f00      	cmp	r7, #0
9000cd50:	d0ac      	beq.n	9000ccac <HAL_TIM_IRQHandler+0x40>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000cd52:	0637      	lsls	r7, r6, #24
9000cd54:	d41a      	bmi.n	9000cd8c <HAL_TIM_IRQHandler+0x120>
9000cd56:	e7a9      	b.n	9000ccac <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000cd58:	682b      	ldr	r3, [r5, #0]
9000cd5a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000cd5e:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000cd60:	611a      	str	r2, [r3, #16]
}
9000cd62:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
      HAL_TIMEx_CommutCallback(htim);
9000cd66:	f000 b887 	b.w	9000ce78 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000cd6a:	682b      	ldr	r3, [r5, #0]
9000cd6c:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000cd70:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000cd72:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000cd74:	f7f7 f906 	bl	90003f84 <HAL_TIM_PeriodElapsedCallback>
9000cd78:	e791      	b.n	9000cc9e <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000cd7a:	682b      	ldr	r3, [r5, #0]
9000cd7c:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000cd80:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000cd82:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000cd84:	f000 f87a 	bl	9000ce7c <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000cd88:	2f00      	cmp	r7, #0
9000cd8a:	d08f      	beq.n	9000ccac <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000cd8c:	682b      	ldr	r3, [r5, #0]
9000cd8e:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000cd92:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000cd94:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000cd96:	f000 f873 	bl	9000ce80 <HAL_TIMEx_Break2Callback>
9000cd9a:	e787      	b.n	9000ccac <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000cd9c:	682b      	ldr	r3, [r5, #0]
9000cd9e:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000cda2:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000cda4:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000cda6:	f7ff ff5f 	bl	9000cc68 <HAL_TIM_TriggerCallback>
9000cdaa:	e783      	b.n	9000ccb4 <HAL_TIM_IRQHandler+0x48>
          HAL_TIM_IC_CaptureCallback(htim);
9000cdac:	f7ff ff58 	bl	9000cc60 <HAL_TIM_IC_CaptureCallback>
9000cdb0:	e7ca      	b.n	9000cd48 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000cdb2:	f7ff ff55 	bl	9000cc60 <HAL_TIM_IC_CaptureCallback>
9000cdb6:	e7b7      	b.n	9000cd28 <HAL_TIM_IRQHandler+0xbc>
        HAL_TIM_IC_CaptureCallback(htim);
9000cdb8:	f7ff ff52 	bl	9000cc60 <HAL_TIM_IC_CaptureCallback>
9000cdbc:	e7a1      	b.n	9000cd02 <HAL_TIM_IRQHandler+0x96>
        HAL_TIM_IC_CaptureCallback(htim);
9000cdbe:	f7ff ff4f 	bl	9000cc60 <HAL_TIM_IC_CaptureCallback>
9000cdc2:	e78c      	b.n	9000ccde <HAL_TIM_IRQHandler+0x72>

9000cdc4 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
9000cdc4:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
9000cdc8:	2b01      	cmp	r3, #1
9000cdca:	d04b      	beq.n	9000ce64 <HAL_TIMEx_MasterConfigSynchronization+0xa0>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
9000cdcc:	6803      	ldr	r3, [r0, #0]
9000cdce:	4602      	mov	r2, r0
  htim->State = HAL_TIM_STATE_BUSY;
9000cdd0:	2002      	movs	r0, #2
{
9000cdd2:	b430      	push	{r4, r5}

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
9000cdd4:	4d24      	ldr	r5, [pc, #144]	@ (9000ce68 <HAL_TIMEx_MasterConfigSynchronization+0xa4>)
  htim->State = HAL_TIM_STATE_BUSY;
9000cdd6:	f882 003d 	strb.w	r0, [r2, #61]	@ 0x3d
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
9000cdda:	42ab      	cmp	r3, r5
  tmpcr2 = htim->Instance->CR2;
9000cddc:	6858      	ldr	r0, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
9000cdde:	689c      	ldr	r4, [r3, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
9000cde0:	d029      	beq.n	9000ce36 <HAL_TIMEx_MasterConfigSynchronization+0x72>
9000cde2:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000cde6:	42ab      	cmp	r3, r5
9000cde8:	d025      	beq.n	9000ce36 <HAL_TIMEx_MasterConfigSynchronization+0x72>
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000cdea:	4d20      	ldr	r5, [pc, #128]	@ (9000ce6c <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
  tmpcr2 &= ~TIM_CR2_MMS;
9000cdec:	f020 0070 	bic.w	r0, r0, #112	@ 0x70
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000cdf0:	42ab      	cmp	r3, r5
9000cdf2:	bf18      	it	ne
9000cdf4:	f1b3 4f80 	cmpne.w	r3, #1073741824	@ 0x40000000
9000cdf8:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000cdfc:	bf0c      	ite	eq
9000cdfe:	f04f 0c01 	moveq.w	ip, #1
9000ce02:	f04f 0c00 	movne.w	ip, #0
9000ce06:	42ab      	cmp	r3, r5
9000ce08:	bf08      	it	eq
9000ce0a:	f04c 0c01 	orreq.w	ip, ip, #1
9000ce0e:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000ce12:	42ab      	cmp	r3, r5
9000ce14:	bf08      	it	eq
9000ce16:	f04c 0c01 	orreq.w	ip, ip, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
9000ce1a:	680d      	ldr	r5, [r1, #0]
9000ce1c:	4328      	orrs	r0, r5
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ce1e:	4d14      	ldr	r5, [pc, #80]	@ (9000ce70 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
  htim->Instance->CR2 = tmpcr2;
9000ce20:	6058      	str	r0, [r3, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ce22:	42ab      	cmp	r3, r5
9000ce24:	bf14      	ite	ne
9000ce26:	4660      	movne	r0, ip
9000ce28:	f04c 0001 	orreq.w	r0, ip, #1
9000ce2c:	b960      	cbnz	r0, 9000ce48 <HAL_TIMEx_MasterConfigSynchronization+0x84>
9000ce2e:	4811      	ldr	r0, [pc, #68]	@ (9000ce74 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
9000ce30:	4283      	cmp	r3, r0
9000ce32:	d009      	beq.n	9000ce48 <HAL_TIMEx_MasterConfigSynchronization+0x84>
9000ce34:	e00d      	b.n	9000ce52 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
9000ce36:	684d      	ldr	r5, [r1, #4]
    tmpcr2 &= ~TIM_CR2_MMS2;
9000ce38:	f420 0070 	bic.w	r0, r0, #15728640	@ 0xf00000
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
9000ce3c:	4328      	orrs	r0, r5
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
9000ce3e:	680d      	ldr	r5, [r1, #0]
  tmpcr2 &= ~TIM_CR2_MMS;
9000ce40:	f020 0070 	bic.w	r0, r0, #112	@ 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
9000ce44:	4328      	orrs	r0, r5
  htim->Instance->CR2 = tmpcr2;
9000ce46:	6058      	str	r0, [r3, #4]
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
9000ce48:	6889      	ldr	r1, [r1, #8]
    tmpsmcr &= ~TIM_SMCR_MSM;
9000ce4a:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
9000ce4e:	430c      	orrs	r4, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
9000ce50:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
9000ce52:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
9000ce54:	2101      	movs	r1, #1

  return HAL_OK;
9000ce56:	4618      	mov	r0, r3
  htim->State = HAL_TIM_STATE_READY;
9000ce58:	f882 103d 	strb.w	r1, [r2, #61]	@ 0x3d
  __HAL_UNLOCK(htim);
9000ce5c:	f882 303c 	strb.w	r3, [r2, #60]	@ 0x3c
}
9000ce60:	bc30      	pop	{r4, r5}
9000ce62:	4770      	bx	lr
  __HAL_LOCK(htim);
9000ce64:	2002      	movs	r0, #2
}
9000ce66:	4770      	bx	lr
9000ce68:	40010000 	.word	0x40010000
9000ce6c:	40000400 	.word	0x40000400
9000ce70:	40001800 	.word	0x40001800
9000ce74:	40014000 	.word	0x40014000

9000ce78 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000ce78:	4770      	bx	lr
9000ce7a:	bf00      	nop

9000ce7c <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000ce7c:	4770      	bx	lr
9000ce7e:	bf00      	nop

9000ce80 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000ce80:	4770      	bx	lr
9000ce82:	bf00      	nop

9000ce84 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
9000ce84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ce88:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000ce8c:	e9d1 8200 	ldrd	r8, r2, [r1]
9000ce90:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000ce92:	ea43 030e 	orr.w	r3, r3, lr
9000ce96:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000ce9a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000ce9e:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000cea0:	f1b8 0f00 	cmp.w	r8, #0
9000cea4:	d10f      	bne.n	9000cec6 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cea6:	433b      	orrs	r3, r7
9000cea8:	4313      	orrs	r3, r2
9000ceaa:	4a11      	ldr	r2, [pc, #68]	@ (9000cef0 <FMC_SDRAM_Init+0x6c>)
9000ceac:	ea43 030c 	orr.w	r3, r3, ip
9000ceb0:	4333      	orrs	r3, r6
9000ceb2:	432b      	orrs	r3, r5
9000ceb4:	4323      	orrs	r3, r4
9000ceb6:	430b      	orrs	r3, r1
9000ceb8:	6801      	ldr	r1, [r0, #0]
9000ceba:	400a      	ands	r2, r1
9000cebc:	4313      	orrs	r3, r2
9000cebe:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000cec0:	2000      	movs	r0, #0
9000cec2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cec6:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ceca:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cecc:	4332      	orrs	r2, r6
9000cece:	432a      	orrs	r2, r5
9000ced0:	4322      	orrs	r2, r4
9000ced2:	4c07      	ldr	r4, [pc, #28]	@ (9000cef0 <FMC_SDRAM_Init+0x6c>)
9000ced4:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ced6:	6801      	ldr	r1, [r0, #0]
9000ced8:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000cedc:	430b      	orrs	r3, r1
9000cede:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cee0:	6843      	ldr	r3, [r0, #4]
9000cee2:	401c      	ands	r4, r3
9000cee4:	4322      	orrs	r2, r4
9000cee6:	6042      	str	r2, [r0, #4]
}
9000cee8:	2000      	movs	r0, #0
9000ceea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000ceee:	bf00      	nop
9000cef0:	ffff8000 	.word	0xffff8000

9000cef4 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000cef4:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cef6:	68cc      	ldr	r4, [r1, #12]
9000cef8:	694b      	ldr	r3, [r1, #20]
9000cefa:	3c01      	subs	r4, #1
9000cefc:	688d      	ldr	r5, [r1, #8]
9000cefe:	698f      	ldr	r7, [r1, #24]
9000cf00:	3b01      	subs	r3, #1
9000cf02:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000cf06:	684c      	ldr	r4, [r1, #4]
9000cf08:	680e      	ldr	r6, [r1, #0]
9000cf0a:	3d01      	subs	r5, #1
9000cf0c:	3c01      	subs	r4, #1
9000cf0e:	051b      	lsls	r3, r3, #20
9000cf10:	022d      	lsls	r5, r5, #8
9000cf12:	3e01      	subs	r6, #1
9000cf14:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000cf18:	690c      	ldr	r4, [r1, #16]
9000cf1a:	1e79      	subs	r1, r7, #1
9000cf1c:	3c01      	subs	r4, #1
9000cf1e:	0609      	lsls	r1, r1, #24
9000cf20:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000cf22:	b972      	cbnz	r2, 9000cf42 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cf24:	ea4e 0303 	orr.w	r3, lr, r3
9000cf28:	6882      	ldr	r2, [r0, #8]
9000cf2a:	4333      	orrs	r3, r6
9000cf2c:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000cf30:	ea43 030c 	orr.w	r3, r3, ip
9000cf34:	432b      	orrs	r3, r5
9000cf36:	4323      	orrs	r3, r4
9000cf38:	430b      	orrs	r3, r1
9000cf3a:	4313      	orrs	r3, r2
9000cf3c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000cf3e:	2000      	movs	r0, #0
9000cf40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cf42:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cf46:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cf4a:	4a08      	ldr	r2, [pc, #32]	@ (9000cf6c <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cf4c:	4333      	orrs	r3, r6
9000cf4e:	4323      	orrs	r3, r4
9000cf50:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cf52:	6881      	ldr	r1, [r0, #8]
9000cf54:	400a      	ands	r2, r1
9000cf56:	ea42 020e 	orr.w	r2, r2, lr
9000cf5a:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cf5c:	68c2      	ldr	r2, [r0, #12]
9000cf5e:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000cf62:	4313      	orrs	r3, r2
9000cf64:	60c3      	str	r3, [r0, #12]
}
9000cf66:	2000      	movs	r0, #0
9000cf68:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000cf6a:	bf00      	nop
9000cf6c:	ff0f0fff 	.word	0xff0f0fff

9000cf70 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000cf70:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000cf72:	2200      	movs	r2, #0
{
9000cf74:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000cf76:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000cf7a:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000cf7e:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000cf82:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000cf86:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000cf88:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000cf8c:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000cf8e:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000cf90:	619a      	str	r2, [r3, #24]
}
9000cf92:	bc30      	pop	{r4, r5}
9000cf94:	4770      	bx	lr
9000cf96:	bf00      	nop

9000cf98 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000cf98:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cf9a:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000cf9e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cfa0:	6900      	ldr	r0, [r0, #16]
9000cfa2:	4323      	orrs	r3, r4
9000cfa4:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000cfa8:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000cfac:	4c05      	ldr	r4, [pc, #20]	@ (9000cfc4 <FMC_SDRAM_SendCommand+0x2c>)
9000cfae:	3901      	subs	r1, #1
9000cfb0:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000cfb2:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cfb4:	4323      	orrs	r3, r4
}
9000cfb6:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cfba:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000cfbe:	6113      	str	r3, [r2, #16]
}
9000cfc0:	4770      	bx	lr
9000cfc2:	bf00      	nop
9000cfc4:	ffc00000 	.word	0xffc00000

9000cfc8 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000cfc8:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cfca:	4b05      	ldr	r3, [pc, #20]	@ (9000cfe0 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000cfcc:	2000      	movs	r0, #0
{
9000cfce:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cfd0:	6954      	ldr	r4, [r2, #20]
9000cfd2:	4023      	ands	r3, r4
}
9000cfd4:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cfd8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000cfdc:	6153      	str	r3, [r2, #20]
}
9000cfde:	4770      	bx	lr
9000cfe0:	ffffc001 	.word	0xffffc001

9000cfe4 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000cfe4:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000cfe6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000cfea:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000cfec:	f002 fb4c 	bl	9000f688 <xTaskGetSchedulerState>
9000cff0:	2801      	cmp	r0, #1
9000cff2:	d100      	bne.n	9000cff6 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000cff4:	bd08      	pop	{r3, pc}
9000cff6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000cffa:	f000 bc33 	b.w	9000d864 <xPortSysTickHandler>
9000cffe:	bf00      	nop

9000d000 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000d000:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000d004:	b92b      	cbnz	r3, 9000d012 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000d006:	4b06      	ldr	r3, [pc, #24]	@ (9000d020 <osKernelInitialize+0x20>)
9000d008:	6818      	ldr	r0, [r3, #0]
9000d00a:	b928      	cbnz	r0, 9000d018 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000d00c:	2201      	movs	r2, #1
9000d00e:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000d010:	4770      	bx	lr
    stat = osErrorISR;
9000d012:	f06f 0005 	mvn.w	r0, #5
9000d016:	4770      	bx	lr
    } else {
      stat = osError;
9000d018:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000d01c:	4770      	bx	lr
9000d01e:	bf00      	nop
9000d020:	24008e9c 	.word	0x24008e9c

9000d024 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000d024:	b510      	push	{r4, lr}
9000d026:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000d02a:	b974      	cbnz	r4, 9000d04a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000d02c:	4b08      	ldr	r3, [pc, #32]	@ (9000d050 <osKernelStart+0x2c>)
9000d02e:	681a      	ldr	r2, [r3, #0]
9000d030:	2a01      	cmp	r2, #1
9000d032:	d107      	bne.n	9000d044 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000d034:	4907      	ldr	r1, [pc, #28]	@ (9000d054 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000d036:	2202      	movs	r2, #2
9000d038:	77cc      	strb	r4, [r1, #31]
9000d03a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000d03c:	f002 f8c2 	bl	9000f1c4 <vTaskStartScheduler>
      stat = osOK;
9000d040:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000d042:	bd10      	pop	{r4, pc}
      stat = osError;
9000d044:	f04f 30ff 	mov.w	r0, #4294967295
}
9000d048:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000d04a:	f06f 0005 	mvn.w	r0, #5
}
9000d04e:	bd10      	pop	{r4, pc}
9000d050:	24008e9c 	.word	0x24008e9c
9000d054:	e000ed00 	.word	0xe000ed00

9000d058 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000d058:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000d05a:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000d05c:	b087      	sub	sp, #28
  hTask = NULL;
9000d05e:	9505      	str	r5, [sp, #20]
9000d060:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000d064:	b300      	cbz	r0, 9000d0a8 <osThreadNew+0x50>
9000d066:	b9fb      	cbnz	r3, 9000d0a8 <osThreadNew+0x50>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000d068:	4614      	mov	r4, r2
9000d06a:	b302      	cbz	r2, 9000d0ae <osThreadNew+0x56>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000d06c:	6996      	ldr	r6, [r2, #24]
9000d06e:	b9c6      	cbnz	r6, 9000d0a2 <osThreadNew+0x4a>
9000d070:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000d072:	6863      	ldr	r3, [r4, #4]
9000d074:	07db      	lsls	r3, r3, #31
9000d076:	d417      	bmi.n	9000d0a8 <osThreadNew+0x50>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000d078:	6963      	ldr	r3, [r4, #20]
9000d07a:	b32b      	cbz	r3, 9000d0c8 <osThreadNew+0x70>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000d07c:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000d07e:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000d080:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000d084:	68e7      	ldr	r7, [r4, #12]
9000d086:	b30d      	cbz	r5, 9000d0cc <osThreadNew+0x74>
9000d088:	2f5f      	cmp	r7, #95	@ 0x5f
9000d08a:	d90d      	bls.n	9000d0a8 <osThreadNew+0x50>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000d08c:	6924      	ldr	r4, [r4, #16]
9000d08e:	b15b      	cbz	r3, 9000d0a8 <osThreadNew+0x50>
9000d090:	b154      	cbz	r4, 9000d0a8 <osThreadNew+0x50>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000d092:	460b      	mov	r3, r1
9000d094:	9600      	str	r6, [sp, #0]
9000d096:	4661      	mov	r1, ip
9000d098:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000d09c:	f001 ff00 	bl	9000eea0 <xTaskCreateStatic>
9000d0a0:	e003      	b.n	9000d0aa <osThreadNew+0x52>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000d0a2:	1e72      	subs	r2, r6, #1
9000d0a4:	2a37      	cmp	r2, #55	@ 0x37
9000d0a6:	d9e4      	bls.n	9000d072 <osThreadNew+0x1a>
        return (NULL);
9000d0a8:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000d0aa:	b007      	add	sp, #28
9000d0ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000d0ae:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000d0b0:	2618      	movs	r6, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000d0b2:	460b      	mov	r3, r1
9000d0b4:	4621      	mov	r1, r4
9000d0b6:	ac05      	add	r4, sp, #20
9000d0b8:	9600      	str	r6, [sp, #0]
9000d0ba:	9401      	str	r4, [sp, #4]
9000d0bc:	f001 ff9a 	bl	9000eff4 <xTaskCreate>
9000d0c0:	2801      	cmp	r0, #1
9000d0c2:	d1f1      	bne.n	9000d0a8 <osThreadNew+0x50>
  return ((osThreadId_t)hTask);
9000d0c4:	9805      	ldr	r0, [sp, #20]
9000d0c6:	e7f0      	b.n	9000d0aa <osThreadNew+0x52>
    stack = configMINIMAL_STACK_SIZE;
9000d0c8:	2280      	movs	r2, #128	@ 0x80
9000d0ca:	e7d8      	b.n	9000d07e <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000d0cc:	2f00      	cmp	r7, #0
9000d0ce:	d1eb      	bne.n	9000d0a8 <osThreadNew+0x50>
9000d0d0:	6923      	ldr	r3, [r4, #16]
9000d0d2:	2b00      	cmp	r3, #0
9000d0d4:	d1e8      	bne.n	9000d0a8 <osThreadNew+0x50>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000d0d6:	b292      	uxth	r2, r2
9000d0d8:	4664      	mov	r4, ip
9000d0da:	e7ea      	b.n	9000d0b2 <osThreadNew+0x5a>

9000d0dc <osDelay>:
9000d0dc:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000d0e0:	b93a      	cbnz	r2, 9000d0f2 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000d0e2:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000d0e4:	b908      	cbnz	r0, 9000d0ea <osDelay+0xe>
    stat = osOK;
9000d0e6:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000d0e8:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000d0ea:	f002 f815 	bl	9000f118 <vTaskDelay>
    stat = osOK;
9000d0ee:	2000      	movs	r0, #0
}
9000d0f0:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000d0f2:	f06f 0005 	mvn.w	r0, #5
}
9000d0f6:	4770      	bx	lr

9000d0f8 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000d0f8:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d0fa:	b083      	sub	sp, #12
9000d0fc:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000d100:	b98e      	cbnz	r6, 9000d126 <osSemaphoreNew+0x2e>
9000d102:	4605      	mov	r5, r0
9000d104:	b178      	cbz	r0, 9000d126 <osSemaphoreNew+0x2e>
9000d106:	4288      	cmp	r0, r1
9000d108:	460f      	mov	r7, r1
9000d10a:	d30c      	bcc.n	9000d126 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000d10c:	4614      	mov	r4, r2
9000d10e:	b172      	cbz	r2, 9000d12e <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000d110:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000d114:	b14a      	cbz	r2, 9000d12a <osSemaphoreNew+0x32>
9000d116:	2b4f      	cmp	r3, #79	@ 0x4f
9000d118:	d905      	bls.n	9000d126 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000d11a:	2801      	cmp	r0, #1
9000d11c:	d02f      	beq.n	9000d17e <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000d11e:	f000 fd7f 	bl	9000dc20 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000d122:	4605      	mov	r5, r0
9000d124:	b968      	cbnz	r0, 9000d142 <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000d126:	2500      	movs	r5, #0
9000d128:	e010      	b.n	9000d14c <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000d12a:	2b00      	cmp	r3, #0
9000d12c:	d1fb      	bne.n	9000d126 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000d12e:	2d01      	cmp	r5, #1
9000d130:	d00f      	beq.n	9000d152 <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000d132:	4628      	mov	r0, r5
9000d134:	4639      	mov	r1, r7
9000d136:	f000 fdd3 	bl	9000dce0 <xQueueCreateCountingSemaphore>
9000d13a:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000d13c:	2d00      	cmp	r5, #0
9000d13e:	d0f2      	beq.n	9000d126 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000d140:	b104      	cbz	r4, 9000d144 <osSemaphoreNew+0x4c>
          name = attr->name;
9000d142:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000d144:	4621      	mov	r1, r4
9000d146:	4628      	mov	r0, r5
9000d148:	f001 fc04 	bl	9000e954 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000d14c:	4628      	mov	r0, r5
9000d14e:	b003      	add	sp, #12
9000d150:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000d152:	4628      	mov	r0, r5
9000d154:	2203      	movs	r2, #3
9000d156:	2100      	movs	r1, #0
9000d158:	f000 fd20 	bl	9000db9c <xQueueGenericCreate>
9000d15c:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000d15e:	2d00      	cmp	r5, #0
9000d160:	d0e1      	beq.n	9000d126 <osSemaphoreNew+0x2e>
9000d162:	2f00      	cmp	r7, #0
9000d164:	d0ea      	beq.n	9000d13c <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d166:	2300      	movs	r3, #0
9000d168:	4628      	mov	r0, r5
9000d16a:	461a      	mov	r2, r3
9000d16c:	4619      	mov	r1, r3
9000d16e:	f000 fdfd 	bl	9000dd6c <xQueueGenericSend>
9000d172:	2801      	cmp	r0, #1
9000d174:	d0e4      	beq.n	9000d140 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000d176:	4628      	mov	r0, r5
9000d178:	f001 fba6 	bl	9000e8c8 <vQueueDelete>
      if (hSemaphore != NULL) {
9000d17c:	e7d3      	b.n	9000d126 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000d17e:	4613      	mov	r3, r2
9000d180:	2203      	movs	r2, #3
9000d182:	4631      	mov	r1, r6
9000d184:	9200      	str	r2, [sp, #0]
9000d186:	4632      	mov	r2, r6
9000d188:	f000 fc9c 	bl	9000dac4 <xQueueGenericCreateStatic>
9000d18c:	4605      	mov	r5, r0
9000d18e:	e7e6      	b.n	9000d15e <osSemaphoreNew+0x66>

9000d190 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d190:	b360      	cbz	r0, 9000d1ec <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000d192:	b510      	push	{r4, lr}
9000d194:	460c      	mov	r4, r1
9000d196:	b082      	sub	sp, #8
9000d198:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d19c:	b1b3      	cbz	r3, 9000d1cc <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000d19e:	bb11      	cbnz	r1, 9000d1e6 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d1a0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d1a2:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d1a4:	f001 fb32 	bl	9000e80c <xQueueReceiveFromISR>
9000d1a8:	2801      	cmp	r0, #1
9000d1aa:	d118      	bne.n	9000d1de <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d1ac:	9b01      	ldr	r3, [sp, #4]
9000d1ae:	b913      	cbnz	r3, 9000d1b6 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000d1b0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d1b2:	b002      	add	sp, #8
9000d1b4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000d1b6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d1ba:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d1be:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d1c2:	f3bf 8f4f 	dsb	sy
9000d1c6:	f3bf 8f6f 	isb	sy
9000d1ca:	e7f1      	b.n	9000d1b0 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000d1cc:	f001 f992 	bl	9000e4f4 <xQueueSemaphoreTake>
9000d1d0:	2801      	cmp	r0, #1
9000d1d2:	d0ed      	beq.n	9000d1b0 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000d1d4:	b11c      	cbz	r4, 9000d1de <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000d1d6:	f06f 0001 	mvn.w	r0, #1
}
9000d1da:	b002      	add	sp, #8
9000d1dc:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000d1de:	f06f 0002 	mvn.w	r0, #2
}
9000d1e2:	b002      	add	sp, #8
9000d1e4:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000d1e6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d1ea:	e7e2      	b.n	9000d1b2 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000d1ec:	f06f 0003 	mvn.w	r0, #3
}
9000d1f0:	4770      	bx	lr
9000d1f2:	bf00      	nop

9000d1f4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d1f4:	b328      	cbz	r0, 9000d242 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000d1f6:	b500      	push	{lr}
9000d1f8:	b083      	sub	sp, #12
9000d1fa:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d1fe:	b19b      	cbz	r3, 9000d228 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000d200:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d202:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000d204:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d206:	f000 ff99 	bl	9000e13c <xQueueGiveFromISR>
9000d20a:	2801      	cmp	r0, #1
9000d20c:	d116      	bne.n	9000d23c <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000d20e:	9b01      	ldr	r3, [sp, #4]
9000d210:	b183      	cbz	r3, 9000d234 <osSemaphoreRelease+0x40>
9000d212:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d216:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d21a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d21e:	f3bf 8f4f 	dsb	sy
9000d222:	f3bf 8f6f 	isb	sy
9000d226:	e005      	b.n	9000d234 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d228:	461a      	mov	r2, r3
9000d22a:	4619      	mov	r1, r3
9000d22c:	f000 fd9e 	bl	9000dd6c <xQueueGenericSend>
9000d230:	2801      	cmp	r0, #1
9000d232:	d103      	bne.n	9000d23c <osSemaphoreRelease+0x48>
  stat = osOK;
9000d234:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000d236:	b003      	add	sp, #12
9000d238:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000d23c:	f06f 0002 	mvn.w	r0, #2
9000d240:	e7f9      	b.n	9000d236 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000d242:	f06f 0003 	mvn.w	r0, #3
}
9000d246:	4770      	bx	lr

9000d248 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000d248:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d24a:	b083      	sub	sp, #12
9000d24c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000d250:	b987      	cbnz	r7, 9000d274 <osMessageQueueNew+0x2c>
9000d252:	4605      	mov	r5, r0
9000d254:	b170      	cbz	r0, 9000d274 <osMessageQueueNew+0x2c>
9000d256:	b169      	cbz	r1, 9000d274 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000d258:	4614      	mov	r4, r2
9000d25a:	b17a      	cbz	r2, 9000d27c <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d25c:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000d260:	b1c3      	cbz	r3, 9000d294 <osMessageQueueNew+0x4c>
9000d262:	2a4f      	cmp	r2, #79	@ 0x4f
9000d264:	d906      	bls.n	9000d274 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d266:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d268:	b122      	cbz	r2, 9000d274 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d26a:	fb01 f505 	mul.w	r5, r1, r5
9000d26e:	6966      	ldr	r6, [r4, #20]
9000d270:	42ae      	cmp	r6, r5
9000d272:	d21e      	bcs.n	9000d2b2 <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000d274:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000d276:	4628      	mov	r0, r5
9000d278:	b003      	add	sp, #12
9000d27a:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000d27c:	f000 fc8e 	bl	9000db9c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d280:	4605      	mov	r5, r0
9000d282:	2800      	cmp	r0, #0
9000d284:	d0f6      	beq.n	9000d274 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000d286:	4628      	mov	r0, r5
9000d288:	4621      	mov	r1, r4
9000d28a:	f001 fb63 	bl	9000e954 <vQueueAddToRegistry>
}
9000d28e:	4628      	mov	r0, r5
9000d290:	b003      	add	sp, #12
9000d292:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000d294:	2a00      	cmp	r2, #0
9000d296:	d1ed      	bne.n	9000d274 <osMessageQueueNew+0x2c>
9000d298:	6923      	ldr	r3, [r4, #16]
9000d29a:	2b00      	cmp	r3, #0
9000d29c:	d1ea      	bne.n	9000d274 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000d29e:	6962      	ldr	r2, [r4, #20]
9000d2a0:	2a00      	cmp	r2, #0
9000d2a2:	d1e7      	bne.n	9000d274 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000d2a4:	f000 fc7a 	bl	9000db9c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d2a8:	4605      	mov	r5, r0
9000d2aa:	2800      	cmp	r0, #0
9000d2ac:	d0e2      	beq.n	9000d274 <osMessageQueueNew+0x2c>
        name = attr->name;
9000d2ae:	6824      	ldr	r4, [r4, #0]
9000d2b0:	e7e9      	b.n	9000d286 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000d2b2:	9700      	str	r7, [sp, #0]
9000d2b4:	f000 fc06 	bl	9000dac4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000d2b8:	4605      	mov	r5, r0
9000d2ba:	2800      	cmp	r0, #0
9000d2bc:	d1f7      	bne.n	9000d2ae <osMessageQueueNew+0x66>
9000d2be:	e7d9      	b.n	9000d274 <osMessageQueueNew+0x2c>

9000d2c0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000d2c0:	b560      	push	{r5, r6, lr}
9000d2c2:	461e      	mov	r6, r3
9000d2c4:	b083      	sub	sp, #12
9000d2c6:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d2ca:	fab0 f580 	clz	r5, r0
9000d2ce:	fab1 f381 	clz	r3, r1
9000d2d2:	096d      	lsrs	r5, r5, #5
9000d2d4:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000d2d6:	b1da      	cbz	r2, 9000d310 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d2d8:	2e00      	cmp	r6, #0
9000d2da:	bf18      	it	ne
9000d2dc:	f043 0301 	orrne.w	r3, r3, #1
9000d2e0:	bb33      	cbnz	r3, 9000d330 <osMessageQueuePut+0x70>
9000d2e2:	bb2d      	cbnz	r5, 9000d330 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d2e4:	462b      	mov	r3, r5
9000d2e6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d2e8:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d2ea:	f000 fec1 	bl	9000e070 <xQueueGenericSendFromISR>
9000d2ee:	2801      	cmp	r0, #1
9000d2f0:	d11a      	bne.n	9000d328 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d2f2:	9b01      	ldr	r3, [sp, #4]
9000d2f4:	b14b      	cbz	r3, 9000d30a <osMessageQueuePut+0x4a>
9000d2f6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d2fa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d2fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d302:	f3bf 8f4f 	dsb	sy
9000d306:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d30a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d30c:	b003      	add	sp, #12
9000d30e:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d310:	b975      	cbnz	r5, 9000d330 <osMessageQueuePut+0x70>
9000d312:	b96b      	cbnz	r3, 9000d330 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d314:	4632      	mov	r2, r6
9000d316:	f000 fd29 	bl	9000dd6c <xQueueGenericSend>
9000d31a:	2801      	cmp	r0, #1
9000d31c:	d0f5      	beq.n	9000d30a <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000d31e:	b11e      	cbz	r6, 9000d328 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000d320:	f06f 0001 	mvn.w	r0, #1
}
9000d324:	b003      	add	sp, #12
9000d326:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000d328:	f06f 0002 	mvn.w	r0, #2
}
9000d32c:	b003      	add	sp, #12
9000d32e:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000d330:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d334:	e7ea      	b.n	9000d30c <osMessageQueuePut+0x4c>
9000d336:	bf00      	nop

9000d338 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000d338:	b570      	push	{r4, r5, r6, lr}
9000d33a:	461e      	mov	r6, r3
9000d33c:	b082      	sub	sp, #8
9000d33e:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d342:	fab0 f580 	clz	r5, r0
9000d346:	fab1 f481 	clz	r4, r1
9000d34a:	096d      	lsrs	r5, r5, #5
9000d34c:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000d34e:	b1d3      	cbz	r3, 9000d386 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d350:	2e00      	cmp	r6, #0
9000d352:	bf18      	it	ne
9000d354:	f044 0401 	orrne.w	r4, r4, #1
9000d358:	bb2c      	cbnz	r4, 9000d3a6 <osMessageQueueGet+0x6e>
9000d35a:	bb25      	cbnz	r5, 9000d3a6 <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d35c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d35e:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d360:	f001 fa54 	bl	9000e80c <xQueueReceiveFromISR>
9000d364:	2801      	cmp	r0, #1
9000d366:	d11a      	bne.n	9000d39e <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d368:	9b01      	ldr	r3, [sp, #4]
9000d36a:	b14b      	cbz	r3, 9000d380 <osMessageQueueGet+0x48>
9000d36c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d370:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d374:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d378:	f3bf 8f4f 	dsb	sy
9000d37c:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d380:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d382:	b002      	add	sp, #8
9000d384:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d386:	b975      	cbnz	r5, 9000d3a6 <osMessageQueueGet+0x6e>
9000d388:	b96c      	cbnz	r4, 9000d3a6 <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d38a:	4632      	mov	r2, r6
9000d38c:	f000 ff2c 	bl	9000e1e8 <xQueueReceive>
9000d390:	2801      	cmp	r0, #1
9000d392:	d0f5      	beq.n	9000d380 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000d394:	b11e      	cbz	r6, 9000d39e <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000d396:	f06f 0001 	mvn.w	r0, #1
}
9000d39a:	b002      	add	sp, #8
9000d39c:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000d39e:	f06f 0002 	mvn.w	r0, #2
}
9000d3a2:	b002      	add	sp, #8
9000d3a4:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000d3a6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d3aa:	e7ea      	b.n	9000d382 <osMessageQueueGet+0x4a>

9000d3ac <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d3ac:	4b04      	ldr	r3, [pc, #16]	@ (9000d3c0 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000d3ae:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d3b0:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d3b2:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000d3b4:	4c03      	ldr	r4, [pc, #12]	@ (9000d3c4 <vApplicationGetIdleTaskMemory+0x18>)
9000d3b6:	600c      	str	r4, [r1, #0]
}
9000d3b8:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d3bc:	6013      	str	r3, [r2, #0]
}
9000d3be:	4770      	bx	lr
9000d3c0:	24008e3c 	.word	0x24008e3c
9000d3c4:	24008c3c 	.word	0x24008c3c

9000d3c8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d3c8:	4b05      	ldr	r3, [pc, #20]	@ (9000d3e0 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000d3ca:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d3cc:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d3ce:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000d3d2:	4c04      	ldr	r4, [pc, #16]	@ (9000d3e4 <vApplicationGetTimerTaskMemory+0x1c>)
9000d3d4:	600c      	str	r4, [r1, #0]
}
9000d3d6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d3da:	6013      	str	r3, [r2, #0]
}
9000d3dc:	4770      	bx	lr
9000d3de:	bf00      	nop
9000d3e0:	24008bdc 	.word	0x24008bdc
9000d3e4:	240087dc 	.word	0x240087dc

9000d3e8 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000d3e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000d3ec:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000d3ee:	f001 ff85 	bl	9000f2fc <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000d3f2:	4a53      	ldr	r2, [pc, #332]	@ (9000d540 <pvPortMalloc+0x158>)
9000d3f4:	6815      	ldr	r5, [r2, #0]
9000d3f6:	2d00      	cmp	r5, #0
9000d3f8:	d035      	beq.n	9000d466 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000d3fa:	4b52      	ldr	r3, [pc, #328]	@ (9000d544 <pvPortMalloc+0x15c>)
9000d3fc:	681e      	ldr	r6, [r3, #0]
9000d3fe:	4234      	tst	r4, r6
9000d400:	d12b      	bne.n	9000d45a <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000d402:	b354      	cbz	r4, 9000d45a <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000d404:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000d408:	0764      	lsls	r4, r4, #29
9000d40a:	d002      	beq.n	9000d412 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000d40c:	f020 0007 	bic.w	r0, r0, #7
9000d410:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000d412:	b310      	cbz	r0, 9000d45a <pvPortMalloc+0x72>
9000d414:	f8df e140 	ldr.w	lr, [pc, #320]	@ 9000d558 <pvPortMalloc+0x170>
9000d418:	f8de c000 	ldr.w	ip, [lr]
9000d41c:	4584      	cmp	ip, r0
9000d41e:	d31c      	bcc.n	9000d45a <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000d420:	4c49      	ldr	r4, [pc, #292]	@ (9000d548 <pvPortMalloc+0x160>)
9000d422:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d424:	e003      	b.n	9000d42e <pvPortMalloc+0x46>
9000d426:	681a      	ldr	r2, [r3, #0]
9000d428:	b122      	cbz	r2, 9000d434 <pvPortMalloc+0x4c>
9000d42a:	461c      	mov	r4, r3
9000d42c:	4613      	mov	r3, r2
9000d42e:	6859      	ldr	r1, [r3, #4]
9000d430:	4281      	cmp	r1, r0
9000d432:	d3f8      	bcc.n	9000d426 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000d434:	42ab      	cmp	r3, r5
9000d436:	d010      	beq.n	9000d45a <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d438:	681a      	ldr	r2, [r3, #0]
9000d43a:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d43c:	1a0a      	subs	r2, r1, r0
9000d43e:	2a10      	cmp	r2, #16
9000d440:	d947      	bls.n	9000d4d2 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000d442:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000d444:	0761      	lsls	r1, r4, #29
9000d446:	d02d      	beq.n	9000d4a4 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000d448:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d44c:	f383 8811 	msr	BASEPRI, r3
9000d450:	f3bf 8f6f 	isb	sy
9000d454:	f3bf 8f4f 	dsb	sy
9000d458:	e7fe      	b.n	9000d458 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000d45a:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000d45c:	f001 ff56 	bl	9000f30c <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000d460:	4620      	mov	r0, r4
9000d462:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000d466:	4b39      	ldr	r3, [pc, #228]	@ (9000d54c <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d468:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d46c:	4e36      	ldr	r6, [pc, #216]	@ (9000d548 <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000d46e:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000d470:	4d37      	ldr	r5, [pc, #220]	@ (9000d550 <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000d472:	bf18      	it	ne
9000d474:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d476:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d47a:	bf18      	it	ne
9000d47c:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000d480:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000d482:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d484:	6033      	str	r3, [r6, #0]
9000d486:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000d488:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000d48a:	1aeb      	subs	r3, r5, r3
}
9000d48c:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000d48e:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d492:	4a30      	ldr	r2, [pc, #192]	@ (9000d554 <pvPortMalloc+0x16c>)
9000d494:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d496:	4a30      	ldr	r2, [pc, #192]	@ (9000d558 <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000d498:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d49c:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d49e:	4b29      	ldr	r3, [pc, #164]	@ (9000d544 <pvPortMalloc+0x15c>)
9000d4a0:	6018      	str	r0, [r3, #0]
}
9000d4a2:	e7ac      	b.n	9000d3fe <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000d4a4:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d4a6:	4a28      	ldr	r2, [pc, #160]	@ (9000d548 <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
9000d4a8:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d4aa:	4617      	mov	r7, r2
9000d4ac:	6812      	ldr	r2, [r2, #0]
9000d4ae:	4294      	cmp	r4, r2
9000d4b0:	d8fb      	bhi.n	9000d4aa <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d4b2:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d4b4:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d4b8:	eb07 0901 	add.w	r9, r7, r1
9000d4bc:	454c      	cmp	r4, r9
9000d4be:	d028      	beq.n	9000d512 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4c0:	eb04 0108 	add.w	r1, r4, r8
9000d4c4:	428a      	cmp	r2, r1
9000d4c6:	d02e      	beq.n	9000d526 <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000d4c8:	4601      	mov	r1, r0
9000d4ca:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000d4cc:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d4ce:	bf18      	it	ne
9000d4d0:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d4d2:	4820      	ldr	r0, [pc, #128]	@ (9000d554 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d4d4:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
9000d4d8:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d4da:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d4dc:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d4de:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d4e2:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000d4e4:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d4e8:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000d4ea:	bf38      	it	cc
9000d4ec:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000d4ee:	481b      	ldr	r0, [pc, #108]	@ (9000d55c <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
9000d4f0:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000d4f2:	6802      	ldr	r2, [r0, #0]
9000d4f4:	3201      	adds	r2, #1
9000d4f6:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000d4f8:	f001 ff08 	bl	9000f30c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000d4fc:	0763      	lsls	r3, r4, #29
9000d4fe:	d0af      	beq.n	9000d460 <pvPortMalloc+0x78>
9000d500:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d504:	f383 8811 	msr	BASEPRI, r3
9000d508:	f3bf 8f6f 	isb	sy
9000d50c:	f3bf 8f4f 	dsb	sy
9000d510:	e7fe      	b.n	9000d510 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d512:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d514:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d518:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d51c:	428a      	cmp	r2, r1
9000d51e:	d001      	beq.n	9000d524 <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d520:	6859      	ldr	r1, [r3, #4]
9000d522:	e7d6      	b.n	9000d4d2 <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d524:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d526:	42aa      	cmp	r2, r5
9000d528:	d006      	beq.n	9000d538 <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d52a:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d52c:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d52e:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d530:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d532:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d534:	6859      	ldr	r1, [r3, #4]
9000d536:	e7c9      	b.n	9000d4cc <pvPortMalloc+0xe4>
9000d538:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000d53a:	6022      	str	r2, [r4, #0]
9000d53c:	e7c6      	b.n	9000d4cc <pvPortMalloc+0xe4>
9000d53e:	bf00      	nop
9000d540:	24008eb4 	.word	0x24008eb4
9000d544:	24008ea0 	.word	0x24008ea0
9000d548:	24008eb8 	.word	0x24008eb8
9000d54c:	24008ec0 	.word	0x24008ec0
9000d550:	24021558 	.word	0x24021558
9000d554:	24008eac 	.word	0x24008eac
9000d558:	24008eb0 	.word	0x24008eb0
9000d55c:	24008ea8 	.word	0x24008ea8

9000d560 <vPortFree>:
	if( pv != NULL )
9000d560:	b1d0      	cbz	r0, 9000d598 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d562:	4a2d      	ldr	r2, [pc, #180]	@ (9000d618 <vPortFree+0xb8>)
9000d564:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000d568:	6812      	ldr	r2, [r2, #0]
9000d56a:	4213      	tst	r3, r2
9000d56c:	d00b      	beq.n	9000d586 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000d56e:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000d572:	b191      	cbz	r1, 9000d59a <vPortFree+0x3a>
9000d574:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d578:	f383 8811 	msr	BASEPRI, r3
9000d57c:	f3bf 8f6f 	isb	sy
9000d580:	f3bf 8f4f 	dsb	sy
9000d584:	e7fe      	b.n	9000d584 <vPortFree+0x24>
9000d586:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d58a:	f383 8811 	msr	BASEPRI, r3
9000d58e:	f3bf 8f6f 	isb	sy
9000d592:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d596:	e7fe      	b.n	9000d596 <vPortFree+0x36>
9000d598:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d59a:	ea23 0302 	bic.w	r3, r3, r2
{
9000d59e:	b530      	push	{r4, r5, lr}
9000d5a0:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d5a2:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000d5a6:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d5aa:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000d5ac:	f001 fea6 	bl	9000f2fc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d5b0:	4a1a      	ldr	r2, [pc, #104]	@ (9000d61c <vPortFree+0xbc>)
9000d5b2:	9801      	ldr	r0, [sp, #4]
9000d5b4:	6813      	ldr	r3, [r2, #0]
9000d5b6:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000d5ba:	440b      	add	r3, r1
9000d5bc:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d5be:	4b18      	ldr	r3, [pc, #96]	@ (9000d620 <vPortFree+0xc0>)
9000d5c0:	461a      	mov	r2, r3
9000d5c2:	681b      	ldr	r3, [r3, #0]
9000d5c4:	429c      	cmp	r4, r3
9000d5c6:	d8fb      	bhi.n	9000d5c0 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d5c8:	6855      	ldr	r5, [r2, #4]
9000d5ca:	eb02 0e05 	add.w	lr, r2, r5
9000d5ce:	4574      	cmp	r4, lr
9000d5d0:	d011      	beq.n	9000d5f6 <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d5d2:	eb04 0c01 	add.w	ip, r4, r1
9000d5d6:	4563      	cmp	r3, ip
9000d5d8:	d013      	beq.n	9000d602 <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000d5da:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000d5de:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d5e0:	bf18      	it	ne
9000d5e2:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000d5e4:	4a0f      	ldr	r2, [pc, #60]	@ (9000d624 <vPortFree+0xc4>)
9000d5e6:	6813      	ldr	r3, [r2, #0]
9000d5e8:	3301      	adds	r3, #1
9000d5ea:	6013      	str	r3, [r2, #0]
}
9000d5ec:	b003      	add	sp, #12
9000d5ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000d5f2:	f001 be8b 	b.w	9000f30c <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d5f6:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d5f8:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d5fa:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d5fc:	4283      	cmp	r3, r0
9000d5fe:	d1f1      	bne.n	9000d5e4 <vPortFree+0x84>
9000d600:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d602:	4809      	ldr	r0, [pc, #36]	@ (9000d628 <vPortFree+0xc8>)
9000d604:	6800      	ldr	r0, [r0, #0]
9000d606:	4283      	cmp	r3, r0
9000d608:	d003      	beq.n	9000d612 <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d60a:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d60e:	4429      	add	r1, r5
9000d610:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d612:	6020      	str	r0, [r4, #0]
9000d614:	e7e3      	b.n	9000d5de <vPortFree+0x7e>
9000d616:	bf00      	nop
9000d618:	24008ea0 	.word	0x24008ea0
9000d61c:	24008eb0 	.word	0x24008eb0
9000d620:	24008eb8 	.word	0x24008eb8
9000d624:	24008ea4 	.word	0x24008ea4
9000d628:	24008eb4 	.word	0x24008eb4

9000d62c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d62c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d630:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d634:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d636:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d638:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d63a:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d63c:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000d640:	4770      	bx	lr
9000d642:	bf00      	nop

9000d644 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000d644:	2300      	movs	r3, #0
9000d646:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000d648:	4770      	bx	lr
9000d64a:	bf00      	nop

9000d64c <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d64c:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000d64e:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000d650:	3301      	adds	r3, #1
{
9000d652:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d654:	6894      	ldr	r4, [r2, #8]
9000d656:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000d65a:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000d65c:	6091      	str	r1, [r2, #8]
}
9000d65e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000d662:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d664:	6003      	str	r3, [r0, #0]
}
9000d666:	4770      	bx	lr

9000d668 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000d668:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000d66a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000d66c:	1c6b      	adds	r3, r5, #1
9000d66e:	d010      	beq.n	9000d692 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000d670:	f100 0308 	add.w	r3, r0, #8
9000d674:	461c      	mov	r4, r3
9000d676:	685b      	ldr	r3, [r3, #4]
9000d678:	681a      	ldr	r2, [r3, #0]
9000d67a:	42aa      	cmp	r2, r5
9000d67c:	d9fa      	bls.n	9000d674 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d67e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d680:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000d682:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000d684:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000d686:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000d688:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000d68a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d68c:	6002      	str	r2, [r0, #0]
}
9000d68e:	bc30      	pop	{r4, r5}
9000d690:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000d692:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d694:	6863      	ldr	r3, [r4, #4]
9000d696:	e7f2      	b.n	9000d67e <vListInsert+0x16>

9000d698 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000d698:	6903      	ldr	r3, [r0, #16]
{
9000d69a:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000d69c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d69e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000d6a2:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000d6a4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d6a8:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000d6aa:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000d6ac:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000d6b0:	bf08      	it	eq
9000d6b2:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000d6b4:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000d6b6:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000d6b8:	3a01      	subs	r2, #1
9000d6ba:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000d6bc:	6818      	ldr	r0, [r3, #0]
}
9000d6be:	4770      	bx	lr

9000d6c0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000d6c0:	4808      	ldr	r0, [pc, #32]	@ (9000d6e4 <prvPortStartFirstTask+0x24>)
9000d6c2:	6800      	ldr	r0, [r0, #0]
9000d6c4:	6800      	ldr	r0, [r0, #0]
9000d6c6:	f380 8808 	msr	MSP, r0
9000d6ca:	f04f 0000 	mov.w	r0, #0
9000d6ce:	f380 8814 	msr	CONTROL, r0
9000d6d2:	b662      	cpsie	i
9000d6d4:	b661      	cpsie	f
9000d6d6:	f3bf 8f4f 	dsb	sy
9000d6da:	f3bf 8f6f 	isb	sy
9000d6de:	df00      	svc	0
9000d6e0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000d6e2:	0000      	.short	0x0000
9000d6e4:	e000ed08 	.word	0xe000ed08

9000d6e8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000d6e8:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000d6f8 <vPortEnableVFP+0x10>
9000d6ec:	6801      	ldr	r1, [r0, #0]
9000d6ee:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000d6f2:	6001      	str	r1, [r0, #0]
9000d6f4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000d6f6:	0000      	.short	0x0000
9000d6f8:	e000ed88 	.word	0xe000ed88

9000d6fc <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000d6fc:	4b0e      	ldr	r3, [pc, #56]	@ (9000d738 <prvTaskExitError+0x3c>)
{
9000d6fe:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000d700:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000d702:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000d704:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000d706:	3301      	adds	r3, #1
9000d708:	d008      	beq.n	9000d71c <prvTaskExitError+0x20>
9000d70a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d70e:	f383 8811 	msr	BASEPRI, r3
9000d712:	f3bf 8f6f 	isb	sy
9000d716:	f3bf 8f4f 	dsb	sy
9000d71a:	e7fe      	b.n	9000d71a <prvTaskExitError+0x1e>
9000d71c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d720:	f383 8811 	msr	BASEPRI, r3
9000d724:	f3bf 8f6f 	isb	sy
9000d728:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d72c:	9b01      	ldr	r3, [sp, #4]
9000d72e:	2b00      	cmp	r3, #0
9000d730:	d0fc      	beq.n	9000d72c <prvTaskExitError+0x30>
}
9000d732:	b002      	add	sp, #8
9000d734:	4770      	bx	lr
9000d736:	bf00      	nop
9000d738:	24000094 	.word	0x24000094

9000d73c <pxPortInitialiseStack>:
{
9000d73c:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d73e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d742:	4809      	ldr	r0, [pc, #36]	@ (9000d768 <pxPortInitialiseStack+0x2c>)
{
9000d744:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000d746:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d74a:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000d74e:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000d752:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d756:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d75a:	f06f 0102 	mvn.w	r1, #2
}
9000d75e:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d762:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000d766:	4770      	bx	lr
9000d768:	9000d6fd 	.word	0x9000d6fd
9000d76c:	00000000 	.word	0x00000000

9000d770 <SVC_Handler>:
	__asm volatile (
9000d770:	4b07      	ldr	r3, [pc, #28]	@ (9000d790 <pxCurrentTCBConst2>)
9000d772:	6819      	ldr	r1, [r3, #0]
9000d774:	6808      	ldr	r0, [r1, #0]
9000d776:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d77a:	f380 8809 	msr	PSP, r0
9000d77e:	f3bf 8f6f 	isb	sy
9000d782:	f04f 0000 	mov.w	r0, #0
9000d786:	f380 8811 	msr	BASEPRI, r0
9000d78a:	4770      	bx	lr
9000d78c:	f3af 8000 	nop.w

9000d790 <pxCurrentTCBConst2>:
9000d790:	24021aa0 	.word	0x24021aa0

9000d794 <vPortEnterCritical>:
9000d794:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d798:	f383 8811 	msr	BASEPRI, r3
9000d79c:	f3bf 8f6f 	isb	sy
9000d7a0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000d7a4:	4a0b      	ldr	r2, [pc, #44]	@ (9000d7d4 <vPortEnterCritical+0x40>)
9000d7a6:	6813      	ldr	r3, [r2, #0]
9000d7a8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000d7aa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000d7ac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000d7ae:	d000      	beq.n	9000d7b2 <vPortEnterCritical+0x1e>
}
9000d7b0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000d7b2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d7b6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000d7ba:	b2db      	uxtb	r3, r3
9000d7bc:	2b00      	cmp	r3, #0
9000d7be:	d0f7      	beq.n	9000d7b0 <vPortEnterCritical+0x1c>
9000d7c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d7c4:	f383 8811 	msr	BASEPRI, r3
9000d7c8:	f3bf 8f6f 	isb	sy
9000d7cc:	f3bf 8f4f 	dsb	sy
9000d7d0:	e7fe      	b.n	9000d7d0 <vPortEnterCritical+0x3c>
9000d7d2:	bf00      	nop
9000d7d4:	24000094 	.word	0x24000094

9000d7d8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000d7d8:	4a08      	ldr	r2, [pc, #32]	@ (9000d7fc <vPortExitCritical+0x24>)
9000d7da:	6813      	ldr	r3, [r2, #0]
9000d7dc:	b943      	cbnz	r3, 9000d7f0 <vPortExitCritical+0x18>
9000d7de:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d7e2:	f383 8811 	msr	BASEPRI, r3
9000d7e6:	f3bf 8f6f 	isb	sy
9000d7ea:	f3bf 8f4f 	dsb	sy
9000d7ee:	e7fe      	b.n	9000d7ee <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000d7f0:	3b01      	subs	r3, #1
9000d7f2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000d7f4:	b90b      	cbnz	r3, 9000d7fa <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000d7f6:	f383 8811 	msr	BASEPRI, r3
}
9000d7fa:	4770      	bx	lr
9000d7fc:	24000094 	.word	0x24000094

9000d800 <PendSV_Handler>:
	__asm volatile
9000d800:	f3ef 8009 	mrs	r0, PSP
9000d804:	f3bf 8f6f 	isb	sy
9000d808:	4b15      	ldr	r3, [pc, #84]	@ (9000d860 <pxCurrentTCBConst>)
9000d80a:	681a      	ldr	r2, [r3, #0]
9000d80c:	f01e 0f10 	tst.w	lr, #16
9000d810:	bf08      	it	eq
9000d812:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000d816:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d81a:	6010      	str	r0, [r2, #0]
9000d81c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000d820:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000d824:	f380 8811 	msr	BASEPRI, r0
9000d828:	f3bf 8f4f 	dsb	sy
9000d82c:	f3bf 8f6f 	isb	sy
9000d830:	f001 fda8 	bl	9000f384 <vTaskSwitchContext>
9000d834:	f04f 0000 	mov.w	r0, #0
9000d838:	f380 8811 	msr	BASEPRI, r0
9000d83c:	bc09      	pop	{r0, r3}
9000d83e:	6819      	ldr	r1, [r3, #0]
9000d840:	6808      	ldr	r0, [r1, #0]
9000d842:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d846:	f01e 0f10 	tst.w	lr, #16
9000d84a:	bf08      	it	eq
9000d84c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000d850:	f380 8809 	msr	PSP, r0
9000d854:	f3bf 8f6f 	isb	sy
9000d858:	4770      	bx	lr
9000d85a:	bf00      	nop
9000d85c:	f3af 8000 	nop.w

9000d860 <pxCurrentTCBConst>:
9000d860:	24021aa0 	.word	0x24021aa0

9000d864 <xPortSysTickHandler>:
{
9000d864:	b508      	push	{r3, lr}
	__asm volatile
9000d866:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d86a:	f383 8811 	msr	BASEPRI, r3
9000d86e:	f3bf 8f6f 	isb	sy
9000d872:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000d876:	f001 fd5f 	bl	9000f338 <xTaskIncrementTick>
9000d87a:	b128      	cbz	r0, 9000d888 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000d87c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d880:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d884:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000d888:	2300      	movs	r3, #0
9000d88a:	f383 8811 	msr	BASEPRI, r3
}
9000d88e:	bd08      	pop	{r3, pc}

9000d890 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d890:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000d894:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d896:	4806      	ldr	r0, [pc, #24]	@ (9000d8b0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d898:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d89a:	4906      	ldr	r1, [pc, #24]	@ (9000d8b4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000d89c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d89e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d8a0:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d8a2:	fba1 1303 	umull	r1, r3, r1, r3
9000d8a6:	099b      	lsrs	r3, r3, #6
9000d8a8:	3b01      	subs	r3, #1
9000d8aa:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d8ac:	6110      	str	r0, [r2, #16]
}
9000d8ae:	4770      	bx	lr
9000d8b0:	24000088 	.word	0x24000088
9000d8b4:	10624dd3 	.word	0x10624dd3

9000d8b8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d8b8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d8bc:	4a48      	ldr	r2, [pc, #288]	@ (9000d9e0 <xPortStartScheduler+0x128>)
9000d8be:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000d8c2:	4291      	cmp	r1, r2
9000d8c4:	d041      	beq.n	9000d94a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d8c6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000d8ca:	4b46      	ldr	r3, [pc, #280]	@ (9000d9e4 <xPortStartScheduler+0x12c>)
9000d8cc:	429a      	cmp	r2, r3
9000d8ce:	d033      	beq.n	9000d938 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d8d0:	4b45      	ldr	r3, [pc, #276]	@ (9000d9e8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d8d2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d8d6:	4845      	ldr	r0, [pc, #276]	@ (9000d9ec <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d8d8:	4945      	ldr	r1, [pc, #276]	@ (9000d9f0 <xPortStartScheduler+0x138>)
{
9000d8da:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d8dc:	781a      	ldrb	r2, [r3, #0]
{
9000d8de:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d8e0:	b2d2      	uxtb	r2, r2
9000d8e2:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d8e4:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d8e6:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d8ea:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d8ec:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d8ee:	b2db      	uxtb	r3, r3
9000d8f0:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d8f4:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d8f8:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d8fc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d900:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d902:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d904:	d50f      	bpl.n	9000d926 <xPortStartScheduler+0x6e>
9000d906:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d908:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d90c:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d90e:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d910:	005b      	lsls	r3, r3, #1
9000d912:	b2db      	uxtb	r3, r3
9000d914:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d918:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d91c:	061b      	lsls	r3, r3, #24
9000d91e:	d4f3      	bmi.n	9000d908 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000d920:	2903      	cmp	r1, #3
9000d922:	d01b      	beq.n	9000d95c <xPortStartScheduler+0xa4>
9000d924:	6001      	str	r1, [r0, #0]
	__asm volatile
9000d926:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d92a:	f383 8811 	msr	BASEPRI, r3
9000d92e:	f3bf 8f6f 	isb	sy
9000d932:	f3bf 8f4f 	dsb	sy
9000d936:	e7fe      	b.n	9000d936 <xPortStartScheduler+0x7e>
9000d938:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d93c:	f383 8811 	msr	BASEPRI, r3
9000d940:	f3bf 8f6f 	isb	sy
9000d944:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d948:	e7fe      	b.n	9000d948 <xPortStartScheduler+0x90>
9000d94a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d94e:	f383 8811 	msr	BASEPRI, r3
9000d952:	f3bf 8f6f 	isb	sy
9000d956:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d95a:	e7fe      	b.n	9000d95a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d95c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d95e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d962:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d966:	4a20      	ldr	r2, [pc, #128]	@ (9000d9e8 <xPortStartScheduler+0x130>)
9000d968:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000d96a:	4e22      	ldr	r6, [pc, #136]	@ (9000d9f4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d96c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000d96e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d970:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d972:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000d976:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000d97a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000d97e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000d982:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000d986:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000d98a:	f7ff ff81 	bl	9000d890 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000d98e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000d990:	f7ff feaa 	bl	9000d6e8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000d994:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000d998:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000d99c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000d9a0:	f7ff fe8e 	bl	9000d6c0 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000d9a4:	f001 fcee 	bl	9000f384 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000d9a8:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000d9aa:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000d9ac:	3301      	adds	r3, #1
9000d9ae:	d008      	beq.n	9000d9c2 <xPortStartScheduler+0x10a>
9000d9b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9b4:	f383 8811 	msr	BASEPRI, r3
9000d9b8:	f3bf 8f6f 	isb	sy
9000d9bc:	f3bf 8f4f 	dsb	sy
9000d9c0:	e7fe      	b.n	9000d9c0 <xPortStartScheduler+0x108>
9000d9c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9c6:	f383 8811 	msr	BASEPRI, r3
9000d9ca:	f3bf 8f6f 	isb	sy
9000d9ce:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d9d2:	9b03      	ldr	r3, [sp, #12]
9000d9d4:	2b00      	cmp	r3, #0
9000d9d6:	d0fc      	beq.n	9000d9d2 <xPortStartScheduler+0x11a>
}
9000d9d8:	2000      	movs	r0, #0
9000d9da:	b004      	add	sp, #16
9000d9dc:	bd70      	pop	{r4, r5, r6, pc}
9000d9de:	bf00      	nop
9000d9e0:	410fc271 	.word	0x410fc271
9000d9e4:	410fc270 	.word	0x410fc270
9000d9e8:	e000e400 	.word	0xe000e400
9000d9ec:	24021560 	.word	0x24021560
9000d9f0:	24021564 	.word	0x24021564
9000d9f4:	24000094 	.word	0x24000094

9000d9f8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000d9f8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000d9fc:	2b0f      	cmp	r3, #15
9000d9fe:	d90e      	bls.n	9000da1e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000da00:	4911      	ldr	r1, [pc, #68]	@ (9000da48 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000da02:	4a12      	ldr	r2, [pc, #72]	@ (9000da4c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000da04:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000da06:	7812      	ldrb	r2, [r2, #0]
9000da08:	429a      	cmp	r2, r3
9000da0a:	d908      	bls.n	9000da1e <vPortValidateInterruptPriority+0x26>
9000da0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da10:	f383 8811 	msr	BASEPRI, r3
9000da14:	f3bf 8f6f 	isb	sy
9000da18:	f3bf 8f4f 	dsb	sy
9000da1c:	e7fe      	b.n	9000da1c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000da1e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000da22:	4a0b      	ldr	r2, [pc, #44]	@ (9000da50 <vPortValidateInterruptPriority+0x58>)
9000da24:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000da28:	6812      	ldr	r2, [r2, #0]
9000da2a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000da2e:	4293      	cmp	r3, r2
9000da30:	d908      	bls.n	9000da44 <vPortValidateInterruptPriority+0x4c>
9000da32:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da36:	f383 8811 	msr	BASEPRI, r3
9000da3a:	f3bf 8f6f 	isb	sy
9000da3e:	f3bf 8f4f 	dsb	sy
9000da42:	e7fe      	b.n	9000da42 <vPortValidateInterruptPriority+0x4a>
	}
9000da44:	4770      	bx	lr
9000da46:	bf00      	nop
9000da48:	e000e3f0 	.word	0xe000e3f0
9000da4c:	24021564 	.word	0x24021564
9000da50:	24021560 	.word	0x24021560

9000da54 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000da54:	b570      	push	{r4, r5, r6, lr}
9000da56:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000da58:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000da5a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000da5c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000da5e:	b92a      	cbnz	r2, 9000da6c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000da60:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da62:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000da64:	b34e      	cbz	r6, 9000daba <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
9000da66:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da68:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000da6a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000da6c:	b97e      	cbnz	r6, 9000da8e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000da6e:	6840      	ldr	r0, [r0, #4]
9000da70:	f01b f9d3 	bl	90028e1a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000da74:	6863      	ldr	r3, [r4, #4]
9000da76:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000da78:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000da7a:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000da7c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000da7e:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000da80:	bf24      	itt	cs
9000da82:	6823      	ldrcs	r3, [r4, #0]
9000da84:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da86:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
9000da88:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da8a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000da8c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000da8e:	68c0      	ldr	r0, [r0, #12]
9000da90:	f01b f9c3 	bl	90028e1a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000da94:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000da96:	68e3      	ldr	r3, [r4, #12]
9000da98:	4251      	negs	r1, r2
9000da9a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000da9c:	6822      	ldr	r2, [r4, #0]
9000da9e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000daa0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000daa2:	d202      	bcs.n	9000daaa <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000daa4:	68a3      	ldr	r3, [r4, #8]
9000daa6:	440b      	add	r3, r1
9000daa8:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000daaa:	2e02      	cmp	r6, #2
9000daac:	d1eb      	bne.n	9000da86 <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000daae:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000dab0:	f04f 0000 	mov.w	r0, #0
9000dab4:	bf38      	it	cc
9000dab6:	2501      	movcc	r5, #1
9000dab8:	e7d6      	b.n	9000da68 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000daba:	6880      	ldr	r0, [r0, #8]
9000dabc:	f001 fe34 	bl	9000f728 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000dac0:	60a6      	str	r6, [r4, #8]
9000dac2:	e7d1      	b.n	9000da68 <prvCopyDataToQueue+0x14>

9000dac4 <xQueueGenericCreateStatic>:
	{
9000dac4:	b530      	push	{r4, r5, lr}
9000dac6:	b083      	sub	sp, #12
9000dac8:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000dacc:	b940      	cbnz	r0, 9000dae0 <xQueueGenericCreateStatic+0x1c>
9000dace:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dad2:	f383 8811 	msr	BASEPRI, r3
9000dad6:	f3bf 8f6f 	isb	sy
9000dada:	f3bf 8f4f 	dsb	sy
9000dade:	e7fe      	b.n	9000dade <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000dae0:	461c      	mov	r4, r3
9000dae2:	b153      	cbz	r3, 9000dafa <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000dae4:	b30a      	cbz	r2, 9000db2a <xQueueGenericCreateStatic+0x66>
9000dae6:	b989      	cbnz	r1, 9000db0c <xQueueGenericCreateStatic+0x48>
9000dae8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000daec:	f383 8811 	msr	BASEPRI, r3
9000daf0:	f3bf 8f6f 	isb	sy
9000daf4:	f3bf 8f4f 	dsb	sy
9000daf8:	e7fe      	b.n	9000daf8 <xQueueGenericCreateStatic+0x34>
9000dafa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dafe:	f383 8811 	msr	BASEPRI, r3
9000db02:	f3bf 8f6f 	isb	sy
9000db06:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000db0a:	e7fe      	b.n	9000db0a <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000db0c:	b16a      	cbz	r2, 9000db2a <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000db0e:	2350      	movs	r3, #80	@ 0x50
9000db10:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000db12:	9b01      	ldr	r3, [sp, #4]
9000db14:	2b50      	cmp	r3, #80	@ 0x50
9000db16:	d013      	beq.n	9000db40 <xQueueGenericCreateStatic+0x7c>
9000db18:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db1c:	f383 8811 	msr	BASEPRI, r3
9000db20:	f3bf 8f6f 	isb	sy
9000db24:	f3bf 8f4f 	dsb	sy
9000db28:	e7fe      	b.n	9000db28 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000db2a:	2900      	cmp	r1, #0
9000db2c:	d0ef      	beq.n	9000db0e <xQueueGenericCreateStatic+0x4a>
9000db2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db32:	f383 8811 	msr	BASEPRI, r3
9000db36:	f3bf 8f6f 	isb	sy
9000db3a:	f3bf 8f4f 	dsb	sy
9000db3e:	e7fe      	b.n	9000db3e <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000db40:	2900      	cmp	r1, #0
9000db42:	bf08      	it	eq
9000db44:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000db46:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000db48:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000db4a:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000db4c:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000db4e:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000db50:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000db54:	f7ff fe1e 	bl	9000d794 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db58:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db5a:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000db5e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db60:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000db64:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db68:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db6a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db6c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db6e:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000db70:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000db72:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db74:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000db76:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000db78:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000db7c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db80:	f7ff fd54 	bl	9000d62c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000db84:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000db88:	f7ff fd50 	bl	9000d62c <vListInitialise>
	taskEXIT_CRITICAL();
9000db8c:	f7ff fe24 	bl	9000d7d8 <vPortExitCritical>
	}
9000db90:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000db92:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000db96:	b003      	add	sp, #12
9000db98:	bd30      	pop	{r4, r5, pc}
9000db9a:	bf00      	nop

9000db9c <xQueueGenericCreate>:
	{
9000db9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000db9e:	b940      	cbnz	r0, 9000dbb2 <xQueueGenericCreate+0x16>
9000dba0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dba4:	f383 8811 	msr	BASEPRI, r3
9000dba8:	f3bf 8f6f 	isb	sy
9000dbac:	f3bf 8f4f 	dsb	sy
9000dbb0:	e7fe      	b.n	9000dbb0 <xQueueGenericCreate+0x14>
9000dbb2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000dbb4:	fb01 f000 	mul.w	r0, r1, r0
9000dbb8:	460e      	mov	r6, r1
9000dbba:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dbbc:	3050      	adds	r0, #80	@ 0x50
9000dbbe:	f7ff fc13 	bl	9000d3e8 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dbc2:	4604      	mov	r4, r0
9000dbc4:	b340      	cbz	r0, 9000dc18 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dbc6:	2300      	movs	r3, #0
9000dbc8:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000dbcc:	b336      	cbz	r6, 9000dc1c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dbce:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000dbd2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000dbd4:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000dbd8:	f7ff fddc 	bl	9000d794 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dbdc:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dbde:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dbe2:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dbe4:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000dbe8:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dbec:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dbee:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dbf0:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dbf2:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dbf4:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000dbf6:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dbf8:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dbfa:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000dbfc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dc00:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc04:	f7ff fd12 	bl	9000d62c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dc08:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000dc0c:	f7ff fd0e 	bl	9000d62c <vListInitialise>
	taskEXIT_CRITICAL();
9000dc10:	f7ff fde2 	bl	9000d7d8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dc14:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000dc18:	4620      	mov	r0, r4
9000dc1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dc1c:	4603      	mov	r3, r0
9000dc1e:	e7d8      	b.n	9000dbd2 <xQueueGenericCreate+0x36>

9000dc20 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000dc20:	b940      	cbnz	r0, 9000dc34 <xQueueCreateCountingSemaphoreStatic+0x14>
9000dc22:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc26:	f383 8811 	msr	BASEPRI, r3
9000dc2a:	f3bf 8f6f 	isb	sy
9000dc2e:	f3bf 8f4f 	dsb	sy
9000dc32:	e7fe      	b.n	9000dc32 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000dc34:	4288      	cmp	r0, r1
9000dc36:	d208      	bcs.n	9000dc4a <xQueueCreateCountingSemaphoreStatic+0x2a>
9000dc38:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc3c:	f383 8811 	msr	BASEPRI, r3
9000dc40:	f3bf 8f6f 	isb	sy
9000dc44:	f3bf 8f4f 	dsb	sy
9000dc48:	e7fe      	b.n	9000dc48 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000dc4a:	b530      	push	{r4, r5, lr}
9000dc4c:	4614      	mov	r4, r2
9000dc4e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000dc50:	2a00      	cmp	r2, #0
9000dc52:	d03b      	beq.n	9000dccc <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000dc54:	2350      	movs	r3, #80	@ 0x50
9000dc56:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000dc58:	9b03      	ldr	r3, [sp, #12]
9000dc5a:	2b50      	cmp	r3, #80	@ 0x50
9000dc5c:	d008      	beq.n	9000dc70 <xQueueCreateCountingSemaphoreStatic+0x50>
9000dc5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc62:	f383 8811 	msr	BASEPRI, r3
9000dc66:	f3bf 8f6f 	isb	sy
9000dc6a:	f3bf 8f4f 	dsb	sy
9000dc6e:	e7fe      	b.n	9000dc6e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000dc70:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000dc72:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dc74:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000dc76:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000dc78:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000dc7c:	6415      	str	r5, [r2, #64]	@ 0x40
9000dc7e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000dc80:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000dc82:	f7ff fd87 	bl	9000d794 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc86:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dc88:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dc8a:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc8c:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000dc90:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc94:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc96:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc98:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc9a:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000dc9c:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc9e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dca2:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000dca4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dca8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dcac:	f7ff fcbe 	bl	9000d62c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dcb0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000dcb4:	f7ff fcba 	bl	9000d62c <vListInitialise>
	taskEXIT_CRITICAL();
9000dcb8:	f7ff fd8e 	bl	9000d7d8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dcbc:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dcbe:	9901      	ldr	r1, [sp, #4]
	}
9000dcc0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000dcc2:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dcc6:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000dcc8:	b005      	add	sp, #20
9000dcca:	bd30      	pop	{r4, r5, pc}
9000dccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dcd0:	f383 8811 	msr	BASEPRI, r3
9000dcd4:	f3bf 8f6f 	isb	sy
9000dcd8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000dcdc:	e7fe      	b.n	9000dcdc <xQueueCreateCountingSemaphoreStatic+0xbc>
9000dcde:	bf00      	nop

9000dce0 <xQueueCreateCountingSemaphore>:
	{
9000dce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000dce2:	b940      	cbnz	r0, 9000dcf6 <xQueueCreateCountingSemaphore+0x16>
9000dce4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dce8:	f383 8811 	msr	BASEPRI, r3
9000dcec:	f3bf 8f6f 	isb	sy
9000dcf0:	f3bf 8f4f 	dsb	sy
9000dcf4:	e7fe      	b.n	9000dcf4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000dcf6:	4288      	cmp	r0, r1
9000dcf8:	4604      	mov	r4, r0
9000dcfa:	460e      	mov	r6, r1
9000dcfc:	d208      	bcs.n	9000dd10 <xQueueCreateCountingSemaphore+0x30>
9000dcfe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dd02:	f383 8811 	msr	BASEPRI, r3
9000dd06:	f3bf 8f6f 	isb	sy
9000dd0a:	f3bf 8f4f 	dsb	sy
9000dd0e:	e7fe      	b.n	9000dd0e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dd10:	2050      	movs	r0, #80	@ 0x50
9000dd12:	f7ff fb69 	bl	9000d3e8 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dd16:	4605      	mov	r5, r0
9000dd18:	b330      	cbz	r0, 9000dd68 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dd1a:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dd1c:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000dd1e:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dd20:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000dd24:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000dd26:	f7ff fd35 	bl	9000d794 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd2a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dd2c:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dd2e:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dd32:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd34:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000dd38:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd3c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd3e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd40:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd42:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000dd44:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd46:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000dd48:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dd4c:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dd50:	f7ff fc6c 	bl	9000d62c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dd54:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000dd58:	f7ff fc68 	bl	9000d62c <vListInitialise>
	taskEXIT_CRITICAL();
9000dd5c:	f7ff fd3c 	bl	9000d7d8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dd60:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dd62:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000dd64:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000dd68:	4628      	mov	r0, r5
9000dd6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000dd6c <xQueueGenericSend>:
{
9000dd6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000dd70:	b084      	sub	sp, #16
9000dd72:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000dd74:	2800      	cmp	r0, #0
9000dd76:	f000 8103 	beq.w	9000df80 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dd7a:	4688      	mov	r8, r1
9000dd7c:	4604      	mov	r4, r0
9000dd7e:	461f      	mov	r7, r3
9000dd80:	2900      	cmp	r1, #0
9000dd82:	f000 8097 	beq.w	9000deb4 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000dd86:	2f02      	cmp	r7, #2
9000dd88:	d10b      	bne.n	9000dda2 <xQueueGenericSend+0x36>
9000dd8a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000dd8c:	2b01      	cmp	r3, #1
9000dd8e:	d008      	beq.n	9000dda2 <xQueueGenericSend+0x36>
9000dd90:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dd94:	f383 8811 	msr	BASEPRI, r3
9000dd98:	f3bf 8f6f 	isb	sy
9000dd9c:	f3bf 8f4f 	dsb	sy
9000dda0:	e7fe      	b.n	9000dda0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000dda2:	f001 fc71 	bl	9000f688 <xTaskGetSchedulerState>
9000dda6:	2800      	cmp	r0, #0
9000dda8:	f000 80f3 	beq.w	9000df92 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ddac:	f1a7 0902 	sub.w	r9, r7, #2
9000ddb0:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ddb2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ddb6:	fab9 f989 	clz	r9, r9
9000ddba:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000ddbe:	f7ff fce9 	bl	9000d794 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ddc2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ddc4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ddc6:	429a      	cmp	r2, r3
9000ddc8:	f0c0 80f0 	bcc.w	9000dfac <xQueueGenericSend+0x240>
9000ddcc:	f1b9 0f00 	cmp.w	r9, #0
9000ddd0:	f040 80ec 	bne.w	9000dfac <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000ddd4:	9b01      	ldr	r3, [sp, #4]
9000ddd6:	2b00      	cmp	r3, #0
9000ddd8:	f000 8101 	beq.w	9000dfde <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000dddc:	2d00      	cmp	r5, #0
9000ddde:	f000 80cb 	beq.w	9000df78 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000dde2:	f7ff fcf9 	bl	9000d7d8 <vPortExitCritical>
		vTaskSuspendAll();
9000dde6:	f001 fa89 	bl	9000f2fc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000ddea:	f7ff fcd3 	bl	9000d794 <vPortEnterCritical>
9000ddee:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ddf2:	2bff      	cmp	r3, #255	@ 0xff
9000ddf4:	d102      	bne.n	9000ddfc <xQueueGenericSend+0x90>
9000ddf6:	2300      	movs	r3, #0
9000ddf8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000ddfc:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000de00:	2bff      	cmp	r3, #255	@ 0xff
9000de02:	d102      	bne.n	9000de0a <xQueueGenericSend+0x9e>
9000de04:	2300      	movs	r3, #0
9000de06:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000de0a:	f7ff fce5 	bl	9000d7d8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000de0e:	a901      	add	r1, sp, #4
9000de10:	a802      	add	r0, sp, #8
9000de12:	f001 fbf1 	bl	9000f5f8 <xTaskCheckForTimeOut>
9000de16:	2800      	cmp	r0, #0
9000de18:	f040 80e5 	bne.w	9000dfe6 <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000de1c:	f7ff fcba 	bl	9000d794 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000de20:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000de22:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000de24:	429a      	cmp	r2, r3
9000de26:	d052      	beq.n	9000dece <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000de28:	f7ff fcd6 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000de2c:	f7ff fcb2 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000de30:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000de34:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de36:	2d00      	cmp	r5, #0
9000de38:	dc04      	bgt.n	9000de44 <xQueueGenericSend+0xd8>
9000de3a:	e011      	b.n	9000de60 <xQueueGenericSend+0xf4>
			--cTxLock;
9000de3c:	1e6a      	subs	r2, r5, #1
9000de3e:	b2d3      	uxtb	r3, r2
9000de40:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de42:	b16b      	cbz	r3, 9000de60 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000de44:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000de46:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000de48:	b153      	cbz	r3, 9000de60 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000de4a:	f001 fb83 	bl	9000f554 <xTaskRemoveFromEventList>
9000de4e:	2800      	cmp	r0, #0
9000de50:	d0f4      	beq.n	9000de3c <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000de52:	f001 fc13 	bl	9000f67c <vTaskMissedYield>
			--cTxLock;
9000de56:	1e6a      	subs	r2, r5, #1
9000de58:	b2d3      	uxtb	r3, r2
9000de5a:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de5c:	2b00      	cmp	r3, #0
9000de5e:	d1f1      	bne.n	9000de44 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000de60:	23ff      	movs	r3, #255	@ 0xff
9000de62:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000de66:	f7ff fcb7 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000de6a:	f7ff fc93 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000de6e:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000de72:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de74:	2d00      	cmp	r5, #0
9000de76:	dd14      	ble.n	9000dea2 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de78:	f104 0a10 	add.w	sl, r4, #16
9000de7c:	e003      	b.n	9000de86 <xQueueGenericSend+0x11a>
				--cRxLock;
9000de7e:	1e6a      	subs	r2, r5, #1
9000de80:	b2d3      	uxtb	r3, r2
9000de82:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de84:	b16b      	cbz	r3, 9000dea2 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de86:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de88:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de8a:	b153      	cbz	r3, 9000dea2 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de8c:	f001 fb62 	bl	9000f554 <xTaskRemoveFromEventList>
9000de90:	2800      	cmp	r0, #0
9000de92:	d0f4      	beq.n	9000de7e <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000de94:	f001 fbf2 	bl	9000f67c <vTaskMissedYield>
				--cRxLock;
9000de98:	1e6a      	subs	r2, r5, #1
9000de9a:	b2d3      	uxtb	r3, r2
9000de9c:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de9e:	2b00      	cmp	r3, #0
9000dea0:	d1f1      	bne.n	9000de86 <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000dea2:	23ff      	movs	r3, #255	@ 0xff
9000dea4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000dea8:	f7ff fc96 	bl	9000d7d8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000deac:	f001 fa2e 	bl	9000f30c <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000deb0:	2501      	movs	r5, #1
9000deb2:	e784      	b.n	9000ddbe <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000deb4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000deb6:	2b00      	cmp	r3, #0
9000deb8:	f43f af65 	beq.w	9000dd86 <xQueueGenericSend+0x1a>
9000debc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dec0:	f383 8811 	msr	BASEPRI, r3
9000dec4:	f3bf 8f6f 	isb	sy
9000dec8:	f3bf 8f4f 	dsb	sy
9000decc:	e7fe      	b.n	9000decc <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000dece:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000ded2:	f7ff fc81 	bl	9000d7d8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ded6:	9901      	ldr	r1, [sp, #4]
9000ded8:	4650      	mov	r0, sl
9000deda:	f001 faad 	bl	9000f438 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000dede:	f7ff fc59 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dee2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000dee6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dee8:	2d00      	cmp	r5, #0
9000deea:	dc04      	bgt.n	9000def6 <xQueueGenericSend+0x18a>
9000deec:	e011      	b.n	9000df12 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000deee:	1e6b      	subs	r3, r5, #1
9000def0:	b2da      	uxtb	r2, r3
9000def2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000def4:	b16a      	cbz	r2, 9000df12 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000def6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000def8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000defa:	b153      	cbz	r3, 9000df12 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000defc:	f001 fb2a 	bl	9000f554 <xTaskRemoveFromEventList>
9000df00:	2800      	cmp	r0, #0
9000df02:	d0f4      	beq.n	9000deee <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000df04:	f001 fbba 	bl	9000f67c <vTaskMissedYield>
			--cTxLock;
9000df08:	1e6b      	subs	r3, r5, #1
9000df0a:	b2da      	uxtb	r2, r3
9000df0c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000df0e:	2a00      	cmp	r2, #0
9000df10:	d1f1      	bne.n	9000def6 <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000df12:	23ff      	movs	r3, #255	@ 0xff
9000df14:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000df18:	f7ff fc5e 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000df1c:	f7ff fc3a 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000df20:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000df24:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df26:	2d00      	cmp	r5, #0
9000df28:	dc04      	bgt.n	9000df34 <xQueueGenericSend+0x1c8>
9000df2a:	e011      	b.n	9000df50 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000df2c:	1e6b      	subs	r3, r5, #1
9000df2e:	b2da      	uxtb	r2, r3
9000df30:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df32:	b16a      	cbz	r2, 9000df50 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df34:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df36:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df38:	b153      	cbz	r3, 9000df50 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df3a:	f001 fb0b 	bl	9000f554 <xTaskRemoveFromEventList>
9000df3e:	2800      	cmp	r0, #0
9000df40:	d0f4      	beq.n	9000df2c <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000df42:	f001 fb9b 	bl	9000f67c <vTaskMissedYield>
				--cRxLock;
9000df46:	1e6b      	subs	r3, r5, #1
9000df48:	b2da      	uxtb	r2, r3
9000df4a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df4c:	2a00      	cmp	r2, #0
9000df4e:	d1f1      	bne.n	9000df34 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000df50:	23ff      	movs	r3, #255	@ 0xff
9000df52:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000df56:	f7ff fc3f 	bl	9000d7d8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000df5a:	f001 f9d7 	bl	9000f30c <xTaskResumeAll>
9000df5e:	2800      	cmp	r0, #0
9000df60:	d1a6      	bne.n	9000deb0 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000df62:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000df66:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000df6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000df6e:	f3bf 8f4f 	dsb	sy
9000df72:	f3bf 8f6f 	isb	sy
9000df76:	e79b      	b.n	9000deb0 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000df78:	a802      	add	r0, sp, #8
9000df7a:	f001 fb31 	bl	9000f5e0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000df7e:	e730      	b.n	9000dde2 <xQueueGenericSend+0x76>
9000df80:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df84:	f383 8811 	msr	BASEPRI, r3
9000df88:	f3bf 8f6f 	isb	sy
9000df8c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000df90:	e7fe      	b.n	9000df90 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000df92:	9b01      	ldr	r3, [sp, #4]
9000df94:	2b00      	cmp	r3, #0
9000df96:	f43f af09 	beq.w	9000ddac <xQueueGenericSend+0x40>
9000df9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df9e:	f383 8811 	msr	BASEPRI, r3
9000dfa2:	f3bf 8f6f 	isb	sy
9000dfa6:	f3bf 8f4f 	dsb	sy
9000dfaa:	e7fe      	b.n	9000dfaa <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dfac:	463a      	mov	r2, r7
9000dfae:	4641      	mov	r1, r8
9000dfb0:	4620      	mov	r0, r4
9000dfb2:	f7ff fd4f 	bl	9000da54 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dfb6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000dfb8:	2b00      	cmp	r3, #0
9000dfba:	d151      	bne.n	9000e060 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000dfbc:	b148      	cbz	r0, 9000dfd2 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000dfbe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dfc2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000dfc6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000dfca:	f3bf 8f4f 	dsb	sy
9000dfce:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000dfd2:	f7ff fc01 	bl	9000d7d8 <vPortExitCritical>
				return pdPASS;
9000dfd6:	2001      	movs	r0, #1
}
9000dfd8:	b004      	add	sp, #16
9000dfda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000dfde:	f7ff fbfb 	bl	9000d7d8 <vPortExitCritical>
					return errQUEUE_FULL;
9000dfe2:	2000      	movs	r0, #0
9000dfe4:	e7f8      	b.n	9000dfd8 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000dfe6:	f7ff fbd5 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dfea:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000dfee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dff0:	2d00      	cmp	r5, #0
9000dff2:	dd10      	ble.n	9000e016 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dff4:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000dff8:	e003      	b.n	9000e002 <xQueueGenericSend+0x296>
			--cTxLock;
9000dffa:	1e6b      	subs	r3, r5, #1
9000dffc:	b2da      	uxtb	r2, r3
9000dffe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e000:	b14a      	cbz	r2, 9000e016 <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e002:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e004:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e006:	b133      	cbz	r3, 9000e016 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e008:	f001 faa4 	bl	9000f554 <xTaskRemoveFromEventList>
9000e00c:	2800      	cmp	r0, #0
9000e00e:	d0f4      	beq.n	9000dffa <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000e010:	f001 fb34 	bl	9000f67c <vTaskMissedYield>
9000e014:	e7f1      	b.n	9000dffa <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e016:	23ff      	movs	r3, #255	@ 0xff
9000e018:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e01c:	f7ff fbdc 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e020:	f7ff fbb8 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e024:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e028:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e02a:	2d00      	cmp	r5, #0
9000e02c:	dd10      	ble.n	9000e050 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e02e:	f104 0610 	add.w	r6, r4, #16
9000e032:	e003      	b.n	9000e03c <xQueueGenericSend+0x2d0>
				--cRxLock;
9000e034:	1e6b      	subs	r3, r5, #1
9000e036:	b2da      	uxtb	r2, r3
9000e038:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e03a:	b14a      	cbz	r2, 9000e050 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e03c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e03e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e040:	b133      	cbz	r3, 9000e050 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e042:	f001 fa87 	bl	9000f554 <xTaskRemoveFromEventList>
9000e046:	2800      	cmp	r0, #0
9000e048:	d0f4      	beq.n	9000e034 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000e04a:	f001 fb17 	bl	9000f67c <vTaskMissedYield>
9000e04e:	e7f1      	b.n	9000e034 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000e050:	23ff      	movs	r3, #255	@ 0xff
9000e052:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e056:	f7ff fbbf 	bl	9000d7d8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e05a:	f001 f957 	bl	9000f30c <xTaskResumeAll>
			return errQUEUE_FULL;
9000e05e:	e7c0      	b.n	9000dfe2 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e060:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e064:	f001 fa76 	bl	9000f554 <xTaskRemoveFromEventList>
9000e068:	2800      	cmp	r0, #0
9000e06a:	d0b2      	beq.n	9000dfd2 <xQueueGenericSend+0x266>
9000e06c:	e7a7      	b.n	9000dfbe <xQueueGenericSend+0x252>
9000e06e:	bf00      	nop

9000e070 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000e070:	2800      	cmp	r0, #0
9000e072:	d04b      	beq.n	9000e10c <xQueueGenericSendFromISR+0x9c>
{
9000e074:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e078:	460e      	mov	r6, r1
9000e07a:	4604      	mov	r4, r0
9000e07c:	4617      	mov	r7, r2
9000e07e:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e080:	b339      	cbz	r1, 9000e0d2 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e082:	2d02      	cmp	r5, #2
9000e084:	d10b      	bne.n	9000e09e <xQueueGenericSendFromISR+0x2e>
9000e086:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e088:	2b01      	cmp	r3, #1
9000e08a:	d008      	beq.n	9000e09e <xQueueGenericSendFromISR+0x2e>
9000e08c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e090:	f383 8811 	msr	BASEPRI, r3
9000e094:	f3bf 8f6f 	isb	sy
9000e098:	f3bf 8f4f 	dsb	sy
9000e09c:	e7fe      	b.n	9000e09c <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e09e:	f7ff fcab 	bl	9000d9f8 <vPortValidateInterruptPriority>
	__asm volatile
9000e0a2:	f3ef 8811 	mrs	r8, BASEPRI
9000e0a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e0aa:	f383 8811 	msr	BASEPRI, r3
9000e0ae:	f3bf 8f6f 	isb	sy
9000e0b2:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e0b6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e0b8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e0ba:	429a      	cmp	r2, r3
9000e0bc:	d315      	bcc.n	9000e0ea <xQueueGenericSendFromISR+0x7a>
9000e0be:	f1a5 0002 	sub.w	r0, r5, #2
9000e0c2:	fab0 f080 	clz	r0, r0
9000e0c6:	0940      	lsrs	r0, r0, #5
9000e0c8:	b978      	cbnz	r0, 9000e0ea <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000e0ca:	f388 8811 	msr	BASEPRI, r8
}
9000e0ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e0d2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e0d4:	2b00      	cmp	r3, #0
9000e0d6:	d0d4      	beq.n	9000e082 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000e0d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e0dc:	f383 8811 	msr	BASEPRI, r3
9000e0e0:	f3bf 8f6f 	isb	sy
9000e0e4:	f3bf 8f4f 	dsb	sy
9000e0e8:	e7fe      	b.n	9000e0e8 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e0ea:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000e0ec:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e0f0:	4631      	mov	r1, r6
9000e0f2:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000e0f4:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e0f6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e0f8:	f7ff fcac 	bl	9000da54 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000e0fc:	1c6b      	adds	r3, r5, #1
9000e0fe:	d00e      	beq.n	9000e11e <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e100:	1c6b      	adds	r3, r5, #1
9000e102:	b25b      	sxtb	r3, r3
9000e104:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e108:	2001      	movs	r0, #1
9000e10a:	e7de      	b.n	9000e0ca <xQueueGenericSendFromISR+0x5a>
9000e10c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e110:	f383 8811 	msr	BASEPRI, r3
9000e114:	f3bf 8f6f 	isb	sy
9000e118:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e11c:	e7fe      	b.n	9000e11c <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e11e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e120:	2b00      	cmp	r3, #0
9000e122:	d0f1      	beq.n	9000e108 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e124:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e128:	f001 fa14 	bl	9000f554 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e12c:	2800      	cmp	r0, #0
9000e12e:	d0eb      	beq.n	9000e108 <xQueueGenericSendFromISR+0x98>
9000e130:	2f00      	cmp	r7, #0
9000e132:	d0e9      	beq.n	9000e108 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e134:	2301      	movs	r3, #1
9000e136:	603b      	str	r3, [r7, #0]
9000e138:	e7e6      	b.n	9000e108 <xQueueGenericSendFromISR+0x98>
9000e13a:	bf00      	nop

9000e13c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000e13c:	b360      	cbz	r0, 9000e198 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e13e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000e140:	b570      	push	{r4, r5, r6, lr}
9000e142:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000e144:	b143      	cbz	r3, 9000e158 <xQueueGiveFromISR+0x1c>
9000e146:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e14a:	f383 8811 	msr	BASEPRI, r3
9000e14e:	f3bf 8f6f 	isb	sy
9000e152:	f3bf 8f4f 	dsb	sy
9000e156:	e7fe      	b.n	9000e156 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e158:	6803      	ldr	r3, [r0, #0]
9000e15a:	460d      	mov	r5, r1
9000e15c:	b32b      	cbz	r3, 9000e1aa <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e15e:	f7ff fc4b 	bl	9000d9f8 <vPortValidateInterruptPriority>
	__asm volatile
9000e162:	f3ef 8611 	mrs	r6, BASEPRI
9000e166:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e16a:	f383 8811 	msr	BASEPRI, r3
9000e16e:	f3bf 8f6f 	isb	sy
9000e172:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e176:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000e178:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000e17a:	429a      	cmp	r2, r3
9000e17c:	d921      	bls.n	9000e1c2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000e17e:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e182:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000e184:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e186:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000e188:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000e18a:	d01e      	beq.n	9000e1ca <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e18c:	3301      	adds	r3, #1
9000e18e:	b25b      	sxtb	r3, r3
9000e190:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e194:	2001      	movs	r0, #1
9000e196:	e015      	b.n	9000e1c4 <xQueueGiveFromISR+0x88>
	__asm volatile
9000e198:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e19c:	f383 8811 	msr	BASEPRI, r3
9000e1a0:	f3bf 8f6f 	isb	sy
9000e1a4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e1a8:	e7fe      	b.n	9000e1a8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e1aa:	6883      	ldr	r3, [r0, #8]
9000e1ac:	2b00      	cmp	r3, #0
9000e1ae:	d0d6      	beq.n	9000e15e <xQueueGiveFromISR+0x22>
9000e1b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e1b4:	f383 8811 	msr	BASEPRI, r3
9000e1b8:	f3bf 8f6f 	isb	sy
9000e1bc:	f3bf 8f4f 	dsb	sy
9000e1c0:	e7fe      	b.n	9000e1c0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000e1c2:	2000      	movs	r0, #0
	__asm volatile
9000e1c4:	f386 8811 	msr	BASEPRI, r6
}
9000e1c8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e1ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e1cc:	2b00      	cmp	r3, #0
9000e1ce:	d0e1      	beq.n	9000e194 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e1d0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e1d4:	f001 f9be 	bl	9000f554 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e1d8:	2d00      	cmp	r5, #0
9000e1da:	d0db      	beq.n	9000e194 <xQueueGiveFromISR+0x58>
9000e1dc:	2800      	cmp	r0, #0
9000e1de:	d0d9      	beq.n	9000e194 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e1e0:	2301      	movs	r3, #1
9000e1e2:	602b      	str	r3, [r5, #0]
9000e1e4:	e7d6      	b.n	9000e194 <xQueueGiveFromISR+0x58>
9000e1e6:	bf00      	nop

9000e1e8 <xQueueReceive>:
{
9000e1e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e1ec:	b085      	sub	sp, #20
9000e1ee:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e1f0:	2800      	cmp	r0, #0
9000e1f2:	f000 8164 	beq.w	9000e4be <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e1f6:	460f      	mov	r7, r1
9000e1f8:	4604      	mov	r4, r0
9000e1fa:	2900      	cmp	r1, #0
9000e1fc:	f000 8097 	beq.w	9000e32e <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e200:	f001 fa42 	bl	9000f688 <xTaskGetSchedulerState>
9000e204:	2800      	cmp	r0, #0
9000e206:	f000 809f 	beq.w	9000e348 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
9000e20a:	f7ff fac3 	bl	9000d794 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e20e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e210:	2d00      	cmp	r5, #0
9000e212:	d175      	bne.n	9000e300 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e214:	9b01      	ldr	r3, [sp, #4]
9000e216:	2b00      	cmp	r3, #0
9000e218:	f000 80f4 	beq.w	9000e404 <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
9000e21c:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e21e:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e222:	a802      	add	r0, sp, #8
9000e224:	f001 f9dc 	bl	9000f5e0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e228:	f7ff fad6 	bl	9000d7d8 <vPortExitCritical>
		vTaskSuspendAll();
9000e22c:	f001 f866 	bl	9000f2fc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e230:	f7ff fab0 	bl	9000d794 <vPortEnterCritical>
9000e234:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e238:	2bff      	cmp	r3, #255	@ 0xff
9000e23a:	d101      	bne.n	9000e240 <xQueueReceive+0x58>
9000e23c:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000e240:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e244:	2bff      	cmp	r3, #255	@ 0xff
9000e246:	d101      	bne.n	9000e24c <xQueueReceive+0x64>
9000e248:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000e24c:	f7ff fac4 	bl	9000d7d8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e250:	a901      	add	r1, sp, #4
9000e252:	a802      	add	r0, sp, #8
9000e254:	f001 f9d0 	bl	9000f5f8 <xTaskCheckForTimeOut>
9000e258:	2800      	cmp	r0, #0
9000e25a:	f040 8082 	bne.w	9000e362 <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
9000e25e:	f7ff fa99 	bl	9000d794 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e262:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e264:	2b00      	cmp	r3, #0
9000e266:	f000 80d3 	beq.w	9000e410 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
9000e26a:	f7ff fab5 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e26e:	f7ff fa91 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e272:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e276:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e278:	2d00      	cmp	r5, #0
9000e27a:	dd14      	ble.n	9000e2a6 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e27c:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e280:	e003      	b.n	9000e28a <xQueueReceive+0xa2>
			--cTxLock;
9000e282:	1e6b      	subs	r3, r5, #1
9000e284:	b2da      	uxtb	r2, r3
9000e286:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e288:	b16a      	cbz	r2, 9000e2a6 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e28a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e28c:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e28e:	b153      	cbz	r3, 9000e2a6 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e290:	f001 f960 	bl	9000f554 <xTaskRemoveFromEventList>
9000e294:	2800      	cmp	r0, #0
9000e296:	d0f4      	beq.n	9000e282 <xQueueReceive+0x9a>
						vTaskMissedYield();
9000e298:	f001 f9f0 	bl	9000f67c <vTaskMissedYield>
			--cTxLock;
9000e29c:	1e6b      	subs	r3, r5, #1
9000e29e:	b2da      	uxtb	r2, r3
9000e2a0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2a2:	2a00      	cmp	r2, #0
9000e2a4:	d1f1      	bne.n	9000e28a <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
9000e2a6:	23ff      	movs	r3, #255	@ 0xff
9000e2a8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e2ac:	f7ff fa94 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e2b0:	f7ff fa70 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e2b4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e2b8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e2ba:	2d00      	cmp	r5, #0
9000e2bc:	dd14      	ble.n	9000e2e8 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2be:	f104 0910 	add.w	r9, r4, #16
9000e2c2:	e003      	b.n	9000e2cc <xQueueReceive+0xe4>
				--cRxLock;
9000e2c4:	1e6b      	subs	r3, r5, #1
9000e2c6:	b2da      	uxtb	r2, r3
9000e2c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e2ca:	b16a      	cbz	r2, 9000e2e8 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e2cc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2ce:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e2d0:	b153      	cbz	r3, 9000e2e8 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2d2:	f001 f93f 	bl	9000f554 <xTaskRemoveFromEventList>
9000e2d6:	2800      	cmp	r0, #0
9000e2d8:	d0f4      	beq.n	9000e2c4 <xQueueReceive+0xdc>
					vTaskMissedYield();
9000e2da:	f001 f9cf 	bl	9000f67c <vTaskMissedYield>
				--cRxLock;
9000e2de:	1e6b      	subs	r3, r5, #1
9000e2e0:	b2da      	uxtb	r2, r3
9000e2e2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e2e4:	2a00      	cmp	r2, #0
9000e2e6:	d1f1      	bne.n	9000e2cc <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
9000e2e8:	23ff      	movs	r3, #255	@ 0xff
9000e2ea:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e2ee:	f7ff fa73 	bl	9000d7d8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e2f2:	f001 f80b 	bl	9000f30c <xTaskResumeAll>
		taskENTER_CRITICAL();
9000e2f6:	f7ff fa4d 	bl	9000d794 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e2fa:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e2fc:	2d00      	cmp	r5, #0
9000e2fe:	d07d      	beq.n	9000e3fc <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e300:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000e302:	b152      	cbz	r2, 9000e31a <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e304:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e306:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e308:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e30a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e30c:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e30e:	d301      	bcc.n	9000e314 <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e310:	6821      	ldr	r1, [r4, #0]
9000e312:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e314:	4638      	mov	r0, r7
9000e316:	f01a fd80 	bl	90028e1a <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e31a:	3d01      	subs	r5, #1
9000e31c:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e31e:	6923      	ldr	r3, [r4, #16]
9000e320:	2b00      	cmp	r3, #0
9000e322:	f040 80d5 	bne.w	9000e4d0 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
9000e326:	f7ff fa57 	bl	9000d7d8 <vPortExitCritical>
				return pdPASS;
9000e32a:	2001      	movs	r0, #1
9000e32c:	e06d      	b.n	9000e40a <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e32e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e330:	2b00      	cmp	r3, #0
9000e332:	f43f af65 	beq.w	9000e200 <xQueueReceive+0x18>
	__asm volatile
9000e336:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e33a:	f383 8811 	msr	BASEPRI, r3
9000e33e:	f3bf 8f6f 	isb	sy
9000e342:	f3bf 8f4f 	dsb	sy
9000e346:	e7fe      	b.n	9000e346 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e348:	9b01      	ldr	r3, [sp, #4]
9000e34a:	2b00      	cmp	r3, #0
9000e34c:	f43f af5d 	beq.w	9000e20a <xQueueReceive+0x22>
9000e350:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e354:	f383 8811 	msr	BASEPRI, r3
9000e358:	f3bf 8f6f 	isb	sy
9000e35c:	f3bf 8f4f 	dsb	sy
9000e360:	e7fe      	b.n	9000e360 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
9000e362:	f7ff fa17 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e366:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e36a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e36c:	2d00      	cmp	r5, #0
9000e36e:	dc04      	bgt.n	9000e37a <xQueueReceive+0x192>
9000e370:	e011      	b.n	9000e396 <xQueueReceive+0x1ae>
			--cTxLock;
9000e372:	1e6b      	subs	r3, r5, #1
9000e374:	b2da      	uxtb	r2, r3
9000e376:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e378:	b16a      	cbz	r2, 9000e396 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e37a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e37c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e37e:	b153      	cbz	r3, 9000e396 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e380:	f001 f8e8 	bl	9000f554 <xTaskRemoveFromEventList>
9000e384:	2800      	cmp	r0, #0
9000e386:	d0f4      	beq.n	9000e372 <xQueueReceive+0x18a>
						vTaskMissedYield();
9000e388:	f001 f978 	bl	9000f67c <vTaskMissedYield>
			--cTxLock;
9000e38c:	1e6b      	subs	r3, r5, #1
9000e38e:	b2da      	uxtb	r2, r3
9000e390:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e392:	2a00      	cmp	r2, #0
9000e394:	d1f1      	bne.n	9000e37a <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
9000e396:	23ff      	movs	r3, #255	@ 0xff
9000e398:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e39c:	f7ff fa1c 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e3a0:	f7ff f9f8 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e3a4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e3a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3aa:	2d00      	cmp	r5, #0
9000e3ac:	dd14      	ble.n	9000e3d8 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3ae:	f104 0910 	add.w	r9, r4, #16
9000e3b2:	e003      	b.n	9000e3bc <xQueueReceive+0x1d4>
				--cRxLock;
9000e3b4:	1e6b      	subs	r3, r5, #1
9000e3b6:	b2da      	uxtb	r2, r3
9000e3b8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3ba:	b16a      	cbz	r2, 9000e3d8 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e3bc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3be:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e3c0:	b153      	cbz	r3, 9000e3d8 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3c2:	f001 f8c7 	bl	9000f554 <xTaskRemoveFromEventList>
9000e3c6:	2800      	cmp	r0, #0
9000e3c8:	d0f4      	beq.n	9000e3b4 <xQueueReceive+0x1cc>
					vTaskMissedYield();
9000e3ca:	f001 f957 	bl	9000f67c <vTaskMissedYield>
				--cRxLock;
9000e3ce:	1e6b      	subs	r3, r5, #1
9000e3d0:	b2da      	uxtb	r2, r3
9000e3d2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3d4:	2a00      	cmp	r2, #0
9000e3d6:	d1f1      	bne.n	9000e3bc <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
9000e3d8:	23ff      	movs	r3, #255	@ 0xff
9000e3da:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e3de:	f7ff f9fb 	bl	9000d7d8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e3e2:	f000 ff93 	bl	9000f30c <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e3e6:	f7ff f9d5 	bl	9000d794 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e3ea:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e3ec:	b153      	cbz	r3, 9000e404 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
9000e3ee:	f7ff f9f3 	bl	9000d7d8 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e3f2:	f7ff f9cf 	bl	9000d794 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e3f6:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e3f8:	2d00      	cmp	r5, #0
9000e3fa:	d181      	bne.n	9000e300 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e3fc:	9b01      	ldr	r3, [sp, #4]
9000e3fe:	2b00      	cmp	r3, #0
9000e400:	f47f af12 	bne.w	9000e228 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000e404:	f7ff f9e8 	bl	9000d7d8 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000e408:	2000      	movs	r0, #0
}
9000e40a:	b005      	add	sp, #20
9000e40c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e410:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000e414:	f7ff f9e0 	bl	9000d7d8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e418:	9901      	ldr	r1, [sp, #4]
9000e41a:	4648      	mov	r0, r9
9000e41c:	f001 f80c 	bl	9000f438 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e420:	f7ff f9b8 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e424:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e428:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e42a:	2d00      	cmp	r5, #0
9000e42c:	dc04      	bgt.n	9000e438 <xQueueReceive+0x250>
9000e42e:	e011      	b.n	9000e454 <xQueueReceive+0x26c>
			--cTxLock;
9000e430:	1e6b      	subs	r3, r5, #1
9000e432:	b2da      	uxtb	r2, r3
9000e434:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e436:	b16a      	cbz	r2, 9000e454 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e438:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e43a:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e43c:	b153      	cbz	r3, 9000e454 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e43e:	f001 f889 	bl	9000f554 <xTaskRemoveFromEventList>
9000e442:	2800      	cmp	r0, #0
9000e444:	d0f4      	beq.n	9000e430 <xQueueReceive+0x248>
						vTaskMissedYield();
9000e446:	f001 f919 	bl	9000f67c <vTaskMissedYield>
			--cTxLock;
9000e44a:	1e6b      	subs	r3, r5, #1
9000e44c:	b2da      	uxtb	r2, r3
9000e44e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e450:	2a00      	cmp	r2, #0
9000e452:	d1f1      	bne.n	9000e438 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
9000e454:	23ff      	movs	r3, #255	@ 0xff
9000e456:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e45a:	f7ff f9bd 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e45e:	f7ff f999 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e462:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e466:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e468:	2d00      	cmp	r5, #0
9000e46a:	dd14      	ble.n	9000e496 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e46c:	f104 0910 	add.w	r9, r4, #16
9000e470:	e003      	b.n	9000e47a <xQueueReceive+0x292>
				--cRxLock;
9000e472:	1e6b      	subs	r3, r5, #1
9000e474:	b2da      	uxtb	r2, r3
9000e476:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e478:	b16a      	cbz	r2, 9000e496 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e47a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e47c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e47e:	b153      	cbz	r3, 9000e496 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e480:	f001 f868 	bl	9000f554 <xTaskRemoveFromEventList>
9000e484:	2800      	cmp	r0, #0
9000e486:	d0f4      	beq.n	9000e472 <xQueueReceive+0x28a>
					vTaskMissedYield();
9000e488:	f001 f8f8 	bl	9000f67c <vTaskMissedYield>
				--cRxLock;
9000e48c:	1e6b      	subs	r3, r5, #1
9000e48e:	b2da      	uxtb	r2, r3
9000e490:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e492:	2a00      	cmp	r2, #0
9000e494:	d1f1      	bne.n	9000e47a <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
9000e496:	23ff      	movs	r3, #255	@ 0xff
9000e498:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e49c:	f7ff f99c 	bl	9000d7d8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e4a0:	f000 ff34 	bl	9000f30c <xTaskResumeAll>
9000e4a4:	2800      	cmp	r0, #0
9000e4a6:	d1a4      	bne.n	9000e3f2 <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
9000e4a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e4ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e4b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e4b4:	f3bf 8f4f 	dsb	sy
9000e4b8:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000e4bc:	e799      	b.n	9000e3f2 <xQueueReceive+0x20a>
9000e4be:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e4c2:	f383 8811 	msr	BASEPRI, r3
9000e4c6:	f3bf 8f6f 	isb	sy
9000e4ca:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e4ce:	e7fe      	b.n	9000e4ce <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e4d0:	f104 0010 	add.w	r0, r4, #16
9000e4d4:	f001 f83e 	bl	9000f554 <xTaskRemoveFromEventList>
9000e4d8:	2800      	cmp	r0, #0
9000e4da:	f43f af24 	beq.w	9000e326 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
9000e4de:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e4e2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e4e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e4ea:	f3bf 8f4f 	dsb	sy
9000e4ee:	f3bf 8f6f 	isb	sy
9000e4f2:	e718      	b.n	9000e326 <xQueueReceive+0x13e>

9000e4f4 <xQueueSemaphoreTake>:
{
9000e4f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e4f8:	b084      	sub	sp, #16
9000e4fa:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e4fc:	2800      	cmp	r0, #0
9000e4fe:	d05e      	beq.n	9000e5be <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e500:	6c07      	ldr	r7, [r0, #64]	@ 0x40
9000e502:	4604      	mov	r4, r0
9000e504:	b147      	cbz	r7, 9000e518 <xQueueSemaphoreTake+0x24>
9000e506:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e50a:	f383 8811 	msr	BASEPRI, r3
9000e50e:	f3bf 8f6f 	isb	sy
9000e512:	f3bf 8f4f 	dsb	sy
9000e516:	e7fe      	b.n	9000e516 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e518:	f001 f8b6 	bl	9000f688 <xTaskGetSchedulerState>
9000e51c:	4605      	mov	r5, r0
9000e51e:	2800      	cmp	r0, #0
9000e520:	d056      	beq.n	9000e5d0 <xQueueSemaphoreTake+0xdc>
9000e522:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e524:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
9000e528:	f7ff f934 	bl	9000d794 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e52c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e52e:	2b00      	cmp	r3, #0
9000e530:	f040 814d 	bne.w	9000e7ce <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e534:	9b01      	ldr	r3, [sp, #4]
9000e536:	2b00      	cmp	r3, #0
9000e538:	f000 813e 	beq.w	9000e7b8 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
9000e53c:	2d00      	cmp	r5, #0
9000e53e:	f000 80a3 	beq.w	9000e688 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
9000e542:	f7ff f949 	bl	9000d7d8 <vPortExitCritical>
		vTaskSuspendAll();
9000e546:	f000 fed9 	bl	9000f2fc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e54a:	f7ff f923 	bl	9000d794 <vPortEnterCritical>
9000e54e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e552:	2bff      	cmp	r3, #255	@ 0xff
9000e554:	d102      	bne.n	9000e55c <xQueueSemaphoreTake+0x68>
9000e556:	2300      	movs	r3, #0
9000e558:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000e55c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e560:	2bff      	cmp	r3, #255	@ 0xff
9000e562:	d102      	bne.n	9000e56a <xQueueSemaphoreTake+0x76>
9000e564:	2300      	movs	r3, #0
9000e566:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000e56a:	f7ff f935 	bl	9000d7d8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e56e:	a901      	add	r1, sp, #4
9000e570:	a802      	add	r0, sp, #8
9000e572:	f001 f841 	bl	9000f5f8 <xTaskCheckForTimeOut>
9000e576:	2800      	cmp	r0, #0
9000e578:	d137      	bne.n	9000e5ea <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000e57a:	f7ff f90b 	bl	9000d794 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e57e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e580:	2b00      	cmp	r3, #0
9000e582:	f000 80ae 	beq.w	9000e6e2 <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
9000e586:	f7ff f927 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e58a:	f7ff f903 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e58e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e592:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e594:	2d00      	cmp	r5, #0
9000e596:	dd7f      	ble.n	9000e698 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e598:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000e59c:	e004      	b.n	9000e5a8 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000e59e:	1e6b      	subs	r3, r5, #1
9000e5a0:	b2da      	uxtb	r2, r3
9000e5a2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5a4:	2a00      	cmp	r2, #0
9000e5a6:	d077      	beq.n	9000e698 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5a8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5aa:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5ac:	2b00      	cmp	r3, #0
9000e5ae:	d073      	beq.n	9000e698 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5b0:	f000 ffd0 	bl	9000f554 <xTaskRemoveFromEventList>
9000e5b4:	2800      	cmp	r0, #0
9000e5b6:	d0f2      	beq.n	9000e59e <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
9000e5b8:	f001 f860 	bl	9000f67c <vTaskMissedYield>
9000e5bc:	e7ef      	b.n	9000e59e <xQueueSemaphoreTake+0xaa>
9000e5be:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e5c2:	f383 8811 	msr	BASEPRI, r3
9000e5c6:	f3bf 8f6f 	isb	sy
9000e5ca:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e5ce:	e7fe      	b.n	9000e5ce <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e5d0:	9b01      	ldr	r3, [sp, #4]
9000e5d2:	2b00      	cmp	r3, #0
9000e5d4:	f000 80d7 	beq.w	9000e786 <xQueueSemaphoreTake+0x292>
9000e5d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e5dc:	f383 8811 	msr	BASEPRI, r3
9000e5e0:	f3bf 8f6f 	isb	sy
9000e5e4:	f3bf 8f4f 	dsb	sy
9000e5e8:	e7fe      	b.n	9000e5e8 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000e5ea:	f7ff f8d3 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e5ee:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e5f2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5f4:	2d00      	cmp	r5, #0
9000e5f6:	dc04      	bgt.n	9000e602 <xQueueSemaphoreTake+0x10e>
9000e5f8:	e011      	b.n	9000e61e <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000e5fa:	1e6b      	subs	r3, r5, #1
9000e5fc:	b2da      	uxtb	r2, r3
9000e5fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e600:	b16a      	cbz	r2, 9000e61e <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e602:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e604:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e606:	b153      	cbz	r3, 9000e61e <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e608:	f000 ffa4 	bl	9000f554 <xTaskRemoveFromEventList>
9000e60c:	2800      	cmp	r0, #0
9000e60e:	d0f4      	beq.n	9000e5fa <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000e610:	f001 f834 	bl	9000f67c <vTaskMissedYield>
			--cTxLock;
9000e614:	1e6b      	subs	r3, r5, #1
9000e616:	b2da      	uxtb	r2, r3
9000e618:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e61a:	2a00      	cmp	r2, #0
9000e61c:	d1f1      	bne.n	9000e602 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e61e:	23ff      	movs	r3, #255	@ 0xff
9000e620:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e624:	f7ff f8d8 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e628:	f7ff f8b4 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e62c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e630:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e632:	2d00      	cmp	r5, #0
9000e634:	dd14      	ble.n	9000e660 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e636:	f104 0810 	add.w	r8, r4, #16
9000e63a:	e003      	b.n	9000e644 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000e63c:	1e6b      	subs	r3, r5, #1
9000e63e:	b2da      	uxtb	r2, r3
9000e640:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e642:	b16a      	cbz	r2, 9000e660 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e644:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e646:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e648:	b153      	cbz	r3, 9000e660 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e64a:	f000 ff83 	bl	9000f554 <xTaskRemoveFromEventList>
9000e64e:	2800      	cmp	r0, #0
9000e650:	d0f4      	beq.n	9000e63c <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000e652:	f001 f813 	bl	9000f67c <vTaskMissedYield>
				--cRxLock;
9000e656:	1e6b      	subs	r3, r5, #1
9000e658:	b2da      	uxtb	r2, r3
9000e65a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e65c:	2a00      	cmp	r2, #0
9000e65e:	d1f1      	bne.n	9000e644 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000e660:	23ff      	movs	r3, #255	@ 0xff
9000e662:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e666:	f7ff f8b7 	bl	9000d7d8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e66a:	f000 fe4f 	bl	9000f30c <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e66e:	f7ff f891 	bl	9000d794 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e672:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e674:	b963      	cbnz	r3, 9000e690 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
9000e676:	f7ff f8af 	bl	9000d7d8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000e67a:	2f00      	cmp	r7, #0
9000e67c:	f040 8085 	bne.w	9000e78a <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
9000e680:	2000      	movs	r0, #0
}
9000e682:	b004      	add	sp, #16
9000e684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e688:	a802      	add	r0, sp, #8
9000e68a:	f000 ffa9 	bl	9000f5e0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e68e:	e758      	b.n	9000e542 <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
9000e690:	f7ff f8a2 	bl	9000d7d8 <vPortExitCritical>
	return xReturn;
9000e694:	2501      	movs	r5, #1
9000e696:	e747      	b.n	9000e528 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
9000e698:	23ff      	movs	r3, #255	@ 0xff
9000e69a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e69e:	f7ff f89b 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e6a2:	f7ff f877 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e6a6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e6aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6ac:	2d00      	cmp	r5, #0
9000e6ae:	dd10      	ble.n	9000e6d2 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6b0:	f104 0810 	add.w	r8, r4, #16
9000e6b4:	e003      	b.n	9000e6be <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
9000e6b6:	1e6b      	subs	r3, r5, #1
9000e6b8:	b2da      	uxtb	r2, r3
9000e6ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6bc:	b14a      	cbz	r2, 9000e6d2 <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6be:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6c0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6c2:	b133      	cbz	r3, 9000e6d2 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6c4:	f000 ff46 	bl	9000f554 <xTaskRemoveFromEventList>
9000e6c8:	2800      	cmp	r0, #0
9000e6ca:	d0f4      	beq.n	9000e6b6 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
9000e6cc:	f000 ffd6 	bl	9000f67c <vTaskMissedYield>
9000e6d0:	e7f1      	b.n	9000e6b6 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
9000e6d2:	23ff      	movs	r3, #255	@ 0xff
9000e6d4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e6d8:	f7ff f87e 	bl	9000d7d8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e6dc:	f000 fe16 	bl	9000f30c <xTaskResumeAll>
9000e6e0:	e7d8      	b.n	9000e694 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
9000e6e2:	f7ff f879 	bl	9000d7d8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e6e6:	6823      	ldr	r3, [r4, #0]
9000e6e8:	2b00      	cmp	r3, #0
9000e6ea:	d05c      	beq.n	9000e7a6 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e6ec:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000e6f0:	9901      	ldr	r1, [sp, #4]
9000e6f2:	4640      	mov	r0, r8
9000e6f4:	f000 fea0 	bl	9000f438 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e6f8:	f7ff f84c 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e6fc:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e700:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e702:	2d00      	cmp	r5, #0
9000e704:	dc04      	bgt.n	9000e710 <xQueueSemaphoreTake+0x21c>
9000e706:	e00d      	b.n	9000e724 <xQueueSemaphoreTake+0x230>
			--cTxLock;
9000e708:	1e6b      	subs	r3, r5, #1
9000e70a:	b2da      	uxtb	r2, r3
9000e70c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e70e:	b14a      	cbz	r2, 9000e724 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e710:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e712:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e714:	b133      	cbz	r3, 9000e724 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e716:	f000 ff1d 	bl	9000f554 <xTaskRemoveFromEventList>
9000e71a:	2800      	cmp	r0, #0
9000e71c:	d0f4      	beq.n	9000e708 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
9000e71e:	f000 ffad 	bl	9000f67c <vTaskMissedYield>
9000e722:	e7f1      	b.n	9000e708 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
9000e724:	23ff      	movs	r3, #255	@ 0xff
9000e726:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e72a:	f7ff f855 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e72e:	f7ff f831 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e732:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e736:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e738:	2d00      	cmp	r5, #0
9000e73a:	dd10      	ble.n	9000e75e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e73c:	f104 0810 	add.w	r8, r4, #16
9000e740:	e003      	b.n	9000e74a <xQueueSemaphoreTake+0x256>
				--cRxLock;
9000e742:	1e6b      	subs	r3, r5, #1
9000e744:	b2da      	uxtb	r2, r3
9000e746:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e748:	b14a      	cbz	r2, 9000e75e <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e74a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e74c:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e74e:	b133      	cbz	r3, 9000e75e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e750:	f000 ff00 	bl	9000f554 <xTaskRemoveFromEventList>
9000e754:	2800      	cmp	r0, #0
9000e756:	d0f4      	beq.n	9000e742 <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
9000e758:	f000 ff90 	bl	9000f67c <vTaskMissedYield>
9000e75c:	e7f1      	b.n	9000e742 <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
9000e75e:	23ff      	movs	r3, #255	@ 0xff
9000e760:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e764:	f7ff f838 	bl	9000d7d8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e768:	f000 fdd0 	bl	9000f30c <xTaskResumeAll>
9000e76c:	2800      	cmp	r0, #0
9000e76e:	d191      	bne.n	9000e694 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
9000e770:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e774:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e778:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e77c:	f3bf 8f4f 	dsb	sy
9000e780:	f3bf 8f6f 	isb	sy
9000e784:	e786      	b.n	9000e694 <xQueueSemaphoreTake+0x1a0>
9000e786:	462f      	mov	r7, r5
9000e788:	e6cc      	b.n	9000e524 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000e78a:	f7ff f803 	bl	9000d794 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000e78e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000e790:	b119      	cbz	r1, 9000e79a <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000e792:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000e794:	6819      	ldr	r1, [r3, #0]
9000e796:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e79a:	68a0      	ldr	r0, [r4, #8]
9000e79c:	f001 f808 	bl	9000f7b0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000e7a0:	f7ff f81a 	bl	9000d7d8 <vPortExitCritical>
9000e7a4:	e76c      	b.n	9000e680 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000e7a6:	f7fe fff5 	bl	9000d794 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e7aa:	68a0      	ldr	r0, [r4, #8]
9000e7ac:	f000 ff7c 	bl	9000f6a8 <xTaskPriorityInherit>
9000e7b0:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000e7b2:	f7ff f811 	bl	9000d7d8 <vPortExitCritical>
9000e7b6:	e799      	b.n	9000e6ec <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000e7b8:	2f00      	cmp	r7, #0
9000e7ba:	d0f1      	beq.n	9000e7a0 <xQueueSemaphoreTake+0x2ac>
9000e7bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7c0:	f383 8811 	msr	BASEPRI, r3
9000e7c4:	f3bf 8f6f 	isb	sy
9000e7c8:	f3bf 8f4f 	dsb	sy
9000e7cc:	e7fe      	b.n	9000e7cc <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e7ce:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e7d0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e7d2:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e7d4:	b12a      	cbz	r2, 9000e7e2 <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e7d6:	6923      	ldr	r3, [r4, #16]
9000e7d8:	b93b      	cbnz	r3, 9000e7ea <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
9000e7da:	f7fe fffd 	bl	9000d7d8 <vPortExitCritical>
				return pdPASS;
9000e7de:	2001      	movs	r0, #1
9000e7e0:	e74f      	b.n	9000e682 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000e7e2:	f001 f835 	bl	9000f850 <pvTaskIncrementMutexHeldCount>
9000e7e6:	60a0      	str	r0, [r4, #8]
9000e7e8:	e7f5      	b.n	9000e7d6 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e7ea:	f104 0010 	add.w	r0, r4, #16
9000e7ee:	f000 feb1 	bl	9000f554 <xTaskRemoveFromEventList>
9000e7f2:	2800      	cmp	r0, #0
9000e7f4:	d0f1      	beq.n	9000e7da <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
9000e7f6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e7fa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e7fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e802:	f3bf 8f4f 	dsb	sy
9000e806:	f3bf 8f6f 	isb	sy
9000e80a:	e7e6      	b.n	9000e7da <xQueueSemaphoreTake+0x2e6>

9000e80c <xQueueReceiveFromISR>:
{
9000e80c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000e810:	b310      	cbz	r0, 9000e858 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e812:	460f      	mov	r7, r1
9000e814:	4604      	mov	r4, r0
9000e816:	4616      	mov	r6, r2
9000e818:	b191      	cbz	r1, 9000e840 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e81a:	f7ff f8ed 	bl	9000d9f8 <vPortValidateInterruptPriority>
	__asm volatile
9000e81e:	f3ef 8911 	mrs	r9, BASEPRI
9000e822:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e826:	f383 8811 	msr	BASEPRI, r3
9000e82a:	f3bf 8f6f 	isb	sy
9000e82e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e832:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e834:	b9cd      	cbnz	r5, 9000e86a <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000e836:	4628      	mov	r0, r5
	__asm volatile
9000e838:	f389 8811 	msr	BASEPRI, r9
}
9000e83c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e840:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e842:	2b00      	cmp	r3, #0
9000e844:	d0e9      	beq.n	9000e81a <xQueueReceiveFromISR+0xe>
	__asm volatile
9000e846:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e84a:	f383 8811 	msr	BASEPRI, r3
9000e84e:	f3bf 8f6f 	isb	sy
9000e852:	f3bf 8f4f 	dsb	sy
9000e856:	e7fe      	b.n	9000e856 <xQueueReceiveFromISR+0x4a>
9000e858:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e85c:	f383 8811 	msr	BASEPRI, r3
9000e860:	f3bf 8f6f 	isb	sy
9000e864:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e868:	e7fe      	b.n	9000e868 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000e86a:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e86e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000e870:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e874:	b142      	cbz	r2, 9000e888 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e876:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e878:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e87a:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e87c:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e87e:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e880:	d21c      	bcs.n	9000e8bc <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e882:	4638      	mov	r0, r7
9000e884:	f01a fac9 	bl	90028e1a <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e888:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000e88a:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e88e:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000e890:	d006      	beq.n	9000e8a0 <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e892:	f108 0301 	add.w	r3, r8, #1
9000e896:	b25b      	sxtb	r3, r3
9000e898:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000e89c:	2001      	movs	r0, #1
9000e89e:	e7cb      	b.n	9000e838 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e8a0:	6923      	ldr	r3, [r4, #16]
9000e8a2:	2b00      	cmp	r3, #0
9000e8a4:	d0fa      	beq.n	9000e89c <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e8a6:	f104 0010 	add.w	r0, r4, #16
9000e8aa:	f000 fe53 	bl	9000f554 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000e8ae:	2e00      	cmp	r6, #0
9000e8b0:	d0f4      	beq.n	9000e89c <xQueueReceiveFromISR+0x90>
9000e8b2:	2800      	cmp	r0, #0
9000e8b4:	d0f2      	beq.n	9000e89c <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e8b6:	2301      	movs	r3, #1
9000e8b8:	6033      	str	r3, [r6, #0]
9000e8ba:	e7ef      	b.n	9000e89c <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e8bc:	6821      	ldr	r1, [r4, #0]
9000e8be:	60e1      	str	r1, [r4, #12]
9000e8c0:	e7df      	b.n	9000e882 <xQueueReceiveFromISR+0x76>
9000e8c2:	bf00      	nop
9000e8c4:	0000      	movs	r0, r0
	...

9000e8c8 <vQueueDelete>:
	configASSERT( pxQueue );
9000e8c8:	b1e0      	cbz	r0, 9000e904 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000e8ca:	4b21      	ldr	r3, [pc, #132]	@ (9000e950 <vQueueDelete+0x88>)
9000e8cc:	685a      	ldr	r2, [r3, #4]
9000e8ce:	4290      	cmp	r0, r2
9000e8d0:	d02b      	beq.n	9000e92a <vQueueDelete+0x62>
9000e8d2:	68da      	ldr	r2, [r3, #12]
9000e8d4:	4290      	cmp	r0, r2
9000e8d6:	d02a      	beq.n	9000e92e <vQueueDelete+0x66>
9000e8d8:	695a      	ldr	r2, [r3, #20]
9000e8da:	4290      	cmp	r0, r2
9000e8dc:	d029      	beq.n	9000e932 <vQueueDelete+0x6a>
9000e8de:	69da      	ldr	r2, [r3, #28]
9000e8e0:	4290      	cmp	r0, r2
9000e8e2:	d028      	beq.n	9000e936 <vQueueDelete+0x6e>
9000e8e4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000e8e6:	4290      	cmp	r0, r2
9000e8e8:	d027      	beq.n	9000e93a <vQueueDelete+0x72>
9000e8ea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000e8ec:	4290      	cmp	r0, r2
9000e8ee:	d014      	beq.n	9000e91a <vQueueDelete+0x52>
9000e8f0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000e8f2:	4290      	cmp	r0, r2
9000e8f4:	d023      	beq.n	9000e93e <vQueueDelete+0x76>
9000e8f6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000e8f8:	4290      	cmp	r0, r2
9000e8fa:	d022      	beq.n	9000e942 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000e8fc:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000e900:	b14b      	cbz	r3, 9000e916 <vQueueDelete+0x4e>
}
9000e902:	4770      	bx	lr
9000e904:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e908:	f383 8811 	msr	BASEPRI, r3
9000e90c:	f3bf 8f6f 	isb	sy
9000e910:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e914:	e7fe      	b.n	9000e914 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000e916:	f7fe be23 	b.w	9000d560 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e91a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000e91c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000e920:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000e948 <vQueueDelete+0x80>
9000e924:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000e928:	e7e8      	b.n	9000e8fc <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e92a:	2200      	movs	r2, #0
9000e92c:	e7f6      	b.n	9000e91c <vQueueDelete+0x54>
9000e92e:	2201      	movs	r2, #1
9000e930:	e7f4      	b.n	9000e91c <vQueueDelete+0x54>
9000e932:	2202      	movs	r2, #2
9000e934:	e7f2      	b.n	9000e91c <vQueueDelete+0x54>
9000e936:	2203      	movs	r2, #3
9000e938:	e7f0      	b.n	9000e91c <vQueueDelete+0x54>
9000e93a:	2204      	movs	r2, #4
9000e93c:	e7ee      	b.n	9000e91c <vQueueDelete+0x54>
9000e93e:	2206      	movs	r2, #6
9000e940:	e7ec      	b.n	9000e91c <vQueueDelete+0x54>
9000e942:	2207      	movs	r2, #7
9000e944:	e7ea      	b.n	9000e91c <vQueueDelete+0x54>
9000e946:	bf00      	nop
	...
9000e950:	24021568 	.word	0x24021568

9000e954 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000e954:	4b12      	ldr	r3, [pc, #72]	@ (9000e9a0 <vQueueAddToRegistry+0x4c>)
9000e956:	681a      	ldr	r2, [r3, #0]
9000e958:	b17a      	cbz	r2, 9000e97a <vQueueAddToRegistry+0x26>
9000e95a:	689a      	ldr	r2, [r3, #8]
9000e95c:	b162      	cbz	r2, 9000e978 <vQueueAddToRegistry+0x24>
9000e95e:	691a      	ldr	r2, [r3, #16]
9000e960:	b192      	cbz	r2, 9000e988 <vQueueAddToRegistry+0x34>
9000e962:	699a      	ldr	r2, [r3, #24]
9000e964:	b192      	cbz	r2, 9000e98c <vQueueAddToRegistry+0x38>
9000e966:	6a1a      	ldr	r2, [r3, #32]
9000e968:	b192      	cbz	r2, 9000e990 <vQueueAddToRegistry+0x3c>
9000e96a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000e96c:	b192      	cbz	r2, 9000e994 <vQueueAddToRegistry+0x40>
9000e96e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000e970:	b192      	cbz	r2, 9000e998 <vQueueAddToRegistry+0x44>
9000e972:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000e974:	b192      	cbz	r2, 9000e99c <vQueueAddToRegistry+0x48>
	}
9000e976:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e978:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e97a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000e97e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e982:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000e986:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e988:	2202      	movs	r2, #2
9000e98a:	e7f6      	b.n	9000e97a <vQueueAddToRegistry+0x26>
9000e98c:	2203      	movs	r2, #3
9000e98e:	e7f4      	b.n	9000e97a <vQueueAddToRegistry+0x26>
9000e990:	2204      	movs	r2, #4
9000e992:	e7f2      	b.n	9000e97a <vQueueAddToRegistry+0x26>
9000e994:	2205      	movs	r2, #5
9000e996:	e7f0      	b.n	9000e97a <vQueueAddToRegistry+0x26>
9000e998:	2206      	movs	r2, #6
9000e99a:	e7ee      	b.n	9000e97a <vQueueAddToRegistry+0x26>
9000e99c:	2207      	movs	r2, #7
9000e99e:	e7ec      	b.n	9000e97a <vQueueAddToRegistry+0x26>
9000e9a0:	24021568 	.word	0x24021568

9000e9a4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000e9a4:	b570      	push	{r4, r5, r6, lr}
9000e9a6:	4605      	mov	r5, r0
9000e9a8:	460e      	mov	r6, r1
9000e9aa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000e9ac:	f7fe fef2 	bl	9000d794 <vPortEnterCritical>
9000e9b0:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000e9b4:	2bff      	cmp	r3, #255	@ 0xff
9000e9b6:	d102      	bne.n	9000e9be <vQueueWaitForMessageRestricted+0x1a>
9000e9b8:	2300      	movs	r3, #0
9000e9ba:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000e9be:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000e9c2:	2bff      	cmp	r3, #255	@ 0xff
9000e9c4:	d102      	bne.n	9000e9cc <vQueueWaitForMessageRestricted+0x28>
9000e9c6:	2300      	movs	r3, #0
9000e9c8:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000e9cc:	f7fe ff04 	bl	9000d7d8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000e9d0:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000e9d2:	2b00      	cmp	r3, #0
9000e9d4:	d043      	beq.n	9000ea5e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000e9d6:	f7fe fedd 	bl	9000d794 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e9da:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000e9de:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e9e0:	2c00      	cmp	r4, #0
9000e9e2:	dd14      	ble.n	9000ea0e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e9e4:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000e9e8:	e003      	b.n	9000e9f2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000e9ea:	1e63      	subs	r3, r4, #1
9000e9ec:	b2da      	uxtb	r2, r3
9000e9ee:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e9f0:	b16a      	cbz	r2, 9000ea0e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e9f2:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e9f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e9f6:	b153      	cbz	r3, 9000ea0e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e9f8:	f000 fdac 	bl	9000f554 <xTaskRemoveFromEventList>
9000e9fc:	2800      	cmp	r0, #0
9000e9fe:	d0f4      	beq.n	9000e9ea <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000ea00:	f000 fe3c 	bl	9000f67c <vTaskMissedYield>
			--cTxLock;
9000ea04:	1e63      	subs	r3, r4, #1
9000ea06:	b2da      	uxtb	r2, r3
9000ea08:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ea0a:	2a00      	cmp	r2, #0
9000ea0c:	d1f1      	bne.n	9000e9f2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000ea0e:	23ff      	movs	r3, #255	@ 0xff
9000ea10:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ea14:	f7fe fee0 	bl	9000d7d8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ea18:	f7fe febc 	bl	9000d794 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ea1c:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000ea20:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ea22:	2c00      	cmp	r4, #0
9000ea24:	dd14      	ble.n	9000ea50 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea26:	f105 0610 	add.w	r6, r5, #16
9000ea2a:	e003      	b.n	9000ea34 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000ea2c:	1e63      	subs	r3, r4, #1
9000ea2e:	b2da      	uxtb	r2, r3
9000ea30:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ea32:	b16a      	cbz	r2, 9000ea50 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ea34:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea36:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ea38:	b153      	cbz	r3, 9000ea50 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea3a:	f000 fd8b 	bl	9000f554 <xTaskRemoveFromEventList>
9000ea3e:	2800      	cmp	r0, #0
9000ea40:	d0f4      	beq.n	9000ea2c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000ea42:	f000 fe1b 	bl	9000f67c <vTaskMissedYield>
				--cRxLock;
9000ea46:	1e63      	subs	r3, r4, #1
9000ea48:	b2da      	uxtb	r2, r3
9000ea4a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ea4c:	2a00      	cmp	r2, #0
9000ea4e:	d1f1      	bne.n	9000ea34 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000ea50:	23ff      	movs	r3, #255	@ 0xff
9000ea52:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000ea56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000ea5a:	f7fe bebd 	b.w	9000d7d8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000ea5e:	4622      	mov	r2, r4
9000ea60:	4631      	mov	r1, r6
9000ea62:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000ea66:	f000 fd2b 	bl	9000f4c0 <vTaskPlaceOnEventListRestricted>
9000ea6a:	e7b4      	b.n	9000e9d6 <vQueueWaitForMessageRestricted+0x32>

9000ea6c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000ea6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000ea70:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000ea72:	f7fe fe8f 	bl	9000d794 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000ea76:	4a34      	ldr	r2, [pc, #208]	@ (9000eb48 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000ea78:	4e34      	ldr	r6, [pc, #208]	@ (9000eb4c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000ea7a:	6813      	ldr	r3, [r2, #0]
9000ea7c:	3301      	adds	r3, #1
9000ea7e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000ea80:	6833      	ldr	r3, [r6, #0]
9000ea82:	2b00      	cmp	r3, #0
9000ea84:	d031      	beq.n	9000eaea <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000ea86:	4c32      	ldr	r4, [pc, #200]	@ (9000eb50 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ea88:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000ea8a:	6823      	ldr	r3, [r4, #0]
9000ea8c:	b333      	cbz	r3, 9000eadc <prvAddNewTaskToReadyList+0x70>
9000ea8e:	4f31      	ldr	r7, [pc, #196]	@ (9000eb54 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000ea90:	4a31      	ldr	r2, [pc, #196]	@ (9000eb58 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000ea92:	4932      	ldr	r1, [pc, #200]	@ (9000eb5c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000ea94:	6813      	ldr	r3, [r2, #0]
9000ea96:	3301      	adds	r3, #1
9000ea98:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000ea9a:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000ea9c:	680b      	ldr	r3, [r1, #0]
9000ea9e:	4283      	cmp	r3, r0
9000eaa0:	d200      	bcs.n	9000eaa4 <prvAddNewTaskToReadyList+0x38>
9000eaa2:	6008      	str	r0, [r1, #0]
9000eaa4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000eaa8:	1d29      	adds	r1, r5, #4
9000eaaa:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000eaae:	f7fe fdcd 	bl	9000d64c <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000eab2:	f7fe fe91 	bl	9000d7d8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000eab6:	6823      	ldr	r3, [r4, #0]
9000eab8:	b173      	cbz	r3, 9000ead8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000eaba:	6832      	ldr	r2, [r6, #0]
9000eabc:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000eabe:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000eac0:	429a      	cmp	r2, r3
9000eac2:	d209      	bcs.n	9000ead8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000eac4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eac8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000eacc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ead0:	f3bf 8f4f 	dsb	sy
9000ead4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000ead8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000eadc:	6833      	ldr	r3, [r6, #0]
9000eade:	4f1d      	ldr	r7, [pc, #116]	@ (9000eb54 <prvAddNewTaskToReadyList+0xe8>)
9000eae0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000eae2:	4283      	cmp	r3, r0
9000eae4:	d8d4      	bhi.n	9000ea90 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000eae6:	6035      	str	r5, [r6, #0]
9000eae8:	e7d2      	b.n	9000ea90 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000eaea:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000eaec:	6813      	ldr	r3, [r2, #0]
9000eaee:	2b01      	cmp	r3, #1
9000eaf0:	d003      	beq.n	9000eafa <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000eaf2:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000eaf4:	4f17      	ldr	r7, [pc, #92]	@ (9000eb54 <prvAddNewTaskToReadyList+0xe8>)
9000eaf6:	4c16      	ldr	r4, [pc, #88]	@ (9000eb50 <prvAddNewTaskToReadyList+0xe4>)
9000eaf8:	e7ca      	b.n	9000ea90 <prvAddNewTaskToReadyList+0x24>
9000eafa:	4f16      	ldr	r7, [pc, #88]	@ (9000eb54 <prvAddNewTaskToReadyList+0xe8>)
9000eafc:	463c      	mov	r4, r7
9000eafe:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000eb02:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000eb04:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000eb06:	f7fe fd91 	bl	9000d62c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000eb0a:	45a0      	cmp	r8, r4
9000eb0c:	d1f9      	bne.n	9000eb02 <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000eb0e:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 9000eb74 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000eb12:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000eb78 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000eb16:	4648      	mov	r0, r9
9000eb18:	4c0d      	ldr	r4, [pc, #52]	@ (9000eb50 <prvAddNewTaskToReadyList+0xe4>)
9000eb1a:	f7fe fd87 	bl	9000d62c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000eb1e:	4640      	mov	r0, r8
9000eb20:	f7fe fd84 	bl	9000d62c <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000eb24:	480e      	ldr	r0, [pc, #56]	@ (9000eb60 <prvAddNewTaskToReadyList+0xf4>)
9000eb26:	f7fe fd81 	bl	9000d62c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000eb2a:	480e      	ldr	r0, [pc, #56]	@ (9000eb64 <prvAddNewTaskToReadyList+0xf8>)
9000eb2c:	f7fe fd7e 	bl	9000d62c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000eb30:	480d      	ldr	r0, [pc, #52]	@ (9000eb68 <prvAddNewTaskToReadyList+0xfc>)
9000eb32:	f7fe fd7b 	bl	9000d62c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000eb36:	4b0d      	ldr	r3, [pc, #52]	@ (9000eb6c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000eb38:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000eb3a:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000eb3e:	4b0c      	ldr	r3, [pc, #48]	@ (9000eb70 <prvAddNewTaskToReadyList+0x104>)
9000eb40:	f8c3 8000 	str.w	r8, [r3]
}
9000eb44:	e7a4      	b.n	9000ea90 <prvAddNewTaskToReadyList+0x24>
9000eb46:	bf00      	nop
9000eb48:	240215cc 	.word	0x240215cc
9000eb4c:	24021aa0 	.word	0x24021aa0
9000eb50:	240215c0 	.word	0x240215c0
9000eb54:	24021640 	.word	0x24021640
9000eb58:	240215b0 	.word	0x240215b0
9000eb5c:	240215c4 	.word	0x240215c4
9000eb60:	240215fc 	.word	0x240215fc
9000eb64:	240215e8 	.word	0x240215e8
9000eb68:	240215d0 	.word	0x240215d0
9000eb6c:	24021614 	.word	0x24021614
9000eb70:	24021610 	.word	0x24021610
9000eb74:	2402162c 	.word	0x2402162c
9000eb78:	24021618 	.word	0x24021618

9000eb7c <prvIdleTask>:
{
9000eb7c:	b580      	push	{r7, lr}
9000eb7e:	4c22      	ldr	r4, [pc, #136]	@ (9000ec08 <prvIdleTask+0x8c>)
9000eb80:	4e22      	ldr	r6, [pc, #136]	@ (9000ec0c <prvIdleTask+0x90>)
9000eb82:	4d23      	ldr	r5, [pc, #140]	@ (9000ec10 <prvIdleTask+0x94>)
9000eb84:	4f23      	ldr	r7, [pc, #140]	@ (9000ec14 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000eb86:	6823      	ldr	r3, [r4, #0]
9000eb88:	b353      	cbz	r3, 9000ebe0 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
9000eb8a:	f7fe fe03 	bl	9000d794 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000eb8e:	68f3      	ldr	r3, [r6, #12]
9000eb90:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000eb94:	f108 0004 	add.w	r0, r8, #4
9000eb98:	f7fe fd7e 	bl	9000d698 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000eb9c:	682b      	ldr	r3, [r5, #0]
9000eb9e:	3b01      	subs	r3, #1
9000eba0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000eba2:	6823      	ldr	r3, [r4, #0]
9000eba4:	3b01      	subs	r3, #1
9000eba6:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000eba8:	f7fe fe16 	bl	9000d7d8 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ebac:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
9000ebb0:	b163      	cbz	r3, 9000ebcc <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000ebb2:	2b01      	cmp	r3, #1
9000ebb4:	d024      	beq.n	9000ec00 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000ebb6:	2b02      	cmp	r3, #2
9000ebb8:	d0e5      	beq.n	9000eb86 <prvIdleTask+0xa>
9000ebba:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ebbe:	f383 8811 	msr	BASEPRI, r3
9000ebc2:	f3bf 8f6f 	isb	sy
9000ebc6:	f3bf 8f4f 	dsb	sy
9000ebca:	e7fe      	b.n	9000ebca <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
9000ebcc:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
9000ebd0:	f7fe fcc6 	bl	9000d560 <vPortFree>
				vPortFree( pxTCB );
9000ebd4:	4640      	mov	r0, r8
9000ebd6:	f7fe fcc3 	bl	9000d560 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ebda:	6823      	ldr	r3, [r4, #0]
9000ebdc:	2b00      	cmp	r3, #0
9000ebde:	d1d4      	bne.n	9000eb8a <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000ebe0:	683b      	ldr	r3, [r7, #0]
9000ebe2:	2b01      	cmp	r3, #1
9000ebe4:	d909      	bls.n	9000ebfa <prvIdleTask+0x7e>
				taskYIELD();
9000ebe6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ebea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ebee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ebf2:	f3bf 8f4f 	dsb	sy
9000ebf6:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000ebfa:	f7f4 fd89 	bl	90003710 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000ebfe:	e7c2      	b.n	9000eb86 <prvIdleTask+0xa>
				vPortFree( pxTCB );
9000ec00:	4640      	mov	r0, r8
9000ec02:	f7fe fcad 	bl	9000d560 <vPortFree>
9000ec06:	e7be      	b.n	9000eb86 <prvIdleTask+0xa>
9000ec08:	240215e4 	.word	0x240215e4
9000ec0c:	240215e8 	.word	0x240215e8
9000ec10:	240215cc 	.word	0x240215cc
9000ec14:	24021640 	.word	0x24021640

9000ec18 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ec18:	4b49      	ldr	r3, [pc, #292]	@ (9000ed40 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000ec1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ec1e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000ec20:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ec22:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000ec24:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000ec26:	2e00      	cmp	r6, #0
9000ec28:	d03e      	beq.n	9000eca8 <xTaskIncrementTick.part.0+0x90>
9000ec2a:	4b46      	ldr	r3, [pc, #280]	@ (9000ed44 <xTaskIncrementTick.part.0+0x12c>)
9000ec2c:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000ec2e:	681b      	ldr	r3, [r3, #0]
9000ec30:	429e      	cmp	r6, r3
9000ec32:	d346      	bcc.n	9000ecc2 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ec34:	4f44      	ldr	r7, [pc, #272]	@ (9000ed48 <xTaskIncrementTick.part.0+0x130>)
9000ec36:	683b      	ldr	r3, [r7, #0]
9000ec38:	681d      	ldr	r5, [r3, #0]
9000ec3a:	2d00      	cmp	r5, #0
9000ec3c:	d077      	beq.n	9000ed2e <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000ec3e:	2500      	movs	r5, #0
9000ec40:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9000ed58 <xTaskIncrementTick.part.0+0x140>
9000ec44:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9000ed5c <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000ec48:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 9000ed60 <xTaskIncrementTick.part.0+0x148>
9000ec4c:	e020      	b.n	9000ec90 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ec4e:	f7fe fd23 	bl	9000d698 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ec52:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ec54:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ec58:	b10b      	cbz	r3, 9000ec5e <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ec5a:	f7fe fd1d 	bl	9000d698 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ec5e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ec60:	4659      	mov	r1, fp
9000ec62:	f8d8 2000 	ldr.w	r2, [r8]
9000ec66:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ec6a:	4293      	cmp	r3, r2
9000ec6c:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ec70:	d901      	bls.n	9000ec76 <xTaskIncrementTick.part.0+0x5e>
9000ec72:	f8c8 3000 	str.w	r3, [r8]
9000ec76:	f7fe fce9 	bl	9000d64c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ec7a:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ec7e:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ec80:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000ec82:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ec84:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000ec86:	4291      	cmp	r1, r2
9000ec88:	bf28      	it	cs
9000ec8a:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ec8c:	2b00      	cmp	r3, #0
9000ec8e:	d052      	beq.n	9000ed36 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ec90:	683b      	ldr	r3, [r7, #0]
9000ec92:	68db      	ldr	r3, [r3, #12]
9000ec94:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000ec96:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ec98:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9000ec9c:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ec9e:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9000eca0:	d2d5      	bcs.n	9000ec4e <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9000eca2:	9a01      	ldr	r2, [sp, #4]
9000eca4:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000eca6:	e011      	b.n	9000eccc <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9000eca8:	4b27      	ldr	r3, [pc, #156]	@ (9000ed48 <xTaskIncrementTick.part.0+0x130>)
9000ecaa:	681a      	ldr	r2, [r3, #0]
9000ecac:	6812      	ldr	r2, [r2, #0]
9000ecae:	b30a      	cbz	r2, 9000ecf4 <xTaskIncrementTick.part.0+0xdc>
9000ecb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecb4:	f383 8811 	msr	BASEPRI, r3
9000ecb8:	f3bf 8f6f 	isb	sy
9000ecbc:	f3bf 8f4f 	dsb	sy
9000ecc0:	e7fe      	b.n	9000ecc0 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9000ecc2:	2500      	movs	r5, #0
9000ecc4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9000ed58 <xTaskIncrementTick.part.0+0x140>
9000ecc8:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9000ed5c <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000eccc:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000ecd0:	491e      	ldr	r1, [pc, #120]	@ (9000ed4c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ecd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000ecd4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000ecd8:	009b      	lsls	r3, r3, #2
9000ecda:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000ecde:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000ece0:	2a02      	cmp	r2, #2
9000ece2:	bf28      	it	cs
9000ece4:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000ece6:	2b00      	cmp	r3, #0
}
9000ece8:	bf0c      	ite	eq
9000ecea:	4628      	moveq	r0, r5
9000ecec:	2001      	movne	r0, #1
9000ecee:	b003      	add	sp, #12
9000ecf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000ecf4:	4a16      	ldr	r2, [pc, #88]	@ (9000ed50 <xTaskIncrementTick.part.0+0x138>)
9000ecf6:	6818      	ldr	r0, [r3, #0]
9000ecf8:	6811      	ldr	r1, [r2, #0]
9000ecfa:	6019      	str	r1, [r3, #0]
9000ecfc:	4915      	ldr	r1, [pc, #84]	@ (9000ed54 <xTaskIncrementTick.part.0+0x13c>)
9000ecfe:	6010      	str	r0, [r2, #0]
9000ed00:	680a      	ldr	r2, [r1, #0]
9000ed02:	3201      	adds	r2, #1
9000ed04:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ed06:	681a      	ldr	r2, [r3, #0]
9000ed08:	6812      	ldr	r2, [r2, #0]
9000ed0a:	b93a      	cbnz	r2, 9000ed1c <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000ed0c:	4b0d      	ldr	r3, [pc, #52]	@ (9000ed44 <xTaskIncrementTick.part.0+0x12c>)
9000ed0e:	461a      	mov	r2, r3
9000ed10:	9301      	str	r3, [sp, #4]
9000ed12:	f04f 33ff 	mov.w	r3, #4294967295
9000ed16:	6013      	str	r3, [r2, #0]
9000ed18:	4613      	mov	r3, r2
9000ed1a:	e788      	b.n	9000ec2e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ed1c:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ed1e:	4a09      	ldr	r2, [pc, #36]	@ (9000ed44 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ed20:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ed22:	9201      	str	r2, [sp, #4]
9000ed24:	68db      	ldr	r3, [r3, #12]
9000ed26:	685b      	ldr	r3, [r3, #4]
9000ed28:	6013      	str	r3, [r2, #0]
9000ed2a:	4613      	mov	r3, r2
	}
}
9000ed2c:	e77f      	b.n	9000ec2e <xTaskIncrementTick.part.0+0x16>
9000ed2e:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9000ed58 <xTaskIncrementTick.part.0+0x140>
9000ed32:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000ed5c <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ed36:	f04f 33ff 	mov.w	r3, #4294967295
9000ed3a:	9a01      	ldr	r2, [sp, #4]
9000ed3c:	6013      	str	r3, [r2, #0]
					break;
9000ed3e:	e7c5      	b.n	9000eccc <xTaskIncrementTick.part.0+0xb4>
9000ed40:	240215c8 	.word	0x240215c8
9000ed44:	240215ac 	.word	0x240215ac
9000ed48:	24021614 	.word	0x24021614
9000ed4c:	240215b8 	.word	0x240215b8
9000ed50:	24021610 	.word	0x24021610
9000ed54:	240215b4 	.word	0x240215b4
9000ed58:	24021640 	.word	0x24021640
9000ed5c:	24021aa0 	.word	0x24021aa0
9000ed60:	240215c4 	.word	0x240215c4

9000ed64 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000ed64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000ed68:	4d43      	ldr	r5, [pc, #268]	@ (9000ee78 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
9000ed6a:	f7fe fd13 	bl	9000d794 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000ed6e:	682b      	ldr	r3, [r5, #0]
9000ed70:	3b01      	subs	r3, #1
9000ed72:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ed74:	682b      	ldr	r3, [r5, #0]
9000ed76:	2b00      	cmp	r3, #0
9000ed78:	d168      	bne.n	9000ee4c <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000ed7a:	4b40      	ldr	r3, [pc, #256]	@ (9000ee7c <xTaskResumeAll.part.0+0x118>)
9000ed7c:	681b      	ldr	r3, [r3, #0]
9000ed7e:	2b00      	cmp	r3, #0
9000ed80:	d064      	beq.n	9000ee4c <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ed82:	4e3f      	ldr	r6, [pc, #252]	@ (9000ee80 <xTaskResumeAll.part.0+0x11c>)
9000ed84:	6833      	ldr	r3, [r6, #0]
9000ed86:	2b00      	cmp	r3, #0
9000ed88:	d073      	beq.n	9000ee72 <xTaskResumeAll.part.0+0x10e>
9000ed8a:	4f3e      	ldr	r7, [pc, #248]	@ (9000ee84 <xTaskResumeAll.part.0+0x120>)
9000ed8c:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 9000ee94 <xTaskResumeAll.part.0+0x130>
9000ed90:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 9000ee98 <xTaskResumeAll.part.0+0x134>
9000ed94:	f8df a104 	ldr.w	sl, [pc, #260]	@ 9000ee9c <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ed98:	68f3      	ldr	r3, [r6, #12]
9000ed9a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ed9e:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000eda2:	f10b 0018 	add.w	r0, fp, #24
9000eda6:	f7fe fc77 	bl	9000d698 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000edaa:	4620      	mov	r0, r4
9000edac:	f7fe fc74 	bl	9000d698 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000edb0:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000edb4:	4621      	mov	r1, r4
9000edb6:	683c      	ldr	r4, [r7, #0]
9000edb8:	eb02 0082 	add.w	r0, r2, r2, lsl #2
9000edbc:	42a2      	cmp	r2, r4
9000edbe:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000edc2:	d900      	bls.n	9000edc6 <xTaskResumeAll.part.0+0x62>
9000edc4:	603a      	str	r2, [r7, #0]
9000edc6:	f7fe fc41 	bl	9000d64c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000edca:	f8d8 1000 	ldr.w	r1, [r8]
9000edce:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000edd2:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
9000edd4:	429a      	cmp	r2, r3
9000edd6:	d33f      	bcc.n	9000ee58 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
9000edd8:	2301      	movs	r3, #1
9000edda:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000edde:	6833      	ldr	r3, [r6, #0]
9000ede0:	2b00      	cmp	r3, #0
9000ede2:	d1d9      	bne.n	9000ed98 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ede4:	4b28      	ldr	r3, [pc, #160]	@ (9000ee88 <xTaskResumeAll.part.0+0x124>)
9000ede6:	681a      	ldr	r2, [r3, #0]
9000ede8:	6812      	ldr	r2, [r2, #0]
9000edea:	2a00      	cmp	r2, #0
9000edec:	d03c      	beq.n	9000ee68 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000edee:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000edf0:	4b26      	ldr	r3, [pc, #152]	@ (9000ee8c <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000edf2:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000edf4:	68d2      	ldr	r2, [r2, #12]
9000edf6:	6852      	ldr	r2, [r2, #4]
9000edf8:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000edfa:	4e25      	ldr	r6, [pc, #148]	@ (9000ee90 <xTaskResumeAll.part.0+0x12c>)
9000edfc:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000edfe:	b194      	cbz	r4, 9000ee26 <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
9000ee00:	2701      	movs	r7, #1
9000ee02:	e006      	b.n	9000ee12 <xTaskResumeAll.part.0+0xae>
9000ee04:	f7ff ff08 	bl	9000ec18 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000ee08:	b108      	cbz	r0, 9000ee0e <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
9000ee0a:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ee0e:	3c01      	subs	r4, #1
9000ee10:	d008      	beq.n	9000ee24 <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ee12:	682b      	ldr	r3, [r5, #0]
9000ee14:	2b00      	cmp	r3, #0
9000ee16:	d0f5      	beq.n	9000ee04 <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
9000ee18:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ee1a:	3c01      	subs	r4, #1
		++xPendedTicks;
9000ee1c:	f103 0301 	add.w	r3, r3, #1
9000ee20:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ee22:	d1f6      	bne.n	9000ee12 <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
9000ee24:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000ee26:	f8da 3000 	ldr.w	r3, [sl]
9000ee2a:	b17b      	cbz	r3, 9000ee4c <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
9000ee2c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ee30:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ee34:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ee38:	f3bf 8f4f 	dsb	sy
9000ee3c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000ee40:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000ee42:	f7fe fcc9 	bl	9000d7d8 <vPortExitCritical>
}
9000ee46:	4620      	mov	r0, r4
9000ee48:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9000ee4c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000ee4e:	f7fe fcc3 	bl	9000d7d8 <vPortExitCritical>
}
9000ee52:	4620      	mov	r0, r4
9000ee54:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ee58:	6833      	ldr	r3, [r6, #0]
9000ee5a:	2b00      	cmp	r3, #0
9000ee5c:	d19c      	bne.n	9000ed98 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ee5e:	4b0a      	ldr	r3, [pc, #40]	@ (9000ee88 <xTaskResumeAll.part.0+0x124>)
9000ee60:	681a      	ldr	r2, [r3, #0]
9000ee62:	6812      	ldr	r2, [r2, #0]
9000ee64:	2a00      	cmp	r2, #0
9000ee66:	d1c2      	bne.n	9000edee <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
9000ee68:	4b08      	ldr	r3, [pc, #32]	@ (9000ee8c <xTaskResumeAll.part.0+0x128>)
9000ee6a:	f04f 32ff 	mov.w	r2, #4294967295
9000ee6e:	601a      	str	r2, [r3, #0]
9000ee70:	e7c3      	b.n	9000edfa <xTaskResumeAll.part.0+0x96>
9000ee72:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000ee9c <xTaskResumeAll.part.0+0x138>
9000ee76:	e7c0      	b.n	9000edfa <xTaskResumeAll.part.0+0x96>
9000ee78:	240215a8 	.word	0x240215a8
9000ee7c:	240215cc 	.word	0x240215cc
9000ee80:	240215fc 	.word	0x240215fc
9000ee84:	240215c4 	.word	0x240215c4
9000ee88:	24021614 	.word	0x24021614
9000ee8c:	240215ac 	.word	0x240215ac
9000ee90:	240215bc 	.word	0x240215bc
9000ee94:	24021640 	.word	0x24021640
9000ee98:	24021aa0 	.word	0x24021aa0
9000ee9c:	240215b8 	.word	0x240215b8

9000eea0 <xTaskCreateStatic>:
	{
9000eea0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000eea4:	b083      	sub	sp, #12
9000eea6:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000eea8:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
9000eeac:	b1bb      	cbz	r3, 9000eede <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000eeae:	b16c      	cbz	r4, 9000eecc <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000eeb0:	2360      	movs	r3, #96	@ 0x60
9000eeb2:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000eeb4:	9b01      	ldr	r3, [sp, #4]
9000eeb6:	2b60      	cmp	r3, #96	@ 0x60
9000eeb8:	d01a      	beq.n	9000eef0 <xTaskCreateStatic+0x50>
9000eeba:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eebe:	f383 8811 	msr	BASEPRI, r3
9000eec2:	f3bf 8f6f 	isb	sy
9000eec6:	f3bf 8f4f 	dsb	sy
9000eeca:	e7fe      	b.n	9000eeca <xTaskCreateStatic+0x2a>
9000eecc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eed0:	f383 8811 	msr	BASEPRI, r3
9000eed4:	f3bf 8f6f 	isb	sy
9000eed8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000eedc:	e7fe      	b.n	9000eedc <xTaskCreateStatic+0x3c>
9000eede:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eee2:	f383 8811 	msr	BASEPRI, r3
9000eee6:	f3bf 8f6f 	isb	sy
9000eeea:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000eeee:	e7fe      	b.n	9000eeee <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000eef0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000eef2:	0096      	lsls	r6, r2, #2
9000eef4:	4607      	mov	r7, r0
9000eef6:	460d      	mov	r5, r1
9000eef8:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000eefa:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000eefc:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000eefe:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef00:	4632      	mov	r2, r6
9000ef02:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ef04:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef08:	f019 fea6 	bl	90028c58 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ef0c:	1f32      	subs	r2, r6, #4
9000ef0e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ef10:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000ef12:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
9000ef16:	2d00      	cmp	r5, #0
9000ef18:	d068      	beq.n	9000efec <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef1a:	782b      	ldrb	r3, [r5, #0]
9000ef1c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000ef20:	2b00      	cmp	r3, #0
9000ef22:	d036      	beq.n	9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef24:	786b      	ldrb	r3, [r5, #1]
9000ef26:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000ef2a:	b393      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef2c:	78ab      	ldrb	r3, [r5, #2]
9000ef2e:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000ef32:	b373      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef34:	78eb      	ldrb	r3, [r5, #3]
9000ef36:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000ef3a:	b353      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef3c:	792b      	ldrb	r3, [r5, #4]
9000ef3e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000ef42:	b333      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef44:	796b      	ldrb	r3, [r5, #5]
9000ef46:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000ef4a:	b313      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef4c:	79ab      	ldrb	r3, [r5, #6]
9000ef4e:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000ef52:	b1f3      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef54:	79eb      	ldrb	r3, [r5, #7]
9000ef56:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000ef5a:	b1d3      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef5c:	7a2b      	ldrb	r3, [r5, #8]
9000ef5e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000ef62:	b1b3      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef64:	7a6b      	ldrb	r3, [r5, #9]
9000ef66:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000ef6a:	b193      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef6c:	7aab      	ldrb	r3, [r5, #10]
9000ef6e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000ef72:	b173      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef74:	7aeb      	ldrb	r3, [r5, #11]
9000ef76:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000ef7a:	b153      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef7c:	7b2b      	ldrb	r3, [r5, #12]
9000ef7e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000ef82:	b133      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef84:	7b6b      	ldrb	r3, [r5, #13]
9000ef86:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000ef8a:	b113      	cbz	r3, 9000ef92 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef8c:	7bab      	ldrb	r3, [r5, #14]
9000ef8e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000ef92:	2300      	movs	r3, #0
9000ef94:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000ef98:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000ef9a:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ef9e:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000efa0:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000efa2:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000efa6:	bf28      	it	cs
9000efa8:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000efaa:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000efac:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000efae:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000efb2:	f7fe fb47 	bl	9000d644 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000efb6:	f104 0018 	add.w	r0, r4, #24
9000efba:	f7fe fb43 	bl	9000d644 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efbe:	4642      	mov	r2, r8
9000efc0:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000efc2:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efc6:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000efc8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000efca:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000efcc:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000efce:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000efd2:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efd6:	f7fe fbb1 	bl	9000d73c <pxPortInitialiseStack>
9000efda:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000efdc:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efde:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000efe0:	f7ff fd44 	bl	9000ea6c <prvAddNewTaskToReadyList>
	}
9000efe4:	4620      	mov	r0, r4
9000efe6:	b003      	add	sp, #12
9000efe8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000efec:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000eff0:	e7d2      	b.n	9000ef98 <xTaskCreateStatic+0xf8>
9000eff2:	bf00      	nop

9000eff4 <xTaskCreate>:
	{
9000eff4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000eff8:	0096      	lsls	r6, r2, #2
	{
9000effa:	4680      	mov	r8, r0
9000effc:	460d      	mov	r5, r1
9000effe:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f000:	4630      	mov	r0, r6
9000f002:	f7fe f9f1 	bl	9000d3e8 <pvPortMalloc>
			if( pxStack != NULL )
9000f006:	2800      	cmp	r0, #0
9000f008:	d07f      	beq.n	9000f10a <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000f00a:	4607      	mov	r7, r0
9000f00c:	2060      	movs	r0, #96	@ 0x60
9000f00e:	f7fe f9eb 	bl	9000d3e8 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000f012:	4604      	mov	r4, r0
9000f014:	2800      	cmp	r0, #0
9000f016:	d075      	beq.n	9000f104 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f018:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000f01a:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f01c:	4632      	mov	r2, r6
9000f01e:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f020:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f024:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f026:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f028:	f019 fe16 	bl	90028c58 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f02c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f02e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f030:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000f034:	2d00      	cmp	r5, #0
9000f036:	d06c      	beq.n	9000f112 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f038:	782b      	ldrb	r3, [r5, #0]
9000f03a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f03e:	2b00      	cmp	r3, #0
9000f040:	d036      	beq.n	9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f042:	786b      	ldrb	r3, [r5, #1]
9000f044:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f048:	b393      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f04a:	78ab      	ldrb	r3, [r5, #2]
9000f04c:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f050:	b373      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f052:	78eb      	ldrb	r3, [r5, #3]
9000f054:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f058:	b353      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f05a:	792b      	ldrb	r3, [r5, #4]
9000f05c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f060:	b333      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f062:	796b      	ldrb	r3, [r5, #5]
9000f064:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f068:	b313      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f06a:	79ab      	ldrb	r3, [r5, #6]
9000f06c:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f070:	b1f3      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f072:	79eb      	ldrb	r3, [r5, #7]
9000f074:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f078:	b1d3      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f07a:	7a2b      	ldrb	r3, [r5, #8]
9000f07c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f080:	b1b3      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f082:	7a6b      	ldrb	r3, [r5, #9]
9000f084:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f088:	b193      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f08a:	7aab      	ldrb	r3, [r5, #10]
9000f08c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f090:	b173      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f092:	7aeb      	ldrb	r3, [r5, #11]
9000f094:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f098:	b153      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f09a:	7b2b      	ldrb	r3, [r5, #12]
9000f09c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f0a0:	b133      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0a2:	7b6b      	ldrb	r3, [r5, #13]
9000f0a4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f0a8:	b113      	cbz	r3, 9000f0b0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0aa:	7bab      	ldrb	r3, [r5, #14]
9000f0ac:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f0b0:	2300      	movs	r3, #0
9000f0b2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f0b6:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000f0b8:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f0ba:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f0bc:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f0be:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f0c0:	bf28      	it	cs
9000f0c2:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f0c4:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f0c6:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f0c8:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f0cc:	f7fe faba 	bl	9000d644 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f0d0:	f104 0018 	add.w	r0, r4, #24
9000f0d4:	f7fe fab6 	bl	9000d644 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9000f0d8:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f0da:	464a      	mov	r2, r9
9000f0dc:	4641      	mov	r1, r8
9000f0de:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f0e0:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f0e2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f0e4:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f0e6:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f0e8:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f0ec:	f7fe fb26 	bl	9000d73c <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000f0f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f0f2:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000f0f4:	b103      	cbz	r3, 9000f0f8 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000f0f6:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f0f8:	4620      	mov	r0, r4
9000f0fa:	f7ff fcb7 	bl	9000ea6c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000f0fe:	2001      	movs	r0, #1
	}
9000f100:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000f104:	4638      	mov	r0, r7
9000f106:	f7fe fa2b 	bl	9000d560 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f10a:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000f10e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f112:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000f116:	e7ce      	b.n	9000f0b6 <xTaskCreate+0xc2>

9000f118 <vTaskDelay>:
	{
9000f118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000f11a:	b950      	cbnz	r0, 9000f132 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000f11c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f120:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f124:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f128:	f3bf 8f4f 	dsb	sy
9000f12c:	f3bf 8f6f 	isb	sy
	}
9000f130:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000f132:	4d1e      	ldr	r5, [pc, #120]	@ (9000f1ac <vTaskDelay+0x94>)
9000f134:	682b      	ldr	r3, [r5, #0]
9000f136:	b143      	cbz	r3, 9000f14a <vTaskDelay+0x32>
9000f138:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f13c:	f383 8811 	msr	BASEPRI, r3
9000f140:	f3bf 8f6f 	isb	sy
9000f144:	f3bf 8f4f 	dsb	sy
9000f148:	e7fe      	b.n	9000f148 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000f14a:	682b      	ldr	r3, [r5, #0]
9000f14c:	4604      	mov	r4, r0
9000f14e:	3301      	adds	r3, #1
9000f150:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000f152:	4b17      	ldr	r3, [pc, #92]	@ (9000f1b0 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f154:	4e17      	ldr	r6, [pc, #92]	@ (9000f1b4 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000f156:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f158:	6830      	ldr	r0, [r6, #0]
9000f15a:	3004      	adds	r0, #4
9000f15c:	f7fe fa9c 	bl	9000d698 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f160:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f162:	6833      	ldr	r3, [r6, #0]
9000f164:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000f166:	d315      	bcc.n	9000f194 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f168:	4b13      	ldr	r3, [pc, #76]	@ (9000f1b8 <vTaskDelay+0xa0>)
9000f16a:	6818      	ldr	r0, [r3, #0]
9000f16c:	6831      	ldr	r1, [r6, #0]
9000f16e:	3104      	adds	r1, #4
9000f170:	f7fe fa7a 	bl	9000d668 <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000f174:	682b      	ldr	r3, [r5, #0]
9000f176:	b943      	cbnz	r3, 9000f18a <vTaskDelay+0x72>
9000f178:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f17c:	f383 8811 	msr	BASEPRI, r3
9000f180:	f3bf 8f6f 	isb	sy
9000f184:	f3bf 8f4f 	dsb	sy
9000f188:	e7fe      	b.n	9000f188 <vTaskDelay+0x70>
9000f18a:	f7ff fdeb 	bl	9000ed64 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000f18e:	2800      	cmp	r0, #0
9000f190:	d0c4      	beq.n	9000f11c <vTaskDelay+0x4>
	}
9000f192:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f194:	4b09      	ldr	r3, [pc, #36]	@ (9000f1bc <vTaskDelay+0xa4>)
9000f196:	6818      	ldr	r0, [r3, #0]
9000f198:	6831      	ldr	r1, [r6, #0]
9000f19a:	3104      	adds	r1, #4
9000f19c:	f7fe fa64 	bl	9000d668 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000f1a0:	4b07      	ldr	r3, [pc, #28]	@ (9000f1c0 <vTaskDelay+0xa8>)
9000f1a2:	681a      	ldr	r2, [r3, #0]
9000f1a4:	4294      	cmp	r4, r2
9000f1a6:	d2e5      	bcs.n	9000f174 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000f1a8:	601c      	str	r4, [r3, #0]
9000f1aa:	e7e3      	b.n	9000f174 <vTaskDelay+0x5c>
9000f1ac:	240215a8 	.word	0x240215a8
9000f1b0:	240215c8 	.word	0x240215c8
9000f1b4:	24021aa0 	.word	0x24021aa0
9000f1b8:	24021610 	.word	0x24021610
9000f1bc:	24021614 	.word	0x24021614
9000f1c0:	240215ac 	.word	0x240215ac

9000f1c4 <vTaskStartScheduler>:
{
9000f1c4:	b570      	push	{r4, r5, r6, lr}
9000f1c6:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000f1c8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f1ca:	4668      	mov	r0, sp
9000f1cc:	aa02      	add	r2, sp, #8
9000f1ce:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000f1d0:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f1d4:	f7fe f8ea 	bl	9000d3ac <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000f1d8:	9d00      	ldr	r5, [sp, #0]
9000f1da:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000f1de:	b1b8      	cbz	r0, 9000f210 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000f1e0:	b16d      	cbz	r5, 9000f1fe <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f1e2:	2260      	movs	r2, #96	@ 0x60
9000f1e4:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f1e6:	9a03      	ldr	r2, [sp, #12]
9000f1e8:	2a60      	cmp	r2, #96	@ 0x60
9000f1ea:	d01a      	beq.n	9000f222 <vTaskStartScheduler+0x5e>
9000f1ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f1f0:	f383 8811 	msr	BASEPRI, r3
9000f1f4:	f3bf 8f6f 	isb	sy
9000f1f8:	f3bf 8f4f 	dsb	sy
9000f1fc:	e7fe      	b.n	9000f1fc <vTaskStartScheduler+0x38>
9000f1fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f202:	f383 8811 	msr	BASEPRI, r3
9000f206:	f3bf 8f6f 	isb	sy
9000f20a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f20e:	e7fe      	b.n	9000f20e <vTaskStartScheduler+0x4a>
9000f210:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f214:	f383 8811 	msr	BASEPRI, r3
9000f218:	f3bf 8f6f 	isb	sy
9000f21c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f220:	e7fe      	b.n	9000f220 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f222:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f224:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f226:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f228:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f22a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f22c:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f230:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f232:	f019 fd11 	bl	90028c58 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f236:	1f33      	subs	r3, r6, #4
9000f238:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f23a:	492a      	ldr	r1, [pc, #168]	@ (9000f2e4 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f23c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f23e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f240:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
9000f244:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f246:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f24a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000f24e:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000f250:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f254:	f7fe f9f6 	bl	9000d644 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f258:	f105 0018 	add.w	r0, r5, #24
9000f25c:	f7fe f9f2 	bl	9000d644 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f260:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f262:	4622      	mov	r2, r4
9000f264:	4920      	ldr	r1, [pc, #128]	@ (9000f2e8 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000f266:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f268:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f26a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f26c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f26e:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f270:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f272:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f276:	f7fe fa61 	bl	9000d73c <pxPortInitialiseStack>
9000f27a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f27c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f27e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f280:	f7ff fbf4 	bl	9000ea6c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000f284:	f000 fc86 	bl	9000fb94 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000f288:	2801      	cmp	r0, #1
9000f28a:	d00c      	beq.n	9000f2a6 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f28c:	3001      	adds	r0, #1
9000f28e:	d001      	beq.n	9000f294 <vTaskStartScheduler+0xd0>
}
9000f290:	b004      	add	sp, #16
9000f292:	bd70      	pop	{r4, r5, r6, pc}
9000f294:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f298:	f383 8811 	msr	BASEPRI, r3
9000f29c:	f3bf 8f6f 	isb	sy
9000f2a0:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f2a4:	e7fe      	b.n	9000f2a4 <vTaskStartScheduler+0xe0>
9000f2a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f2aa:	f383 8811 	msr	BASEPRI, r3
9000f2ae:	f3bf 8f6f 	isb	sy
9000f2b2:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000f2b6:	4b0d      	ldr	r3, [pc, #52]	@ (9000f2ec <vTaskStartScheduler+0x128>)
9000f2b8:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000f2bc:	490c      	ldr	r1, [pc, #48]	@ (9000f2f0 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000f2be:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f2c0:	4b0c      	ldr	r3, [pc, #48]	@ (9000f2f4 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000f2c2:	4a0d      	ldr	r2, [pc, #52]	@ (9000f2f8 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f2c4:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f2c6:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f2c8:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f2ca:	b143      	cbz	r3, 9000f2de <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f2cc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f2ce:	b10b      	cbz	r3, 9000f2d4 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f2d0:	2000      	movs	r0, #0
9000f2d2:	4798      	blx	r3
}
9000f2d4:	b004      	add	sp, #16
9000f2d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f2da:	f7fe baed 	b.w	9000d8b8 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f2de:	6813      	ldr	r3, [r2, #0]
9000f2e0:	e7f4      	b.n	9000f2cc <vTaskStartScheduler+0x108>
9000f2e2:	bf00      	nop
9000f2e4:	454c4449 	.word	0x454c4449
9000f2e8:	9000eb7d 	.word	0x9000eb7d
9000f2ec:	240215ac 	.word	0x240215ac
9000f2f0:	240215c0 	.word	0x240215c0
9000f2f4:	240215c8 	.word	0x240215c8
9000f2f8:	24021aa0 	.word	0x24021aa0

9000f2fc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f2fc:	4a02      	ldr	r2, [pc, #8]	@ (9000f308 <vTaskSuspendAll+0xc>)
9000f2fe:	6813      	ldr	r3, [r2, #0]
9000f300:	3301      	adds	r3, #1
9000f302:	6013      	str	r3, [r2, #0]
}
9000f304:	4770      	bx	lr
9000f306:	bf00      	nop
9000f308:	240215a8 	.word	0x240215a8

9000f30c <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f30c:	4b06      	ldr	r3, [pc, #24]	@ (9000f328 <xTaskResumeAll+0x1c>)
9000f30e:	681b      	ldr	r3, [r3, #0]
9000f310:	b943      	cbnz	r3, 9000f324 <xTaskResumeAll+0x18>
9000f312:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f316:	f383 8811 	msr	BASEPRI, r3
9000f31a:	f3bf 8f6f 	isb	sy
9000f31e:	f3bf 8f4f 	dsb	sy
9000f322:	e7fe      	b.n	9000f322 <xTaskResumeAll+0x16>
9000f324:	f7ff bd1e 	b.w	9000ed64 <xTaskResumeAll.part.0>
9000f328:	240215a8 	.word	0x240215a8

9000f32c <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f32c:	4b01      	ldr	r3, [pc, #4]	@ (9000f334 <xTaskGetTickCount+0x8>)
9000f32e:	6818      	ldr	r0, [r3, #0]
}
9000f330:	4770      	bx	lr
9000f332:	bf00      	nop
9000f334:	240215c8 	.word	0x240215c8

9000f338 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f338:	4b05      	ldr	r3, [pc, #20]	@ (9000f350 <xTaskIncrementTick+0x18>)
9000f33a:	681b      	ldr	r3, [r3, #0]
9000f33c:	b90b      	cbnz	r3, 9000f342 <xTaskIncrementTick+0xa>
9000f33e:	f7ff bc6b 	b.w	9000ec18 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f342:	4a04      	ldr	r2, [pc, #16]	@ (9000f354 <xTaskIncrementTick+0x1c>)
}
9000f344:	2000      	movs	r0, #0
		++xPendedTicks;
9000f346:	6813      	ldr	r3, [r2, #0]
9000f348:	3301      	adds	r3, #1
9000f34a:	6013      	str	r3, [r2, #0]
}
9000f34c:	4770      	bx	lr
9000f34e:	bf00      	nop
9000f350:	240215a8 	.word	0x240215a8
9000f354:	240215bc 	.word	0x240215bc

9000f358 <vTaskSetApplicationTaskTag>:
	{
9000f358:	b538      	push	{r3, r4, r5, lr}
9000f35a:	460d      	mov	r5, r1
		if( xTask == NULL )
9000f35c:	b138      	cbz	r0, 9000f36e <vTaskSetApplicationTaskTag+0x16>
9000f35e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000f360:	f7fe fa18 	bl	9000d794 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f364:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000f366:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f36a:	f7fe ba35 	b.w	9000d7d8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000f36e:	4b04      	ldr	r3, [pc, #16]	@ (9000f380 <vTaskSetApplicationTaskTag+0x28>)
9000f370:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000f372:	f7fe fa0f 	bl	9000d794 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f376:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000f378:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f37c:	f7fe ba2c 	b.w	9000d7d8 <vPortExitCritical>
9000f380:	24021aa0 	.word	0x24021aa0

9000f384 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000f384:	4b27      	ldr	r3, [pc, #156]	@ (9000f424 <vTaskSwitchContext+0xa0>)
9000f386:	681b      	ldr	r3, [r3, #0]
9000f388:	b11b      	cbz	r3, 9000f392 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000f38a:	4b27      	ldr	r3, [pc, #156]	@ (9000f428 <vTaskSwitchContext+0xa4>)
9000f38c:	2201      	movs	r2, #1
9000f38e:	601a      	str	r2, [r3, #0]
9000f390:	4770      	bx	lr
{
9000f392:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000f394:	4a24      	ldr	r2, [pc, #144]	@ (9000f428 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000f396:	4c25      	ldr	r4, [pc, #148]	@ (9000f42c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000f398:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000f39a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f39c:	2b00      	cmp	r3, #0
9000f39e:	d036      	beq.n	9000f40e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000f3a0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f3a2:	b10b      	cbz	r3, 9000f3a8 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f3a4:	2001      	movs	r0, #1
9000f3a6:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f3a8:	4d21      	ldr	r5, [pc, #132]	@ (9000f430 <vTaskSwitchContext+0xac>)
9000f3aa:	4922      	ldr	r1, [pc, #136]	@ (9000f434 <vTaskSwitchContext+0xb0>)
9000f3ac:	682b      	ldr	r3, [r5, #0]
9000f3ae:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f3b2:	0098      	lsls	r0, r3, #2
9000f3b4:	0092      	lsls	r2, r2, #2
9000f3b6:	588a      	ldr	r2, [r1, r2]
9000f3b8:	b942      	cbnz	r2, 9000f3cc <vTaskSwitchContext+0x48>
9000f3ba:	b1fb      	cbz	r3, 9000f3fc <vTaskSwitchContext+0x78>
9000f3bc:	3b01      	subs	r3, #1
9000f3be:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f3c2:	0098      	lsls	r0, r3, #2
9000f3c4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000f3c8:	2a00      	cmp	r2, #0
9000f3ca:	d0f6      	beq.n	9000f3ba <vTaskSwitchContext+0x36>
9000f3cc:	4418      	add	r0, r3
9000f3ce:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000f3d2:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000f3d6:	4662      	mov	r2, ip
9000f3d8:	6849      	ldr	r1, [r1, #4]
9000f3da:	3208      	adds	r2, #8
9000f3dc:	4291      	cmp	r1, r2
9000f3de:	f8cc 1004 	str.w	r1, [ip, #4]
9000f3e2:	d01b      	beq.n	9000f41c <vTaskSwitchContext+0x98>
9000f3e4:	68ca      	ldr	r2, [r1, #12]
9000f3e6:	6022      	str	r2, [r4, #0]
9000f3e8:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000f3ea:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f3ec:	b1a3      	cbz	r3, 9000f418 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000f3ee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f3f0:	b11b      	cbz	r3, 9000f3fa <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f3f2:	2000      	movs	r0, #0
}
9000f3f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f3f8:	4718      	bx	r3
}
9000f3fa:	bd70      	pop	{r4, r5, r6, pc}
9000f3fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f400:	f383 8811 	msr	BASEPRI, r3
9000f404:	f3bf 8f6f 	isb	sy
9000f408:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f40c:	e7fe      	b.n	9000f40c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000f40e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000f410:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f412:	2b00      	cmp	r3, #0
9000f414:	d1c6      	bne.n	9000f3a4 <vTaskSwitchContext+0x20>
9000f416:	e7c7      	b.n	9000f3a8 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000f418:	6823      	ldr	r3, [r4, #0]
9000f41a:	e7e8      	b.n	9000f3ee <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f41c:	6849      	ldr	r1, [r1, #4]
9000f41e:	f8cc 1004 	str.w	r1, [ip, #4]
9000f422:	e7df      	b.n	9000f3e4 <vTaskSwitchContext+0x60>
9000f424:	240215a8 	.word	0x240215a8
9000f428:	240215b8 	.word	0x240215b8
9000f42c:	24021aa0 	.word	0x24021aa0
9000f430:	240215c4 	.word	0x240215c4
9000f434:	24021640 	.word	0x24021640

9000f438 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000f438:	b1f0      	cbz	r0, 9000f478 <vTaskPlaceOnEventList+0x40>
{
9000f43a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f43c:	4d1a      	ldr	r5, [pc, #104]	@ (9000f4a8 <vTaskPlaceOnEventList+0x70>)
9000f43e:	460c      	mov	r4, r1
9000f440:	6829      	ldr	r1, [r5, #0]
9000f442:	3118      	adds	r1, #24
9000f444:	f7fe f910 	bl	9000d668 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000f448:	4b18      	ldr	r3, [pc, #96]	@ (9000f4ac <vTaskPlaceOnEventList+0x74>)
9000f44a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f44c:	6828      	ldr	r0, [r5, #0]
9000f44e:	3004      	adds	r0, #4
9000f450:	f7fe f922 	bl	9000d698 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000f454:	1c63      	adds	r3, r4, #1
9000f456:	d020      	beq.n	9000f49a <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f458:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f45a:	682b      	ldr	r3, [r5, #0]
9000f45c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f45e:	d214      	bcs.n	9000f48a <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f460:	4b13      	ldr	r3, [pc, #76]	@ (9000f4b0 <vTaskPlaceOnEventList+0x78>)
9000f462:	6818      	ldr	r0, [r3, #0]
9000f464:	6829      	ldr	r1, [r5, #0]
9000f466:	3104      	adds	r1, #4
9000f468:	f7fe f8fe 	bl	9000d668 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f46c:	4b11      	ldr	r3, [pc, #68]	@ (9000f4b4 <vTaskPlaceOnEventList+0x7c>)
9000f46e:	681a      	ldr	r2, [r3, #0]
9000f470:	4294      	cmp	r4, r2
9000f472:	d200      	bcs.n	9000f476 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000f474:	601c      	str	r4, [r3, #0]
}
9000f476:	bd70      	pop	{r4, r5, r6, pc}
9000f478:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f47c:	f383 8811 	msr	BASEPRI, r3
9000f480:	f3bf 8f6f 	isb	sy
9000f484:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000f488:	e7fe      	b.n	9000f488 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f48a:	4b0b      	ldr	r3, [pc, #44]	@ (9000f4b8 <vTaskPlaceOnEventList+0x80>)
9000f48c:	6818      	ldr	r0, [r3, #0]
9000f48e:	6829      	ldr	r1, [r5, #0]
}
9000f490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f494:	3104      	adds	r1, #4
9000f496:	f7fe b8e7 	b.w	9000d668 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f49a:	6829      	ldr	r1, [r5, #0]
9000f49c:	4807      	ldr	r0, [pc, #28]	@ (9000f4bc <vTaskPlaceOnEventList+0x84>)
9000f49e:	3104      	adds	r1, #4
}
9000f4a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f4a4:	f7fe b8d2 	b.w	9000d64c <vListInsertEnd>
9000f4a8:	24021aa0 	.word	0x24021aa0
9000f4ac:	240215c8 	.word	0x240215c8
9000f4b0:	24021614 	.word	0x24021614
9000f4b4:	240215ac 	.word	0x240215ac
9000f4b8:	24021610 	.word	0x24021610
9000f4bc:	240215d0 	.word	0x240215d0

9000f4c0 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000f4c0:	b358      	cbz	r0, 9000f51a <vTaskPlaceOnEventListRestricted+0x5a>
	{
9000f4c2:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f4c4:	4e1d      	ldr	r6, [pc, #116]	@ (9000f53c <vTaskPlaceOnEventListRestricted+0x7c>)
9000f4c6:	460c      	mov	r4, r1
9000f4c8:	4615      	mov	r5, r2
9000f4ca:	6831      	ldr	r1, [r6, #0]
9000f4cc:	3118      	adds	r1, #24
9000f4ce:	f7fe f8bd 	bl	9000d64c <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9000f4d2:	b165      	cbz	r5, 9000f4ee <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000f4d4:	4b1a      	ldr	r3, [pc, #104]	@ (9000f540 <vTaskPlaceOnEventListRestricted+0x80>)
9000f4d6:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f4d8:	6830      	ldr	r0, [r6, #0]
9000f4da:	3004      	adds	r0, #4
9000f4dc:	f7fe f8dc 	bl	9000d698 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f4e0:	6831      	ldr	r1, [r6, #0]
9000f4e2:	4818      	ldr	r0, [pc, #96]	@ (9000f544 <vTaskPlaceOnEventListRestricted+0x84>)
9000f4e4:	3104      	adds	r1, #4
	}
9000f4e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f4ea:	f7fe b8af 	b.w	9000d64c <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f4ee:	4b14      	ldr	r3, [pc, #80]	@ (9000f540 <vTaskPlaceOnEventListRestricted+0x80>)
9000f4f0:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f4f2:	6830      	ldr	r0, [r6, #0]
9000f4f4:	3004      	adds	r0, #4
9000f4f6:	f7fe f8cf 	bl	9000d698 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f4fa:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f4fc:	6833      	ldr	r3, [r6, #0]
9000f4fe:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f500:	d214      	bcs.n	9000f52c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f502:	4b11      	ldr	r3, [pc, #68]	@ (9000f548 <vTaskPlaceOnEventListRestricted+0x88>)
9000f504:	6818      	ldr	r0, [r3, #0]
9000f506:	6831      	ldr	r1, [r6, #0]
9000f508:	3104      	adds	r1, #4
9000f50a:	f7fe f8ad 	bl	9000d668 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f50e:	4b0f      	ldr	r3, [pc, #60]	@ (9000f54c <vTaskPlaceOnEventListRestricted+0x8c>)
9000f510:	681a      	ldr	r2, [r3, #0]
9000f512:	4294      	cmp	r4, r2
9000f514:	d200      	bcs.n	9000f518 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000f516:	601c      	str	r4, [r3, #0]
	}
9000f518:	bd70      	pop	{r4, r5, r6, pc}
9000f51a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f51e:	f383 8811 	msr	BASEPRI, r3
9000f522:	f3bf 8f6f 	isb	sy
9000f526:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000f52a:	e7fe      	b.n	9000f52a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f52c:	4b08      	ldr	r3, [pc, #32]	@ (9000f550 <vTaskPlaceOnEventListRestricted+0x90>)
9000f52e:	6818      	ldr	r0, [r3, #0]
9000f530:	6831      	ldr	r1, [r6, #0]
	}
9000f532:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f536:	3104      	adds	r1, #4
9000f538:	f7fe b896 	b.w	9000d668 <vListInsert>
9000f53c:	24021aa0 	.word	0x24021aa0
9000f540:	240215c8 	.word	0x240215c8
9000f544:	240215d0 	.word	0x240215d0
9000f548:	24021614 	.word	0x24021614
9000f54c:	240215ac 	.word	0x240215ac
9000f550:	24021610 	.word	0x24021610

9000f554 <xTaskRemoveFromEventList>:
{
9000f554:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f556:	68c3      	ldr	r3, [r0, #12]
9000f558:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
9000f55a:	b34c      	cbz	r4, 9000f5b0 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000f55c:	f104 0518 	add.w	r5, r4, #24
9000f560:	4628      	mov	r0, r5
9000f562:	f7fe f899 	bl	9000d698 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f566:	4b18      	ldr	r3, [pc, #96]	@ (9000f5c8 <xTaskRemoveFromEventList+0x74>)
9000f568:	681b      	ldr	r3, [r3, #0]
9000f56a:	b173      	cbz	r3, 9000f58a <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000f56c:	4629      	mov	r1, r5
9000f56e:	4817      	ldr	r0, [pc, #92]	@ (9000f5cc <xTaskRemoveFromEventList+0x78>)
9000f570:	f7fe f86c 	bl	9000d64c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000f574:	4b16      	ldr	r3, [pc, #88]	@ (9000f5d0 <xTaskRemoveFromEventList+0x7c>)
9000f576:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f578:	681b      	ldr	r3, [r3, #0]
9000f57a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f57c:	429a      	cmp	r2, r3
9000f57e:	d920      	bls.n	9000f5c2 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9000f580:	2301      	movs	r3, #1
9000f582:	4a14      	ldr	r2, [pc, #80]	@ (9000f5d4 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
9000f584:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000f586:	6013      	str	r3, [r2, #0]
}
9000f588:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000f58a:	1d25      	adds	r5, r4, #4
9000f58c:	4628      	mov	r0, r5
9000f58e:	f7fe f883 	bl	9000d698 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000f592:	4b11      	ldr	r3, [pc, #68]	@ (9000f5d8 <xTaskRemoveFromEventList+0x84>)
9000f594:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000f596:	681a      	ldr	r2, [r3, #0]
9000f598:	4290      	cmp	r0, r2
9000f59a:	d900      	bls.n	9000f59e <xTaskRemoveFromEventList+0x4a>
9000f59c:	6018      	str	r0, [r3, #0]
9000f59e:	4b0f      	ldr	r3, [pc, #60]	@ (9000f5dc <xTaskRemoveFromEventList+0x88>)
9000f5a0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f5a4:	4629      	mov	r1, r5
9000f5a6:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f5aa:	f7fe f84f 	bl	9000d64c <vListInsertEnd>
9000f5ae:	e7e1      	b.n	9000f574 <xTaskRemoveFromEventList+0x20>
9000f5b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f5b4:	f383 8811 	msr	BASEPRI, r3
9000f5b8:	f3bf 8f6f 	isb	sy
9000f5bc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000f5c0:	e7fe      	b.n	9000f5c0 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9000f5c2:	2000      	movs	r0, #0
}
9000f5c4:	bd38      	pop	{r3, r4, r5, pc}
9000f5c6:	bf00      	nop
9000f5c8:	240215a8 	.word	0x240215a8
9000f5cc:	240215fc 	.word	0x240215fc
9000f5d0:	24021aa0 	.word	0x24021aa0
9000f5d4:	240215b8 	.word	0x240215b8
9000f5d8:	240215c4 	.word	0x240215c4
9000f5dc:	24021640 	.word	0x24021640

9000f5e0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f5e0:	4a03      	ldr	r2, [pc, #12]	@ (9000f5f0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f5e2:	4b04      	ldr	r3, [pc, #16]	@ (9000f5f4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f5e4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f5e6:	681b      	ldr	r3, [r3, #0]
9000f5e8:	e9c0 2300 	strd	r2, r3, [r0]
}
9000f5ec:	4770      	bx	lr
9000f5ee:	bf00      	nop
9000f5f0:	240215b4 	.word	0x240215b4
9000f5f4:	240215c8 	.word	0x240215c8

9000f5f8 <xTaskCheckForTimeOut>:
{
9000f5f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
9000f5fa:	b308      	cbz	r0, 9000f640 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
9000f5fc:	460d      	mov	r5, r1
9000f5fe:	b1b1      	cbz	r1, 9000f62e <xTaskCheckForTimeOut+0x36>
9000f600:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000f602:	f7fe f8c7 	bl	9000d794 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000f606:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000f608:	4a1a      	ldr	r2, [pc, #104]	@ (9000f674 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
9000f60a:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000f60c:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000f60e:	d02c      	beq.n	9000f66a <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f610:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9000f678 <xTaskCheckForTimeOut+0x80>
9000f614:	6826      	ldr	r6, [r4, #0]
9000f616:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f61a:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f61c:	42be      	cmp	r6, r7
9000f61e:	d018      	beq.n	9000f652 <xTaskCheckForTimeOut+0x5a>
9000f620:	4288      	cmp	r0, r1
9000f622:	d816      	bhi.n	9000f652 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
9000f624:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000f626:	f7fe f8d7 	bl	9000d7d8 <vPortExitCritical>
}
9000f62a:	4620      	mov	r0, r4
9000f62c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000f62e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f632:	f383 8811 	msr	BASEPRI, r3
9000f636:	f3bf 8f6f 	isb	sy
9000f63a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000f63e:	e7fe      	b.n	9000f63e <xTaskCheckForTimeOut+0x46>
9000f640:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f644:	f383 8811 	msr	BASEPRI, r3
9000f648:	f3bf 8f6f 	isb	sy
9000f64c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000f650:	e7fe      	b.n	9000f650 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f652:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000f656:	4573      	cmp	r3, lr
9000f658:	d909      	bls.n	9000f66e <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
9000f65a:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f65c:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f660:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000f662:	4403      	add	r3, r0
9000f664:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f666:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
9000f66a:	2400      	movs	r4, #0
9000f66c:	e7db      	b.n	9000f626 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9000f66e:	2300      	movs	r3, #0
9000f670:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000f672:	e7d7      	b.n	9000f624 <xTaskCheckForTimeOut+0x2c>
9000f674:	240215c8 	.word	0x240215c8
9000f678:	240215b4 	.word	0x240215b4

9000f67c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000f67c:	4b01      	ldr	r3, [pc, #4]	@ (9000f684 <vTaskMissedYield+0x8>)
9000f67e:	2201      	movs	r2, #1
9000f680:	601a      	str	r2, [r3, #0]
}
9000f682:	4770      	bx	lr
9000f684:	240215b8 	.word	0x240215b8

9000f688 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000f688:	4b05      	ldr	r3, [pc, #20]	@ (9000f6a0 <xTaskGetSchedulerState+0x18>)
9000f68a:	681b      	ldr	r3, [r3, #0]
9000f68c:	b133      	cbz	r3, 9000f69c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f68e:	4b05      	ldr	r3, [pc, #20]	@ (9000f6a4 <xTaskGetSchedulerState+0x1c>)
9000f690:	6818      	ldr	r0, [r3, #0]
9000f692:	fab0 f080 	clz	r0, r0
9000f696:	0940      	lsrs	r0, r0, #5
9000f698:	0040      	lsls	r0, r0, #1
9000f69a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000f69c:	2001      	movs	r0, #1
	}
9000f69e:	4770      	bx	lr
9000f6a0:	240215c0 	.word	0x240215c0
9000f6a4:	240215a8 	.word	0x240215a8

9000f6a8 <xTaskPriorityInherit>:
	{
9000f6a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
9000f6aa:	4604      	mov	r4, r0
9000f6ac:	b1c8      	cbz	r0, 9000f6e2 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000f6ae:	4d1b      	ldr	r5, [pc, #108]	@ (9000f71c <xTaskPriorityInherit+0x74>)
9000f6b0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9000f6b2:	682a      	ldr	r2, [r5, #0]
9000f6b4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f6b6:	4293      	cmp	r3, r2
9000f6b8:	d214      	bcs.n	9000f6e4 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f6ba:	6982      	ldr	r2, [r0, #24]
9000f6bc:	2a00      	cmp	r2, #0
9000f6be:	db04      	blt.n	9000f6ca <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f6c0:	682a      	ldr	r2, [r5, #0]
9000f6c2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f6c4:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
9000f6c8:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000f6ca:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f6ce:	4e14      	ldr	r6, [pc, #80]	@ (9000f720 <xTaskPriorityInherit+0x78>)
9000f6d0:	6962      	ldr	r2, [r4, #20]
9000f6d2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000f6d6:	429a      	cmp	r2, r3
9000f6d8:	d00c      	beq.n	9000f6f4 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f6da:	682b      	ldr	r3, [r5, #0]
9000f6dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f6de:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
9000f6e0:	2001      	movs	r0, #1
	}
9000f6e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000f6e4:	682b      	ldr	r3, [r5, #0]
9000f6e6:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000f6e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f6ea:	4298      	cmp	r0, r3
9000f6ec:	bf2c      	ite	cs
9000f6ee:	2000      	movcs	r0, #0
9000f6f0:	2001      	movcc	r0, #1
	}
9000f6f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f6f4:	1d27      	adds	r7, r4, #4
9000f6f6:	4638      	mov	r0, r7
9000f6f8:	f7fd ffce 	bl	9000d698 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f6fc:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f6fe:	4b09      	ldr	r3, [pc, #36]	@ (9000f724 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f700:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f702:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f704:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f706:	4290      	cmp	r0, r2
9000f708:	d900      	bls.n	9000f70c <xTaskPriorityInherit+0x64>
9000f70a:	6018      	str	r0, [r3, #0]
9000f70c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f710:	4639      	mov	r1, r7
9000f712:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000f716:	f7fd ff99 	bl	9000d64c <vListInsertEnd>
9000f71a:	e7e1      	b.n	9000f6e0 <xTaskPriorityInherit+0x38>
9000f71c:	24021aa0 	.word	0x24021aa0
9000f720:	24021640 	.word	0x24021640
9000f724:	240215c4 	.word	0x240215c4

9000f728 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000f728:	b308      	cbz	r0, 9000f76e <xTaskPriorityDisinherit+0x46>
	{
9000f72a:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000f72c:	4b1d      	ldr	r3, [pc, #116]	@ (9000f7a4 <xTaskPriorityDisinherit+0x7c>)
9000f72e:	681c      	ldr	r4, [r3, #0]
9000f730:	4284      	cmp	r4, r0
9000f732:	d008      	beq.n	9000f746 <xTaskPriorityDisinherit+0x1e>
9000f734:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f738:	f383 8811 	msr	BASEPRI, r3
9000f73c:	f3bf 8f6f 	isb	sy
9000f740:	f3bf 8f4f 	dsb	sy
9000f744:	e7fe      	b.n	9000f744 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9000f746:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000f748:	b143      	cbz	r3, 9000f75c <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f74a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
9000f74c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f74e:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
9000f750:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000f752:	4291      	cmp	r1, r2
9000f754:	d000      	beq.n	9000f758 <xTaskPriorityDisinherit+0x30>
9000f756:	b163      	cbz	r3, 9000f772 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
9000f758:	2000      	movs	r0, #0
	}
9000f75a:	bd38      	pop	{r3, r4, r5, pc}
9000f75c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f760:	f383 8811 	msr	BASEPRI, r3
9000f764:	f3bf 8f6f 	isb	sy
9000f768:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f76c:	e7fe      	b.n	9000f76c <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
9000f76e:	2000      	movs	r0, #0
	}
9000f770:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f772:	1d25      	adds	r5, r4, #4
9000f774:	4628      	mov	r0, r5
9000f776:	f7fd ff8f 	bl	9000d698 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f77a:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
9000f77c:	4b0a      	ldr	r3, [pc, #40]	@ (9000f7a8 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f77e:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f782:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f784:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000f786:	681a      	ldr	r2, [r3, #0]
9000f788:	4290      	cmp	r0, r2
9000f78a:	d900      	bls.n	9000f78e <xTaskPriorityDisinherit+0x66>
9000f78c:	6018      	str	r0, [r3, #0]
9000f78e:	4b07      	ldr	r3, [pc, #28]	@ (9000f7ac <xTaskPriorityDisinherit+0x84>)
9000f790:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f794:	4629      	mov	r1, r5
9000f796:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f79a:	f7fd ff57 	bl	9000d64c <vListInsertEnd>
					xReturn = pdTRUE;
9000f79e:	2001      	movs	r0, #1
	}
9000f7a0:	bd38      	pop	{r3, r4, r5, pc}
9000f7a2:	bf00      	nop
9000f7a4:	24021aa0 	.word	0x24021aa0
9000f7a8:	240215c4 	.word	0x240215c4
9000f7ac:	24021640 	.word	0x24021640

9000f7b0 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000f7b0:	2800      	cmp	r0, #0
9000f7b2:	d03c      	beq.n	9000f82e <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
9000f7b4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
9000f7b6:	b570      	push	{r4, r5, r6, lr}
9000f7b8:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
9000f7ba:	b14b      	cbz	r3, 9000f7d0 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000f7bc:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000f7be:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f7c0:	4281      	cmp	r1, r0
9000f7c2:	bf38      	it	cc
9000f7c4:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000f7c6:	2b01      	cmp	r3, #1
9000f7c8:	d101      	bne.n	9000f7ce <vTaskPriorityDisinheritAfterTimeout+0x1e>
9000f7ca:	428a      	cmp	r2, r1
9000f7cc:	d109      	bne.n	9000f7e2 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
9000f7ce:	bd70      	pop	{r4, r5, r6, pc}
9000f7d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7d4:	f383 8811 	msr	BASEPRI, r3
9000f7d8:	f3bf 8f6f 	isb	sy
9000f7dc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f7e0:	e7fe      	b.n	9000f7e0 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
9000f7e2:	4b18      	ldr	r3, [pc, #96]	@ (9000f844 <vTaskPriorityDisinheritAfterTimeout+0x94>)
9000f7e4:	681b      	ldr	r3, [r3, #0]
9000f7e6:	42a3      	cmp	r3, r4
9000f7e8:	d022      	beq.n	9000f830 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f7ea:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000f7ec:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f7ee:	2b00      	cmp	r3, #0
9000f7f0:	db02      	blt.n	9000f7f8 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f7f2:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
9000f7f6:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000f7f8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000f7fc:	4d12      	ldr	r5, [pc, #72]	@ (9000f848 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9000f7fe:	6961      	ldr	r1, [r4, #20]
9000f800:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000f804:	4299      	cmp	r1, r3
9000f806:	d1e2      	bne.n	9000f7ce <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f808:	1d26      	adds	r6, r4, #4
9000f80a:	4630      	mov	r0, r6
9000f80c:	f7fd ff44 	bl	9000d698 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000f810:	4b0e      	ldr	r3, [pc, #56]	@ (9000f84c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000f812:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000f814:	681a      	ldr	r2, [r3, #0]
9000f816:	4290      	cmp	r0, r2
9000f818:	d900      	bls.n	9000f81c <vTaskPriorityDisinheritAfterTimeout+0x6c>
9000f81a:	6018      	str	r0, [r3, #0]
9000f81c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f820:	4631      	mov	r1, r6
9000f822:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000f826:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
9000f82a:	f7fd bf0f 	b.w	9000d64c <vListInsertEnd>
9000f82e:	4770      	bx	lr
9000f830:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f834:	f383 8811 	msr	BASEPRI, r3
9000f838:	f3bf 8f6f 	isb	sy
9000f83c:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000f840:	e7fe      	b.n	9000f840 <vTaskPriorityDisinheritAfterTimeout+0x90>
9000f842:	bf00      	nop
9000f844:	24021aa0 	.word	0x24021aa0
9000f848:	24021640 	.word	0x24021640
9000f84c:	240215c4 	.word	0x240215c4

9000f850 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000f850:	4b04      	ldr	r3, [pc, #16]	@ (9000f864 <pvTaskIncrementMutexHeldCount+0x14>)
9000f852:	681a      	ldr	r2, [r3, #0]
9000f854:	b11a      	cbz	r2, 9000f85e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000f856:	6819      	ldr	r1, [r3, #0]
9000f858:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
9000f85a:	3201      	adds	r2, #1
9000f85c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
9000f85e:	6818      	ldr	r0, [r3, #0]
	}
9000f860:	4770      	bx	lr
9000f862:	bf00      	nop
9000f864:	24021aa0 	.word	0x24021aa0

9000f868 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000f868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f86c:	4e21      	ldr	r6, [pc, #132]	@ (9000f8f4 <prvSwitchTimerLists+0x8c>)
9000f86e:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f870:	e00d      	b.n	9000f88e <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f872:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f874:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f876:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f878:	1d25      	adds	r5, r4, #4
9000f87a:	4628      	mov	r0, r5
9000f87c:	f7fd ff0c 	bl	9000d698 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f880:	6a23      	ldr	r3, [r4, #32]
9000f882:	4620      	mov	r0, r4
9000f884:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f886:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
9000f88a:	075b      	lsls	r3, r3, #29
9000f88c:	d40a      	bmi.n	9000f8a4 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f88e:	6833      	ldr	r3, [r6, #0]
9000f890:	681a      	ldr	r2, [r3, #0]
9000f892:	2a00      	cmp	r2, #0
9000f894:	d1ed      	bne.n	9000f872 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000f896:	4a18      	ldr	r2, [pc, #96]	@ (9000f8f8 <prvSwitchTimerLists+0x90>)
9000f898:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000f89a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000f89c:	6031      	str	r1, [r6, #0]
}
9000f89e:	b004      	add	sp, #16
9000f8a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f8a4:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f8a6:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
9000f8a8:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 9000f8fc <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f8ac:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000f8ae:	429f      	cmp	r7, r3
9000f8b0:	d205      	bcs.n	9000f8be <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f8b2:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000f8b4:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f8b6:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f8b8:	f7fd fed6 	bl	9000d668 <vListInsert>
9000f8bc:	e7e7      	b.n	9000f88e <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
9000f8be:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
9000f8c2:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
9000f8c4:	b16b      	cbz	r3, 9000f8e2 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000f8c6:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
9000f8c8:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f8cc:	f7ff fedc 	bl	9000f688 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f8d0:	462b      	mov	r3, r5
9000f8d2:	462a      	mov	r2, r5
9000f8d4:	4669      	mov	r1, sp
9000f8d6:	f8d8 0000 	ldr.w	r0, [r8]
9000f8da:	f7fe fa47 	bl	9000dd6c <xQueueGenericSend>
				configASSERT( xResult );
9000f8de:	2800      	cmp	r0, #0
9000f8e0:	d1d5      	bne.n	9000f88e <prvSwitchTimerLists+0x26>
9000f8e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8e6:	f383 8811 	msr	BASEPRI, r3
9000f8ea:	f3bf 8f6f 	isb	sy
9000f8ee:	f3bf 8f4f 	dsb	sy
9000f8f2:	e7fe      	b.n	9000f8f2 <prvSwitchTimerLists+0x8a>
9000f8f4:	24021ba4 	.word	0x24021ba4
9000f8f8:	24021ba0 	.word	0x24021ba0
9000f8fc:	24021b9c 	.word	0x24021b9c

9000f900 <prvTimerTask>:
{
9000f900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f904:	4e9f      	ldr	r6, [pc, #636]	@ (9000fb84 <prvTimerTask+0x284>)
9000f906:	b089      	sub	sp, #36	@ 0x24
9000f908:	4d9f      	ldr	r5, [pc, #636]	@ (9000fb88 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000f90a:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9000f90e:	4c9f      	ldr	r4, [pc, #636]	@ (9000fb8c <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000f910:	6833      	ldr	r3, [r6, #0]
9000f912:	681f      	ldr	r7, [r3, #0]
9000f914:	2f00      	cmp	r7, #0
9000f916:	f000 80b2 	beq.w	9000fa7e <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f91a:	68db      	ldr	r3, [r3, #12]
9000f91c:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000f91e:	f7ff fced 	bl	9000f2fc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000f922:	f7ff fd03 	bl	9000f32c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f926:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f928:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000f92a:	4298      	cmp	r0, r3
9000f92c:	f0c0 80af 	bcc.w	9000fa8e <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000f930:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000f932:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000f934:	f200 80d0 	bhi.w	9000fad8 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000f938:	f7ff fce8 	bl	9000f30c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f93c:	6833      	ldr	r3, [r6, #0]
9000f93e:	68db      	ldr	r3, [r3, #12]
9000f940:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f944:	f10b 0804 	add.w	r8, fp, #4
9000f948:	4640      	mov	r0, r8
9000f94a:	f7fd fea5 	bl	9000d698 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f94e:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
9000f952:	0758      	lsls	r0, r3, #29
9000f954:	f100 80d0 	bmi.w	9000faf8 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f958:	f023 0301 	bic.w	r3, r3, #1
9000f95c:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f960:	f8db 3020 	ldr.w	r3, [fp, #32]
9000f964:	4658      	mov	r0, fp
9000f966:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000f968:	2200      	movs	r2, #0
9000f96a:	4669      	mov	r1, sp
9000f96c:	6820      	ldr	r0, [r4, #0]
9000f96e:	f7fe fc3b 	bl	9000e1e8 <xQueueReceive>
9000f972:	2800      	cmp	r0, #0
9000f974:	d0cc      	beq.n	9000f910 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000f976:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000f978:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000f97a:	2b00      	cmp	r3, #0
9000f97c:	db77      	blt.n	9000fa6e <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000f97e:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000f980:	697b      	ldr	r3, [r7, #20]
9000f982:	b113      	cbz	r3, 9000f98a <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f984:	1d38      	adds	r0, r7, #4
9000f986:	f7fd fe87 	bl	9000d698 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000f98a:	f7ff fccf 	bl	9000f32c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f98e:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f990:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
9000f992:	4298      	cmp	r0, r3
9000f994:	f0c0 8082 	bcc.w	9000fa9c <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000f998:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000f99a:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
9000f99e:	2b09      	cmp	r3, #9
9000f9a0:	d8e2      	bhi.n	9000f968 <prvTimerTask+0x68>
9000f9a2:	e8df f003 	tbb	[pc, r3]
9000f9a6:	0505      	.short	0x0505
9000f9a8:	5b3e5405 	.word	0x5b3e5405
9000f9ac:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f9b0:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f9b4:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f9b6:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f9ba:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f9bc:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f9c0:	69ba      	ldr	r2, [r7, #24]
9000f9c2:	1899      	adds	r1, r3, r2
9000f9c4:	bf2c      	ite	cs
9000f9c6:	2001      	movcs	r0, #1
9000f9c8:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000f9ca:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f9cc:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f9ce:	f200 8085 	bhi.w	9000fadc <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f9d2:	ebab 0303 	sub.w	r3, fp, r3
9000f9d6:	429a      	cmp	r2, r3
9000f9d8:	f200 80be 	bhi.w	9000fb58 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f9dc:	6a3b      	ldr	r3, [r7, #32]
9000f9de:	4638      	mov	r0, r7
9000f9e0:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f9e2:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000f9e6:	0759      	lsls	r1, r3, #29
9000f9e8:	d5be      	bpl.n	9000f968 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000f9ea:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f9ec:	9b01      	ldr	r3, [sp, #4]
9000f9ee:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
9000f9f0:	b171      	cbz	r1, 9000fa10 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f9f2:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f9f4:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000f9f8:	2700      	movs	r7, #0
9000f9fa:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f9fc:	f7ff fe44 	bl	9000f688 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fa00:	463b      	mov	r3, r7
9000fa02:	463a      	mov	r2, r7
9000fa04:	a904      	add	r1, sp, #16
9000fa06:	6820      	ldr	r0, [r4, #0]
9000fa08:	f7fe f9b0 	bl	9000dd6c <xQueueGenericSend>
							configASSERT( xResult );
9000fa0c:	2800      	cmp	r0, #0
9000fa0e:	d1ab      	bne.n	9000f968 <prvTimerTask+0x68>
9000fa10:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa14:	f383 8811 	msr	BASEPRI, r3
9000fa18:	f3bf 8f6f 	isb	sy
9000fa1c:	f3bf 8f4f 	dsb	sy
9000fa20:	e7fe      	b.n	9000fa20 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fa22:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000fa26:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fa28:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000fa2c:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fa2e:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fa32:	2b00      	cmp	r3, #0
9000fa34:	f000 809c 	beq.w	9000fb70 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000fa38:	445b      	add	r3, fp
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fa3a:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fa3c:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000fa3e:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fa40:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fa42:	d855      	bhi.n	9000faf0 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fa44:	4b52      	ldr	r3, [pc, #328]	@ (9000fb90 <prvTimerTask+0x290>)
9000fa46:	6818      	ldr	r0, [r3, #0]
9000fa48:	f7fd fe0e 	bl	9000d668 <vListInsert>
9000fa4c:	e78c      	b.n	9000f968 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fa4e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000fa52:	f023 0301 	bic.w	r3, r3, #1
9000fa56:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
9000fa5a:	e785      	b.n	9000f968 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000fa5c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000fa60:	079a      	lsls	r2, r3, #30
9000fa62:	d570      	bpl.n	9000fb46 <prvTimerTask+0x246>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fa64:	f023 0301 	bic.w	r3, r3, #1
9000fa68:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
9000fa6c:	e77c      	b.n	9000f968 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000fa6e:	9b01      	ldr	r3, [sp, #4]
9000fa70:	9903      	ldr	r1, [sp, #12]
9000fa72:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000fa74:	9b00      	ldr	r3, [sp, #0]
9000fa76:	2b00      	cmp	r3, #0
9000fa78:	f6ff af76 	blt.w	9000f968 <prvTimerTask+0x68>
9000fa7c:	e77f      	b.n	9000f97e <prvTimerTask+0x7e>
	vTaskSuspendAll();
9000fa7e:	f7ff fc3d 	bl	9000f2fc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fa82:	f7ff fc53 	bl	9000f32c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fa86:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fa88:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fa8a:	4298      	cmp	r0, r3
9000fa8c:	d209      	bcs.n	9000faa2 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000fa8e:	f7ff feeb 	bl	9000f868 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000fa92:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000fa96:	f7ff fc39 	bl	9000f30c <xTaskResumeAll>
9000fa9a:	e765      	b.n	9000f968 <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000fa9c:	f7ff fee4 	bl	9000f868 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000faa0:	e77a      	b.n	9000f998 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000faa2:	4b3b      	ldr	r3, [pc, #236]	@ (9000fb90 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000faa4:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000faa8:	681b      	ldr	r3, [r3, #0]
9000faaa:	681a      	ldr	r2, [r3, #0]
9000faac:	fab2 f282 	clz	r2, r2
9000fab0:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000fab2:	eba7 010a 	sub.w	r1, r7, sl
9000fab6:	6820      	ldr	r0, [r4, #0]
9000fab8:	f7fe ff74 	bl	9000e9a4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000fabc:	f7ff fc26 	bl	9000f30c <xTaskResumeAll>
9000fac0:	2800      	cmp	r0, #0
9000fac2:	f47f af51 	bne.w	9000f968 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000fac6:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
9000faca:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
9000face:	f3bf 8f4f 	dsb	sy
9000fad2:	f3bf 8f6f 	isb	sy
9000fad6:	e747      	b.n	9000f968 <prvTimerTask+0x68>
9000fad8:	2200      	movs	r2, #0
9000fada:	e7ea      	b.n	9000fab2 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000fadc:	455b      	cmp	r3, fp
9000fade:	d902      	bls.n	9000fae6 <prvTimerTask+0x1e6>
9000fae0:	2800      	cmp	r0, #0
9000fae2:	f43f af7b 	beq.w	9000f9dc <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fae6:	1d39      	adds	r1, r7, #4
9000fae8:	6830      	ldr	r0, [r6, #0]
9000faea:	f7fd fdbd 	bl	9000d668 <vListInsert>
	return xProcessTimerNow;
9000faee:	e73b      	b.n	9000f968 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000faf0:	6830      	ldr	r0, [r6, #0]
9000faf2:	f7fd fdb9 	bl	9000d668 <vListInsert>
9000faf6:	e737      	b.n	9000f968 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000faf8:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fafc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fb00:	183b      	adds	r3, r7, r0
	if( xNextExpiryTime <= xTimeNow )
9000fb02:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fb04:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fb08:	d321      	bcc.n	9000fb4e <prvTimerTask+0x24e>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fb0a:	ebaa 0a07 	sub.w	sl, sl, r7
9000fb0e:	4550      	cmp	r0, sl
9000fb10:	d828      	bhi.n	9000fb64 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
9000fb12:	6823      	ldr	r3, [r4, #0]
9000fb14:	b173      	cbz	r3, 9000fb34 <prvTimerTask+0x234>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fb16:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000fb1a:	2700      	movs	r7, #0
9000fb1c:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fb1e:	f7ff fdb3 	bl	9000f688 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fb22:	463b      	mov	r3, r7
9000fb24:	463a      	mov	r2, r7
9000fb26:	a904      	add	r1, sp, #16
9000fb28:	6820      	ldr	r0, [r4, #0]
9000fb2a:	f7fe f91f 	bl	9000dd6c <xQueueGenericSend>
			configASSERT( xResult );
9000fb2e:	2800      	cmp	r0, #0
9000fb30:	f47f af16 	bne.w	9000f960 <prvTimerTask+0x60>
9000fb34:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb38:	f383 8811 	msr	BASEPRI, r3
9000fb3c:	f3bf 8f6f 	isb	sy
9000fb40:	f3bf 8f4f 	dsb	sy
9000fb44:	e7fe      	b.n	9000fb44 <prvTimerTask+0x244>
							vPortFree( pxTimer );
9000fb46:	4638      	mov	r0, r7
9000fb48:	f7fd fd0a 	bl	9000d560 <vPortFree>
9000fb4c:	e70c      	b.n	9000f968 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fb4e:	4641      	mov	r1, r8
9000fb50:	6830      	ldr	r0, [r6, #0]
9000fb52:	f7fd fd89 	bl	9000d668 <vListInsert>
	return xProcessTimerNow;
9000fb56:	e703      	b.n	9000f960 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fb58:	4b0d      	ldr	r3, [pc, #52]	@ (9000fb90 <prvTimerTask+0x290>)
9000fb5a:	1d39      	adds	r1, r7, #4
9000fb5c:	6818      	ldr	r0, [r3, #0]
9000fb5e:	f7fd fd83 	bl	9000d668 <vListInsert>
	return xProcessTimerNow;
9000fb62:	e701      	b.n	9000f968 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fb64:	4b0a      	ldr	r3, [pc, #40]	@ (9000fb90 <prvTimerTask+0x290>)
9000fb66:	4641      	mov	r1, r8
9000fb68:	6818      	ldr	r0, [r3, #0]
9000fb6a:	f7fd fd7d 	bl	9000d668 <vListInsert>
	return xProcessTimerNow;
9000fb6e:	e6f7      	b.n	9000f960 <prvTimerTask+0x60>
9000fb70:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb74:	f383 8811 	msr	BASEPRI, r3
9000fb78:	f3bf 8f6f 	isb	sy
9000fb7c:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fb80:	e7fe      	b.n	9000fb80 <prvTimerTask+0x280>
9000fb82:	bf00      	nop
9000fb84:	24021ba4 	.word	0x24021ba4
9000fb88:	24021b94 	.word	0x24021b94
9000fb8c:	24021b9c 	.word	0x24021b9c
9000fb90:	24021ba0 	.word	0x24021ba0

9000fb94 <xTimerCreateTimerTask>:
{
9000fb94:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000fb96:	4c23      	ldr	r4, [pc, #140]	@ (9000fc24 <xTimerCreateTimerTask+0x90>)
{
9000fb98:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
9000fb9a:	f7fd fdfb 	bl	9000d794 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000fb9e:	6825      	ldr	r5, [r4, #0]
9000fba0:	b335      	cbz	r5, 9000fbf0 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000fba2:	f7fd fe19 	bl	9000d7d8 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000fba6:	6823      	ldr	r3, [r4, #0]
9000fba8:	b1cb      	cbz	r3, 9000fbde <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000fbaa:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fbac:	aa07      	add	r2, sp, #28
9000fbae:	a906      	add	r1, sp, #24
9000fbb0:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fbb2:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000fbb4:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fbb8:	f7fd fc06 	bl	9000d3c8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fbbc:	4623      	mov	r3, r4
9000fbbe:	9a07      	ldr	r2, [sp, #28]
9000fbc0:	9500      	str	r5, [sp, #0]
9000fbc2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000fbc6:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000fbca:	4917      	ldr	r1, [pc, #92]	@ (9000fc28 <xTimerCreateTimerTask+0x94>)
9000fbcc:	4817      	ldr	r0, [pc, #92]	@ (9000fc2c <xTimerCreateTimerTask+0x98>)
9000fbce:	f7ff f967 	bl	9000eea0 <xTaskCreateStatic>
9000fbd2:	4b17      	ldr	r3, [pc, #92]	@ (9000fc30 <xTimerCreateTimerTask+0x9c>)
9000fbd4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000fbd6:	b110      	cbz	r0, 9000fbde <xTimerCreateTimerTask+0x4a>
}
9000fbd8:	2001      	movs	r0, #1
9000fbda:	b009      	add	sp, #36	@ 0x24
9000fbdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000fbde:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbe2:	f383 8811 	msr	BASEPRI, r3
9000fbe6:	f3bf 8f6f 	isb	sy
9000fbea:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000fbee:	e7fe      	b.n	9000fbee <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000fbf0:	4f10      	ldr	r7, [pc, #64]	@ (9000fc34 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000fbf2:	4e11      	ldr	r6, [pc, #68]	@ (9000fc38 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000fbf4:	4638      	mov	r0, r7
9000fbf6:	f7fd fd19 	bl	9000d62c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000fbfa:	4630      	mov	r0, r6
9000fbfc:	f7fd fd16 	bl	9000d62c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000fc00:	4a0e      	ldr	r2, [pc, #56]	@ (9000fc3c <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fc02:	9500      	str	r5, [sp, #0]
9000fc04:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000fc06:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fc08:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000fc0a:	4a0d      	ldr	r2, [pc, #52]	@ (9000fc40 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fc0c:	4b0d      	ldr	r3, [pc, #52]	@ (9000fc44 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000fc0e:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fc10:	4a0d      	ldr	r2, [pc, #52]	@ (9000fc48 <xTimerCreateTimerTask+0xb4>)
9000fc12:	f7fd ff57 	bl	9000dac4 <xQueueGenericCreateStatic>
9000fc16:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000fc18:	2800      	cmp	r0, #0
9000fc1a:	d0c2      	beq.n	9000fba2 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000fc1c:	490b      	ldr	r1, [pc, #44]	@ (9000fc4c <xTimerCreateTimerTask+0xb8>)
9000fc1e:	f7fe fe99 	bl	9000e954 <vQueueAddToRegistry>
9000fc22:	e7be      	b.n	9000fba2 <xTimerCreateTimerTask+0xe>
9000fc24:	24021b9c 	.word	0x24021b9c
9000fc28:	9002d5a0 	.word	0x9002d5a0
9000fc2c:	9000f901 	.word	0x9000f901
9000fc30:	24021b98 	.word	0x24021b98
9000fc34:	24021bbc 	.word	0x24021bbc
9000fc38:	24021ba8 	.word	0x24021ba8
9000fc3c:	24021ba4 	.word	0x24021ba4
9000fc40:	24021ba0 	.word	0x24021ba0
9000fc44:	24021aa4 	.word	0x24021aa4
9000fc48:	24021af4 	.word	0x24021af4
9000fc4c:	9002d598 	.word	0x9002d598

9000fc50 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000fc50:	8880      	ldrh	r0, [r0, #4]
9000fc52:	4770      	bx	lr

9000fc54 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000fc54:	b570      	push	{r4, r5, r6, lr}
9000fc56:	6803      	ldr	r3, [r0, #0]
9000fc58:	460c      	mov	r4, r1
9000fc5a:	2100      	movs	r1, #0
9000fc5c:	4605      	mov	r5, r0
9000fc5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fc60:	4798      	blx	r3
9000fc62:	4606      	mov	r6, r0
9000fc64:	682b      	ldr	r3, [r5, #0]
9000fc66:	4628      	mov	r0, r5
9000fc68:	1ba4      	subs	r4, r4, r6
9000fc6a:	6a1b      	ldr	r3, [r3, #32]
9000fc6c:	b2a4      	uxth	r4, r4
9000fc6e:	4798      	blx	r3
9000fc70:	fbb4 f0f0 	udiv	r0, r4, r0
9000fc74:	bd70      	pop	{r4, r5, r6, pc}

9000fc76 <_ZN8touchgfx17AbstractPartition5clearEv>:
9000fc76:	2300      	movs	r3, #0
9000fc78:	8083      	strh	r3, [r0, #4]
9000fc7a:	4770      	bx	lr

9000fc7c <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000fc7c:	b510      	push	{r4, lr}
9000fc7e:	6803      	ldr	r3, [r0, #0]
9000fc80:	4604      	mov	r4, r0
9000fc82:	8881      	ldrh	r1, [r0, #4]
9000fc84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fc86:	4798      	blx	r3
9000fc88:	88a3      	ldrh	r3, [r4, #4]
9000fc8a:	3301      	adds	r3, #1
9000fc8c:	80a3      	strh	r3, [r4, #4]
9000fc8e:	bd10      	pop	{r4, pc}

9000fc90 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000fc90:	6803      	ldr	r3, [r0, #0]
9000fc92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fc94:	4718      	bx	r3

9000fc96 <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000fc96:	4770      	bx	lr

9000fc98 <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000fc98:	4a02      	ldr	r2, [pc, #8]	@ (9000fca4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000fc9a:	6002      	str	r2, [r0, #0]
9000fc9c:	2200      	movs	r2, #0
9000fc9e:	8082      	strh	r2, [r0, #4]
9000fca0:	4770      	bx	lr
9000fca2:	bf00      	nop
9000fca4:	9002d5b0 	.word	0x9002d5b0

9000fca8 <_ZN8touchgfx9Container13getFirstChildEv>:
9000fca8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000fcaa:	4770      	bx	lr

9000fcac <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000fcac:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fcae:	2000      	movs	r0, #0
9000fcb0:	b12b      	cbz	r3, 9000fcbe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fcb2:	b920      	cbnz	r0, 9000fcbe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fcb4:	1a5a      	subs	r2, r3, r1
9000fcb6:	699b      	ldr	r3, [r3, #24]
9000fcb8:	4250      	negs	r0, r2
9000fcba:	4150      	adcs	r0, r2
9000fcbc:	e7f8      	b.n	9000fcb0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000fcbe:	4770      	bx	lr

9000fcc0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000fcc0:	2300      	movs	r3, #0
9000fcc2:	6148      	str	r0, [r1, #20]
9000fcc4:	618b      	str	r3, [r1, #24]
9000fcc6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fcc8:	b913      	cbnz	r3, 9000fcd0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000fcca:	6281      	str	r1, [r0, #40]	@ 0x28
9000fccc:	4770      	bx	lr
9000fcce:	4613      	mov	r3, r2
9000fcd0:	699a      	ldr	r2, [r3, #24]
9000fcd2:	2a00      	cmp	r2, #0
9000fcd4:	d1fb      	bne.n	9000fcce <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000fcd6:	6199      	str	r1, [r3, #24]
9000fcd8:	4770      	bx	lr

9000fcda <_ZN8touchgfx9Container9removeAllEv>:
9000fcda:	2200      	movs	r2, #0
9000fcdc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fcde:	b123      	cbz	r3, 9000fcea <_ZN8touchgfx9Container9removeAllEv+0x10>
9000fce0:	6999      	ldr	r1, [r3, #24]
9000fce2:	6281      	str	r1, [r0, #40]	@ 0x28
9000fce4:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000fce8:	e7f8      	b.n	9000fcdc <_ZN8touchgfx9Container9removeAllEv+0x2>
9000fcea:	4770      	bx	lr

9000fcec <_ZN8touchgfx9Container6unlinkEv>:
9000fcec:	2300      	movs	r3, #0
9000fcee:	6283      	str	r3, [r0, #40]	@ 0x28
9000fcf0:	4770      	bx	lr

9000fcf2 <_ZNK8touchgfx9Container12getSolidRectEv>:
9000fcf2:	2200      	movs	r2, #0
9000fcf4:	8002      	strh	r2, [r0, #0]
9000fcf6:	8042      	strh	r2, [r0, #2]
9000fcf8:	8082      	strh	r2, [r0, #4]
9000fcfa:	80c2      	strh	r2, [r0, #6]
9000fcfc:	4770      	bx	lr

9000fcfe <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000fcfe:	b570      	push	{r4, r5, r6, lr}
9000fd00:	460d      	mov	r5, r1
9000fd02:	4616      	mov	r6, r2
9000fd04:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fd06:	b13c      	cbz	r4, 9000fd18 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000fd08:	6823      	ldr	r3, [r4, #0]
9000fd0a:	4620      	mov	r0, r4
9000fd0c:	4632      	mov	r2, r6
9000fd0e:	4629      	mov	r1, r5
9000fd10:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000fd12:	4798      	blx	r3
9000fd14:	69a4      	ldr	r4, [r4, #24]
9000fd16:	e7f6      	b.n	9000fd06 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000fd18:	bd70      	pop	{r4, r5, r6, pc}

9000fd1a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000fd1a:	b538      	push	{r3, r4, r5, lr}
9000fd1c:	460d      	mov	r5, r1
9000fd1e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fd20:	b134      	cbz	r4, 9000fd30 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000fd22:	682b      	ldr	r3, [r5, #0]
9000fd24:	4621      	mov	r1, r4
9000fd26:	4628      	mov	r0, r5
9000fd28:	689b      	ldr	r3, [r3, #8]
9000fd2a:	4798      	blx	r3
9000fd2c:	69a4      	ldr	r4, [r4, #24]
9000fd2e:	e7f7      	b.n	9000fd20 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000fd30:	bd38      	pop	{r3, r4, r5, pc}

9000fd32 <_ZN8touchgfx9ContainerD1Ev>:
9000fd32:	4770      	bx	lr

9000fd34 <_ZN8touchgfx9ContainerD0Ev>:
9000fd34:	b510      	push	{r4, lr}
9000fd36:	4604      	mov	r4, r0
9000fd38:	212c      	movs	r1, #44	@ 0x2c
9000fd3a:	f018 f979 	bl	90028030 <_ZdlPvj>
9000fd3e:	4620      	mov	r0, r4
9000fd40:	bd10      	pop	{r4, pc}

9000fd42 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000fd42:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fd44:	b19b      	cbz	r3, 9000fd6e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fd46:	428b      	cmp	r3, r1
9000fd48:	d109      	bne.n	9000fd5e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000fd4a:	699a      	ldr	r2, [r3, #24]
9000fd4c:	2100      	movs	r1, #0
9000fd4e:	6159      	str	r1, [r3, #20]
9000fd50:	6282      	str	r2, [r0, #40]	@ 0x28
9000fd52:	b902      	cbnz	r2, 9000fd56 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000fd54:	4770      	bx	lr
9000fd56:	6199      	str	r1, [r3, #24]
9000fd58:	4770      	bx	lr
9000fd5a:	4613      	mov	r3, r2
9000fd5c:	b13a      	cbz	r2, 9000fd6e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fd5e:	699a      	ldr	r2, [r3, #24]
9000fd60:	428a      	cmp	r2, r1
9000fd62:	d1fa      	bne.n	9000fd5a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000fd64:	698a      	ldr	r2, [r1, #24]
9000fd66:	619a      	str	r2, [r3, #24]
9000fd68:	2300      	movs	r3, #0
9000fd6a:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000fd6e:	4770      	bx	lr

9000fd70 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000fd70:	b410      	push	{r4}
9000fd72:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fd74:	4604      	mov	r4, r0
9000fd76:	b92b      	cbnz	r3, 9000fd84 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000fd78:	6803      	ldr	r3, [r0, #0]
9000fd7a:	4611      	mov	r1, r2
9000fd7c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fd80:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9000fd82:	4718      	bx	r3
9000fd84:	b941      	cbnz	r1, 9000fd98 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000fd86:	6193      	str	r3, [r2, #24]
9000fd88:	6282      	str	r2, [r0, #40]	@ 0x28
9000fd8a:	6154      	str	r4, [r2, #20]
9000fd8c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fd90:	4770      	bx	lr
9000fd92:	4603      	mov	r3, r0
9000fd94:	2800      	cmp	r0, #0
9000fd96:	d0f9      	beq.n	9000fd8c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000fd98:	4299      	cmp	r1, r3
9000fd9a:	6998      	ldr	r0, [r3, #24]
9000fd9c:	d1f9      	bne.n	9000fd92 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000fd9e:	6190      	str	r0, [r2, #24]
9000fda0:	618a      	str	r2, [r1, #24]
9000fda2:	e7f2      	b.n	9000fd8a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9000fda4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000fda4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fda8:	461f      	mov	r7, r3
9000fdaa:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9000fdae:	460d      	mov	r5, r1
9000fdb0:	4616      	mov	r6, r2
9000fdb2:	b103      	cbz	r3, 9000fdb6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000fdb4:	6038      	str	r0, [r7, #0]
9000fdb6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fdb8:	b314      	cbz	r4, 9000fe00 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000fdba:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9000fdbe:	b1eb      	cbz	r3, 9000fdfc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fdc0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000fdc4:	428d      	cmp	r5, r1
9000fdc6:	db19      	blt.n	9000fdfc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fdc8:	b289      	uxth	r1, r1
9000fdca:	8923      	ldrh	r3, [r4, #8]
9000fdcc:	440b      	add	r3, r1
9000fdce:	b21b      	sxth	r3, r3
9000fdd0:	429d      	cmp	r5, r3
9000fdd2:	da13      	bge.n	9000fdfc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fdd4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000fdd8:	4296      	cmp	r6, r2
9000fdda:	db0f      	blt.n	9000fdfc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fddc:	b292      	uxth	r2, r2
9000fdde:	8963      	ldrh	r3, [r4, #10]
9000fde0:	4413      	add	r3, r2
9000fde2:	b21b      	sxth	r3, r3
9000fde4:	429e      	cmp	r6, r3
9000fde6:	da09      	bge.n	9000fdfc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fde8:	6823      	ldr	r3, [r4, #0]
9000fdea:	1ab2      	subs	r2, r6, r2
9000fdec:	1a69      	subs	r1, r5, r1
9000fdee:	4620      	mov	r0, r4
9000fdf0:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
9000fdf4:	b212      	sxth	r2, r2
9000fdf6:	463b      	mov	r3, r7
9000fdf8:	b209      	sxth	r1, r1
9000fdfa:	47c0      	blx	r8
9000fdfc:	69a4      	ldr	r4, [r4, #24]
9000fdfe:	e7db      	b.n	9000fdb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000fe00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000fe04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9000fe04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fe08:	4c6d      	ldr	r4, [pc, #436]	@ (9000ffc0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9000fe0a:	b0a1      	sub	sp, #132	@ 0x84
9000fe0c:	4606      	mov	r6, r0
9000fe0e:	6824      	ldr	r4, [r4, #0]
9000fe10:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
9000fe12:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
9000fe16:	2400      	movs	r4, #0
9000fe18:	9303      	str	r3, [sp, #12]
9000fe1a:	802c      	strh	r4, [r5, #0]
9000fe1c:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
9000fe1e:	802c      	strh	r4, [r5, #0]
9000fe20:	601c      	str	r4, [r3, #0]
9000fe22:	e9cd 1201 	strd	r1, r2, [sp, #4]
9000fe26:	f7ff ffbd 	bl	9000fda4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000fe2a:	f1b9 0f03 	cmp.w	r9, #3
9000fe2e:	f340 80c1 	ble.w	9000ffb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9000fe32:	4631      	mov	r1, r6
9000fe34:	a80c      	add	r0, sp, #48	@ 0x30
9000fe36:	f006 fe4d 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fe3a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9000fe3e:	9306      	str	r3, [sp, #24]
9000fe40:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9000fe44:	9307      	str	r3, [sp, #28]
9000fe46:	9b03      	ldr	r3, [sp, #12]
9000fe48:	f8d3 a000 	ldr.w	sl, [r3]
9000fe4c:	f1ba 0f00 	cmp.w	sl, #0
9000fe50:	f000 80b3 	beq.w	9000ffba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
9000fe54:	4651      	mov	r1, sl
9000fe56:	a810      	add	r0, sp, #64	@ 0x40
9000fe58:	f006 fe3c 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fe5c:	2002      	movs	r0, #2
9000fe5e:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
9000fe62:	9b01      	ldr	r3, [sp, #4]
9000fe64:	9a06      	ldr	r2, [sp, #24]
9000fe66:	fb91 f1f0 	sdiv	r1, r1, r0
9000fe6a:	189d      	adds	r5, r3, r2
9000fe6c:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
9000fe70:	9a07      	ldr	r2, [sp, #28]
9000fe72:	4419      	add	r1, r3
9000fe74:	9b02      	ldr	r3, [sp, #8]
9000fe76:	4413      	add	r3, r2
9000fe78:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
9000fe7c:	1a6d      	subs	r5, r5, r1
9000fe7e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
9000fe82:	fb92 f2f0 	sdiv	r2, r2, r0
9000fe86:	440a      	add	r2, r1
9000fe88:	1a9b      	subs	r3, r3, r2
9000fe8a:	435b      	muls	r3, r3
9000fe8c:	fb05 3505 	mla	r5, r5, r5, r3
9000fe90:	4f4c      	ldr	r7, [pc, #304]	@ (9000ffc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9000fe92:	ac10      	add	r4, sp, #64	@ 0x40
9000fe94:	f1b9 0f0c 	cmp.w	r9, #12
9000fe98:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fe9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fe9c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fe9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fea0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fea2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fea4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9000fea8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000feac:	f04f 0303 	mov.w	r3, #3
9000feb0:	bfd8      	it	le
9000feb2:	f109 32ff 	addle.w	r2, r9, #4294967295
9000feb6:	f04f 0400 	mov.w	r4, #0
9000feba:	f8cd 9000 	str.w	r9, [sp]
9000febe:	bfcc      	ite	gt
9000fec0:	4698      	movgt	r8, r3
9000fec2:	fb92 f8f3 	sdivle	r8, r2, r3
9000fec6:	1c63      	adds	r3, r4, #1
9000fec8:	aa10      	add	r2, sp, #64	@ 0x40
9000feca:	f004 0401 	and.w	r4, r4, #1
9000fece:	f04f 0b00 	mov.w	fp, #0
9000fed2:	9308      	str	r3, [sp, #32]
9000fed4:	9b00      	ldr	r3, [sp, #0]
9000fed6:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9000feda:	fb93 f3f8 	sdiv	r3, r3, r8
9000fede:	3404      	adds	r4, #4
9000fee0:	b29b      	uxth	r3, r3
9000fee2:	9304      	str	r3, [sp, #16]
9000fee4:	9a04      	ldr	r2, [sp, #16]
9000fee6:	f854 3c04 	ldr.w	r3, [r4, #-4]
9000feea:	fb13 f302 	smulbb	r3, r3, r2
9000feee:	9a01      	ldr	r2, [sp, #4]
9000fef0:	b29b      	uxth	r3, r3
9000fef2:	1899      	adds	r1, r3, r2
9000fef4:	9305      	str	r3, [sp, #20]
9000fef6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9000fefa:	b209      	sxth	r1, r1
9000fefc:	4299      	cmp	r1, r3
9000fefe:	db4d      	blt.n	9000ff9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000ff00:	8932      	ldrh	r2, [r6, #8]
9000ff02:	4413      	add	r3, r2
9000ff04:	b21b      	sxth	r3, r3
9000ff06:	4299      	cmp	r1, r3
9000ff08:	da48      	bge.n	9000ff9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000ff0a:	9b04      	ldr	r3, [sp, #16]
9000ff0c:	6827      	ldr	r7, [r4, #0]
9000ff0e:	fb17 f703 	smulbb	r7, r7, r3
9000ff12:	9b02      	ldr	r3, [sp, #8]
9000ff14:	b2bf      	uxth	r7, r7
9000ff16:	18fa      	adds	r2, r7, r3
9000ff18:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
9000ff1c:	b212      	sxth	r2, r2
9000ff1e:	429a      	cmp	r2, r3
9000ff20:	db3c      	blt.n	9000ff9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000ff22:	8970      	ldrh	r0, [r6, #10]
9000ff24:	4403      	add	r3, r0
9000ff26:	b21b      	sxth	r3, r3
9000ff28:	429a      	cmp	r2, r3
9000ff2a:	da37      	bge.n	9000ff9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000ff2c:	2300      	movs	r3, #0
9000ff2e:	4630      	mov	r0, r6
9000ff30:	930b      	str	r3, [sp, #44]	@ 0x2c
9000ff32:	ab0b      	add	r3, sp, #44	@ 0x2c
9000ff34:	f7ff ff36 	bl	9000fda4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000ff38:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9000ff3a:	b37a      	cbz	r2, 9000ff9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000ff3c:	4552      	cmp	r2, sl
9000ff3e:	d02d      	beq.n	9000ff9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000ff40:	4611      	mov	r1, r2
9000ff42:	a80e      	add	r0, sp, #56	@ 0x38
9000ff44:	9209      	str	r2, [sp, #36]	@ 0x24
9000ff46:	f006 fdc5 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000ff4a:	f04f 0e02 	mov.w	lr, #2
9000ff4e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
9000ff52:	9a06      	ldr	r2, [sp, #24]
9000ff54:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
9000ff58:	9b01      	ldr	r3, [sp, #4]
9000ff5a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9000ff5e:	4413      	add	r3, r2
9000ff60:	9a07      	ldr	r2, [sp, #28]
9000ff62:	fb91 f1fe 	sdiv	r1, r1, lr
9000ff66:	fb9c fcfe 	sdiv	ip, ip, lr
9000ff6a:	4401      	add	r1, r0
9000ff6c:	1a58      	subs	r0, r3, r1
9000ff6e:	9b02      	ldr	r3, [sp, #8]
9000ff70:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
9000ff74:	4413      	add	r3, r2
9000ff76:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9000ff78:	448c      	add	ip, r1
9000ff7a:	eba3 030c 	sub.w	r3, r3, ip
9000ff7e:	435b      	muls	r3, r3
9000ff80:	fb00 3300 	mla	r3, r0, r0, r3
9000ff84:	42ab      	cmp	r3, r5
9000ff86:	d208      	bcs.n	9000ff9a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9000ff88:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9000ff8a:	461d      	mov	r5, r3
9000ff8c:	9803      	ldr	r0, [sp, #12]
9000ff8e:	6001      	str	r1, [r0, #0]
9000ff90:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9000ff92:	9805      	ldr	r0, [sp, #20]
9000ff94:	8008      	strh	r0, [r1, #0]
9000ff96:	992b      	ldr	r1, [sp, #172]	@ 0xac
9000ff98:	800f      	strh	r7, [r1, #0]
9000ff9a:	4692      	mov	sl, r2
9000ff9c:	f10b 0b01 	add.w	fp, fp, #1
9000ffa0:	3408      	adds	r4, #8
9000ffa2:	f1bb 0f04 	cmp.w	fp, #4
9000ffa6:	d19d      	bne.n	9000fee4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
9000ffa8:	9b00      	ldr	r3, [sp, #0]
9000ffaa:	9c08      	ldr	r4, [sp, #32]
9000ffac:	444b      	add	r3, r9
9000ffae:	4544      	cmp	r4, r8
9000ffb0:	9300      	str	r3, [sp, #0]
9000ffb2:	d188      	bne.n	9000fec6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
9000ffb4:	b021      	add	sp, #132	@ 0x84
9000ffb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000ffba:	f04f 35ff 	mov.w	r5, #4294967295
9000ffbe:	e767      	b.n	9000fe90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
9000ffc0:	24021bdc 	.word	0x24021bdc
9000ffc4:	900297a0 	.word	0x900297a0

9000ffc8 <_ZN8touchgfx4RectaNERKS0_>:
9000ffc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000ffcc:	f9b1 7000 	ldrsh.w	r7, [r1]
9000ffd0:	888c      	ldrh	r4, [r1, #4]
9000ffd2:	f9b0 9000 	ldrsh.w	r9, [r0]
9000ffd6:	443c      	add	r4, r7
9000ffd8:	b2a4      	uxth	r4, r4
9000ffda:	fa0f f884 	sxth.w	r8, r4
9000ffde:	45c1      	cmp	r9, r8
9000ffe0:	da2f      	bge.n	90010042 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000ffe2:	8882      	ldrh	r2, [r0, #4]
9000ffe4:	444a      	add	r2, r9
9000ffe6:	b292      	uxth	r2, r2
9000ffe8:	fa0f fe82 	sxth.w	lr, r2
9000ffec:	4577      	cmp	r7, lr
9000ffee:	da28      	bge.n	90010042 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000fff0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9000fff4:	88cb      	ldrh	r3, [r1, #6]
9000fff6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9000fffa:	442b      	add	r3, r5
9000fffc:	b21b      	sxth	r3, r3
9000fffe:	429e      	cmp	r6, r3
90010000:	da1f      	bge.n	90010042 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010002:	88c3      	ldrh	r3, [r0, #6]
90010004:	4433      	add	r3, r6
90010006:	b29b      	uxth	r3, r3
90010008:	fa0f fc83 	sxth.w	ip, r3
9001000c:	4565      	cmp	r5, ip
9001000e:	da18      	bge.n	90010042 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010010:	454f      	cmp	r7, r9
90010012:	bfb8      	it	lt
90010014:	464f      	movlt	r7, r9
90010016:	42b5      	cmp	r5, r6
90010018:	bfb8      	it	lt
9001001a:	4635      	movlt	r5, r6
9001001c:	45f0      	cmp	r8, lr
9001001e:	bfd8      	it	le
90010020:	4622      	movle	r2, r4
90010022:	1bd2      	subs	r2, r2, r7
90010024:	8082      	strh	r2, [r0, #4]
90010026:	884a      	ldrh	r2, [r1, #2]
90010028:	88c9      	ldrh	r1, [r1, #6]
9001002a:	8007      	strh	r7, [r0, #0]
9001002c:	440a      	add	r2, r1
9001002e:	8045      	strh	r5, [r0, #2]
90010030:	b292      	uxth	r2, r2
90010032:	b211      	sxth	r1, r2
90010034:	458c      	cmp	ip, r1
90010036:	bfa8      	it	ge
90010038:	4613      	movge	r3, r2
9001003a:	1b5b      	subs	r3, r3, r5
9001003c:	80c3      	strh	r3, [r0, #6]
9001003e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010042:	2300      	movs	r3, #0
90010044:	8003      	strh	r3, [r0, #0]
90010046:	8043      	strh	r3, [r0, #2]
90010048:	8083      	strh	r3, [r0, #4]
9001004a:	80c3      	strh	r3, [r0, #6]
9001004c:	e7f7      	b.n	9001003e <_ZN8touchgfx4RectaNERKS0_+0x76>

9001004e <_ZNK8touchgfx4Rect7isEmptyEv>:
9001004e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010052:	2b00      	cmp	r3, #0
90010054:	dd06      	ble.n	90010064 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010056:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001005a:	2800      	cmp	r0, #0
9001005c:	bfcc      	ite	gt
9001005e:	2000      	movgt	r0, #0
90010060:	2001      	movle	r0, #1
90010062:	4770      	bx	lr
90010064:	2001      	movs	r0, #1
90010066:	4770      	bx	lr

90010068 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010068:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001006c:	2300      	movs	r3, #0
9001006e:	4604      	mov	r4, r0
90010070:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90010072:	8003      	strh	r3, [r0, #0]
90010074:	8043      	strh	r3, [r0, #2]
90010076:	8083      	strh	r3, [r0, #4]
90010078:	80c3      	strh	r3, [r0, #6]
9001007a:	2d00      	cmp	r5, #0
9001007c:	d040      	beq.n	90010100 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001007e:	1d28      	adds	r0, r5, #4
90010080:	f7ff ffe5 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
90010084:	b988      	cbnz	r0, 900100aa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010086:	4620      	mov	r0, r4
90010088:	f7ff ffe1 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001008c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010090:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010094:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010098:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9001009c:	b138      	cbz	r0, 900100ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9001009e:	8022      	strh	r2, [r4, #0]
900100a0:	8063      	strh	r3, [r4, #2]
900100a2:	f8a4 e004 	strh.w	lr, [r4, #4]
900100a6:	f8a4 c006 	strh.w	ip, [r4, #6]
900100aa:	69ad      	ldr	r5, [r5, #24]
900100ac:	e7e5      	b.n	9001007a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
900100ae:	f9b4 0000 	ldrsh.w	r0, [r4]
900100b2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900100b6:	4290      	cmp	r0, r2
900100b8:	4607      	mov	r7, r0
900100ba:	f8b4 8004 	ldrh.w	r8, [r4, #4]
900100be:	460e      	mov	r6, r1
900100c0:	bfa8      	it	ge
900100c2:	4617      	movge	r7, r2
900100c4:	4299      	cmp	r1, r3
900100c6:	4472      	add	r2, lr
900100c8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
900100cc:	bfa8      	it	ge
900100ce:	461e      	movge	r6, r3
900100d0:	4440      	add	r0, r8
900100d2:	4471      	add	r1, lr
900100d4:	4463      	add	r3, ip
900100d6:	b200      	sxth	r0, r0
900100d8:	8027      	strh	r7, [r4, #0]
900100da:	b212      	sxth	r2, r2
900100dc:	8066      	strh	r6, [r4, #2]
900100de:	b209      	sxth	r1, r1
900100e0:	b21b      	sxth	r3, r3
900100e2:	4290      	cmp	r0, r2
900100e4:	bfac      	ite	ge
900100e6:	ebc7 0200 	rsbge	r2, r7, r0
900100ea:	ebc7 0202 	rsblt	r2, r7, r2
900100ee:	4299      	cmp	r1, r3
900100f0:	bfac      	ite	ge
900100f2:	ebc6 0301 	rsbge	r3, r6, r1
900100f6:	ebc6 0303 	rsblt	r3, r6, r3
900100fa:	80a2      	strh	r2, [r4, #4]
900100fc:	80e3      	strh	r3, [r4, #6]
900100fe:	e7d4      	b.n	900100aa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010100:	4620      	mov	r0, r4
90010102:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010106 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90010106:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9001010a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001010e:	b383      	cbz	r3, 90010172 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010110:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010112:	b374      	cbz	r4, 90010172 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010114:	f9b1 5000 	ldrsh.w	r5, [r1]
90010118:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
9001011c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90010120:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90010124:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90010128:	b303      	cbz	r3, 9001016c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001012a:	4668      	mov	r0, sp
9001012c:	1d21      	adds	r1, r4, #4
9001012e:	f8ad 5000 	strh.w	r5, [sp]
90010132:	f8ad 6002 	strh.w	r6, [sp, #2]
90010136:	f8ad 7004 	strh.w	r7, [sp, #4]
9001013a:	f8ad 8006 	strh.w	r8, [sp, #6]
9001013e:	f7ff ff43 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
90010142:	4668      	mov	r0, sp
90010144:	f7ff ff83 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
90010148:	b980      	cbnz	r0, 9001016c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001014a:	f8bd 3000 	ldrh.w	r3, [sp]
9001014e:	4669      	mov	r1, sp
90010150:	88a2      	ldrh	r2, [r4, #4]
90010152:	4620      	mov	r0, r4
90010154:	1a9b      	subs	r3, r3, r2
90010156:	88e2      	ldrh	r2, [r4, #6]
90010158:	f8ad 3000 	strh.w	r3, [sp]
9001015c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010160:	1a9b      	subs	r3, r3, r2
90010162:	f8ad 3002 	strh.w	r3, [sp, #2]
90010166:	6823      	ldr	r3, [r4, #0]
90010168:	689b      	ldr	r3, [r3, #8]
9001016a:	4798      	blx	r3
9001016c:	69a4      	ldr	r4, [r4, #24]
9001016e:	2c00      	cmp	r4, #0
90010170:	d1d8      	bne.n	90010124 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010172:	b002      	add	sp, #8
90010174:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010178 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010178:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001017a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001017e:	460d      	mov	r5, r1
90010180:	4616      	mov	r6, r2
90010182:	b323      	cbz	r3, 900101ce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010184:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010186:	b314      	cbz	r4, 900101ce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010188:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001018c:	b1eb      	cbz	r3, 900101ca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001018e:	6828      	ldr	r0, [r5, #0]
90010190:	466b      	mov	r3, sp
90010192:	6869      	ldr	r1, [r5, #4]
90010194:	c303      	stmia	r3!, {r0, r1}
90010196:	4668      	mov	r0, sp
90010198:	1d21      	adds	r1, r4, #4
9001019a:	f7ff ff15 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001019e:	4668      	mov	r0, sp
900101a0:	f7ff ff55 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
900101a4:	b988      	cbnz	r0, 900101ca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900101a6:	f8bd 3000 	ldrh.w	r3, [sp]
900101aa:	4669      	mov	r1, sp
900101ac:	88a2      	ldrh	r2, [r4, #4]
900101ae:	4620      	mov	r0, r4
900101b0:	1a9b      	subs	r3, r3, r2
900101b2:	88e2      	ldrh	r2, [r4, #6]
900101b4:	f8ad 3000 	strh.w	r3, [sp]
900101b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900101bc:	1a9b      	subs	r3, r3, r2
900101be:	4632      	mov	r2, r6
900101c0:	f8ad 3002 	strh.w	r3, [sp, #2]
900101c4:	6823      	ldr	r3, [r4, #0]
900101c6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
900101c8:	4798      	blx	r3
900101ca:	69a4      	ldr	r4, [r4, #24]
900101cc:	e7db      	b.n	90010186 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
900101ce:	b002      	add	sp, #8
900101d0:	bd70      	pop	{r4, r5, r6, pc}

900101d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
900101d2:	6803      	ldr	r3, [r0, #0]
900101d4:	b513      	push	{r0, r1, r4, lr}
900101d6:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
900101da:	2300      	movs	r3, #0
900101dc:	e9cd 3300 	strd	r3, r3, [sp]
900101e0:	466b      	mov	r3, sp
900101e2:	47a0      	blx	r4
900101e4:	b002      	add	sp, #8
900101e6:	bd10      	pop	{r4, pc}

900101e8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900101e8:	2301      	movs	r3, #1
900101ea:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900101ee:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900101f2:	4770      	bx	lr

900101f4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900101f4:	2301      	movs	r3, #1
900101f6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900101fa:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900101fe:	4770      	bx	lr

90010200 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90010200:	6843      	ldr	r3, [r0, #4]
90010202:	2201      	movs	r2, #1
90010204:	725a      	strb	r2, [r3, #9]
90010206:	6840      	ldr	r0, [r0, #4]
90010208:	6803      	ldr	r3, [r0, #0]
9001020a:	691b      	ldr	r3, [r3, #16]
9001020c:	4718      	bx	r3

9001020e <_ZN8touchgfx3HAL8flushDMAEv>:
9001020e:	6840      	ldr	r0, [r0, #4]
90010210:	6803      	ldr	r3, [r0, #0]
90010212:	689b      	ldr	r3, [r3, #8]
90010214:	4718      	bx	r3

90010216 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90010216:	b530      	push	{r4, r5, lr}
90010218:	b08b      	sub	sp, #44	@ 0x2c
9001021a:	6804      	ldr	r4, [r0, #0]
9001021c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90010220:	9509      	str	r5, [sp, #36]	@ 0x24
90010222:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
90010226:	9508      	str	r5, [sp, #32]
90010228:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
9001022c:	9507      	str	r5, [sp, #28]
9001022e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
90010232:	9506      	str	r5, [sp, #24]
90010234:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90010238:	9505      	str	r5, [sp, #20]
9001023a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
9001023e:	9504      	str	r5, [sp, #16]
90010240:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90010244:	9503      	str	r5, [sp, #12]
90010246:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
9001024a:	9502      	str	r5, [sp, #8]
9001024c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90010250:	e9cd 3500 	strd	r3, r5, [sp]
90010254:	4613      	mov	r3, r2
90010256:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
90010258:	2200      	movs	r2, #0
9001025a:	47a0      	blx	r4
9001025c:	b00b      	add	sp, #44	@ 0x2c
9001025e:	bd30      	pop	{r4, r5, pc}

90010260 <_ZN8touchgfx3HAL10beginFrameEv>:
90010260:	4b04      	ldr	r3, [pc, #16]	@ (90010274 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90010262:	781b      	ldrb	r3, [r3, #0]
90010264:	b123      	cbz	r3, 90010270 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010266:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
9001026a:	f080 0001 	eor.w	r0, r0, #1
9001026e:	4770      	bx	lr
90010270:	2001      	movs	r0, #1
90010272:	4770      	bx	lr
90010274:	24021bda 	.word	0x24021bda

90010278 <_ZN8touchgfx3HAL8endFrameEv>:
90010278:	b510      	push	{r4, lr}
9001027a:	4604      	mov	r4, r0
9001027c:	6840      	ldr	r0, [r0, #4]
9001027e:	6803      	ldr	r3, [r0, #0]
90010280:	689b      	ldr	r3, [r3, #8]
90010282:	4798      	blx	r3
90010284:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90010288:	b113      	cbz	r3, 90010290 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001028a:	2301      	movs	r3, #1
9001028c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010290:	bd10      	pop	{r4, pc}

90010292 <_ZN8touchgfx3HAL10initializeEv>:
90010292:	b510      	push	{r4, lr}
90010294:	4604      	mov	r4, r0
90010296:	f7f2 f837 	bl	90002308 <_ZN8touchgfx10OSWrappers10initializeEv>
9001029a:	f7f0 fcb5 	bl	90000c08 <_ZN8touchgfx4GPIO4initEv>
9001029e:	6860      	ldr	r0, [r4, #4]
900102a0:	6803      	ldr	r3, [r0, #0]
900102a2:	68db      	ldr	r3, [r3, #12]
900102a4:	4798      	blx	r3
900102a6:	68e0      	ldr	r0, [r4, #12]
900102a8:	6803      	ldr	r3, [r0, #0]
900102aa:	689b      	ldr	r3, [r3, #8]
900102ac:	4798      	blx	r3
900102ae:	6823      	ldr	r3, [r4, #0]
900102b0:	4620      	mov	r0, r4
900102b2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
900102b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900102b8:	4718      	bx	r3
	...

900102bc <_ZN8touchgfx3HAL4tickEv>:
900102bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900102be:	6803      	ldr	r3, [r0, #0]
900102c0:	4604      	mov	r4, r0
900102c2:	4d5b      	ldr	r5, [pc, #364]	@ (90010430 <_ZN8touchgfx3HAL4tickEv+0x174>)
900102c4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
900102c8:	4798      	blx	r3
900102ca:	2800      	cmp	r0, #0
900102cc:	f000 8095 	beq.w	900103fa <_ZN8touchgfx3HAL4tickEv+0x13e>
900102d0:	2001      	movs	r0, #1
900102d2:	2600      	movs	r6, #0
900102d4:	f7f0 fcd2 	bl	90000c7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900102d8:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
900102dc:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
900102e0:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900102e4:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
900102e8:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
900102ec:	b133      	cbz	r3, 900102fc <_ZN8touchgfx3HAL4tickEv+0x40>
900102ee:	6823      	ldr	r3, [r4, #0]
900102f0:	4620      	mov	r0, r4
900102f2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
900102f6:	4798      	blx	r3
900102f8:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900102fc:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
90010300:	2601      	movs	r6, #1
90010302:	6862      	ldr	r2, [r4, #4]
90010304:	f083 0301 	eor.w	r3, r3, #1
90010308:	702e      	strb	r6, [r5, #0]
9001030a:	7253      	strb	r3, [r2, #9]
9001030c:	f005 face 	bl	900158ac <_ZN8touchgfx11Application11getInstanceEv>
90010310:	6803      	ldr	r3, [r0, #0]
90010312:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010314:	4798      	blx	r3
90010316:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001031a:	b90b      	cbnz	r3, 90010320 <_ZN8touchgfx3HAL4tickEv+0x64>
9001031c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
90010320:	f005 fac4 	bl	900158ac <_ZN8touchgfx11Application11getInstanceEv>
90010324:	6803      	ldr	r3, [r0, #0]
90010326:	695b      	ldr	r3, [r3, #20]
90010328:	4798      	blx	r3
9001032a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9001032c:	6803      	ldr	r3, [r0, #0]
9001032e:	691b      	ldr	r3, [r3, #16]
90010330:	4798      	blx	r3
90010332:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90010336:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
9001033a:	3b01      	subs	r3, #1
9001033c:	b2db      	uxtb	r3, r3
9001033e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90010342:	b10a      	cbz	r2, 90010348 <_ZN8touchgfx3HAL4tickEv+0x8c>
90010344:	2b00      	cmp	r3, #0
90010346:	d1eb      	bne.n	90010320 <_ZN8touchgfx3HAL4tickEv+0x64>
90010348:	4a3a      	ldr	r2, [pc, #232]	@ (90010434 <_ZN8touchgfx3HAL4tickEv+0x178>)
9001034a:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
9001034e:	7813      	ldrb	r3, [r2, #0]
90010350:	3301      	adds	r3, #1
90010352:	b25b      	sxtb	r3, r3
90010354:	4299      	cmp	r1, r3
90010356:	7013      	strb	r3, [r2, #0]
90010358:	dc10      	bgt.n	9001037c <_ZN8touchgfx3HAL4tickEv+0xc0>
9001035a:	2300      	movs	r3, #0
9001035c:	68e0      	ldr	r0, [r4, #12]
9001035e:	a902      	add	r1, sp, #8
90010360:	7013      	strb	r3, [r2, #0]
90010362:	aa03      	add	r2, sp, #12
90010364:	6803      	ldr	r3, [r0, #0]
90010366:	68db      	ldr	r3, [r3, #12]
90010368:	4798      	blx	r3
9001036a:	6823      	ldr	r3, [r4, #0]
9001036c:	2800      	cmp	r0, #0
9001036e:	d050      	beq.n	90010412 <_ZN8touchgfx3HAL4tickEv+0x156>
90010370:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90010374:	4620      	mov	r0, r4
90010376:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9001037a:	4798      	blx	r3
9001037c:	2300      	movs	r3, #0
9001037e:	6960      	ldr	r0, [r4, #20]
90010380:	f88d 3007 	strb.w	r3, [sp, #7]
90010384:	b158      	cbz	r0, 9001039e <_ZN8touchgfx3HAL4tickEv+0xe2>
90010386:	6803      	ldr	r3, [r0, #0]
90010388:	f10d 0107 	add.w	r1, sp, #7
9001038c:	68db      	ldr	r3, [r3, #12]
9001038e:	4798      	blx	r3
90010390:	b128      	cbz	r0, 9001039e <_ZN8touchgfx3HAL4tickEv+0xe2>
90010392:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90010394:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010398:	6803      	ldr	r3, [r0, #0]
9001039a:	68db      	ldr	r3, [r3, #12]
9001039c:	4798      	blx	r3
9001039e:	f104 001c 	add.w	r0, r4, #28
900103a2:	f017 f829 	bl	900273f8 <_ZN8touchgfx8Gestures4tickEv>
900103a6:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
900103aa:	b30b      	cbz	r3, 900103f0 <_ZN8touchgfx3HAL4tickEv+0x134>
900103ac:	6920      	ldr	r0, [r4, #16]
900103ae:	6803      	ldr	r3, [r0, #0]
900103b0:	691b      	ldr	r3, [r3, #16]
900103b2:	4798      	blx	r3
900103b4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900103b6:	4606      	mov	r6, r0
900103b8:	b903      	cbnz	r3, 900103bc <_ZN8touchgfx3HAL4tickEv+0x100>
900103ba:	6760      	str	r0, [r4, #116]	@ 0x74
900103bc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900103be:	4a1e      	ldr	r2, [pc, #120]	@ (90010438 <_ZN8touchgfx3HAL4tickEv+0x17c>)
900103c0:	1af3      	subs	r3, r6, r3
900103c2:	4293      	cmp	r3, r2
900103c4:	d914      	bls.n	900103f0 <_ZN8touchgfx3HAL4tickEv+0x134>
900103c6:	6920      	ldr	r0, [r4, #16]
900103c8:	6803      	ldr	r3, [r0, #0]
900103ca:	699b      	ldr	r3, [r3, #24]
900103cc:	4798      	blx	r3
900103ce:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900103d0:	2264      	movs	r2, #100	@ 0x64
900103d2:	1af3      	subs	r3, r6, r3
900103d4:	fbb3 f3f2 	udiv	r3, r3, r2
900103d8:	fbb0 f0f3 	udiv	r0, r0, r3
900103dc:	2800      	cmp	r0, #0
900103de:	dc1d      	bgt.n	9001041c <_ZN8touchgfx3HAL4tickEv+0x160>
900103e0:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
900103e4:	6920      	ldr	r0, [r4, #16]
900103e6:	2100      	movs	r1, #0
900103e8:	6803      	ldr	r3, [r0, #0]
900103ea:	69db      	ldr	r3, [r3, #28]
900103ec:	4798      	blx	r3
900103ee:	6766      	str	r6, [r4, #116]	@ 0x74
900103f0:	f005 fa5c 	bl	900158ac <_ZN8touchgfx11Application11getInstanceEv>
900103f4:	6803      	ldr	r3, [r0, #0]
900103f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900103f8:	4798      	blx	r3
900103fa:	6823      	ldr	r3, [r4, #0]
900103fc:	4620      	mov	r0, r4
900103fe:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
90010402:	4798      	blx	r3
90010404:	2001      	movs	r0, #1
90010406:	f7f0 fc6d 	bl	90000ce4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001040a:	2300      	movs	r3, #0
9001040c:	702b      	strb	r3, [r5, #0]
9001040e:	b004      	add	sp, #16
90010410:	bd70      	pop	{r4, r5, r6, pc}
90010412:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90010416:	4620      	mov	r0, r4
90010418:	4798      	blx	r3
9001041a:	e7af      	b.n	9001037c <_ZN8touchgfx3HAL4tickEv+0xc0>
9001041c:	2863      	cmp	r0, #99	@ 0x63
9001041e:	bfcb      	itete	gt
90010420:	2300      	movgt	r3, #0
90010422:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90010426:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
9001042a:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
9001042e:	e7d9      	b.n	900103e4 <_ZN8touchgfx3HAL4tickEv+0x128>
90010430:	24021be0 	.word	0x24021be0
90010434:	24021be1 	.word	0x24021be1
90010438:	05f5e100 	.word	0x05f5e100

9001043c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
9001043c:	b510      	push	{r4, lr}
9001043e:	4604      	mov	r4, r0
90010440:	f7f1 ff94 	bl	9000236c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010444:	2200      	movs	r2, #0
90010446:	6863      	ldr	r3, [r4, #4]
90010448:	729a      	strb	r2, [r3, #10]
9001044a:	bd10      	pop	{r4, pc}

9001044c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
9001044c:	65c1      	str	r1, [r0, #92]	@ 0x5c
9001044e:	301c      	adds	r0, #28
90010450:	f016 bfd0 	b.w	900273f4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90010454 <_ZN8touchgfx3HAL5touchEll>:
90010454:	b530      	push	{r4, r5, lr}
90010456:	b087      	sub	sp, #28
90010458:	4604      	mov	r4, r0
9001045a:	a804      	add	r0, sp, #16
9001045c:	e9cd 1204 	strd	r1, r2, [sp, #16]
90010460:	f005 f80a 	bl	90015478 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010464:	9b04      	ldr	r3, [sp, #16]
90010466:	a906      	add	r1, sp, #24
90010468:	a803      	add	r0, sp, #12
9001046a:	f8ad 300c 	strh.w	r3, [sp, #12]
9001046e:	9b05      	ldr	r3, [sp, #20]
90010470:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010474:	f005 f852 	bl	9001551c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010478:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
9001047c:	f104 001c 	add.w	r0, r4, #28
90010480:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010484:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010488:	b189      	cbz	r1, 900104ae <_ZN8touchgfx3HAL5touchEll+0x5a>
9001048a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
9001048e:	9300      	str	r3, [sp, #0]
90010490:	4613      	mov	r3, r2
90010492:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
90010496:	462a      	mov	r2, r5
90010498:	f016 ffbc 	bl	90027414 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
9001049c:	b128      	cbz	r0, 900104aa <_ZN8touchgfx3HAL5touchEll+0x56>
9001049e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900104a2:	6623      	str	r3, [r4, #96]	@ 0x60
900104a4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900104a8:	6663      	str	r3, [r4, #100]	@ 0x64
900104aa:	b007      	add	sp, #28
900104ac:	bd30      	pop	{r4, r5, pc}
900104ae:	f016 fff1 	bl	90027494 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900104b2:	2301      	movs	r3, #1
900104b4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900104b8:	e7f1      	b.n	9001049e <_ZN8touchgfx3HAL5touchEll+0x4a>

900104ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900104ba:	b510      	push	{r4, lr}
900104bc:	2b00      	cmp	r3, #0
900104be:	d046      	beq.n	9001054e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900104c0:	ea81 0002 	eor.w	r0, r1, r2
900104c4:	07c4      	lsls	r4, r0, #31
900104c6:	d508      	bpl.n	900104da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900104c8:	440b      	add	r3, r1
900104ca:	3a01      	subs	r2, #1
900104cc:	428b      	cmp	r3, r1
900104ce:	d93e      	bls.n	9001054e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900104d0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900104d4:	f801 0b01 	strb.w	r0, [r1], #1
900104d8:	e7f8      	b.n	900104cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900104da:	07d0      	lsls	r0, r2, #31
900104dc:	bf42      	ittt	mi
900104de:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900104e2:	f103 33ff 	addmi.w	r3, r3, #4294967295
900104e6:	f801 0b01 	strbmi.w	r0, [r1], #1
900104ea:	2b01      	cmp	r3, #1
900104ec:	d911      	bls.n	90010512 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900104ee:	ea81 0402 	eor.w	r4, r1, r2
900104f2:	4610      	mov	r0, r2
900104f4:	07a4      	lsls	r4, r4, #30
900104f6:	d022      	beq.n	9001053e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
900104f8:	f023 0401 	bic.w	r4, r3, #1
900104fc:	440c      	add	r4, r1
900104fe:	428c      	cmp	r4, r1
90010500:	4602      	mov	r2, r0
90010502:	d904      	bls.n	9001050e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90010504:	8812      	ldrh	r2, [r2, #0]
90010506:	3002      	adds	r0, #2
90010508:	f821 2b02 	strh.w	r2, [r1], #2
9001050c:	e7f7      	b.n	900104fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
9001050e:	f003 0301 	and.w	r3, r3, #1
90010512:	f023 0003 	bic.w	r0, r3, #3
90010516:	4408      	add	r0, r1
90010518:	4288      	cmp	r0, r1
9001051a:	4614      	mov	r4, r2
9001051c:	d904      	bls.n	90010528 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
9001051e:	6824      	ldr	r4, [r4, #0]
90010520:	3204      	adds	r2, #4
90010522:	f841 4b04 	str.w	r4, [r1], #4
90010526:	e7f7      	b.n	90010518 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90010528:	f003 0303 	and.w	r3, r3, #3
9001052c:	3a01      	subs	r2, #1
9001052e:	440b      	add	r3, r1
90010530:	428b      	cmp	r3, r1
90010532:	d90c      	bls.n	9001054e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010534:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010538:	f801 0b01 	strb.w	r0, [r1], #1
9001053c:	e7f8      	b.n	90010530 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
9001053e:	0790      	lsls	r0, r2, #30
90010540:	d0e7      	beq.n	90010512 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010542:	f832 0b02 	ldrh.w	r0, [r2], #2
90010546:	3b02      	subs	r3, #2
90010548:	f821 0b02 	strh.w	r0, [r1], #2
9001054c:	e7e1      	b.n	90010512 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001054e:	2001      	movs	r0, #1
90010550:	bd10      	pop	{r4, pc}

90010552 <_ZN8touchgfx3HAL7noTouchEv>:
90010552:	b510      	push	{r4, lr}
90010554:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90010558:	4604      	mov	r4, r0
9001055a:	b153      	cbz	r3, 90010572 <_ZN8touchgfx3HAL7noTouchEv+0x20>
9001055c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90010560:	2101      	movs	r1, #1
90010562:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90010566:	301c      	adds	r0, #28
90010568:	f016 ff94 	bl	90027494 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001056c:	2300      	movs	r3, #0
9001056e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90010572:	bd10      	pop	{r4, pc}

90010574 <_ZN8touchgfx8Drawable5setXYEss>:
90010574:	b570      	push	{r4, r5, r6, lr}
90010576:	6803      	ldr	r3, [r0, #0]
90010578:	4604      	mov	r4, r0
9001057a:	4615      	mov	r5, r2
9001057c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001057e:	4798      	blx	r3
90010580:	6823      	ldr	r3, [r4, #0]
90010582:	4629      	mov	r1, r5
90010584:	4620      	mov	r0, r4
90010586:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010588:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001058c:	4718      	bx	r3
	...

90010590 <_ZN8touchgfx3HAL3lcdEv>:
90010590:	4b04      	ldr	r3, [pc, #16]	@ (900105a4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90010592:	681b      	ldr	r3, [r3, #0]
90010594:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90010598:	b10a      	cbz	r2, 9001059e <_ZN8touchgfx3HAL3lcdEv+0xe>
9001059a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001059c:	b900      	cbnz	r0, 900105a0 <_ZN8touchgfx3HAL3lcdEv+0x10>
9001059e:	6898      	ldr	r0, [r3, #8]
900105a0:	4770      	bx	lr
900105a2:	bf00      	nop
900105a4:	24021bdc 	.word	0x24021bdc

900105a8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900105a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900105ac:	b085      	sub	sp, #20
900105ae:	4604      	mov	r4, r0
900105b0:	2000      	movs	r0, #0
900105b2:	4699      	mov	r9, r3
900105b4:	ad04      	add	r5, sp, #16
900105b6:	460f      	mov	r7, r1
900105b8:	4690      	mov	r8, r2
900105ba:	f845 0d04 	str.w	r0, [r5, #-4]!
900105be:	69a0      	ldr	r0, [r4, #24]
900105c0:	6806      	ldr	r6, [r0, #0]
900105c2:	9501      	str	r5, [sp, #4]
900105c4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
900105c8:	9500      	str	r5, [sp, #0]
900105ca:	6835      	ldr	r5, [r6, #0]
900105cc:	47a8      	blx	r5
900105ce:	4d10      	ldr	r5, [pc, #64]	@ (90010610 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900105d0:	4606      	mov	r6, r0
900105d2:	f8a5 9000 	strh.w	r9, [r5]
900105d6:	f7ff ffdb 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
900105da:	6803      	ldr	r3, [r0, #0]
900105dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900105de:	4798      	blx	r3
900105e0:	b128      	cbz	r0, 900105ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900105e2:	2801      	cmp	r0, #1
900105e4:	d00b      	beq.n	900105fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900105e6:	4630      	mov	r0, r6
900105e8:	b005      	add	sp, #20
900105ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900105ee:	882b      	ldrh	r3, [r5, #0]
900105f0:	fb08 7203 	mla	r2, r8, r3, r7
900105f4:	9b03      	ldr	r3, [sp, #12]
900105f6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
900105fa:	63e3      	str	r3, [r4, #60]	@ 0x3c
900105fc:	e7f3      	b.n	900105e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900105fe:	882a      	ldrh	r2, [r5, #0]
90010600:	9b03      	ldr	r3, [sp, #12]
90010602:	fb08 7202 	mla	r2, r8, r2, r7
90010606:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001060a:	1a9a      	subs	r2, r3, r2
9001060c:	63e2      	str	r2, [r4, #60]	@ 0x3c
9001060e:	e7ea      	b.n	900105e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010610:	24021bd6 	.word	0x24021bd6

90010614 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90010614:	b5f0      	push	{r4, r5, r6, r7, lr}
90010616:	b08b      	sub	sp, #44	@ 0x2c
90010618:	4617      	mov	r7, r2
9001061a:	4604      	mov	r4, r0
9001061c:	460e      	mov	r6, r1
9001061e:	461d      	mov	r5, r3
90010620:	f7ff ffb6 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
90010624:	6803      	ldr	r3, [r0, #0]
90010626:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010628:	4798      	blx	r3
9001062a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9001062e:	9007      	str	r0, [sp, #28]
90010630:	4631      	mov	r1, r6
90010632:	6822      	ldr	r2, [r4, #0]
90010634:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010638:	4b0c      	ldr	r3, [pc, #48]	@ (9001066c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
9001063a:	4620      	mov	r0, r4
9001063c:	881b      	ldrh	r3, [r3, #0]
9001063e:	9306      	str	r3, [sp, #24]
90010640:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010644:	9305      	str	r3, [sp, #20]
90010646:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
9001064a:	9304      	str	r3, [sp, #16]
9001064c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010650:	9303      	str	r3, [sp, #12]
90010652:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010656:	9302      	str	r3, [sp, #8]
90010658:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001065c:	e9cd 5300 	strd	r5, r3, [sp]
90010660:	463b      	mov	r3, r7
90010662:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
90010664:	2200      	movs	r2, #0
90010666:	47a8      	blx	r5
90010668:	b00b      	add	sp, #44	@ 0x2c
9001066a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001066c:	24021bd6 	.word	0x24021bd6

90010670 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90010670:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010674:	4698      	mov	r8, r3
90010676:	6803      	ldr	r3, [r0, #0]
90010678:	b08b      	sub	sp, #44	@ 0x2c
9001067a:	4617      	mov	r7, r2
9001067c:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
9001067e:	460e      	mov	r6, r1
90010680:	4b13      	ldr	r3, [pc, #76]	@ (900106d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90010682:	4604      	mov	r4, r0
90010684:	f8b3 9000 	ldrh.w	r9, [r3]
90010688:	f7ff ff82 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
9001068c:	6803      	ldr	r3, [r0, #0]
9001068e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010690:	4798      	blx	r3
90010692:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010696:	2200      	movs	r2, #0
90010698:	4631      	mov	r1, r6
9001069a:	e9cd 0308 	strd	r0, r3, [sp, #32]
9001069e:	2302      	movs	r3, #2
900106a0:	4620      	mov	r0, r4
900106a2:	e9cd 9306 	strd	r9, r3, [sp, #24]
900106a6:	2301      	movs	r3, #1
900106a8:	9305      	str	r3, [sp, #20]
900106aa:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900106ae:	9304      	str	r3, [sp, #16]
900106b0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900106b4:	9303      	str	r3, [sp, #12]
900106b6:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900106ba:	9302      	str	r3, [sp, #8]
900106bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900106c0:	e9cd 8300 	strd	r8, r3, [sp]
900106c4:	463b      	mov	r3, r7
900106c6:	47a8      	blx	r5
900106c8:	b00b      	add	sp, #44	@ 0x2c
900106ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900106ce:	bf00      	nop
900106d0:	24021bd6 	.word	0x24021bd6

900106d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900106d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900106d8:	4698      	mov	r8, r3
900106da:	6803      	ldr	r3, [r0, #0]
900106dc:	b087      	sub	sp, #28
900106de:	460e      	mov	r6, r1
900106e0:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
900106e2:	4617      	mov	r7, r2
900106e4:	4b0f      	ldr	r3, [pc, #60]	@ (90010724 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900106e6:	4604      	mov	r4, r0
900106e8:	f8b3 9000 	ldrh.w	r9, [r3]
900106ec:	f7ff ff50 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
900106f0:	6803      	ldr	r3, [r0, #0]
900106f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900106f4:	4798      	blx	r3
900106f6:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
900106fa:	463a      	mov	r2, r7
900106fc:	4631      	mov	r1, r6
900106fe:	f8cd 900c 	str.w	r9, [sp, #12]
90010702:	e9cd 0304 	strd	r0, r3, [sp, #16]
90010706:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9001070a:	4620      	mov	r0, r4
9001070c:	9302      	str	r3, [sp, #8]
9001070e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90010712:	9301      	str	r3, [sp, #4]
90010714:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90010718:	9300      	str	r3, [sp, #0]
9001071a:	4643      	mov	r3, r8
9001071c:	47a8      	blx	r5
9001071e:	b007      	add	sp, #28
90010720:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010724:	24021bd6 	.word	0x24021bd6

90010728 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001072c:	4604      	mov	r4, r0
9001072e:	b08f      	sub	sp, #60	@ 0x3c
90010730:	4610      	mov	r0, r2
90010732:	460d      	mov	r5, r1
90010734:	4691      	mov	r9, r2
90010736:	461e      	mov	r6, r3
90010738:	f008 fb90 	bl	90018e5c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9001073c:	2800      	cmp	r0, #0
9001073e:	f000 809d 	beq.w	9001087c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90010742:	6823      	ldr	r3, [r4, #0]
90010744:	4620      	mov	r0, r4
90010746:	f8df b198 	ldr.w	fp, [pc, #408]	@ 900108e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
9001074a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
9001074e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010750:	4798      	blx	r3
90010752:	6823      	ldr	r3, [r4, #0]
90010754:	4620      	mov	r0, r4
90010756:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 900108e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
9001075a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001075c:	4798      	blx	r3
9001075e:	f8bb 3000 	ldrh.w	r3, [fp]
90010762:	4f5c      	ldr	r7, [pc, #368]	@ (900108d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010764:	9301      	str	r3, [sp, #4]
90010766:	f8ba 3000 	ldrh.w	r3, [sl]
9001076a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
9001076e:	4640      	mov	r0, r8
90010770:	9302      	str	r3, [sp, #8]
90010772:	883b      	ldrh	r3, [r7, #0]
90010774:	9303      	str	r3, [sp, #12]
90010776:	4b58      	ldr	r3, [pc, #352]	@ (900108d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010778:	881a      	ldrh	r2, [r3, #0]
9001077a:	9305      	str	r3, [sp, #20]
9001077c:	9204      	str	r2, [sp, #16]
9001077e:	f008 fc01 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
90010782:	8038      	strh	r0, [r7, #0]
90010784:	4640      	mov	r0, r8
90010786:	f008 fc31 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
9001078a:	9b05      	ldr	r3, [sp, #20]
9001078c:	b280      	uxth	r0, r0
9001078e:	8018      	strh	r0, [r3, #0]
90010790:	4b52      	ldr	r3, [pc, #328]	@ (900108dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90010792:	781b      	ldrb	r3, [r3, #0]
90010794:	2b00      	cmp	r3, #0
90010796:	d174      	bne.n	90010882 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90010798:	883b      	ldrh	r3, [r7, #0]
9001079a:	f8aa 0000 	strh.w	r0, [sl]
9001079e:	f8ab 3000 	strh.w	r3, [fp]
900107a2:	4648      	mov	r0, r9
900107a4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
900107a8:	f008 fb58 	bl	90018e5c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900107ac:	2200      	movs	r2, #0
900107ae:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
900107b2:	4611      	mov	r1, r2
900107b4:	4628      	mov	r0, r5
900107b6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
900107ba:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
900107be:	f7ff fed9 	bl	90010574 <_ZN8touchgfx8Drawable5setXYEss>
900107c2:	2301      	movs	r3, #1
900107c4:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
900107c8:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
900107cc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900107d0:	2b00      	cmp	r3, #0
900107d2:	dd5c      	ble.n	9001088e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900107d4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900107d8:	2b00      	cmp	r3, #0
900107da:	dd58      	ble.n	9001088e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900107dc:	462a      	mov	r2, r5
900107de:	ab0a      	add	r3, sp, #40	@ 0x28
900107e0:	f852 0f04 	ldr.w	r0, [r2, #4]!
900107e4:	6851      	ldr	r1, [r2, #4]
900107e6:	c303      	stmia	r3!, {r0, r1}
900107e8:	4631      	mov	r1, r6
900107ea:	a80a      	add	r0, sp, #40	@ 0x28
900107ec:	f7ff fbec 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
900107f0:	4b38      	ldr	r3, [pc, #224]	@ (900108d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900107f2:	2100      	movs	r1, #0
900107f4:	f9b3 2000 	ldrsh.w	r2, [r3]
900107f8:	4b37      	ldr	r3, [pc, #220]	@ (900108d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900107fa:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900107fe:	aa0a      	add	r2, sp, #40	@ 0x28
90010800:	f9b3 3000 	ldrsh.w	r3, [r3]
90010804:	910c      	str	r1, [sp, #48]	@ 0x30
90010806:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001080a:	ab08      	add	r3, sp, #32
9001080c:	e892 0003 	ldmia.w	r2, {r0, r1}
90010810:	e883 0003 	stmia.w	r3, {r0, r1}
90010814:	4618      	mov	r0, r3
90010816:	a90c      	add	r1, sp, #48	@ 0x30
90010818:	f7ff fbd6 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001081c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9001081e:	2b00      	cmp	r3, #0
90010820:	d13c      	bne.n	9001089c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90010822:	2000      	movs	r0, #0
90010824:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90010828:	2600      	movs	r6, #0
9001082a:	696b      	ldr	r3, [r5, #20]
9001082c:	a908      	add	r1, sp, #32
9001082e:	682a      	ldr	r2, [r5, #0]
90010830:	4628      	mov	r0, r5
90010832:	9305      	str	r3, [sp, #20]
90010834:	616e      	str	r6, [r5, #20]
90010836:	6892      	ldr	r2, [r2, #8]
90010838:	4790      	blx	r2
9001083a:	9b05      	ldr	r3, [sp, #20]
9001083c:	4652      	mov	r2, sl
9001083e:	4649      	mov	r1, r9
90010840:	616b      	str	r3, [r5, #20]
90010842:	4628      	mov	r0, r5
90010844:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90010848:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
9001084c:	f7ff fe92 	bl	90010574 <_ZN8touchgfx8Drawable5setXYEss>
90010850:	9a01      	ldr	r2, [sp, #4]
90010852:	4b23      	ldr	r3, [pc, #140]	@ (900108e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90010854:	4620      	mov	r0, r4
90010856:	801a      	strh	r2, [r3, #0]
90010858:	9a02      	ldr	r2, [sp, #8]
9001085a:	4b22      	ldr	r3, [pc, #136]	@ (900108e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
9001085c:	801a      	strh	r2, [r3, #0]
9001085e:	9a03      	ldr	r2, [sp, #12]
90010860:	4b1c      	ldr	r3, [pc, #112]	@ (900108d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010862:	801a      	strh	r2, [r3, #0]
90010864:	4b1c      	ldr	r3, [pc, #112]	@ (900108d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010866:	9a04      	ldr	r2, [sp, #16]
90010868:	801a      	strh	r2, [r3, #0]
9001086a:	6823      	ldr	r3, [r4, #0]
9001086c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90010870:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010872:	4798      	blx	r3
90010874:	6823      	ldr	r3, [r4, #0]
90010876:	4620      	mov	r0, r4
90010878:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001087a:	4798      	blx	r3
9001087c:	b00f      	add	sp, #60	@ 0x3c
9001087e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010882:	883b      	ldrh	r3, [r7, #0]
90010884:	f8ab 0000 	strh.w	r0, [fp]
90010888:	f8aa 3000 	strh.w	r3, [sl]
9001088c:	e789      	b.n	900107a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
9001088e:	462a      	mov	r2, r5
90010890:	ab0a      	add	r3, sp, #40	@ 0x28
90010892:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010896:	6851      	ldr	r1, [r2, #4]
90010898:	c303      	stmia	r3!, {r0, r1}
9001089a:	e7a9      	b.n	900107f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
9001089c:	a807      	add	r0, sp, #28
9001089e:	f008 fce7 	bl	90019270 <_ZNK8touchgfx6Bitmap9getFormatEv>
900108a2:	4606      	mov	r6, r0
900108a4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
900108a6:	6803      	ldr	r3, [r0, #0]
900108a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900108aa:	4798      	blx	r3
900108ac:	4286      	cmp	r6, r0
900108ae:	d1b8      	bne.n	90010822 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
900108b0:	f7ff fe6e 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
900108b4:	6803      	ldr	r3, [r0, #0]
900108b6:	4606      	mov	r6, r0
900108b8:	a807      	add	r0, sp, #28
900108ba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900108bc:	9305      	str	r3, [sp, #20]
900108be:	f008 fcd7 	bl	90019270 <_ZNK8touchgfx6Bitmap9getFormatEv>
900108c2:	9b05      	ldr	r3, [sp, #20]
900108c4:	4601      	mov	r1, r0
900108c6:	4630      	mov	r0, r6
900108c8:	4798      	blx	r3
900108ca:	f080 0001 	eor.w	r0, r0, #1
900108ce:	b2c0      	uxtb	r0, r0
900108d0:	e7a8      	b.n	90010824 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
900108d2:	bf00      	nop
900108d4:	24021bd0 	.word	0x24021bd0
900108d8:	24021bd2 	.word	0x24021bd2
900108dc:	24021bd4 	.word	0x24021bd4
900108e0:	24021bd6 	.word	0x24021bd6
900108e4:	24021bd8 	.word	0x24021bd8

900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
900108e8:	4b07      	ldr	r3, [pc, #28]	@ (90010908 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
900108ea:	b510      	push	{r4, lr}
900108ec:	781b      	ldrb	r3, [r3, #0]
900108ee:	4604      	mov	r4, r0
900108f0:	b13b      	cbz	r3, 90010902 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
900108f2:	6803      	ldr	r3, [r0, #0]
900108f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900108f6:	4798      	blx	r3
900108f8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900108fa:	4283      	cmp	r3, r0
900108fc:	d101      	bne.n	90010902 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
900108fe:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90010900:	bd10      	pop	{r4, pc}
90010902:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90010904:	e7fc      	b.n	90010900 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90010906:	bf00      	nop
90010908:	24021bda 	.word	0x24021bda

9001090c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
9001090c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010910:	461d      	mov	r5, r3
90010912:	b08a      	sub	sp, #40	@ 0x28
90010914:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90010918:	4690      	mov	r8, r2
9001091a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
9001091e:	2400      	movs	r4, #0
90010920:	4607      	mov	r7, r0
90010922:	fb06 8505 	mla	r5, r6, r5, r8
90010926:	9404      	str	r4, [sp, #16]
90010928:	f88d 4020 	strb.w	r4, [sp, #32]
9001092c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010930:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010934:	f8ad 3018 	strh.w	r3, [sp, #24]
90010938:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001093c:	f8ad 301a 	strh.w	r3, [sp, #26]
90010940:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010944:	f8ad 301c 	strh.w	r3, [sp, #28]
90010948:	f7ff ffce 	bl	900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001094c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010950:	6878      	ldr	r0, [r7, #4]
90010952:	f8ad 601e 	strh.w	r6, [sp, #30]
90010956:	a901      	add	r1, sp, #4
90010958:	9505      	str	r5, [sp, #20]
9001095a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001095e:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90010962:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90010966:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
9001096a:	6803      	ldr	r3, [r0, #0]
9001096c:	685b      	ldr	r3, [r3, #4]
9001096e:	4798      	blx	r3
90010970:	b00a      	add	sp, #40	@ 0x28
90010972:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010976 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90010976:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001097a:	b08b      	sub	sp, #44	@ 0x2c
9001097c:	2400      	movs	r4, #0
9001097e:	4691      	mov	r9, r2
90010980:	461d      	mov	r5, r3
90010982:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90010986:	f44f 6300 	mov.w	r3, #2048	@ 0x800
9001098a:	4688      	mov	r8, r1
9001098c:	4607      	mov	r7, r0
9001098e:	9404      	str	r4, [sp, #16]
90010990:	fb06 9505 	mla	r5, r6, r5, r9
90010994:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010998:	f7ff ffa6 	bl	900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001099c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900109a0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900109a4:	6878      	ldr	r0, [r7, #4]
900109a6:	f8ad 3018 	strh.w	r3, [sp, #24]
900109aa:	a901      	add	r1, sp, #4
900109ac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900109b0:	9505      	str	r5, [sp, #20]
900109b2:	f8ad 301a 	strh.w	r3, [sp, #26]
900109b6:	f8ad 401c 	strh.w	r4, [sp, #28]
900109ba:	f8ad 601e 	strh.w	r6, [sp, #30]
900109be:	f8cd 8010 	str.w	r8, [sp, #16]
900109c2:	f8ad 4020 	strh.w	r4, [sp, #32]
900109c6:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900109ca:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
900109ce:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900109d2:	6803      	ldr	r3, [r0, #0]
900109d4:	685b      	ldr	r3, [r3, #4]
900109d6:	4798      	blx	r3
900109d8:	b00b      	add	sp, #44	@ 0x2c
900109da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

900109e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
900109e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900109e4:	b08a      	sub	sp, #40	@ 0x28
900109e6:	4698      	mov	r8, r3
900109e8:	2300      	movs	r3, #0
900109ea:	4606      	mov	r6, r0
900109ec:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
900109f0:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900109f4:	2d0b      	cmp	r5, #11
900109f6:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
900109fa:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
900109fe:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90010a02:	9304      	str	r3, [sp, #16]
90010a04:	d137      	bne.n	90010a76 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90010a06:	2380      	movs	r3, #128	@ 0x80
90010a08:	f88d 0020 	strb.w	r0, [sp, #32]
90010a0c:	4630      	mov	r0, r6
90010a0e:	9203      	str	r2, [sp, #12]
90010a10:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010a14:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010a18:	f8ad 3018 	strh.w	r3, [sp, #24]
90010a1c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010a20:	f8ad 301a 	strh.w	r3, [sp, #26]
90010a24:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010a28:	f8ad 301c 	strh.w	r3, [sp, #28]
90010a2c:	f7ff ff5c 	bl	900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010a30:	2c0b      	cmp	r4, #11
90010a32:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90010a36:	f8ad 701e 	strh.w	r7, [sp, #30]
90010a3a:	bf94      	ite	ls
90010a3c:	4b19      	ldrls	r3, [pc, #100]	@ (90010aa4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90010a3e:	2100      	movhi	r1, #0
90010a40:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90010a44:	bf98      	it	ls
90010a46:	5d19      	ldrbls	r1, [r3, r4]
90010a48:	fb02 8307 	mla	r3, r2, r7, r8
90010a4c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010a50:	10c9      	asrs	r1, r1, #3
90010a52:	fb01 0003 	mla	r0, r1, r3, r0
90010a56:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90010a5a:	a901      	add	r1, sp, #4
90010a5c:	9005      	str	r0, [sp, #20]
90010a5e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90010a62:	2300      	movs	r3, #0
90010a64:	6870      	ldr	r0, [r6, #4]
90010a66:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010a6a:	6803      	ldr	r3, [r0, #0]
90010a6c:	685b      	ldr	r3, [r3, #4]
90010a6e:	4798      	blx	r3
90010a70:	b00a      	add	sp, #40	@ 0x28
90010a72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010a76:	2d02      	cmp	r5, #2
90010a78:	d109      	bne.n	90010a8e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90010a7a:	28ff      	cmp	r0, #255	@ 0xff
90010a7c:	d105      	bne.n	90010a8a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90010a7e:	f1bc 0f00 	cmp.w	ip, #0
90010a82:	bf14      	ite	ne
90010a84:	2340      	movne	r3, #64	@ 0x40
90010a86:	2320      	moveq	r3, #32
90010a88:	e7be      	b.n	90010a08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010a8a:	2340      	movs	r3, #64	@ 0x40
90010a8c:	e7bc      	b.n	90010a08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010a8e:	28ff      	cmp	r0, #255	@ 0xff
90010a90:	d105      	bne.n	90010a9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90010a92:	f1bc 0f00 	cmp.w	ip, #0
90010a96:	bf14      	ite	ne
90010a98:	2304      	movne	r3, #4
90010a9a:	2301      	moveq	r3, #1
90010a9c:	e7b4      	b.n	90010a08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010a9e:	2304      	movs	r3, #4
90010aa0:	e7b2      	b.n	90010a08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010aa2:	bf00      	nop
90010aa4:	9002d66c 	.word	0x9002d66c

90010aa8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90010aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010aac:	b08b      	sub	sp, #44	@ 0x2c
90010aae:	461d      	mov	r5, r3
90010ab0:	2400      	movs	r4, #0
90010ab2:	4688      	mov	r8, r1
90010ab4:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90010ab8:	4693      	mov	fp, r2
90010aba:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90010abe:	4607      	mov	r7, r0
90010ac0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90010ac4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90010ac8:	9404      	str	r4, [sp, #16]
90010aca:	bf14      	ite	ne
90010acc:	2308      	movne	r3, #8
90010ace:	2302      	moveq	r3, #2
90010ad0:	fb05 b50a 	mla	r5, r5, sl, fp
90010ad4:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010ad8:	f7ff ff06 	bl	900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010adc:	2e0b      	cmp	r6, #11
90010ade:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90010ae2:	a901      	add	r1, sp, #4
90010ae4:	bf98      	it	ls
90010ae6:	4b13      	ldrls	r3, [pc, #76]	@ (90010b34 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90010ae8:	f8ad a01e 	strh.w	sl, [sp, #30]
90010aec:	bf98      	it	ls
90010aee:	5d9c      	ldrbls	r4, [r3, r6]
90010af0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90010af4:	10e4      	asrs	r4, r4, #3
90010af6:	f8cd 8010 	str.w	r8, [sp, #16]
90010afa:	f8ad 3018 	strh.w	r3, [sp, #24]
90010afe:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90010b02:	fb04 0405 	mla	r4, r4, r5, r0
90010b06:	6878      	ldr	r0, [r7, #4]
90010b08:	f8ad 301a 	strh.w	r3, [sp, #26]
90010b0c:	2300      	movs	r3, #0
90010b0e:	9405      	str	r4, [sp, #20]
90010b10:	f8ad 301c 	strh.w	r3, [sp, #28]
90010b14:	f88d 9020 	strb.w	r9, [sp, #32]
90010b18:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90010b1c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010b20:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90010b24:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90010b28:	6803      	ldr	r3, [r0, #0]
90010b2a:	685b      	ldr	r3, [r3, #4]
90010b2c:	4798      	blx	r3
90010b2e:	b00b      	add	sp, #44	@ 0x2c
90010b30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010b34:	9002d66c 	.word	0x9002d66c

90010b38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010b38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010b3c:	461e      	mov	r6, r3
90010b3e:	4b0a      	ldr	r3, [pc, #40]	@ (90010b68 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010b40:	460f      	mov	r7, r1
90010b42:	4690      	mov	r8, r2
90010b44:	881d      	ldrh	r5, [r3, #0]
90010b46:	f7ff fd23 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
90010b4a:	6803      	ldr	r3, [r0, #0]
90010b4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010b4e:	4798      	blx	r3
90010b50:	280b      	cmp	r0, #11
90010b52:	bf96      	itet	ls
90010b54:	4b05      	ldrls	r3, [pc, #20]	@ (90010b6c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90010b56:	2400      	movhi	r4, #0
90010b58:	5c1c      	ldrbls	r4, [r3, r0]
90010b5a:	fb08 7005 	mla	r0, r8, r5, r7
90010b5e:	10e4      	asrs	r4, r4, #3
90010b60:	fb04 6000 	mla	r0, r4, r0, r6
90010b64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010b68:	24021bd6 	.word	0x24021bd6
90010b6c:	9002d66c 	.word	0x9002d66c

90010b70 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90010b70:	b5f0      	push	{r4, r5, r6, r7, lr}
90010b72:	b08b      	sub	sp, #44	@ 0x2c
90010b74:	461f      	mov	r7, r3
90010b76:	4604      	mov	r4, r0
90010b78:	4616      	mov	r6, r2
90010b7a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90010b7e:	2500      	movs	r5, #0
90010b80:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010b84:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010b88:	9504      	str	r5, [sp, #16]
90010b8a:	f8ad 3018 	strh.w	r3, [sp, #24]
90010b8e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010b92:	f8ad 301a 	strh.w	r3, [sp, #26]
90010b96:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010b9a:	f8ad 301c 	strh.w	r3, [sp, #28]
90010b9e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010ba2:	f88d 3020 	strb.w	r3, [sp, #32]
90010ba6:	f7ff fe9f 	bl	900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010baa:	463a      	mov	r2, r7
90010bac:	4631      	mov	r1, r6
90010bae:	4603      	mov	r3, r0
90010bb0:	4620      	mov	r0, r4
90010bb2:	f7ff ffc1 	bl	90010b38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010bb6:	4b0e      	ldr	r3, [pc, #56]	@ (90010bf0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90010bb8:	9005      	str	r0, [sp, #20]
90010bba:	881b      	ldrh	r3, [r3, #0]
90010bbc:	f8ad 301e 	strh.w	r3, [sp, #30]
90010bc0:	f7ff fce6 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
90010bc4:	6803      	ldr	r3, [r0, #0]
90010bc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010bc8:	4798      	blx	r3
90010bca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90010bcc:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90010bd0:	a901      	add	r1, sp, #4
90010bd2:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90010bd6:	9304      	str	r3, [sp, #16]
90010bd8:	6860      	ldr	r0, [r4, #4]
90010bda:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010bde:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90010be2:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90010be6:	6803      	ldr	r3, [r0, #0]
90010be8:	685b      	ldr	r3, [r3, #4]
90010bea:	4798      	blx	r3
90010bec:	b00b      	add	sp, #44	@ 0x2c
90010bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010bf0:	24021bd6 	.word	0x24021bd6

90010bf4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90010bf4:	b5f0      	push	{r4, r5, r6, r7, lr}
90010bf6:	b08d      	sub	sp, #52	@ 0x34
90010bf8:	2501      	movs	r5, #1
90010bfa:	4604      	mov	r4, r0
90010bfc:	466b      	mov	r3, sp
90010bfe:	9503      	str	r5, [sp, #12]
90010c00:	e883 0006 	stmia.w	r3, {r1, r2}
90010c04:	2300      	movs	r3, #0
90010c06:	f8bd 6000 	ldrh.w	r6, [sp]
90010c0a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010c0e:	9306      	str	r3, [sp, #24]
90010c10:	6803      	ldr	r3, [r0, #0]
90010c12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010c14:	4798      	blx	r3
90010c16:	463a      	mov	r2, r7
90010c18:	4631      	mov	r1, r6
90010c1a:	4603      	mov	r3, r0
90010c1c:	4620      	mov	r0, r4
90010c1e:	f7ff ff8b 	bl	90010b38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010c22:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90010c24:	9004      	str	r0, [sp, #16]
90010c26:	9307      	str	r3, [sp, #28]
90010c28:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010c2c:	f8ad 3020 	strh.w	r3, [sp, #32]
90010c30:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010c34:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010c38:	4b0e      	ldr	r3, [pc, #56]	@ (90010c74 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010c3a:	881b      	ldrh	r3, [r3, #0]
90010c3c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010c40:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010c44:	f7ff fca4 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
90010c48:	6803      	ldr	r3, [r0, #0]
90010c4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010c4c:	4798      	blx	r3
90010c4e:	23ff      	movs	r3, #255	@ 0xff
90010c50:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90010c54:	a903      	add	r1, sp, #12
90010c56:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90010c5a:	6860      	ldr	r0, [r4, #4]
90010c5c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010c60:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90010c64:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90010c68:	6803      	ldr	r3, [r0, #0]
90010c6a:	685b      	ldr	r3, [r3, #4]
90010c6c:	4798      	blx	r3
90010c6e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90010c70:	b00d      	add	sp, #52	@ 0x34
90010c72:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010c74:	24021bd6 	.word	0x24021bd6

90010c78 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90010c78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c7c:	b08c      	sub	sp, #48	@ 0x30
90010c7e:	461e      	mov	r6, r3
90010c80:	2300      	movs	r3, #0
90010c82:	4604      	mov	r4, r0
90010c84:	466d      	mov	r5, sp
90010c86:	9306      	str	r3, [sp, #24]
90010c88:	6803      	ldr	r3, [r0, #0]
90010c8a:	e885 0006 	stmia.w	r5, {r1, r2}
90010c8e:	2501      	movs	r5, #1
90010c90:	f8bd 7000 	ldrh.w	r7, [sp]
90010c94:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90010c98:	9503      	str	r5, [sp, #12]
90010c9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010c9c:	4798      	blx	r3
90010c9e:	4642      	mov	r2, r8
90010ca0:	4639      	mov	r1, r7
90010ca2:	4603      	mov	r3, r0
90010ca4:	4620      	mov	r0, r4
90010ca6:	f7ff ff47 	bl	90010b38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010caa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010cae:	9004      	str	r0, [sp, #16]
90010cb0:	f8ad 3020 	strh.w	r3, [sp, #32]
90010cb4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010cb8:	9607      	str	r6, [sp, #28]
90010cba:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010cbe:	4b10      	ldr	r3, [pc, #64]	@ (90010d00 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90010cc0:	881b      	ldrh	r3, [r3, #0]
90010cc2:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010cc6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90010cc8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010ccc:	f7ff fc60 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
90010cd0:	6803      	ldr	r3, [r0, #0]
90010cd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010cd4:	4798      	blx	r3
90010cd6:	23ff      	movs	r3, #255	@ 0xff
90010cd8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90010cdc:	a903      	add	r1, sp, #12
90010cde:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90010ce2:	6860      	ldr	r0, [r4, #4]
90010ce4:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010ce8:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90010cec:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90010cf0:	6803      	ldr	r3, [r0, #0]
90010cf2:	685b      	ldr	r3, [r3, #4]
90010cf4:	4798      	blx	r3
90010cf6:	4630      	mov	r0, r6
90010cf8:	b00c      	add	sp, #48	@ 0x30
90010cfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010cfe:	bf00      	nop
90010d00:	24021bd6 	.word	0x24021bd6

90010d04 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90010d04:	b5f0      	push	{r4, r5, r6, r7, lr}
90010d06:	b085      	sub	sp, #20
90010d08:	4605      	mov	r5, r0
90010d0a:	ac02      	add	r4, sp, #8
90010d0c:	e884 0006 	stmia.w	r4, {r1, r2}
90010d10:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90010d14:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90010d18:	f7ff fde6 	bl	900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010d1c:	4631      	mov	r1, r6
90010d1e:	4603      	mov	r3, r0
90010d20:	463a      	mov	r2, r7
90010d22:	4628      	mov	r0, r5
90010d24:	f7ff ff08 	bl	90010b38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010d28:	4a05      	ldr	r2, [pc, #20]	@ (90010d40 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90010d2a:	682b      	ldr	r3, [r5, #0]
90010d2c:	8812      	ldrh	r2, [r2, #0]
90010d2e:	9200      	str	r2, [sp, #0]
90010d30:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
90010d32:	4603      	mov	r3, r0
90010d34:	4628      	mov	r0, r5
90010d36:	e894 0006 	ldmia.w	r4, {r1, r2}
90010d3a:	47b0      	blx	r6
90010d3c:	b005      	add	sp, #20
90010d3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010d40:	24021bd6 	.word	0x24021bd6

90010d44 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90010d44:	b570      	push	{r4, r5, r6, lr}
90010d46:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90010d4a:	4604      	mov	r4, r0
90010d4c:	b19b      	cbz	r3, 90010d76 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90010d4e:	2002      	movs	r0, #2
90010d50:	f7ef fffc 	bl	90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90010d54:	2300      	movs	r3, #0
90010d56:	4620      	mov	r0, r4
90010d58:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010d5c:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90010d60:	6823      	ldr	r3, [r4, #0]
90010d62:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
90010d66:	f7ff fdbf 	bl	900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010d6a:	4601      	mov	r1, r0
90010d6c:	4620      	mov	r0, r4
90010d6e:	462b      	mov	r3, r5
90010d70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010d74:	4718      	bx	r3
90010d76:	bd70      	pop	{r4, r5, r6, pc}

90010d78 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90010d78:	b570      	push	{r4, r5, r6, lr}
90010d7a:	4605      	mov	r5, r0
90010d7c:	460c      	mov	r4, r1
90010d7e:	2003      	movs	r0, #3
90010d80:	b149      	cbz	r1, 90010d96 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90010d82:	f7ef ff7b 	bl	90000c7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010d86:	6928      	ldr	r0, [r5, #16]
90010d88:	b168      	cbz	r0, 90010da6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010d8a:	6803      	ldr	r3, [r0, #0]
90010d8c:	2101      	movs	r1, #1
90010d8e:	695b      	ldr	r3, [r3, #20]
90010d90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010d94:	4718      	bx	r3
90010d96:	f7ef ffa5 	bl	90000ce4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010d9a:	6928      	ldr	r0, [r5, #16]
90010d9c:	b118      	cbz	r0, 90010da6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010d9e:	6803      	ldr	r3, [r0, #0]
90010da0:	4621      	mov	r1, r4
90010da2:	695b      	ldr	r3, [r3, #20]
90010da4:	e7f4      	b.n	90010d90 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90010da6:	bd70      	pop	{r4, r5, r6, pc}

90010da8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90010da8:	b538      	push	{r3, r4, r5, lr}
90010daa:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
90010dae:	4604      	mov	r4, r0
90010db0:	460d      	mov	r5, r1
90010db2:	428b      	cmp	r3, r1
90010db4:	d006      	beq.n	90010dc4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90010db6:	6803      	ldr	r3, [r0, #0]
90010db8:	b929      	cbnz	r1, 90010dc6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90010dba:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
90010dbe:	4798      	blx	r3
90010dc0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90010dc4:	bd38      	pop	{r3, r4, r5, pc}
90010dc6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90010dca:	e7f8      	b.n	90010dbe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90010dcc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90010dcc:	4b0d      	ldr	r3, [pc, #52]	@ (90010e04 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90010dce:	b510      	push	{r4, lr}
90010dd0:	781b      	ldrb	r3, [r3, #0]
90010dd2:	4604      	mov	r4, r0
90010dd4:	b95b      	cbnz	r3, 90010dee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010dd6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90010dda:	2b02      	cmp	r3, #2
90010ddc:	d007      	beq.n	90010dee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010dde:	6840      	ldr	r0, [r0, #4]
90010de0:	f000 f91a 	bl	90011018 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90010de4:	b118      	cbz	r0, 90010dee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010de6:	6862      	ldr	r2, [r4, #4]
90010de8:	7a53      	ldrb	r3, [r2, #9]
90010dea:	2b00      	cmp	r3, #0
90010dec:	d0fc      	beq.n	90010de8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90010dee:	f7f1 fab5 	bl	9000235c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010df2:	4620      	mov	r0, r4
90010df4:	2100      	movs	r1, #0
90010df6:	f7ff ffd7 	bl	90010da8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010dfa:	4620      	mov	r0, r4
90010dfc:	f7ff fd74 	bl	900108e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010e00:	bd10      	pop	{r4, pc}
90010e02:	bf00      	nop
90010e04:	24021bda 	.word	0x24021bda

90010e08 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90010e08:	b570      	push	{r4, r5, r6, lr}
90010e0a:	4604      	mov	r4, r0
90010e0c:	6803      	ldr	r3, [r0, #0]
90010e0e:	b919      	cbnz	r1, 90010e18 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90010e10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010e12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010e16:	4718      	bx	r3
90010e18:	2200      	movs	r2, #0
90010e1a:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90010e1e:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90010e22:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010e24:	4798      	blx	r3
90010e26:	6863      	ldr	r3, [r4, #4]
90010e28:	2101      	movs	r1, #1
90010e2a:	4605      	mov	r5, r0
90010e2c:	4620      	mov	r0, r4
90010e2e:	7299      	strb	r1, [r3, #10]
90010e30:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90010e34:	f7ff ffb8 	bl	90010da8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010e38:	4628      	mov	r0, r5
90010e3a:	bd70      	pop	{r4, r5, r6, pc}

90010e3c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90010e3c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90010e40:	1a13      	subs	r3, r2, r0
90010e42:	4258      	negs	r0, r3
90010e44:	4158      	adcs	r0, r3
90010e46:	4770      	bx	lr

90010e48 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90010e48:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90010e4c:	1a9b      	subs	r3, r3, r2
90010e4e:	2b00      	cmp	r3, #0
90010e50:	bfdc      	itt	le
90010e52:	6882      	ldrle	r2, [r0, #8]
90010e54:	189b      	addle	r3, r3, r2
90010e56:	2b01      	cmp	r3, #1
90010e58:	bfcc      	ite	gt
90010e5a:	2000      	movgt	r0, #0
90010e5c:	2001      	movle	r0, #1
90010e5e:	4770      	bx	lr

90010e60 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90010e60:	6902      	ldr	r2, [r0, #16]
90010e62:	6843      	ldr	r3, [r0, #4]
90010e64:	2024      	movs	r0, #36	@ 0x24
90010e66:	fb00 3002 	mla	r0, r0, r2, r3
90010e6a:	4770      	bx	lr

90010e6c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90010e6c:	6803      	ldr	r3, [r0, #0]
90010e6e:	691b      	ldr	r3, [r3, #16]
90010e70:	4718      	bx	r3

90010e72 <_ZN8touchgfx13DMA_Interface7executeEv>:
90010e72:	2301      	movs	r3, #1
90010e74:	b570      	push	{r4, r5, r6, lr}
90010e76:	7203      	strb	r3, [r0, #8]
90010e78:	4604      	mov	r4, r0
90010e7a:	6840      	ldr	r0, [r0, #4]
90010e7c:	6803      	ldr	r3, [r0, #0]
90010e7e:	699b      	ldr	r3, [r3, #24]
90010e80:	4798      	blx	r3
90010e82:	6803      	ldr	r3, [r0, #0]
90010e84:	4605      	mov	r5, r0
90010e86:	2b40      	cmp	r3, #64	@ 0x40
90010e88:	d00c      	beq.n	90010ea4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010e8a:	d810      	bhi.n	90010eae <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90010e8c:	2b04      	cmp	r3, #4
90010e8e:	d01d      	beq.n	90010ecc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90010e90:	d804      	bhi.n	90010e9c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90010e92:	2b01      	cmp	r3, #1
90010e94:	d006      	beq.n	90010ea4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010e96:	2b02      	cmp	r3, #2
90010e98:	d02c      	beq.n	90010ef4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90010e9a:	bd70      	pop	{r4, r5, r6, pc}
90010e9c:	2b08      	cmp	r3, #8
90010e9e:	d01d      	beq.n	90010edc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90010ea0:	2b20      	cmp	r3, #32
90010ea2:	d1fa      	bne.n	90010e9a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90010ea4:	6823      	ldr	r3, [r4, #0]
90010ea6:	4620      	mov	r0, r4
90010ea8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90010eaa:	4798      	blx	r3
90010eac:	e013      	b.n	90010ed6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90010eae:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90010eb2:	d0f7      	beq.n	90010ea4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010eb4:	d804      	bhi.n	90010ec0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90010eb6:	2b80      	cmp	r3, #128	@ 0x80
90010eb8:	d0f4      	beq.n	90010ea4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010eba:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90010ebe:	e7f0      	b.n	90010ea2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90010ec0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90010ec4:	d0ee      	beq.n	90010ea4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010ec6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90010eca:	e7e5      	b.n	90010e98 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90010ecc:	6823      	ldr	r3, [r4, #0]
90010ece:	7f01      	ldrb	r1, [r0, #28]
90010ed0:	4620      	mov	r0, r4
90010ed2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90010ed4:	4798      	blx	r3
90010ed6:	6823      	ldr	r3, [r4, #0]
90010ed8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010eda:	e006      	b.n	90010eea <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90010edc:	6823      	ldr	r3, [r4, #0]
90010ede:	7f01      	ldrb	r1, [r0, #28]
90010ee0:	4620      	mov	r0, r4
90010ee2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90010ee4:	4798      	blx	r3
90010ee6:	6823      	ldr	r3, [r4, #0]
90010ee8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010eea:	4629      	mov	r1, r5
90010eec:	4620      	mov	r0, r4
90010eee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010ef2:	4718      	bx	r3
90010ef4:	6823      	ldr	r3, [r4, #0]
90010ef6:	4620      	mov	r0, r4
90010ef8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90010efa:	4798      	blx	r3
90010efc:	e7f3      	b.n	90010ee6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90010efe <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90010efe:	4770      	bx	lr

90010f00 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90010f00:	4770      	bx	lr

90010f02 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90010f02:	4770      	bx	lr

90010f04 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90010f04:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90010f08:	b510      	push	{r4, lr}
90010f0a:	1ad2      	subs	r2, r2, r3
90010f0c:	2a00      	cmp	r2, #0
90010f0e:	bfdc      	itt	le
90010f10:	6884      	ldrle	r4, [r0, #8]
90010f12:	1912      	addle	r2, r2, r4
90010f14:	2a01      	cmp	r2, #1
90010f16:	dd16      	ble.n	90010f46 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90010f18:	6842      	ldr	r2, [r0, #4]
90010f1a:	2424      	movs	r4, #36	@ 0x24
90010f1c:	fb04 2303 	mla	r3, r4, r3, r2
90010f20:	f101 0220 	add.w	r2, r1, #32
90010f24:	f851 4b04 	ldr.w	r4, [r1], #4
90010f28:	4291      	cmp	r1, r2
90010f2a:	f843 4b04 	str.w	r4, [r3], #4
90010f2e:	d1f9      	bne.n	90010f24 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90010f30:	780a      	ldrb	r2, [r1, #0]
90010f32:	701a      	strb	r2, [r3, #0]
90010f34:	68c3      	ldr	r3, [r0, #12]
90010f36:	6882      	ldr	r2, [r0, #8]
90010f38:	f3bf 8f5b 	dmb	ish
90010f3c:	3301      	adds	r3, #1
90010f3e:	429a      	cmp	r2, r3
90010f40:	bfd8      	it	le
90010f42:	1a9b      	suble	r3, r3, r2
90010f44:	60c3      	str	r3, [r0, #12]
90010f46:	bd10      	pop	{r4, pc}

90010f48 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90010f48:	6903      	ldr	r3, [r0, #16]
90010f4a:	6882      	ldr	r2, [r0, #8]
90010f4c:	f3bf 8f5b 	dmb	ish
90010f50:	3301      	adds	r3, #1
90010f52:	429a      	cmp	r2, r3
90010f54:	bfd8      	it	le
90010f56:	1a9b      	suble	r3, r3, r2
90010f58:	6103      	str	r3, [r0, #16]
90010f5a:	4770      	bx	lr

90010f5c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90010f5c:	b570      	push	{r4, r5, r6, lr}
90010f5e:	4604      	mov	r4, r0
90010f60:	460e      	mov	r6, r1
90010f62:	6860      	ldr	r0, [r4, #4]
90010f64:	6803      	ldr	r3, [r0, #0]
90010f66:	685b      	ldr	r3, [r3, #4]
90010f68:	4798      	blx	r3
90010f6a:	2800      	cmp	r0, #0
90010f6c:	d1f9      	bne.n	90010f62 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90010f6e:	4d0d      	ldr	r5, [pc, #52]	@ (90010fa4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90010f70:	6828      	ldr	r0, [r5, #0]
90010f72:	6803      	ldr	r3, [r0, #0]
90010f74:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90010f76:	4798      	blx	r3
90010f78:	f7f1 f9fe 	bl	90002378 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90010f7c:	6828      	ldr	r0, [r5, #0]
90010f7e:	2101      	movs	r1, #1
90010f80:	f7ff ff12 	bl	90010da8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010f84:	6860      	ldr	r0, [r4, #4]
90010f86:	4631      	mov	r1, r6
90010f88:	6803      	ldr	r3, [r0, #0]
90010f8a:	689b      	ldr	r3, [r3, #8]
90010f8c:	4798      	blx	r3
90010f8e:	6823      	ldr	r3, [r4, #0]
90010f90:	4620      	mov	r0, r4
90010f92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010f94:	4798      	blx	r3
90010f96:	6828      	ldr	r0, [r5, #0]
90010f98:	6803      	ldr	r3, [r0, #0]
90010f9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010f9e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90010fa0:	4718      	bx	r3
90010fa2:	bf00      	nop
90010fa4:	24021bdc 	.word	0x24021bdc

90010fa8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90010fa8:	b508      	push	{r3, lr}
90010faa:	f7f1 f9d7 	bl	9000235c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010fae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90010fb2:	f7f1 b9db 	b.w	9000236c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90010fb6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90010fb6:	b510      	push	{r4, lr}
90010fb8:	4604      	mov	r4, r0
90010fba:	2114      	movs	r1, #20
90010fbc:	f017 f838 	bl	90028030 <_ZdlPvj>
90010fc0:	4620      	mov	r0, r4
90010fc2:	bd10      	pop	{r4, pc}

90010fc4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90010fc4:	b570      	push	{r4, r5, r6, lr}
90010fc6:	4604      	mov	r4, r0
90010fc8:	6840      	ldr	r0, [r0, #4]
90010fca:	6803      	ldr	r3, [r0, #0]
90010fcc:	681b      	ldr	r3, [r3, #0]
90010fce:	4798      	blx	r3
90010fd0:	4605      	mov	r5, r0
90010fd2:	b930      	cbnz	r0, 90010fe2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010fd4:	7a23      	ldrb	r3, [r4, #8]
90010fd6:	b123      	cbz	r3, 90010fe2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010fd8:	6860      	ldr	r0, [r4, #4]
90010fda:	6803      	ldr	r3, [r0, #0]
90010fdc:	695b      	ldr	r3, [r3, #20]
90010fde:	4798      	blx	r3
90010fe0:	7225      	strb	r5, [r4, #8]
90010fe2:	6860      	ldr	r0, [r4, #4]
90010fe4:	6803      	ldr	r3, [r0, #0]
90010fe6:	681b      	ldr	r3, [r3, #0]
90010fe8:	4798      	blx	r3
90010fea:	b928      	cbnz	r0, 90010ff8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90010fec:	6823      	ldr	r3, [r4, #0]
90010fee:	4620      	mov	r0, r4
90010ff0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010ff2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010ff6:	4718      	bx	r3
90010ff8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010ffc:	f7f1 b9c4 	b.w	90002388 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90011000 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90011000:	b510      	push	{r4, lr}
90011002:	6082      	str	r2, [r0, #8]
90011004:	2200      	movs	r2, #0
90011006:	4c03      	ldr	r4, [pc, #12]	@ (90011014 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90011008:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001100c:	e9c0 4100 	strd	r4, r1, [r0]
90011010:	bd10      	pop	{r4, pc}
90011012:	bf00      	nop
90011014:	9002d680 	.word	0x9002d680

90011018 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90011018:	6840      	ldr	r0, [r0, #4]
9001101a:	6803      	ldr	r3, [r0, #0]
9001101c:	681b      	ldr	r3, [r3, #0]
9001101e:	4718      	bx	r3

90011020 <_ZN8touchgfxL10applyNoiseEiihhh>:
90011020:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90011024:	fb80 0101 	smull	r0, r1, r0, r1
90011028:	4f21      	ldr	r7, [pc, #132]	@ (900110b0 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
9001102a:	461c      	mov	r4, r3
9001102c:	4616      	mov	r6, r2
9001102e:	fba0 bc07 	umull	fp, ip, r0, r7
90011032:	f89d 5018 	ldrb.w	r5, [sp, #24]
90011036:	fb07 cc01 	mla	ip, r7, r1, ip
9001103a:	fbab 010b 	umull	r0, r1, fp, fp
9001103e:	fb0b f70c 	mul.w	r7, fp, ip
90011042:	fb00 f30c 	mul.w	r3, r0, ip
90011046:	eb01 0147 	add.w	r1, r1, r7, lsl #1
9001104a:	fb0b 3301 	mla	r3, fp, r1, r3
9001104e:	fba0 010b 	umull	r0, r1, r0, fp
90011052:	4419      	add	r1, r3
90011054:	a314      	add	r3, pc, #80	@ (adr r3, 900110a8 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90011056:	e9d3 2300 	ldrd	r2, r3, [r3]
9001105a:	f7ef fb4d 	bl	900006f8 <__aeabi_ldivmod>
9001105e:	2ef7      	cmp	r6, #247	@ 0xf7
90011060:	b290      	uxth	r0, r2
90011062:	bf9e      	ittt	ls
90011064:	f002 0207 	andls.w	r2, r2, #7
90011068:	18b6      	addls	r6, r6, r2
9001106a:	b2f6      	uxtbls	r6, r6
9001106c:	2cfb      	cmp	r4, #251	@ 0xfb
9001106e:	bf9e      	ittt	ls
90011070:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
90011074:	18e4      	addls	r4, r4, r3
90011076:	b2e4      	uxtbls	r4, r4
90011078:	2df7      	cmp	r5, #247	@ 0xf7
9001107a:	bf98      	it	ls
9001107c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90011080:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90011084:	bf98      	it	ls
90011086:	182d      	addls	r5, r5, r0
90011088:	480a      	ldr	r0, [pc, #40]	@ (900110b4 <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
9001108a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001108e:	ea00 2006 	and.w	r0, r0, r6, lsl #8
90011092:	bf98      	it	ls
90011094:	b2ed      	uxtbls	r5, r5
90011096:	4304      	orrs	r4, r0
90011098:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
9001109c:	b280      	uxth	r0, r0
9001109e:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900110a2:	bf00      	nop
900110a4:	f3af 8000 	nop.w
900110a8:	797a8d77 	.word	0x797a8d77
900110ac:	00000000 	.word	0x00000000
900110b0:	00ec4ba7 	.word	0x00ec4ba7
900110b4:	fffff800 	.word	0xfffff800

900110b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
900110b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900110bc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900110c0:	4605      	mov	r5, r0
900110c2:	ed2d 8b02 	vpush	{d8}
900110c6:	b087      	sub	sp, #28
900110c8:	7c41      	ldrb	r1, [r0, #17]
900110ca:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
900110ce:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
900110d2:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
900110d6:	2900      	cmp	r1, #0
900110d8:	f000 809a 	beq.w	90011210 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
900110dc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900110e0:	ed90 7a08 	vldr	s14, [r0, #32]
900110e4:	454a      	cmp	r2, r9
900110e6:	68c0      	ldr	r0, [r0, #12]
900110e8:	db25      	blt.n	90011136 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
900110ea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900110ee:	f640 72fc 	movw	r2, #4092	@ 0xffc
900110f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900110f6:	bfc8      	it	gt
900110f8:	2200      	movgt	r2, #0
900110fa:	5882      	ldr	r2, [r0, r2]
900110fc:	2100      	movs	r1, #0
900110fe:	ea4f 2812 	mov.w	r8, r2, lsr #8
90011102:	7c2d      	ldrb	r5, [r5, #16]
90011104:	0950      	lsrs	r0, r2, #5
90011106:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
9001110a:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
9001110e:	eb04 0746 	add.w	r7, r4, r6, lsl #1
90011112:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90011116:	2d00      	cmp	r5, #0
90011118:	d044      	beq.n	900111a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
9001111a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001111e:	d141      	bne.n	900111a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011120:	bb61      	cbnz	r1, 9001117c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
90011122:	ea4e 0000 	orr.w	r0, lr, r0
90011126:	ea4c 0500 	orr.w	r5, ip, r0
9001112a:	42bc      	cmp	r4, r7
9001112c:	f080 8214 	bcs.w	90011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011130:	f824 5b02 	strh.w	r5, [r4], #2
90011134:	e7f9      	b.n	9001112a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
90011136:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
9001113a:	454f      	cmp	r7, r9
9001113c:	dc08      	bgt.n	90011150 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
9001113e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011142:	f640 72fc 	movw	r2, #4092	@ 0xffc
90011146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001114a:	bfd8      	it	le
9001114c:	2200      	movle	r2, #0
9001114e:	e7d4      	b.n	900110fa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90011150:	eba9 0202 	sub.w	r2, r9, r2
90011154:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011158:	ee07 2a90 	vmov	s15, r2
9001115c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011160:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011164:	ee67 7a87 	vmul.f32	s15, s15, s14
90011168:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001116c:	ee17 2a90 	vmov	r2, s15
90011170:	bfd8      	it	le
90011172:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
90011176:	0092      	lsls	r2, r2, #2
90011178:	5882      	ldr	r2, [r0, r2]
9001117a:	e7c0      	b.n	900110fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
9001117c:	b2d5      	uxtb	r5, r2
9001117e:	f3c2 4a07 	ubfx	sl, r2, #16, #8
90011182:	fa5f f888 	uxtb.w	r8, r8
90011186:	461e      	mov	r6, r3
90011188:	42bc      	cmp	r4, r7
9001118a:	f080 81e5 	bcs.w	90011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001118e:	4630      	mov	r0, r6
90011190:	9500      	str	r5, [sp, #0]
90011192:	4643      	mov	r3, r8
90011194:	4652      	mov	r2, sl
90011196:	4649      	mov	r1, r9
90011198:	3601      	adds	r6, #1
9001119a:	f7ff ff41 	bl	90011020 <_ZN8touchgfxL10applyNoiseEiihhh>
9001119e:	f824 0b02 	strh.w	r0, [r4], #2
900111a2:	e7f1      	b.n	90011188 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900111a4:	0e12      	lsrs	r2, r2, #24
900111a6:	26ff      	movs	r6, #255	@ 0xff
900111a8:	fb02 f20a 	mul.w	r2, r2, sl
900111ac:	1c53      	adds	r3, r2, #1
900111ae:	eb03 2222 	add.w	r2, r3, r2, asr #8
900111b2:	1212      	asrs	r2, r2, #8
900111b4:	fb02 f50c 	mul.w	r5, r2, ip
900111b8:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 9001156c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900111bc:	fb02 f10e 	mul.w	r1, r2, lr
900111c0:	4350      	muls	r0, r2
900111c2:	43d2      	mvns	r2, r2
900111c4:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900111c8:	42bc      	cmp	r4, r7
900111ca:	f080 81c5 	bcs.w	90011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900111ce:	f8b4 e000 	ldrh.w	lr, [r4]
900111d2:	ea0e 030c 	and.w	r3, lr, ip
900111d6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
900111da:	f00e 0e1f 	and.w	lr, lr, #31
900111de:	fb02 1303 	mla	r3, r2, r3, r1
900111e2:	fb02 0808 	mla	r8, r2, r8, r0
900111e6:	fb02 5e0e 	mla	lr, r2, lr, r5
900111ea:	fb93 f3f6 	sdiv	r3, r3, r6
900111ee:	fb98 f8f6 	sdiv	r8, r8, r6
900111f2:	fb9e fef6 	sdiv	lr, lr, r6
900111f6:	ea03 030c 	and.w	r3, r3, ip
900111fa:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900111fe:	f00e 0e1f 	and.w	lr, lr, #31
90011202:	ea43 0308 	orr.w	r3, r3, r8
90011206:	ea43 030e 	orr.w	r3, r3, lr
9001120a:	f824 3b02 	strh.w	r3, [r4], #2
9001120e:	e7db      	b.n	900111c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90011210:	7c82      	ldrb	r2, [r0, #18]
90011212:	2a00      	cmp	r2, #0
90011214:	d04f      	beq.n	900112b6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
90011216:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001121a:	ee07 2a90 	vmov	s15, r2
9001121e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011222:	ee07 3a10 	vmov	s14, r3
90011226:	461f      	mov	r7, r3
90011228:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9001122c:	eef4 6ae7 	vcmpe.f32	s13, s15
90011230:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011234:	f200 8095 	bhi.w	90011362 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90011238:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001123c:	f640 71fc 	movw	r1, #4092	@ 0xffc
90011240:	68ea      	ldr	r2, [r5, #12]
90011242:	f895 c010 	ldrb.w	ip, [r5, #16]
90011246:	ee37 7a87 	vadd.f32	s14, s15, s14
9001124a:	ee37 7a66 	vsub.f32	s14, s14, s13
9001124e:	ee06 6a90 	vmov	s13, r6
90011252:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90011256:	eeb4 7ae6 	vcmpe.f32	s14, s13
9001125a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001125e:	bf4a      	itet	mi
90011260:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
90011264:	9602      	strpl	r6, [sp, #8]
90011266:	ed8d 7a02 	vstrmi	s14, [sp, #8]
9001126a:	ed95 7a08 	vldr	s14, [r5, #32]
9001126e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011276:	bfc8      	it	gt
90011278:	2100      	movgt	r1, #0
9001127a:	5852      	ldr	r2, [r2, r1]
9001127c:	9902      	ldr	r1, [sp, #8]
9001127e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90011282:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90011286:	0950      	lsrs	r0, r2, #5
90011288:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001128c:	9103      	str	r1, [sp, #12]
9001128e:	f3c2 01c4 	ubfx	r1, r2, #3, #5
90011292:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90011296:	f1bc 0f00 	cmp.w	ip, #0
9001129a:	d024      	beq.n	900112e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
9001129c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900112a0:	d121      	bne.n	900112e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900112a2:	ea4b 0b00 	orr.w	fp, fp, r0
900112a6:	ea41 010b 	orr.w	r1, r1, fp
900112aa:	9a03      	ldr	r2, [sp, #12]
900112ac:	4294      	cmp	r4, r2
900112ae:	d255      	bcs.n	9001135c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900112b0:	f824 1b02 	strh.w	r1, [r4], #2
900112b4:	e7f9      	b.n	900112aa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900112b6:	ee07 9a10 	vmov	s14, r9
900112ba:	edd0 7a06 	vldr	s15, [r0, #24]
900112be:	edd0 6a05 	vldr	s13, [r0, #20]
900112c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900112c6:	ee37 7a67 	vsub.f32	s14, s14, s15
900112ca:	eec7 7a26 	vdiv.f32	s15, s14, s13
900112ce:	ed90 7a08 	vldr	s14, [r0, #32]
900112d2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900112d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900112da:	bf44      	itt	mi
900112dc:	ed90 7a07 	vldrmi	s14, [r0, #28]
900112e0:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
900112e4:	e79d      	b.n	90011222 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
900112e6:	0e12      	lsrs	r2, r2, #24
900112e8:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 9001156c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900112ec:	f04f 0eff 	mov.w	lr, #255	@ 0xff
900112f0:	fb02 f20a 	mul.w	r2, r2, sl
900112f4:	f102 0c01 	add.w	ip, r2, #1
900112f8:	eb0c 2222 	add.w	r2, ip, r2, asr #8
900112fc:	1212      	asrs	r2, r2, #8
900112fe:	4350      	muls	r0, r2
90011300:	4351      	muls	r1, r2
90011302:	fb02 fb0b 	mul.w	fp, r2, fp
90011306:	43d2      	mvns	r2, r2
90011308:	9004      	str	r0, [sp, #16]
9001130a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001130e:	9105      	str	r1, [sp, #20]
90011310:	9903      	ldr	r1, [sp, #12]
90011312:	428c      	cmp	r4, r1
90011314:	d222      	bcs.n	9001135c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90011316:	8820      	ldrh	r0, [r4, #0]
90011318:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
9001131c:	ea00 0c08 	and.w	ip, r0, r8
90011320:	460f      	mov	r7, r1
90011322:	9904      	ldr	r1, [sp, #16]
90011324:	fb02 bc0c 	mla	ip, r2, ip, fp
90011328:	fb02 1107 	mla	r1, r2, r7, r1
9001132c:	fb9c fcfe 	sdiv	ip, ip, lr
90011330:	fb91 f1fe 	sdiv	r1, r1, lr
90011334:	ea0c 0c08 	and.w	ip, ip, r8
90011338:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001133c:	ea4c 0101 	orr.w	r1, ip, r1
90011340:	f000 0c1f 	and.w	ip, r0, #31
90011344:	9805      	ldr	r0, [sp, #20]
90011346:	fb02 0c0c 	mla	ip, r2, ip, r0
9001134a:	fb9c fcfe 	sdiv	ip, ip, lr
9001134e:	f00c 0c1f 	and.w	ip, ip, #31
90011352:	ea41 010c 	orr.w	r1, r1, ip
90011356:	f824 1b02 	strh.w	r1, [r4], #2
9001135a:	e7d9      	b.n	90011310 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
9001135c:	9a02      	ldr	r2, [sp, #8]
9001135e:	441a      	add	r2, r3
90011360:	4617      	mov	r7, r2
90011362:	441e      	add	r6, r3
90011364:	b236      	sxth	r6, r6
90011366:	42be      	cmp	r6, r7
90011368:	f340 80f6 	ble.w	90011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001136c:	ed95 7a07 	vldr	s14, [r5, #28]
90011370:	ee06 7a90 	vmov	s13, r7
90011374:	ee37 7a87 	vadd.f32	s14, s15, s14
90011378:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001137c:	eeb4 7ae6 	vcmpe.f32	s14, s13
90011380:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011384:	f340 80b2 	ble.w	900114ec <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90011388:	ee06 6a10 	vmov	s12, r6
9001138c:	ee76 7ae7 	vsub.f32	s15, s13, s15
90011390:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 90011564 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
90011394:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90011398:	7c2b      	ldrb	r3, [r5, #16]
9001139a:	eeb4 7ac6 	vcmpe.f32	s14, s12
9001139e:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90011568 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
900113a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900113a6:	bfd6      	itet	le
900113a8:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
900113ac:	46b0      	movgt	r8, r6
900113ae:	ee17 8a10 	vmovle	r8, s14
900113b2:	ed95 7a08 	vldr	s14, [r5, #32]
900113b6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900113ba:	eba8 0707 	sub.w	r7, r8, r7
900113be:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900113c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900113c6:	fe38 8a06 	vselgt.f32	s16, s16, s12
900113ca:	eea7 8a27 	vfma.f32	s16, s14, s15
900113ce:	b1db      	cbz	r3, 90011408 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900113d0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900113d4:	d118      	bne.n	90011408 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900113d6:	42bc      	cmp	r4, r7
900113d8:	d262      	bcs.n	900114a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
900113da:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900113de:	68eb      	ldr	r3, [r5, #12]
900113e0:	4649      	mov	r1, r9
900113e2:	ee17 0a90 	vmov	r0, s15
900113e6:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
900113ea:	b2d3      	uxtb	r3, r2
900113ec:	9300      	str	r3, [sp, #0]
900113ee:	f3c2 2307 	ubfx	r3, r2, #8, #8
900113f2:	f3c2 4207 	ubfx	r2, r2, #16, #8
900113f6:	f7ff fe13 	bl	90011020 <_ZN8touchgfxL10applyNoiseEiihhh>
900113fa:	f824 0b02 	strh.w	r0, [r4], #2
900113fe:	edd5 7a08 	vldr	s15, [r5, #32]
90011402:	ee38 8a27 	vadd.f32	s16, s16, s15
90011406:	e7e6      	b.n	900113d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90011408:	f8df b160 	ldr.w	fp, [pc, #352]	@ 9001156c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001140c:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90011410:	42bc      	cmp	r4, r7
90011412:	d245      	bcs.n	900114a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011414:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011418:	68eb      	ldr	r3, [r5, #12]
9001141a:	f8b4 e000 	ldrh.w	lr, [r4]
9001141e:	ee17 2a90 	vmov	r2, s15
90011422:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90011426:	0e13      	lsrs	r3, r2, #24
90011428:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
9001142c:	fb03 f30a 	mul.w	r3, r3, sl
90011430:	b289      	uxth	r1, r1
90011432:	1c58      	adds	r0, r3, #1
90011434:	eb00 2023 	add.w	r0, r0, r3, asr #8
90011438:	ea0e 030b 	and.w	r3, lr, fp
9001143c:	1200      	asrs	r0, r0, #8
9001143e:	ea6f 0c00 	mvn.w	ip, r0
90011442:	fa5f fc8c 	uxtb.w	ip, ip
90011446:	fb0c f303 	mul.w	r3, ip, r3
9001144a:	fb00 3101 	mla	r1, r0, r1, r3
9001144e:	fb91 f1f9 	sdiv	r1, r1, r9
90011452:	ea01 030b 	and.w	r3, r1, fp
90011456:	9302      	str	r3, [sp, #8]
90011458:	0953      	lsrs	r3, r2, #5
9001145a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001145e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90011462:	4619      	mov	r1, r3
90011464:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90011468:	f00e 0e1f 	and.w	lr, lr, #31
9001146c:	fb0c f303 	mul.w	r3, ip, r3
90011470:	fb0c fc0e 	mul.w	ip, ip, lr
90011474:	fb00 3301 	mla	r3, r0, r1, r3
90011478:	9902      	ldr	r1, [sp, #8]
9001147a:	fb00 c002 	mla	r0, r0, r2, ip
9001147e:	fb93 f3f9 	sdiv	r3, r3, r9
90011482:	fb90 f0f9 	sdiv	r0, r0, r9
90011486:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001148a:	f000 001f 	and.w	r0, r0, #31
9001148e:	4319      	orrs	r1, r3
90011490:	4301      	orrs	r1, r0
90011492:	f824 1b02 	strh.w	r1, [r4], #2
90011496:	edd5 7a08 	vldr	s15, [r5, #32]
9001149a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001149e:	e7b7      	b.n	90011410 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900114a0:	4546      	cmp	r6, r8
900114a2:	dd59      	ble.n	90011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900114a4:	edd5 7a08 	vldr	s15, [r5, #32]
900114a8:	f640 73fc 	movw	r3, #4092	@ 0xffc
900114ac:	68ea      	ldr	r2, [r5, #12]
900114ae:	eba6 0608 	sub.w	r6, r6, r8
900114b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900114b6:	7c29      	ldrb	r1, [r5, #16]
900114b8:	eb04 0646 	add.w	r6, r4, r6, lsl #1
900114bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900114c0:	bfd8      	it	le
900114c2:	2300      	movle	r3, #0
900114c4:	58d2      	ldr	r2, [r2, r3]
900114c6:	0a10      	lsrs	r0, r2, #8
900114c8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
900114cc:	0953      	lsrs	r3, r2, #5
900114ce:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900114d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900114d6:	b159      	cbz	r1, 900114f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900114d8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900114dc:	d108      	bne.n	900114f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900114de:	4318      	orrs	r0, r3
900114e0:	4338      	orrs	r0, r7
900114e2:	42b4      	cmp	r4, r6
900114e4:	d238      	bcs.n	90011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900114e6:	f824 0b02 	strh.w	r0, [r4], #2
900114ea:	e7fa      	b.n	900114e2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
900114ec:	46b8      	mov	r8, r7
900114ee:	e7d9      	b.n	900114a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
900114f0:	0e12      	lsrs	r2, r2, #24
900114f2:	f8df c078 	ldr.w	ip, [pc, #120]	@ 9001156c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900114f6:	fb02 f10a 	mul.w	r1, r2, sl
900114fa:	1c4a      	adds	r2, r1, #1
900114fc:	eb02 2221 	add.w	r2, r2, r1, asr #8
90011500:	1212      	asrs	r2, r2, #8
90011502:	fb02 f507 	mul.w	r5, r2, r7
90011506:	27ff      	movs	r7, #255	@ 0xff
90011508:	4350      	muls	r0, r2
9001150a:	4353      	muls	r3, r2
9001150c:	43d2      	mvns	r2, r2
9001150e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011512:	42b4      	cmp	r4, r6
90011514:	d220      	bcs.n	90011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011516:	f8b4 e000 	ldrh.w	lr, [r4]
9001151a:	ea0e 010c 	and.w	r1, lr, ip
9001151e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90011522:	f00e 0e1f 	and.w	lr, lr, #31
90011526:	fb02 0101 	mla	r1, r2, r1, r0
9001152a:	fb02 3808 	mla	r8, r2, r8, r3
9001152e:	fb02 5e0e 	mla	lr, r2, lr, r5
90011532:	fb91 f1f7 	sdiv	r1, r1, r7
90011536:	fb98 f8f7 	sdiv	r8, r8, r7
9001153a:	fb9e fef7 	sdiv	lr, lr, r7
9001153e:	ea01 010c 	and.w	r1, r1, ip
90011542:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90011546:	f00e 0e1f 	and.w	lr, lr, #31
9001154a:	ea41 0108 	orr.w	r1, r1, r8
9001154e:	ea41 010e 	orr.w	r1, r1, lr
90011552:	f824 1b02 	strh.w	r1, [r4], #2
90011556:	e7dc      	b.n	90011512 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90011558:	b007      	add	sp, #28
9001155a:	ecbd 8b02 	vpop	{d8}
9001155e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011562:	bf00      	nop
90011564:	00000000 	.word	0x00000000
90011568:	447ffffe 	.word	0x447ffffe
9001156c:	fffff800 	.word	0xfffff800

90011570 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90011570:	4770      	bx	lr

90011572 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
90011572:	4770      	bx	lr

90011574 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
90011574:	b510      	push	{r4, lr}
90011576:	4604      	mov	r4, r0
90011578:	2124      	movs	r1, #36	@ 0x24
9001157a:	f016 fd59 	bl	90028030 <_ZdlPvj>
9001157e:	4620      	mov	r0, r4
90011580:	bd10      	pop	{r4, pc}
	...

90011584 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011584:	094a      	lsrs	r2, r1, #5
90011586:	4b06      	ldr	r3, [pc, #24]	@ (900115a0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90011588:	60c1      	str	r1, [r0, #12]
9001158a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
9001158e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90011592:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90011596:	4313      	orrs	r3, r2
90011598:	4319      	orrs	r1, r3
9001159a:	8201      	strh	r1, [r0, #16]
9001159c:	4770      	bx	lr
9001159e:	bf00      	nop
900115a0:	fffff800 	.word	0xfffff800

900115a4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900115a4:	f1a0 0008 	sub.w	r0, r0, #8
900115a8:	e7ec      	b.n	90011584 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
900115aa:	bf00      	nop

900115ac <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
900115ac:	b508      	push	{r3, lr}
900115ae:	4b05      	ldr	r3, [pc, #20]	@ (900115c4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
900115b0:	6818      	ldr	r0, [r3, #0]
900115b2:	6803      	ldr	r3, [r0, #0]
900115b4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
900115b8:	4798      	blx	r3
900115ba:	1e43      	subs	r3, r0, #1
900115bc:	4258      	negs	r0, r3
900115be:	4158      	adcs	r0, r3
900115c0:	bd08      	pop	{r3, pc}
900115c2:	bf00      	nop
900115c4:	24021bdc 	.word	0x24021bdc

900115c8 <_ZN8touchgfx13PainterRGB565D1Ev>:
900115c8:	4770      	bx	lr

900115ca <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
900115ca:	3808      	subs	r0, #8
900115cc:	4770      	bx	lr

900115ce <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
900115ce:	b430      	push	{r4, r5}
900115d0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900115d4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
900115d8:	8a02      	ldrh	r2, [r0, #16]
900115da:	f89d 3010 	ldrb.w	r3, [sp, #16]
900115de:	4629      	mov	r1, r5
900115e0:	9202      	str	r2, [sp, #8]
900115e2:	68c2      	ldr	r2, [r0, #12]
900115e4:	4620      	mov	r0, r4
900115e6:	bc30      	pop	{r4, r5}
900115e8:	f7f1 b9c4 	b.w	90002974 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

900115ec <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
900115ec:	f7f1 b99e 	b.w	9000292c <_ZN8touchgfx5paint8tearDownEv>

900115f0 <_ZN8touchgfx13PainterRGB565D0Ev>:
900115f0:	b510      	push	{r4, lr}
900115f2:	4604      	mov	r4, r0
900115f4:	2114      	movs	r1, #20
900115f6:	f016 fd1b 	bl	90028030 <_ZdlPvj>
900115fa:	4620      	mov	r0, r4
900115fc:	bd10      	pop	{r4, pc}

900115fe <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
900115fe:	f1a0 0008 	sub.w	r0, r0, #8
90011602:	e7f5      	b.n	900115f0 <_ZN8touchgfx13PainterRGB565D0Ev>

90011604 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
90011604:	2300      	movs	r3, #0
90011606:	84c3      	strh	r3, [r0, #38]	@ 0x26
90011608:	8503      	strh	r3, [r0, #40]	@ 0x28
9001160a:	8543      	strh	r3, [r0, #42]	@ 0x2a
9001160c:	8583      	strh	r3, [r0, #44]	@ 0x2c
9001160e:	6980      	ldr	r0, [r0, #24]
90011610:	b110      	cbz	r0, 90011618 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90011612:	6803      	ldr	r3, [r0, #0]
90011614:	691b      	ldr	r3, [r3, #16]
90011616:	4718      	bx	r3
90011618:	4770      	bx	lr

9001161a <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
9001161a:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
9001161e:	4770      	bx	lr

90011620 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90011620:	b538      	push	{r3, r4, r5, lr}
90011622:	0e0b      	lsrs	r3, r1, #24
90011624:	4604      	mov	r4, r0
90011626:	460d      	mov	r5, r1
90011628:	7783      	strb	r3, [r0, #30]
9001162a:	6803      	ldr	r3, [r0, #0]
9001162c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001162e:	4798      	blx	r3
90011630:	6803      	ldr	r3, [r0, #0]
90011632:	4629      	mov	r1, r5
90011634:	689b      	ldr	r3, [r3, #8]
90011636:	4798      	blx	r3
90011638:	6823      	ldr	r3, [r4, #0]
9001163a:	4620      	mov	r0, r4
9001163c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001163e:	4798      	blx	r3
90011640:	61a0      	str	r0, [r4, #24]
90011642:	bd38      	pop	{r3, r4, r5, pc}

90011644 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90011644:	7741      	strb	r1, [r0, #29]
90011646:	4770      	bx	lr

90011648 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90011648:	b530      	push	{r4, r5, lr}
9001164a:	460d      	mov	r5, r1
9001164c:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90011650:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90011652:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011654:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90011656:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011658:	682b      	ldr	r3, [r5, #0]
9001165a:	6023      	str	r3, [r4, #0]
9001165c:	bd30      	pop	{r4, r5, pc}

9001165e <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
9001165e:	b538      	push	{r3, r4, r5, lr}
90011660:	4604      	mov	r4, r0
90011662:	1d03      	adds	r3, r0, #4
90011664:	6808      	ldr	r0, [r1, #0]
90011666:	2500      	movs	r5, #0
90011668:	6849      	ldr	r1, [r1, #4]
9001166a:	c303      	stmia	r3!, {r0, r1}
9001166c:	6813      	ldr	r3, [r2, #0]
9001166e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
90011672:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
90011676:	6853      	ldr	r3, [r2, #4]
90011678:	61a5      	str	r5, [r4, #24]
9001167a:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
9001167e:	f005 fc95 	bl	90016fac <_ZN8touchgfx9Matrix3x35resetEv>
90011682:	23ff      	movs	r3, #255	@ 0xff
90011684:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90011688:	7763      	strb	r3, [r4, #29]
9001168a:	77a3      	strb	r3, [r4, #30]
9001168c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90011690:	6323      	str	r3, [r4, #48]	@ 0x30
90011692:	2301      	movs	r3, #1
90011694:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90011698:	bd38      	pop	{r3, r4, r5, pc}
	...

9001169c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
9001169c:	ee70 7a41 	vsub.f32	s15, s0, s2
900116a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900116a4:	eef5 7a40 	vcmp.f32	s15, #0.0
900116a8:	4605      	mov	r5, r0
900116aa:	ed2d 8b0a 	vpush	{d8-d12}
900116ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900116b2:	b086      	sub	sp, #24
900116b4:	eeb0 ba40 	vmov.f32	s22, s0
900116b8:	6802      	ldr	r2, [r0, #0]
900116ba:	eef0 ba60 	vmov.f32	s23, s1
900116be:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
900116c2:	eef0 aa41 	vmov.f32	s21, s2
900116c6:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
900116c8:	eeb0 aa61 	vmov.f32	s20, s3
900116cc:	eeb0 ca42 	vmov.f32	s24, s4
900116d0:	eef0 ca62 	vmov.f32	s25, s5
900116d4:	d112      	bne.n	900116fc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900116d6:	ee70 7ae1 	vsub.f32	s15, s1, s3
900116da:	eef5 7a40 	vcmp.f32	s15, #0.0
900116de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900116e2:	d10b      	bne.n	900116fc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900116e4:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
900116e8:	6a92      	ldr	r2, [r2, #40]	@ 0x28
900116ea:	3901      	subs	r1, #1
900116ec:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
900116f0:	b006      	add	sp, #24
900116f2:	ecbd 8b0a 	vpop	{d8-d12}
900116f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900116fa:	4710      	bx	r2
900116fc:	23ff      	movs	r3, #255	@ 0xff
900116fe:	4628      	mov	r0, r5
90011700:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90011704:	77ab      	strb	r3, [r5, #30]
90011706:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90011708:	4798      	blx	r3
9001170a:	eeb0 0a4b 	vmov.f32	s0, s22
9001170e:	eef0 0a6b 	vmov.f32	s1, s23
90011712:	4604      	mov	r4, r0
90011714:	4640      	mov	r0, r8
90011716:	f005 fcf8 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001171a:	eef0 8a40 	vmov.f32	s17, s0
9001171e:	ed8d 0a00 	vstr	s0, [sp]
90011722:	eeb0 0a6a 	vmov.f32	s0, s21
90011726:	eef0 9a60 	vmov.f32	s19, s1
9001172a:	edcd 0a01 	vstr	s1, [sp, #4]
9001172e:	4640      	mov	r0, r8
90011730:	eef0 0a4a 	vmov.f32	s1, s20
90011734:	f005 fce9 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011738:	eef4 8a40 	vcmp.f32	s17, s0
9001173c:	eeb0 8a40 	vmov.f32	s16, s0
90011740:	ed8d 0a02 	vstr	s0, [sp, #8]
90011744:	eeb0 9a60 	vmov.f32	s18, s1
90011748:	edcd 0a03 	vstr	s1, [sp, #12]
9001174c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011750:	eef4 9a60 	vcmp.f32	s19, s1
90011754:	bf0c      	ite	eq
90011756:	2301      	moveq	r3, #1
90011758:	2300      	movne	r3, #0
9001175a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001175e:	eef4 8a40 	vcmp.f32	s17, s0
90011762:	7463      	strb	r3, [r4, #17]
90011764:	bf0c      	ite	eq
90011766:	2301      	moveq	r3, #1
90011768:	2300      	movne	r3, #0
9001176a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001176e:	74a3      	strb	r3, [r4, #18]
90011770:	d024      	beq.n	900117bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90011772:	eef4 9a60 	vcmp.f32	s19, s1
90011776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001177a:	d01f      	beq.n	900117bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
9001177c:	ee3a aa6b 	vsub.f32	s20, s20, s23
90011780:	4640      	mov	r0, r8
90011782:	ee7a aacb 	vsub.f32	s21, s21, s22
90011786:	eeb0 0a4b 	vmov.f32	s0, s22
9001178a:	eeca 7a2c 	vdiv.f32	s15, s20, s25
9001178e:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
90011792:	eef0 0a6b 	vmov.f32	s1, s23
90011796:	eea7 0acc 	vfms.f32	s0, s15, s24
9001179a:	eeec 0a87 	vfma.f32	s1, s25, s14
9001179e:	f005 fcb4 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900117a2:	ed8d 0a04 	vstr	s0, [sp, #16]
900117a6:	ee30 0a68 	vsub.f32	s0, s0, s17
900117aa:	eeb5 0a40 	vcmp.f32	s0, #0.0
900117ae:	edcd 0a05 	vstr	s1, [sp, #20]
900117b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900117b6:	d121      	bne.n	900117fc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x160>
900117b8:	2301      	movs	r3, #1
900117ba:	74a3      	strb	r3, [r4, #18]
900117bc:	7c63      	ldrb	r3, [r4, #17]
900117be:	2b00      	cmp	r3, #0
900117c0:	d051      	beq.n	90011866 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ca>
900117c2:	ee39 7a69 	vsub.f32	s14, s18, s19
900117c6:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 900118bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
900117ca:	eef4 9ac9 	vcmpe.f32	s19, s18
900117ce:	eec6 7a87 	vdiv.f32	s15, s13, s14
900117d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900117d6:	edc4 7a08 	vstr	s15, [r4, #32]
900117da:	eefd 7ac9 	vcvt.s32.f32	s15, s18
900117de:	ee17 3a90 	vmov	r3, s15
900117e2:	eefd 7ae9 	vcvt.s32.f32	s15, s19
900117e6:	b21a      	sxth	r2, r3
900117e8:	ee17 3a90 	vmov	r3, s15
900117ec:	bf48      	it	mi
900117ee:	8122      	strhmi	r2, [r4, #8]
900117f0:	b21b      	sxth	r3, r3
900117f2:	bf56      	itet	pl
900117f4:	80e2      	strhpl	r2, [r4, #6]
900117f6:	80e3      	strhmi	r3, [r4, #6]
900117f8:	8123      	strhpl	r3, [r4, #8]
900117fa:	e02c      	b.n	90011856 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
900117fc:	ee70 0ae9 	vsub.f32	s1, s1, s19
90011800:	eec0 7a80 	vdiv.f32	s15, s1, s0
90011804:	eef5 7a40 	vcmp.f32	s15, #0.0
90011808:	edc4 7a05 	vstr	s15, [r4, #20]
9001180c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011810:	d102      	bne.n	90011818 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17c>
90011812:	2301      	movs	r3, #1
90011814:	7463      	strb	r3, [r4, #17]
90011816:	e7d1      	b.n	900117bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90011818:	eeb0 7a69 	vmov.f32	s14, s19
9001181c:	ee39 9a69 	vsub.f32	s18, s18, s19
90011820:	ee38 8a68 	vsub.f32	s16, s16, s17
90011824:	eea8 7ae7 	vfms.f32	s14, s17, s15
90011828:	ed84 7a06 	vstr	s14, [r4, #24]
9001182c:	ee89 7a27 	vdiv.f32	s14, s18, s15
90011830:	ee38 8a47 	vsub.f32	s16, s16, s14
90011834:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 900118c0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x224>
90011838:	eec7 7a08 	vdiv.f32	s15, s14, s16
9001183c:	ed84 8a07 	vstr	s16, [r4, #28]
90011840:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90011844:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011848:	edc4 7a08 	vstr	s15, [r4, #32]
9001184c:	d503      	bpl.n	90011856 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
9001184e:	eeb1 8a48 	vneg.f32	s16, s16
90011852:	ed84 8a07 	vstr	s16, [r4, #28]
90011856:	60e7      	str	r7, [r4, #12]
90011858:	7426      	strb	r6, [r4, #16]
9001185a:	61ac      	str	r4, [r5, #24]
9001185c:	b006      	add	sp, #24
9001185e:	ecbd 8b0a 	vpop	{d8-d12}
90011862:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011866:	7ca3      	ldrb	r3, [r4, #18]
90011868:	2b00      	cmp	r3, #0
9001186a:	d0f4      	beq.n	90011856 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
9001186c:	ee38 7a68 	vsub.f32	s14, s16, s17
90011870:	eddf 6a12 	vldr	s13, [pc, #72]	@ 900118bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90011874:	eef4 8ac8 	vcmpe.f32	s17, s16
90011878:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001187c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011880:	edc4 7a08 	vstr	s15, [r4, #32]
90011884:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011888:	ee17 3a90 	vmov	r3, s15
9001188c:	eefd 7ae8 	vcvt.s32.f32	s15, s17
90011890:	b21a      	sxth	r2, r3
90011892:	ee17 3a90 	vmov	r3, s15
90011896:	bf48      	it	mi
90011898:	8122      	strhmi	r2, [r4, #8]
9001189a:	b21b      	sxth	r3, r3
9001189c:	bf56      	itet	pl
9001189e:	80e2      	strhpl	r2, [r4, #6]
900118a0:	80e3      	strhmi	r3, [r4, #6]
900118a2:	8123      	strhpl	r3, [r4, #8]
900118a4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900118a8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
900118ac:	1a9b      	subs	r3, r3, r2
900118ae:	ee07 3a90 	vmov	s15, r3
900118b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900118b6:	edc4 7a07 	vstr	s15, [r4, #28]
900118ba:	e7cc      	b.n	90011856 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
900118bc:	447ffffe 	.word	0x447ffffe
900118c0:	44800000 	.word	0x44800000

900118c4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
900118c4:	b510      	push	{r4, lr}
900118c6:	ed2d 8b02 	vpush	{d8}
900118ca:	eef0 8a62 	vmov.f32	s17, s5
900118ce:	2100      	movs	r1, #0
900118d0:	4604      	mov	r4, r0
900118d2:	eeb0 8a42 	vmov.f32	s16, s4
900118d6:	f016 f91d 	bl	90027b14 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
900118da:	eef0 7a68 	vmov.f32	s15, s17
900118de:	6823      	ldr	r3, [r4, #0]
900118e0:	4620      	mov	r0, r4
900118e2:	689b      	ldr	r3, [r3, #8]
900118e4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900118e8:	ee17 2a90 	vmov	r2, s15
900118ec:	eef0 7a48 	vmov.f32	s15, s16
900118f0:	ecbd 8b02 	vpop	{d8}
900118f4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900118f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900118fc:	ee17 1a90 	vmov	r1, s15
90011900:	4718      	bx	r3

90011902 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90011902:	b510      	push	{r4, lr}
90011904:	ed2d 8b02 	vpush	{d8}
90011908:	eef0 8a63 	vmov.f32	s17, s7
9001190c:	2100      	movs	r1, #0
9001190e:	4604      	mov	r4, r0
90011910:	eeb0 8a43 	vmov.f32	s16, s6
90011914:	f016 f9c0 	bl	90027c98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90011918:	eef0 7a68 	vmov.f32	s15, s17
9001191c:	6823      	ldr	r3, [r4, #0]
9001191e:	4620      	mov	r0, r4
90011920:	689b      	ldr	r3, [r3, #8]
90011922:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011926:	ee17 2a90 	vmov	r2, s15
9001192a:	eef0 7a48 	vmov.f32	s15, s16
9001192e:	ecbd 8b02 	vpop	{d8}
90011932:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011936:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001193a:	ee17 1a90 	vmov	r1, s15
9001193e:	4718      	bx	r3

90011940 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90011940:	b513      	push	{r0, r1, r4, lr}
90011942:	4604      	mov	r4, r0
90011944:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011946:	f005 fbe0 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001194a:	eef0 7a60 	vmov.f32	s15, s1
9001194e:	4620      	mov	r0, r4
90011950:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011954:	ee17 2a90 	vmov	r2, s15
90011958:	eef0 7a40 	vmov.f32	s15, s0
9001195c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011960:	ee17 1a90 	vmov	r1, s15
90011964:	b002      	add	sp, #8
90011966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001196a:	f016 b82d 	b.w	900279c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
9001196e:	b513      	push	{r0, r1, r4, lr}
90011970:	4604      	mov	r4, r0
90011972:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011974:	f005 fbc9 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011978:	eef0 7a60 	vmov.f32	s15, s1
9001197c:	4620      	mov	r0, r4
9001197e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011982:	ee17 2a90 	vmov	r2, s15
90011986:	eef0 7a40 	vmov.f32	s15, s0
9001198a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001198e:	ee17 1a90 	vmov	r1, s15
90011992:	b002      	add	sp, #8
90011994:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011998:	f016 b863 	b.w	90027a62 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

9001199c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
9001199c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001199e:	2400      	movs	r4, #0
900119a0:	9f07      	ldr	r7, [sp, #28]
900119a2:	f04f 0e01 	mov.w	lr, #1
900119a6:	4626      	mov	r6, r4
900119a8:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
900119ac:	4463      	add	r3, ip
900119ae:	4563      	cmp	r3, ip
900119b0:	d02d      	beq.n	90011a0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
900119b2:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
900119b6:	2d06      	cmp	r5, #6
900119b8:	d8f9      	bhi.n	900119ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900119ba:	fa0e f505 	lsl.w	r5, lr, r5
900119be:	f015 0f66 	tst.w	r5, #102	@ 0x66
900119c2:	d10d      	bne.n	900119e0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
900119c4:	f015 0f10 	tst.w	r5, #16
900119c8:	d117      	bne.n	900119fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
900119ca:	072d      	lsls	r5, r5, #28
900119cc:	d5ef      	bpl.n	900119ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900119ce:	3801      	subs	r0, #1
900119d0:	b91e      	cbnz	r6, 900119da <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
900119d2:	eb07 0580 	add.w	r5, r7, r0, lsl #2
900119d6:	682d      	ldr	r5, [r5, #0]
900119d8:	600d      	str	r5, [r1, #0]
900119da:	b96c      	cbnz	r4, 900119f8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
900119dc:	2601      	movs	r6, #1
900119de:	e7e6      	b.n	900119ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900119e0:	b926      	cbnz	r6, 900119ec <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
900119e2:	eb07 0380 	add.w	r3, r7, r0, lsl #2
900119e6:	f853 3c08 	ldr.w	r3, [r3, #-8]
900119ea:	600b      	str	r3, [r1, #0]
900119ec:	b924      	cbnz	r4, 900119f8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
900119ee:	eb07 0080 	add.w	r0, r7, r0, lsl #2
900119f2:	f850 3c04 	ldr.w	r3, [r0, #-4]
900119f6:	6013      	str	r3, [r2, #0]
900119f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900119fa:	3801      	subs	r0, #1
900119fc:	b91c      	cbnz	r4, 90011a06 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
900119fe:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90011a02:	6824      	ldr	r4, [r4, #0]
90011a04:	6014      	str	r4, [r2, #0]
90011a06:	2e00      	cmp	r6, #0
90011a08:	d1f6      	bne.n	900119f8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011a0a:	2401      	movs	r4, #1
90011a0c:	e7cf      	b.n	900119ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011a0e:	b90e      	cbnz	r6, 90011a14 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90011a10:	2300      	movs	r3, #0
90011a12:	600b      	str	r3, [r1, #0]
90011a14:	2c00      	cmp	r4, #0
90011a16:	d1ef      	bne.n	900119f8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011a18:	2300      	movs	r3, #0
90011a1a:	e7ec      	b.n	900119f6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90011a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90011a1c:	b538      	push	{r3, r4, r5, lr}
90011a1e:	ed2d 8b0a 	vpush	{d8-d12}
90011a22:	eef0 ba40 	vmov.f32	s23, s0
90011a26:	4604      	mov	r4, r0
90011a28:	eeb0 ca60 	vmov.f32	s24, s1
90011a2c:	460d      	mov	r5, r1
90011a2e:	eef0 aa41 	vmov.f32	s21, s2
90011a32:	eeb0 ba61 	vmov.f32	s22, s3
90011a36:	eeb0 9a42 	vmov.f32	s18, s4
90011a3a:	eef0 9a62 	vmov.f32	s19, s5
90011a3e:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90011a42:	ee7b 8a29 	vadd.f32	s17, s22, s19
90011a46:	ee3a 8a89 	vadd.f32	s16, s21, s18
90011a4a:	ee68 8a8a 	vmul.f32	s17, s17, s20
90011a4e:	ee28 8a0a 	vmul.f32	s16, s16, s20
90011a52:	ee3c 0a68 	vsub.f32	s0, s24, s17
90011a56:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90011a5a:	ee20 0a00 	vmul.f32	s0, s0, s0
90011a5e:	eea7 0aa7 	vfma.f32	s0, s15, s15
90011a62:	f016 fb0f 	bl	90028084 <sqrtf>
90011a66:	eeb5 0a40 	vcmp.f32	s0, #0.0
90011a6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a6e:	d12e      	bne.n	90011ace <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90011a70:	ee79 7a6a 	vsub.f32	s15, s18, s21
90011a74:	ee39 7acb 	vsub.f32	s14, s19, s22
90011a78:	eeb0 8a6a 	vmov.f32	s16, s21
90011a7c:	eef0 8a4b 	vmov.f32	s17, s22
90011a80:	eea7 8a8a 	vfma.f32	s16, s15, s20
90011a84:	eee7 8a0a 	vfma.f32	s17, s14, s20
90011a88:	eea7 8a0a 	vfma.f32	s16, s14, s20
90011a8c:	eee7 8aca 	vfms.f32	s17, s15, s20
90011a90:	2d02      	cmp	r5, #2
90011a92:	dc2f      	bgt.n	90011af4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90011a94:	3501      	adds	r5, #1
90011a96:	eef0 1a4b 	vmov.f32	s3, s22
90011a9a:	eeb0 1a6a 	vmov.f32	s2, s21
90011a9e:	4620      	mov	r0, r4
90011aa0:	4629      	mov	r1, r5
90011aa2:	eef0 2a68 	vmov.f32	s5, s17
90011aa6:	eeb0 2a48 	vmov.f32	s4, s16
90011aaa:	eef0 0a4c 	vmov.f32	s1, s24
90011aae:	eeb0 0a6b 	vmov.f32	s0, s23
90011ab2:	f7ff ffb3 	bl	90011a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90011ab6:	eef0 0a68 	vmov.f32	s1, s17
90011aba:	eeb0 0a48 	vmov.f32	s0, s16
90011abe:	4620      	mov	r0, r4
90011ac0:	f7ff ff55 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011ac4:	eeb0 ba68 	vmov.f32	s22, s17
90011ac8:	eef0 aa48 	vmov.f32	s21, s16
90011acc:	e7b9      	b.n	90011a42 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90011ace:	ee38 8a6b 	vsub.f32	s16, s16, s23
90011ad2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90011ad6:	ee78 8acc 	vsub.f32	s17, s17, s24
90011ada:	ee28 7a27 	vmul.f32	s14, s16, s15
90011ade:	ee68 7aa7 	vmul.f32	s15, s17, s15
90011ae2:	ee87 8a00 	vdiv.f32	s16, s14, s0
90011ae6:	eec7 8a80 	vdiv.f32	s17, s15, s0
90011aea:	ee3b 8a88 	vadd.f32	s16, s23, s16
90011aee:	ee7c 8a28 	vadd.f32	s17, s24, s17
90011af2:	e7cd      	b.n	90011a90 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90011af4:	eef0 0a68 	vmov.f32	s1, s17
90011af8:	4620      	mov	r0, r4
90011afa:	eeb0 0a48 	vmov.f32	s0, s16
90011afe:	f7ff ff36 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011b02:	ecbd 8b0a 	vpop	{d8-d12}
90011b06:	bd38      	pop	{r3, r4, r5, pc}

90011b08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90011b08:	b510      	push	{r4, lr}
90011b0a:	ed2d 8b0a 	vpush	{d8-d12}
90011b0e:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90011b12:	4604      	mov	r4, r0
90011b14:	eeb0 ca40 	vmov.f32	s24, s0
90011b18:	2b02      	cmp	r3, #2
90011b1a:	eeb0 9a60 	vmov.f32	s18, s1
90011b1e:	eef0 9a41 	vmov.f32	s19, s2
90011b22:	eef0 8a61 	vmov.f32	s17, s3
90011b26:	eeb0 ba42 	vmov.f32	s22, s4
90011b2a:	eef0 ba62 	vmov.f32	s23, s5
90011b2e:	eeb0 aa43 	vmov.f32	s20, s6
90011b32:	eef0 aa63 	vmov.f32	s21, s7
90011b36:	eeb0 8a44 	vmov.f32	s16, s8
90011b3a:	eef0 ca64 	vmov.f32	s25, s9
90011b3e:	d12c      	bne.n	90011b9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90011b40:	eef0 0a62 	vmov.f32	s1, s5
90011b44:	eeb0 0a42 	vmov.f32	s0, s4
90011b48:	f7ff ff11 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011b4c:	ee79 9acb 	vsub.f32	s19, s19, s22
90011b50:	ee7a caec 	vsub.f32	s25, s21, s25
90011b54:	ee78 8aeb 	vsub.f32	s17, s17, s23
90011b58:	ee3a 8a48 	vsub.f32	s16, s20, s16
90011b5c:	ee69 9aac 	vmul.f32	s19, s19, s25
90011b60:	ee28 8a88 	vmul.f32	s16, s17, s16
90011b64:	eef4 9ac8 	vcmpe.f32	s19, s16
90011b68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011b6c:	db0f      	blt.n	90011b8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
90011b6e:	2101      	movs	r1, #1
90011b70:	eef0 2a6a 	vmov.f32	s5, s21
90011b74:	eeb0 2a4a 	vmov.f32	s4, s20
90011b78:	4620      	mov	r0, r4
90011b7a:	eef0 1a6b 	vmov.f32	s3, s23
90011b7e:	eeb0 1a4b 	vmov.f32	s2, s22
90011b82:	eef0 0a49 	vmov.f32	s1, s18
90011b86:	eeb0 0a4c 	vmov.f32	s0, s24
90011b8a:	f7ff ff47 	bl	90011a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90011b8e:	eef0 0a6a 	vmov.f32	s1, s21
90011b92:	4620      	mov	r0, r4
90011b94:	eeb0 0a4a 	vmov.f32	s0, s20
90011b98:	e035      	b.n	90011c06 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
90011b9a:	2b01      	cmp	r3, #1
90011b9c:	d138      	bne.n	90011c10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011b9e:	ee31 4ae2 	vsub.f32	s8, s3, s5
90011ba2:	ee33 6a48 	vsub.f32	s12, s6, s16
90011ba6:	ee71 7a42 	vsub.f32	s15, s2, s4
90011baa:	ee73 6ae4 	vsub.f32	s13, s7, s9
90011bae:	ee26 7a44 	vnmul.f32	s14, s12, s8
90011bb2:	eea7 7aa6 	vfma.f32	s14, s15, s13
90011bb6:	eeb5 7a40 	vcmp.f32	s14, #0.0
90011bba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011bbe:	d027      	beq.n	90011c10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011bc0:	ee28 8a63 	vnmul.f32	s16, s16, s7
90011bc4:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90011bc8:	eea4 8a83 	vfma.f32	s16, s9, s6
90011bcc:	eee1 8a22 	vfma.f32	s17, s2, s5
90011bd0:	ee68 7a67 	vnmul.f32	s15, s16, s15
90011bd4:	ee28 8a44 	vnmul.f32	s16, s16, s8
90011bd8:	eee6 7a28 	vfma.f32	s15, s12, s17
90011bdc:	eea6 8aa8 	vfma.f32	s16, s13, s17
90011be0:	ee87 0a87 	vdiv.f32	s0, s15, s14
90011be4:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90011be8:	eec8 0a07 	vdiv.f32	s1, s16, s14
90011bec:	ee3c ca40 	vsub.f32	s24, s24, s0
90011bf0:	ee39 9a60 	vsub.f32	s18, s18, s1
90011bf4:	ee29 9a09 	vmul.f32	s18, s18, s18
90011bf8:	eeac 9a0c 	vfma.f32	s18, s24, s24
90011bfc:	eef4 7ac9 	vcmpe.f32	s15, s18
90011c00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011c04:	db04      	blt.n	90011c10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011c06:	f7ff feb2 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c0a:	ecbd 8b0a 	vpop	{d8-d12}
90011c0e:	bd10      	pop	{r4, pc}
90011c10:	eef0 0a6b 	vmov.f32	s1, s23
90011c14:	4620      	mov	r0, r4
90011c16:	eeb0 0a4b 	vmov.f32	s0, s22
90011c1a:	f7ff fea8 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c1e:	e7b6      	b.n	90011b8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90011c20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90011c20:	b510      	push	{r4, lr}
90011c22:	ed2d 8b0c 	vpush	{d8-d13}
90011c26:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90011c2a:	4604      	mov	r4, r0
90011c2c:	eeb0 9a40 	vmov.f32	s18, s0
90011c30:	eef0 9a60 	vmov.f32	s19, s1
90011c34:	eef0 aa41 	vmov.f32	s21, s2
90011c38:	eeb0 ba61 	vmov.f32	s22, s3
90011c3c:	b933      	cbnz	r3, 90011c4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90011c3e:	f7ff fe96 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c42:	eef0 0a4b 	vmov.f32	s1, s22
90011c46:	eeb0 0a6a 	vmov.f32	s0, s21
90011c4a:	e015      	b.n	90011c78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90011c4c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90011c50:	2b02      	cmp	r3, #2
90011c52:	ee71 8a40 	vsub.f32	s17, s2, s0
90011c56:	ee31 8ae0 	vsub.f32	s16, s3, s1
90011c5a:	ee68 8aa7 	vmul.f32	s17, s17, s15
90011c5e:	ee28 8a27 	vmul.f32	s16, s16, s15
90011c62:	d10f      	bne.n	90011c84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90011c64:	ee70 0ae8 	vsub.f32	s1, s1, s17
90011c68:	ee30 0a08 	vadd.f32	s0, s0, s16
90011c6c:	f7ff fe7f 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c70:	ee7b 0a68 	vsub.f32	s1, s22, s17
90011c74:	ee3a 0a88 	vadd.f32	s0, s21, s16
90011c78:	4620      	mov	r0, r4
90011c7a:	f7ff fe78 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c7e:	ecbd 8b0c 	vpop	{d8-d13}
90011c82:	bd10      	pop	{r4, pc}
90011c84:	f7ff fe73 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c88:	eef0 0a69 	vmov.f32	s1, s19
90011c8c:	eeb0 0a49 	vmov.f32	s0, s18
90011c90:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90011dc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
90011c94:	eeb1 aa68 	vneg.f32	s20, s17
90011c98:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90011dc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
90011c9c:	eee8 0a27 	vfma.f32	s1, s16, s15
90011ca0:	4620      	mov	r0, r4
90011ca2:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011ca6:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90011dc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
90011caa:	eddf ca48 	vldr	s25, [pc, #288]	@ 90011dcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
90011cae:	ed9f da48 	vldr	s26, [pc, #288]	@ 90011dd0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90011cb2:	eeea 0a2b 	vfma.f32	s1, s20, s23
90011cb6:	eea8 0a2b 	vfma.f32	s0, s16, s23
90011cba:	f7ff fe58 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011cbe:	eef0 0a69 	vmov.f32	s1, s19
90011cc2:	eeb0 0a49 	vmov.f32	s0, s18
90011cc6:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90011dd4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
90011cca:	4620      	mov	r0, r4
90011ccc:	eee8 0a27 	vfma.f32	s1, s16, s15
90011cd0:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011cd4:	eeea 0a0c 	vfma.f32	s1, s20, s24
90011cd8:	eea8 0a0c 	vfma.f32	s0, s16, s24
90011cdc:	f7ff fe47 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011ce0:	eef0 0a69 	vmov.f32	s1, s19
90011ce4:	eeb0 0a49 	vmov.f32	s0, s18
90011ce8:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90011dd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90011cec:	4620      	mov	r0, r4
90011cee:	eee8 0a27 	vfma.f32	s1, s16, s15
90011cf2:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011cf6:	eeea 0a2c 	vfma.f32	s1, s20, s25
90011cfa:	eea8 0a2c 	vfma.f32	s0, s16, s25
90011cfe:	f7ff fe36 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011d02:	eef0 0a69 	vmov.f32	s1, s19
90011d06:	eeb0 0a49 	vmov.f32	s0, s18
90011d0a:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90011ddc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90011d0e:	4620      	mov	r0, r4
90011d10:	eee8 0a27 	vfma.f32	s1, s16, s15
90011d14:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011d18:	eeea 0a0d 	vfma.f32	s1, s20, s26
90011d1c:	eea8 0a0d 	vfma.f32	s0, s16, s26
90011d20:	f7ff fe25 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011d24:	ee79 0a88 	vadd.f32	s1, s19, s16
90011d28:	ee39 0a28 	vadd.f32	s0, s18, s17
90011d2c:	4620      	mov	r0, r4
90011d2e:	ee70 0ae8 	vsub.f32	s1, s1, s17
90011d32:	ee30 0a08 	vadd.f32	s0, s0, s16
90011d36:	f7ff fe1a 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011d3a:	eef0 0a69 	vmov.f32	s1, s19
90011d3e:	eeb0 0a49 	vmov.f32	s0, s18
90011d42:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90011de0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90011d46:	4620      	mov	r0, r4
90011d48:	eee8 0a27 	vfma.f32	s1, s16, s15
90011d4c:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011d50:	eeea 0a0d 	vfma.f32	s1, s20, s26
90011d54:	eea8 0a0d 	vfma.f32	s0, s16, s26
90011d58:	f7ff fe09 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011d5c:	eef0 0a69 	vmov.f32	s1, s19
90011d60:	eeb0 0a49 	vmov.f32	s0, s18
90011d64:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90011de4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90011d68:	4620      	mov	r0, r4
90011d6a:	eee8 0a27 	vfma.f32	s1, s16, s15
90011d6e:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011d72:	eeea 0a2c 	vfma.f32	s1, s20, s25
90011d76:	eea8 0a2c 	vfma.f32	s0, s16, s25
90011d7a:	f7ff fdf8 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011d7e:	eef0 0a69 	vmov.f32	s1, s19
90011d82:	eeb0 0a49 	vmov.f32	s0, s18
90011d86:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90011de8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
90011d8a:	4620      	mov	r0, r4
90011d8c:	eee8 0a27 	vfma.f32	s1, s16, s15
90011d90:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011d94:	eeea 0a0c 	vfma.f32	s1, s20, s24
90011d98:	eea8 0a0c 	vfma.f32	s0, s16, s24
90011d9c:	f7ff fde7 	bl	9001196e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011da0:	eef0 0a69 	vmov.f32	s1, s19
90011da4:	eeb0 0a49 	vmov.f32	s0, s18
90011da8:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90011dec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
90011dac:	4620      	mov	r0, r4
90011dae:	eee8 0a27 	vfma.f32	s1, s16, s15
90011db2:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011db6:	eeea 0a2b 	vfma.f32	s1, s20, s23
90011dba:	eea8 0a2b 	vfma.f32	s0, s16, s23
90011dbe:	e73e      	b.n	90011c3e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90011dc0:	3d23d70a 	.word	0x3d23d70a
90011dc4:	3e8f5c29 	.word	0x3e8f5c29
90011dc8:	3f19999a 	.word	0x3f19999a
90011dcc:	3f4ccccd 	.word	0x3f4ccccd
90011dd0:	3f75c28f 	.word	0x3f75c28f
90011dd4:	3e4ccccd 	.word	0x3e4ccccd
90011dd8:	3ecccccd 	.word	0x3ecccccd
90011ddc:	3f3851ec 	.word	0x3f3851ec
90011de0:	3fa3d70a 	.word	0x3fa3d70a
90011de4:	3fcccccd 	.word	0x3fcccccd
90011de8:	3fe66666 	.word	0x3fe66666
90011dec:	3ffae148 	.word	0x3ffae148

90011df0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90011df0:	b570      	push	{r4, r5, r6, lr}
90011df2:	ed2d 8b06 	vpush	{d8-d10}
90011df6:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90011dfa:	eef0 aa40 	vmov.f32	s21, s0
90011dfe:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90011e02:	4604      	mov	r4, r0
90011e04:	ee30 8ac8 	vsub.f32	s16, s1, s16
90011e08:	ee30 9a49 	vsub.f32	s18, s0, s18
90011e0c:	eeb0 aa60 	vmov.f32	s20, s1
90011e10:	ee28 0a08 	vmul.f32	s0, s16, s16
90011e14:	eea9 0a09 	vfma.f32	s0, s18, s18
90011e18:	f016 f934 	bl	90028084 <sqrtf>
90011e1c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90011e20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e24:	dd36      	ble.n	90011e94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90011e26:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90011e2a:	2600      	movs	r6, #0
90011e2c:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90011e30:	eec0 6a27 	vdiv.f32	s13, s0, s15
90011e34:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90011e38:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90011e3c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90011e40:	eec8 8a26 	vdiv.f32	s17, s16, s13
90011e44:	ee89 8a26 	vdiv.f32	s16, s18, s13
90011e48:	ee70 9a28 	vadd.f32	s19, s0, s17
90011e4c:	ee78 8aaa 	vadd.f32	s17, s17, s21
90011e50:	ee30 9ac8 	vsub.f32	s18, s1, s16
90011e54:	ee3a 8a48 	vsub.f32	s16, s20, s16
90011e58:	b1fd      	cbz	r5, 90011e9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
90011e5a:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90011e5e:	eef0 0a49 	vmov.f32	s1, s18
90011e62:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90011e66:	eeb0 0a69 	vmov.f32	s0, s19
90011e6a:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
90011e6e:	4620      	mov	r0, r4
90011e70:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90011e74:	f7ff fd64 	bl	90011940 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90011e78:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90011e7c:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
90011e80:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
90011e84:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
90011e88:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
90011e8c:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
90011e90:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
90011e94:	ecbd 8b06 	vpop	{d8-d10}
90011e98:	bd70      	pop	{r4, r5, r6, pc}
90011e9a:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
90011e9e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90011ea2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90011ea6:	b16b      	cbz	r3, 90011ec4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
90011ea8:	eef0 1a49 	vmov.f32	s3, s18
90011eac:	4620      	mov	r0, r4
90011eae:	eeb0 1a69 	vmov.f32	s2, s19
90011eb2:	eef0 0a62 	vmov.f32	s1, s5
90011eb6:	eeb0 0a42 	vmov.f32	s0, s4
90011eba:	f7ff feb1 	bl	90011c20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011ebe:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90011ec2:	e7db      	b.n	90011e7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90011ec4:	eef0 4a48 	vmov.f32	s9, s16
90011ec8:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90011ecc:	eeb0 4a68 	vmov.f32	s8, s17
90011ed0:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90011ed4:	eef0 3a49 	vmov.f32	s7, s18
90011ed8:	4620      	mov	r0, r4
90011eda:	eeb0 3a69 	vmov.f32	s6, s19
90011ede:	f7ff fe13 	bl	90011b08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90011ee2:	e7cb      	b.n	90011e7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90011ee4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90011ee4:	ee07 2a90 	vmov	s15, r2
90011ee8:	ee07 1a10 	vmov	s14, r1
90011eec:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90011ef0:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90011f04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90011ef4:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90011ef8:	ee60 0aa7 	vmul.f32	s1, s1, s15
90011efc:	ee20 0a27 	vmul.f32	s0, s0, s15
90011f00:	f7ff bf76 	b.w	90011df0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90011f04:	3d000000 	.word	0x3d000000

90011f08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90011f08:	b538      	push	{r3, r4, r5, lr}
90011f0a:	ed2d 8b02 	vpush	{d8}
90011f0e:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90011f12:	4604      	mov	r4, r0
90011f14:	b31d      	cbz	r5, 90011f5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90011f16:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90011f1a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90011f1e:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90011f22:	ee78 8a67 	vsub.f32	s17, s16, s15
90011f26:	ee38 8a27 	vadd.f32	s16, s16, s15
90011f2a:	eef0 0a68 	vmov.f32	s1, s17
90011f2e:	f7ff fd07 	bl	90011940 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90011f32:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90011f36:	eef0 1a48 	vmov.f32	s3, s16
90011f3a:	4620      	mov	r0, r4
90011f3c:	eeb0 0a41 	vmov.f32	s0, s2
90011f40:	eef0 0a68 	vmov.f32	s1, s17
90011f44:	f7ff fe6c 	bl	90011c20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011f48:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90011f4c:	eef0 1a68 	vmov.f32	s3, s17
90011f50:	4620      	mov	r0, r4
90011f52:	eef0 0a48 	vmov.f32	s1, s16
90011f56:	eeb0 0a41 	vmov.f32	s0, s2
90011f5a:	f7ff fe61 	bl	90011c20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011f5e:	4628      	mov	r0, r5
90011f60:	ecbd 8b02 	vpop	{d8}
90011f64:	bd38      	pop	{r3, r4, r5, pc}

90011f66 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
90011f66:	b510      	push	{r4, lr}
90011f68:	ed2d 8b02 	vpush	{d8}
90011f6c:	4604      	mov	r4, r0
90011f6e:	eeb0 8a40 	vmov.f32	s16, s0
90011f72:	eef0 8a60 	vmov.f32	s17, s1
90011f76:	f7ff ffc7 	bl	90011f08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90011f7a:	b9d0      	cbnz	r0, 90011fb2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
90011f7c:	4620      	mov	r0, r4
90011f7e:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
90011f82:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
90011f86:	eef0 0a68 	vmov.f32	s1, s17
90011f8a:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
90011f8e:	eeb0 0a48 	vmov.f32	s0, s16
90011f92:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
90011f96:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90011f9a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90011f9e:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90011fa2:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90011fa6:	f7ff fdaf 	bl	90011b08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90011faa:	2001      	movs	r0, #1
90011fac:	ecbd 8b02 	vpop	{d8}
90011fb0:	bd10      	pop	{r4, pc}
90011fb2:	2000      	movs	r0, #0
90011fb4:	e7fa      	b.n	90011fac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

90011fb6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
90011fb6:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
90011fba:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
90011fbe:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
90011fc2:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
90011fc6:	f7ff be2b 	b.w	90011c20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90011fcc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90011fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011fd0:	b089      	sub	sp, #36	@ 0x24
90011fd2:	461c      	mov	r4, r3
90011fd4:	4682      	mov	sl, r0
90011fd6:	4615      	mov	r5, r2
90011fd8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90011fdc:	f10d 0820 	add.w	r8, sp, #32
90011fe0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90011fe2:	9304      	str	r3, [sp, #16]
90011fe4:	2300      	movs	r3, #0
90011fe6:	9105      	str	r1, [sp, #20]
90011fe8:	9306      	str	r3, [sp, #24]
90011fea:	f848 3d04 	str.w	r3, [r8, #-4]!
90011fee:	9b04      	ldr	r3, [sp, #16]
90011ff0:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90011ff4:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90011ff8:	9b05      	ldr	r3, [sp, #20]
90011ffa:	429d      	cmp	r5, r3
90011ffc:	d96d      	bls.n	900120da <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90011ffe:	3d01      	subs	r5, #1
90012000:	f819 3005 	ldrb.w	r3, [r9, r5]
90012004:	2b06      	cmp	r3, #6
90012006:	d8f7      	bhi.n	90011ff8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012008:	a201      	add	r2, pc, #4	@ (adr r2, 90012010 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
9001200a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9001200e:	bf00      	nop
90012010:	9001202f 	.word	0x9001202f
90012014:	90011ff9 	.word	0x90011ff9
90012018:	9001202d 	.word	0x9001202d
9001201c:	90012051 	.word	0x90012051
90012020:	90012051 	.word	0x90012051
90012024:	90012055 	.word	0x90012055
90012028:	90012095 	.word	0x90012095
9001202c:	3c02      	subs	r4, #2
9001202e:	4650      	mov	r0, sl
90012030:	9400      	str	r4, [sp, #0]
90012032:	462b      	mov	r3, r5
90012034:	4642      	mov	r2, r8
90012036:	a906      	add	r1, sp, #24
90012038:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001203c:	f7ff fcae 	bl	9001199c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012040:	eddd 0a07 	vldr	s1, [sp, #28]
90012044:	ed9d 0a06 	vldr	s0, [sp, #24]
90012048:	4630      	mov	r0, r6
9001204a:	f7ff fed1 	bl	90011df0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001204e:	e7d3      	b.n	90011ff8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012050:	3c01      	subs	r4, #1
90012052:	e7ec      	b.n	9001202e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90012054:	f1a4 0b04 	sub.w	fp, r4, #4
90012058:	3c02      	subs	r4, #2
9001205a:	4650      	mov	r0, sl
9001205c:	462b      	mov	r3, r5
9001205e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90012062:	f8cd b000 	str.w	fp, [sp]
90012066:	4642      	mov	r2, r8
90012068:	a906      	add	r1, sp, #24
9001206a:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001206e:	f7ff fc95 	bl	9001199c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012072:	eddd 2a07 	vldr	s5, [sp, #28]
90012076:	ed9d 2a06 	vldr	s4, [sp, #24]
9001207a:	4630      	mov	r0, r6
9001207c:	ed54 1a01 	vldr	s3, [r4, #-4]
90012080:	ed14 1a02 	vldr	s2, [r4, #-8]
90012084:	edd4 0a01 	vldr	s1, [r4, #4]
90012088:	ed94 0a00 	vldr	s0, [r4]
9001208c:	f7ff fc1a 	bl	900118c4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012090:	465c      	mov	r4, fp
90012092:	e7b1      	b.n	90011ff8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012094:	f1a4 0b06 	sub.w	fp, r4, #6
90012098:	3c02      	subs	r4, #2
9001209a:	4650      	mov	r0, sl
9001209c:	462b      	mov	r3, r5
9001209e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900120a2:	f8cd b000 	str.w	fp, [sp]
900120a6:	4642      	mov	r2, r8
900120a8:	a906      	add	r1, sp, #24
900120aa:	e9cd 9701 	strd	r9, r7, [sp, #4]
900120ae:	f7ff fc75 	bl	9001199c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900120b2:	eddd 3a07 	vldr	s7, [sp, #28]
900120b6:	ed9d 3a06 	vldr	s6, [sp, #24]
900120ba:	4630      	mov	r0, r6
900120bc:	ed54 2a03 	vldr	s5, [r4, #-12]
900120c0:	ed14 2a04 	vldr	s4, [r4, #-16]
900120c4:	ed54 1a01 	vldr	s3, [r4, #-4]
900120c8:	ed14 1a02 	vldr	s2, [r4, #-8]
900120cc:	edd4 0a01 	vldr	s1, [r4, #4]
900120d0:	ed94 0a00 	vldr	s0, [r4]
900120d4:	f7ff fc15 	bl	90011902 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900120d8:	e7da      	b.n	90012090 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
900120da:	9b04      	ldr	r3, [sp, #16]
900120dc:	b113      	cbz	r3, 900120e4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
900120de:	4630      	mov	r0, r6
900120e0:	f7ff ff69 	bl	90011fb6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
900120e4:	b009      	add	sp, #36	@ 0x24
900120e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900120ea:	bf00      	nop

900120ec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
900120ec:	eef0 7a60 	vmov.f32	s15, s1
900120f0:	6803      	ldr	r3, [r0, #0]
900120f2:	689b      	ldr	r3, [r3, #8]
900120f4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900120f8:	ee17 2a90 	vmov	r2, s15
900120fc:	eef0 7a40 	vmov.f32	s15, s0
90012100:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012104:	ee17 1a90 	vmov	r1, s15
90012108:	4718      	bx	r3
	...

9001210c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
9001210c:	4b04      	ldr	r3, [pc, #16]	@ (90012120 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
9001210e:	b510      	push	{r4, lr}
90012110:	4604      	mov	r4, r0
90012112:	f840 3b14 	str.w	r3, [r0], #20
90012116:	f001 f85b 	bl	900131d0 <_ZN8touchgfx7OutlineD1Ev>
9001211a:	4620      	mov	r0, r4
9001211c:	bd10      	pop	{r4, pc}
9001211e:	bf00      	nop
90012120:	9002ddd8 	.word	0x9002ddd8

90012124 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90012124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012128:	ed2d 8b04 	vpush	{d8-d9}
9001212c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90012130:	b0b5      	sub	sp, #212	@ 0xd4
90012132:	4605      	mov	r5, r0
90012134:	468b      	mov	fp, r1
90012136:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001213a:	9206      	str	r2, [sp, #24]
9001213c:	461e      	mov	r6, r3
9001213e:	2400      	movs	r4, #0
90012140:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012144:	f240 814f 	bls.w	900123e6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
90012148:	23ff      	movs	r3, #255	@ 0xff
9001214a:	1d02      	adds	r2, r0, #4
9001214c:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 900123ec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90012150:	f04f 0800 	mov.w	r8, #0
90012154:	9300      	str	r3, [sp, #0]
90012156:	af08      	add	r7, sp, #32
90012158:	6981      	ldr	r1, [r0, #24]
9001215a:	a808      	add	r0, sp, #32
9001215c:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
9001215e:	eef0 9a49 	vmov.f32	s19, s18
90012162:	f015 fae5 	bl	90027730 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90012166:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
9001216a:	4ba1      	ldr	r3, [pc, #644]	@ (900123f0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
9001216c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90012170:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90012174:	2201      	movs	r2, #1
90012176:	9308      	str	r3, [sp, #32]
90012178:	f105 0334 	add.w	r3, r5, #52	@ 0x34
9001217c:	edd5 6a08 	vldr	s13, [r5, #32]
90012180:	eeb0 8a49 	vmov.f32	s16, s18
90012184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012188:	9325      	str	r3, [sp, #148]	@ 0x94
9001218a:	f04f 0300 	mov.w	r3, #0
9001218e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
90012192:	7f6a      	ldrb	r2, [r5, #29]
90012194:	eef0 8a49 	vmov.f32	s17, s18
90012198:	bf48      	it	mi
9001219a:	eef1 7a67 	vnegmi.f32	s15, s15
9001219e:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
900121a2:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
900121a6:	46c1      	mov	r9, r8
900121a8:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
900121ac:	f04f 0a01 	mov.w	sl, #1
900121b0:	ee67 7a87 	vmul.f32	s15, s15, s14
900121b4:	7fab      	ldrb	r3, [r5, #30]
900121b6:	942a      	str	r4, [sp, #168]	@ 0xa8
900121b8:	435a      	muls	r2, r3
900121ba:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900121be:	ee26 7aa7 	vmul.f32	s14, s13, s15
900121c2:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900121c6:	1c53      	adds	r3, r2, #1
900121c8:	942b      	str	r4, [sp, #172]	@ 0xac
900121ca:	942c      	str	r4, [sp, #176]	@ 0xb0
900121cc:	ee27 7a26 	vmul.f32	s14, s14, s13
900121d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900121d4:	942d      	str	r4, [sp, #180]	@ 0xb4
900121d6:	942e      	str	r4, [sp, #184]	@ 0xb8
900121d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900121dc:	ee67 7a27 	vmul.f32	s15, s14, s15
900121e0:	942f      	str	r4, [sp, #188]	@ 0xbc
900121e2:	9430      	str	r4, [sp, #192]	@ 0xc0
900121e4:	9431      	str	r4, [sp, #196]	@ 0xc4
900121e6:	9432      	str	r4, [sp, #200]	@ 0xc8
900121e8:	9433      	str	r4, [sp, #204]	@ 0xcc
900121ea:	4644      	mov	r4, r8
900121ec:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
900121f0:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
900121f4:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
900121f8:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
900121fc:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90012200:	9b06      	ldr	r3, [sp, #24]
90012202:	454b      	cmp	r3, r9
90012204:	f000 80cc 	beq.w	900123a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90012208:	f109 0301 	add.w	r3, r9, #1
9001220c:	9305      	str	r3, [sp, #20]
9001220e:	f81b 3009 	ldrb.w	r3, [fp, r9]
90012212:	2b06      	cmp	r3, #6
90012214:	d839      	bhi.n	9001228a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012216:	e8df f003 	tbb	[pc, r3]
9001221a:	3b04      	.short	0x3b04
9001221c:	817c6f60 	.word	0x817c6f60
90012220:	a0          	.byte	0xa0
90012221:	00          	.byte	0x00
90012222:	45c1      	cmp	r9, r8
90012224:	d92b      	bls.n	9001227e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90012226:	eef0 0a49 	vmov.f32	s1, s18
9001222a:	4638      	mov	r0, r7
9001222c:	eeb0 0a69 	vmov.f32	s0, s19
90012230:	f7ff fdde 	bl	90011df0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012234:	4638      	mov	r0, r7
90012236:	f7ff fe67 	bl	90011f08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001223a:	4681      	mov	r9, r0
9001223c:	b9f8      	cbnz	r0, 9001227e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001223e:	eef0 0a49 	vmov.f32	s1, s18
90012242:	4638      	mov	r0, r7
90012244:	eeb0 0a69 	vmov.f32	s0, s19
90012248:	f7ff fe8d 	bl	90011f66 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
9001224c:	4628      	mov	r0, r5
9001224e:	4623      	mov	r3, r4
90012250:	9a05      	ldr	r2, [sp, #20]
90012252:	4641      	mov	r1, r8
90012254:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90012258:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
9001225c:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90012260:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90012264:	e9cd 9702 	strd	r9, r7, [sp, #8]
90012268:	e9cd b600 	strd	fp, r6, [sp]
9001226c:	f7ff feae 	bl	90011fcc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012270:	eef0 0a49 	vmov.f32	s1, s18
90012274:	eeb0 0a69 	vmov.f32	s0, s19
90012278:	4638      	mov	r0, r7
9001227a:	f7ff fe74 	bl	90011f66 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
9001227e:	eeb0 8a49 	vmov.f32	s16, s18
90012282:	f8dd 8014 	ldr.w	r8, [sp, #20]
90012286:	eef0 8a69 	vmov.f32	s17, s19
9001228a:	f8dd 9014 	ldr.w	r9, [sp, #20]
9001228e:	e7b7      	b.n	90012200 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90012290:	45c1      	cmp	r9, r8
90012292:	d90d      	bls.n	900122b0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90012294:	4638      	mov	r0, r7
90012296:	f7ff fe37 	bl	90011f08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001229a:	b948      	cbnz	r0, 900122b0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
9001229c:	4623      	mov	r3, r4
9001229e:	464a      	mov	r2, r9
900122a0:	4641      	mov	r1, r8
900122a2:	4628      	mov	r0, r5
900122a4:	e9cd a702 	strd	sl, r7, [sp, #8]
900122a8:	e9cd b600 	strd	fp, r6, [sp]
900122ac:	f7ff fe8e 	bl	90011fcc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900122b0:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900122b4:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900122b8:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900122bc:	3402      	adds	r4, #2
900122be:	edd3 8a00 	vldr	s17, [r3]
900122c2:	46c8      	mov	r8, r9
900122c4:	ed93 8a01 	vldr	s16, [r3, #4]
900122c8:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
900122cc:	eef0 9a68 	vmov.f32	s19, s17
900122d0:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
900122d4:	eeb0 9a48 	vmov.f32	s18, s16
900122d8:	e7d7      	b.n	9001228a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900122da:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900122de:	4638      	mov	r0, r7
900122e0:	3402      	adds	r4, #2
900122e2:	edd3 8a00 	vldr	s17, [r3]
900122e6:	ed93 8a01 	vldr	s16, [r3, #4]
900122ea:	eeb0 0a68 	vmov.f32	s0, s17
900122ee:	eef0 0a48 	vmov.f32	s1, s16
900122f2:	f7ff fd7d 	bl	90011df0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900122f6:	e7c8      	b.n	9001228a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900122f8:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900122fc:	edd3 8a00 	vldr	s17, [r3]
90012300:	eef0 0a48 	vmov.f32	s1, s16
90012304:	4638      	mov	r0, r7
90012306:	eeb0 0a68 	vmov.f32	s0, s17
9001230a:	3401      	adds	r4, #1
9001230c:	f7ff fd70 	bl	90011df0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012310:	e7bb      	b.n	9001228a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012312:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012316:	ed93 8a00 	vldr	s16, [r3]
9001231a:	e7f1      	b.n	90012300 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
9001231c:	00a3      	lsls	r3, r4, #2
9001231e:	eef0 0a48 	vmov.f32	s1, s16
90012322:	eeb0 0a68 	vmov.f32	s0, s17
90012326:	4638      	mov	r0, r7
90012328:	f103 0208 	add.w	r2, r3, #8
9001232c:	f103 090c 	add.w	r9, r3, #12
90012330:	4433      	add	r3, r6
90012332:	3404      	adds	r4, #4
90012334:	4432      	add	r2, r6
90012336:	44b1      	add	r9, r6
90012338:	edd3 1a01 	vldr	s3, [r3, #4]
9001233c:	ed92 2a00 	vldr	s4, [r2]
90012340:	edd9 2a00 	vldr	s5, [r9]
90012344:	ed93 1a00 	vldr	s2, [r3]
90012348:	9207      	str	r2, [sp, #28]
9001234a:	f7ff fabb 	bl	900118c4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
9001234e:	9a07      	ldr	r2, [sp, #28]
90012350:	ed99 8a00 	vldr	s16, [r9]
90012354:	edd2 8a00 	vldr	s17, [r2]
90012358:	e797      	b.n	9001228a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001235a:	00a3      	lsls	r3, r4, #2
9001235c:	eef0 0a48 	vmov.f32	s1, s16
90012360:	eeb0 0a68 	vmov.f32	s0, s17
90012364:	4638      	mov	r0, r7
90012366:	f103 0210 	add.w	r2, r3, #16
9001236a:	f103 0914 	add.w	r9, r3, #20
9001236e:	4433      	add	r3, r6
90012370:	3406      	adds	r4, #6
90012372:	4432      	add	r2, r6
90012374:	44b1      	add	r9, r6
90012376:	edd3 2a03 	vldr	s5, [r3, #12]
9001237a:	ed92 3a00 	vldr	s6, [r2]
9001237e:	edd9 3a00 	vldr	s7, [r9]
90012382:	ed93 2a02 	vldr	s4, [r3, #8]
90012386:	edd3 1a01 	vldr	s3, [r3, #4]
9001238a:	ed93 1a00 	vldr	s2, [r3]
9001238e:	9207      	str	r2, [sp, #28]
90012390:	f7ff fab7 	bl	90011902 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012394:	9a07      	ldr	r2, [sp, #28]
90012396:	ed99 8a00 	vldr	s16, [r9]
9001239a:	edd2 8a00 	vldr	s17, [r2]
9001239e:	e774      	b.n	9001228a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900123a0:	9b06      	ldr	r3, [sp, #24]
900123a2:	af08      	add	r7, sp, #32
900123a4:	4543      	cmp	r3, r8
900123a6:	d90f      	bls.n	900123c8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900123a8:	4638      	mov	r0, r7
900123aa:	f7ff fdad 	bl	90011f08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900123ae:	b958      	cbnz	r0, 900123c8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900123b0:	2301      	movs	r3, #1
900123b2:	9703      	str	r7, [sp, #12]
900123b4:	f8cd b000 	str.w	fp, [sp]
900123b8:	4641      	mov	r1, r8
900123ba:	9a06      	ldr	r2, [sp, #24]
900123bc:	4628      	mov	r0, r5
900123be:	e9cd 6301 	strd	r6, r3, [sp, #4]
900123c2:	4623      	mov	r3, r4
900123c4:	f7ff fe02 	bl	90011fcc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900123c8:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
900123cc:	4638      	mov	r0, r7
900123ce:	f015 fa43 	bl	90027858 <_ZN8touchgfx6Canvas6renderEh>
900123d2:	4604      	mov	r4, r0
900123d4:	4638      	mov	r0, r7
900123d6:	f7ff fe99 	bl	9001210c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900123da:	4620      	mov	r0, r4
900123dc:	b035      	add	sp, #212	@ 0xd4
900123de:	ecbd 8b04 	vpop	{d8-d9}
900123e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900123e6:	2401      	movs	r4, #1
900123e8:	e7f7      	b.n	900123da <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
900123ea:	bf00      	nop
900123ec:	00000000 	.word	0x00000000
900123f0:	9002d6fc 	.word	0x9002d6fc

900123f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
900123f4:	b510      	push	{r4, lr}
900123f6:	4604      	mov	r4, r0
900123f8:	f7ff fe88 	bl	9001210c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900123fc:	21b0      	movs	r1, #176	@ 0xb0
900123fe:	4620      	mov	r0, r4
90012400:	f015 fe16 	bl	90028030 <_ZdlPvj>
90012404:	4620      	mov	r0, r4
90012406:	bd10      	pop	{r4, pc}

90012408 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90012408:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001240c:	4698      	mov	r8, r3
9001240e:	23ff      	movs	r3, #255	@ 0xff
90012410:	4607      	mov	r7, r0
90012412:	4689      	mov	r9, r1
90012414:	4692      	mov	sl, r2
90012416:	1d02      	adds	r2, r0, #4
90012418:	f107 0534 	add.w	r5, r7, #52	@ 0x34
9001241c:	2400      	movs	r4, #0
9001241e:	44ca      	add	sl, r9
90012420:	ed2d 8b06 	vpush	{d8-d10}
90012424:	b0aa      	sub	sp, #168	@ 0xa8
90012426:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 9001262c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001242a:	9300      	str	r3, [sp, #0]
9001242c:	eef0 8a48 	vmov.f32	s17, s16
90012430:	6981      	ldr	r1, [r0, #24]
90012432:	a80d      	add	r0, sp, #52	@ 0x34
90012434:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90012436:	f015 f97b 	bl	90027730 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001243a:	7f3b      	ldrb	r3, [r7, #28]
9001243c:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 9001262c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012440:	4628      	mov	r0, r5
90012442:	1e5a      	subs	r2, r3, #1
90012444:	eeb0 0a60 	vmov.f32	s0, s1
90012448:	4253      	negs	r3, r2
9001244a:	4153      	adcs	r3, r2
9001244c:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90012450:	f004 fe5b 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012454:	eeb0 9a40 	vmov.f32	s18, s0
90012458:	eef0 9a60 	vmov.f32	s19, s1
9001245c:	45ca      	cmp	sl, r9
9001245e:	f000 80cd 	beq.w	900125fc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90012462:	f819 3b01 	ldrb.w	r3, [r9], #1
90012466:	2b06      	cmp	r3, #6
90012468:	d8f8      	bhi.n	9001245c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001246a:	e8df f003 	tbb	[pc, r3]
9001246e:	0804      	.short	0x0804
90012470:	58533f2a 	.word	0x58533f2a
90012474:	8a          	.byte	0x8a
90012475:	00          	.byte	0x00
90012476:	a80d      	add	r0, sp, #52	@ 0x34
90012478:	f015 f9cc 	bl	90027814 <_ZN8touchgfx6Canvas5closeEv>
9001247c:	e7ee      	b.n	9001245c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001247e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012482:	4628      	mov	r0, r5
90012484:	ed93 8a01 	vldr	s16, [r3, #4]
90012488:	edd3 8a00 	vldr	s17, [r3]
9001248c:	eef0 0a48 	vmov.f32	s1, s16
90012490:	eeb0 0a68 	vmov.f32	s0, s17
90012494:	f004 fe39 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012498:	a80d      	add	r0, sp, #52	@ 0x34
9001249a:	eef0 7a60 	vmov.f32	s15, s1
9001249e:	eeb0 9a40 	vmov.f32	s18, s0
900124a2:	eef0 9a60 	vmov.f32	s19, s1
900124a6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900124aa:	ee17 2a90 	vmov	r2, s15
900124ae:	eef0 7a40 	vmov.f32	s15, s0
900124b2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900124b6:	ee17 1a90 	vmov	r1, s15
900124ba:	f015 fa85 	bl	900279c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900124be:	3402      	adds	r4, #2
900124c0:	e7cc      	b.n	9001245c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900124c2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900124c6:	4628      	mov	r0, r5
900124c8:	edd3 8a00 	vldr	s17, [r3]
900124cc:	ed93 8a01 	vldr	s16, [r3, #4]
900124d0:	eeb0 0a68 	vmov.f32	s0, s17
900124d4:	eef0 0a48 	vmov.f32	s1, s16
900124d8:	f004 fe17 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900124dc:	a80d      	add	r0, sp, #52	@ 0x34
900124de:	eeb0 9a40 	vmov.f32	s18, s0
900124e2:	eef0 9a60 	vmov.f32	s19, s1
900124e6:	f7ff fe01 	bl	900120ec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900124ea:	e7e8      	b.n	900124be <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
900124ec:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900124f0:	edd3 8a00 	vldr	s17, [r3]
900124f4:	eef0 0a48 	vmov.f32	s1, s16
900124f8:	4628      	mov	r0, r5
900124fa:	eeb0 0a68 	vmov.f32	s0, s17
900124fe:	3401      	adds	r4, #1
90012500:	f004 fe03 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012504:	a80d      	add	r0, sp, #52	@ 0x34
90012506:	eef0 9a60 	vmov.f32	s19, s1
9001250a:	eeb0 9a40 	vmov.f32	s18, s0
9001250e:	f7ff fded 	bl	900120ec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012512:	e7a3      	b.n	9001245c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012514:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012518:	ed93 8a00 	vldr	s16, [r3]
9001251c:	e7ea      	b.n	900124f4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
9001251e:	1ca3      	adds	r3, r4, #2
90012520:	4628      	mov	r0, r5
90012522:	3404      	adds	r4, #4
90012524:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90012528:	ed53 0a01 	vldr	s1, [r3, #-4]
9001252c:	ed13 0a02 	vldr	s0, [r3, #-8]
90012530:	edd3 8a00 	vldr	s17, [r3]
90012534:	ed93 8a01 	vldr	s16, [r3, #4]
90012538:	f004 fde7 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001253c:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012540:	eeb0 0a68 	vmov.f32	s0, s17
90012544:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90012548:	eef0 0a48 	vmov.f32	s1, s16
9001254c:	4628      	mov	r0, r5
9001254e:	f004 fddc 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012552:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
90012556:	eef0 2a60 	vmov.f32	s5, s1
9001255a:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
9001255e:	eeb0 2a40 	vmov.f32	s4, s0
90012562:	a80d      	add	r0, sp, #52	@ 0x34
90012564:	eeb0 aa40 	vmov.f32	s20, s0
90012568:	eef0 aa60 	vmov.f32	s21, s1
9001256c:	eeb0 0a49 	vmov.f32	s0, s18
90012570:	eef0 0a69 	vmov.f32	s1, s19
90012574:	f7ff f9a6 	bl	900118c4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012578:	eef0 9a6a 	vmov.f32	s19, s21
9001257c:	eeb0 9a4a 	vmov.f32	s18, s20
90012580:	e76c      	b.n	9001245c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012582:	1d26      	adds	r6, r4, #4
90012584:	4628      	mov	r0, r5
90012586:	3406      	adds	r4, #6
90012588:	eb08 0686 	add.w	r6, r8, r6, lsl #2
9001258c:	ed56 0a03 	vldr	s1, [r6, #-12]
90012590:	ed16 0a04 	vldr	s0, [r6, #-16]
90012594:	edd6 8a00 	vldr	s17, [r6]
90012598:	ed96 8a01 	vldr	s16, [r6, #4]
9001259c:	f004 fdb5 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900125a0:	ed8d 0a07 	vstr	s0, [sp, #28]
900125a4:	4628      	mov	r0, r5
900125a6:	ed16 0a02 	vldr	s0, [r6, #-8]
900125aa:	edcd 0a08 	vstr	s1, [sp, #32]
900125ae:	ed56 0a01 	vldr	s1, [r6, #-4]
900125b2:	f004 fdaa 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900125b6:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
900125ba:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
900125be:	eeb0 0a68 	vmov.f32	s0, s17
900125c2:	eef0 0a48 	vmov.f32	s1, s16
900125c6:	4628      	mov	r0, r5
900125c8:	f004 fd9f 	bl	9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900125cc:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
900125d0:	eeb0 3a40 	vmov.f32	s6, s0
900125d4:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
900125d8:	eef0 3a60 	vmov.f32	s7, s1
900125dc:	eddd 1a08 	vldr	s3, [sp, #32]
900125e0:	eeb0 aa40 	vmov.f32	s20, s0
900125e4:	ed9d 1a07 	vldr	s2, [sp, #28]
900125e8:	eef0 aa60 	vmov.f32	s21, s1
900125ec:	a80d      	add	r0, sp, #52	@ 0x34
900125ee:	eef0 0a69 	vmov.f32	s1, s19
900125f2:	eeb0 0a49 	vmov.f32	s0, s18
900125f6:	f7ff f984 	bl	90011902 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900125fa:	e7bd      	b.n	90012578 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
900125fc:	7f7b      	ldrb	r3, [r7, #29]
900125fe:	a80d      	add	r0, sp, #52	@ 0x34
90012600:	7fb9      	ldrb	r1, [r7, #30]
90012602:	4359      	muls	r1, r3
90012604:	1c4b      	adds	r3, r1, #1
90012606:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001260a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9001260e:	f015 f923 	bl	90027858 <_ZN8touchgfx6Canvas6renderEh>
90012612:	4b07      	ldr	r3, [pc, #28]	@ (90012630 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90012614:	4604      	mov	r4, r0
90012616:	a812      	add	r0, sp, #72	@ 0x48
90012618:	930d      	str	r3, [sp, #52]	@ 0x34
9001261a:	f000 fdd9 	bl	900131d0 <_ZN8touchgfx7OutlineD1Ev>
9001261e:	4620      	mov	r0, r4
90012620:	b02a      	add	sp, #168	@ 0xa8
90012622:	ecbd 8b06 	vpop	{d8-d10}
90012626:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001262a:	bf00      	nop
9001262c:	00000000 	.word	0x00000000
90012630:	9002ddd8 	.word	0x9002ddd8

90012634 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90012634:	b410      	push	{r4}
90012636:	7f04      	ldrb	r4, [r0, #28]
90012638:	b11c      	cbz	r4, 90012642 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
9001263a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001263e:	f7ff bee3 	b.w	90012408 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90012642:	f85d 4b04 	ldr.w	r4, [sp], #4
90012646:	f7ff bd6d 	b.w	90012124 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

9001264a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
9001264a:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001264e:	4691      	mov	r9, r2
90012650:	4602      	mov	r2, r0
90012652:	4606      	mov	r6, r0
90012654:	4688      	mov	r8, r1
90012656:	f852 0f26 	ldr.w	r0, [r2, #38]!
9001265a:	469a      	mov	sl, r3
9001265c:	ab02      	add	r3, sp, #8
9001265e:	af02      	add	r7, sp, #8
90012660:	6851      	ldr	r1, [r2, #4]
90012662:	c303      	stmia	r3!, {r0, r1}
90012664:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012668:	2b00      	cmp	r3, #0
9001266a:	dd2f      	ble.n	900126cc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
9001266c:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90012670:	2c00      	cmp	r4, #0
90012672:	dd2b      	ble.n	900126cc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90012674:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012678:	441c      	add	r4, r3
9001267a:	b2a4      	uxth	r4, r4
9001267c:	b225      	sxth	r5, r4
9001267e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90012682:	42ab      	cmp	r3, r5
90012684:	da22      	bge.n	900126cc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90012686:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90012688:	464a      	mov	r2, r9
9001268a:	9701      	str	r7, [sp, #4]
9001268c:	4641      	mov	r1, r8
9001268e:	9300      	str	r3, [sp, #0]
90012690:	4630      	mov	r0, r6
90012692:	4653      	mov	r3, sl
90012694:	f7ff ffce 	bl	90012634 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012698:	b940      	cbnz	r0, 900126ac <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
9001269a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001269e:	2b01      	cmp	r3, #1
900126a0:	d004      	beq.n	900126ac <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
900126a2:	3301      	adds	r3, #1
900126a4:	105b      	asrs	r3, r3, #1
900126a6:	f8ad 300e 	strh.w	r3, [sp, #14]
900126aa:	e7ec      	b.n	90012686 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
900126ac:	f8bd 200e 	ldrh.w	r2, [sp, #14]
900126b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900126b4:	4413      	add	r3, r2
900126b6:	b29b      	uxth	r3, r3
900126b8:	441a      	add	r2, r3
900126ba:	f8ad 300a 	strh.w	r3, [sp, #10]
900126be:	b212      	sxth	r2, r2
900126c0:	4295      	cmp	r5, r2
900126c2:	dadc      	bge.n	9001267e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
900126c4:	1ae3      	subs	r3, r4, r3
900126c6:	f8ad 300e 	strh.w	r3, [sp, #14]
900126ca:	e7d8      	b.n	9001267e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
900126cc:	b004      	add	sp, #16
900126ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

900126d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
900126d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900126d6:	6803      	ldr	r3, [r0, #0]
900126d8:	460d      	mov	r5, r1
900126da:	4604      	mov	r4, r0
900126dc:	4601      	mov	r1, r0
900126de:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900126e0:	a802      	add	r0, sp, #8
900126e2:	4798      	blx	r3
900126e4:	6828      	ldr	r0, [r5, #0]
900126e6:	6869      	ldr	r1, [r5, #4]
900126e8:	466b      	mov	r3, sp
900126ea:	c303      	stmia	r3!, {r0, r1}
900126ec:	4668      	mov	r0, sp
900126ee:	4619      	mov	r1, r3
900126f0:	f7fd fc6a 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
900126f4:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900126f6:	b188      	cbz	r0, 9001271c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900126f8:	6803      	ldr	r3, [r0, #0]
900126fa:	1d21      	adds	r1, r4, #4
900126fc:	68db      	ldr	r3, [r3, #12]
900126fe:	4798      	blx	r3
90012700:	b160      	cbz	r0, 9001271c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012702:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012706:	2b00      	cmp	r3, #0
90012708:	dd08      	ble.n	9001271c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001270a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
9001270e:	2d00      	cmp	r5, #0
90012710:	dd04      	ble.n	9001271c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012712:	4a2b      	ldr	r2, [pc, #172]	@ (900127c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90012714:	7812      	ldrb	r2, [r2, #0]
90012716:	b11a      	cbz	r2, 90012720 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90012718:	2a01      	cmp	r2, #1
9001271a:	d029      	beq.n	90012770 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
9001271c:	b004      	add	sp, #16
9001271e:	bd70      	pop	{r4, r5, r6, pc}
90012720:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012724:	441d      	add	r5, r3
90012726:	b2ad      	uxth	r5, r5
90012728:	b22e      	sxth	r6, r5
9001272a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9001272e:	42b3      	cmp	r3, r6
90012730:	daf4      	bge.n	9001271c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012732:	6823      	ldr	r3, [r4, #0]
90012734:	4669      	mov	r1, sp
90012736:	4620      	mov	r0, r4
90012738:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001273a:	4798      	blx	r3
9001273c:	b940      	cbnz	r0, 90012750 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001273e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90012742:	2b01      	cmp	r3, #1
90012744:	d004      	beq.n	90012750 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012746:	3301      	adds	r3, #1
90012748:	105b      	asrs	r3, r3, #1
9001274a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001274e:	e7f0      	b.n	90012732 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90012750:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90012754:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012758:	4413      	add	r3, r2
9001275a:	b29b      	uxth	r3, r3
9001275c:	441a      	add	r2, r3
9001275e:	f8ad 3002 	strh.w	r3, [sp, #2]
90012762:	b212      	sxth	r2, r2
90012764:	4296      	cmp	r6, r2
90012766:	dae0      	bge.n	9001272a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012768:	1aeb      	subs	r3, r5, r3
9001276a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001276e:	e7dc      	b.n	9001272a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012770:	f8bd 5000 	ldrh.w	r5, [sp]
90012774:	441d      	add	r5, r3
90012776:	b2ad      	uxth	r5, r5
90012778:	b22e      	sxth	r6, r5
9001277a:	f9bd 3000 	ldrsh.w	r3, [sp]
9001277e:	42b3      	cmp	r3, r6
90012780:	dacc      	bge.n	9001271c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012782:	6823      	ldr	r3, [r4, #0]
90012784:	4669      	mov	r1, sp
90012786:	4620      	mov	r0, r4
90012788:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001278a:	4798      	blx	r3
9001278c:	b940      	cbnz	r0, 900127a0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001278e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012792:	2b01      	cmp	r3, #1
90012794:	d004      	beq.n	900127a0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90012796:	3301      	adds	r3, #1
90012798:	105b      	asrs	r3, r3, #1
9001279a:	f8ad 3004 	strh.w	r3, [sp, #4]
9001279e:	e7f0      	b.n	90012782 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900127a0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900127a4:	f8bd 3000 	ldrh.w	r3, [sp]
900127a8:	4413      	add	r3, r2
900127aa:	b29b      	uxth	r3, r3
900127ac:	441a      	add	r2, r3
900127ae:	f8ad 3000 	strh.w	r3, [sp]
900127b2:	b212      	sxth	r2, r2
900127b4:	4296      	cmp	r6, r2
900127b6:	dae0      	bge.n	9001277a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900127b8:	1aeb      	subs	r3, r5, r3
900127ba:	f8ad 3004 	strh.w	r3, [sp, #4]
900127be:	e7dc      	b.n	9001277a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900127c0:	24021bd4 	.word	0x24021bd4

900127c4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900127c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900127c6:	6803      	ldr	r3, [r0, #0]
900127c8:	4604      	mov	r4, r0
900127ca:	4601      	mov	r1, r0
900127cc:	4668      	mov	r0, sp
900127ce:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900127d0:	4798      	blx	r3
900127d2:	2100      	movs	r1, #0
900127d4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900127d8:	4668      	mov	r0, sp
900127da:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900127de:	9102      	str	r1, [sp, #8]
900127e0:	a902      	add	r1, sp, #8
900127e2:	f8ad 200c 	strh.w	r2, [sp, #12]
900127e6:	f8ad 300e 	strh.w	r3, [sp, #14]
900127ea:	f7fd fbed 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
900127ee:	6823      	ldr	r3, [r4, #0]
900127f0:	4669      	mov	r1, sp
900127f2:	4620      	mov	r0, r4
900127f4:	691b      	ldr	r3, [r3, #16]
900127f6:	4798      	blx	r3
900127f8:	b004      	add	sp, #16
900127fa:	bd10      	pop	{r4, pc}

900127fc <_ZN8touchgfx12CanvasWidgetC1Ev>:
900127fc:	2101      	movs	r1, #1
900127fe:	2200      	movs	r2, #0
90012800:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90012804:	490a      	ldr	r1, [pc, #40]	@ (90012830 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90012806:	8082      	strh	r2, [r0, #4]
90012808:	6001      	str	r1, [r0, #0]
9001280a:	21ff      	movs	r1, #255	@ 0xff
9001280c:	80c2      	strh	r2, [r0, #6]
9001280e:	8102      	strh	r2, [r0, #8]
90012810:	8142      	strh	r2, [r0, #10]
90012812:	8182      	strh	r2, [r0, #12]
90012814:	81c2      	strh	r2, [r0, #14]
90012816:	8202      	strh	r2, [r0, #16]
90012818:	8242      	strh	r2, [r0, #18]
9001281a:	61c2      	str	r2, [r0, #28]
9001281c:	8402      	strh	r2, [r0, #32]
9001281e:	8442      	strh	r2, [r0, #34]	@ 0x22
90012820:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90012824:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90012828:	6282      	str	r2, [r0, #40]	@ 0x28
9001282a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001282e:	4770      	bx	lr
90012830:	9002d75c 	.word	0x9002d75c

90012834 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90012834:	4b07      	ldr	r3, [pc, #28]	@ (90012854 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90012836:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90012838:	881b      	ldrh	r3, [r3, #0]
9001283a:	4293      	cmp	r3, r2
9001283c:	bf81      	itttt	hi
9001283e:	4b06      	ldrhi	r3, [pc, #24]	@ (90012858 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90012840:	681b      	ldrhi	r3, [r3, #0]
90012842:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90012846:	7858      	ldrbhi	r0, [r3, #1]
90012848:	bf8c      	ite	hi
9001284a:	f000 0003 	andhi.w	r0, r0, #3
9001284e:	2000      	movls	r0, #0
90012850:	4770      	bx	lr
90012852:	bf00      	nop
90012854:	24021c38 	.word	0x24021c38
90012858:	24021c34 	.word	0x24021c34

9001285c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
9001285c:	4b11      	ldr	r3, [pc, #68]	@ (900128a4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
9001285e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012862:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90012864:	4604      	mov	r4, r0
90012866:	881b      	ldrh	r3, [r3, #0]
90012868:	428b      	cmp	r3, r1
9001286a:	d918      	bls.n	9001289e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
9001286c:	6803      	ldr	r3, [r0, #0]
9001286e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90012870:	4b0d      	ldr	r3, [pc, #52]	@ (900128a8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90012872:	6818      	ldr	r0, [r3, #0]
90012874:	f7f3 fbb6 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
90012878:	6823      	ldr	r3, [r4, #0]
9001287a:	4606      	mov	r6, r0
9001287c:	4620      	mov	r0, r4
9001287e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012880:	4798      	blx	r3
90012882:	6823      	ldr	r3, [r4, #0]
90012884:	4607      	mov	r7, r0
90012886:	4620      	mov	r0, r4
90012888:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9001288c:	4798      	blx	r3
9001288e:	463a      	mov	r2, r7
90012890:	4603      	mov	r3, r0
90012892:	4631      	mov	r1, r6
90012894:	4620      	mov	r0, r4
90012896:	46ac      	mov	ip, r5
90012898:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9001289c:	4760      	bx	ip
9001289e:	2000      	movs	r0, #0
900128a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900128a4:	24021c38 	.word	0x24021c38
900128a8:	24021c40 	.word	0x24021c40

900128ac <_ZNK8touchgfx8TextArea12getTextWidthEv>:
900128ac:	4b18      	ldr	r3, [pc, #96]	@ (90012910 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
900128ae:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
900128b2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900128b4:	4604      	mov	r4, r0
900128b6:	881b      	ldrh	r3, [r3, #0]
900128b8:	428b      	cmp	r3, r1
900128ba:	d926      	bls.n	9001290a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
900128bc:	4b15      	ldr	r3, [pc, #84]	@ (90012914 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
900128be:	681b      	ldr	r3, [r3, #0]
900128c0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
900128c4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
900128c8:	4b13      	ldr	r3, [pc, #76]	@ (90012918 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
900128ca:	7855      	ldrb	r5, [r2, #1]
900128cc:	681b      	ldr	r3, [r3, #0]
900128ce:	f3c5 0581 	ubfx	r5, r5, #2, #2
900128d2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
900128d6:	6833      	ldr	r3, [r6, #0]
900128d8:	69df      	ldr	r7, [r3, #28]
900128da:	4b10      	ldr	r3, [pc, #64]	@ (9001291c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
900128dc:	6818      	ldr	r0, [r3, #0]
900128de:	f7f3 fb81 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
900128e2:	6823      	ldr	r3, [r4, #0]
900128e4:	4680      	mov	r8, r0
900128e6:	4620      	mov	r0, r4
900128e8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900128ea:	4798      	blx	r3
900128ec:	6823      	ldr	r3, [r4, #0]
900128ee:	4681      	mov	r9, r0
900128f0:	4620      	mov	r0, r4
900128f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900128f6:	4798      	blx	r3
900128f8:	464b      	mov	r3, r9
900128fa:	9000      	str	r0, [sp, #0]
900128fc:	4642      	mov	r2, r8
900128fe:	4629      	mov	r1, r5
90012900:	4630      	mov	r0, r6
90012902:	47b8      	blx	r7
90012904:	b003      	add	sp, #12
90012906:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001290a:	2000      	movs	r0, #0
9001290c:	e7fa      	b.n	90012904 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
9001290e:	bf00      	nop
90012910:	24021c38 	.word	0x24021c38
90012914:	24021c34 	.word	0x24021c34
90012918:	24021c3c 	.word	0x24021c3c
9001291c:	24021c40 	.word	0x24021c40

90012920 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90012920:	b40e      	push	{r1, r2, r3}
90012922:	4b30      	ldr	r3, [pc, #192]	@ (900129e4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90012924:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012928:	881a      	ldrh	r2, [r3, #0]
9001292a:	b09d      	sub	sp, #116	@ 0x74
9001292c:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
9001292e:	4604      	mov	r4, r0
90012930:	429a      	cmp	r2, r3
90012932:	d954      	bls.n	900129de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90012934:	aa26      	add	r2, sp, #152	@ 0x98
90012936:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 900129e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9001293a:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 900129ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
9001293e:	9202      	str	r2, [sp, #8]
90012940:	f8d9 2000 	ldr.w	r2, [r9]
90012944:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90012948:	f8d8 3000 	ldr.w	r3, [r8]
9001294c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012950:	682b      	ldr	r3, [r5, #0]
90012952:	4628      	mov	r0, r5
90012954:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012956:	4798      	blx	r3
90012958:	4606      	mov	r6, r0
9001295a:	b207      	sxth	r7, r0
9001295c:	a803      	add	r0, sp, #12
9001295e:	f004 ff9d 	bl	9001789c <_ZN8touchgfx12TextProviderC1Ev>
90012962:	682b      	ldr	r3, [r5, #0]
90012964:	4628      	mov	r0, r5
90012966:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90012968:	4798      	blx	r3
9001296a:	682b      	ldr	r3, [r5, #0]
9001296c:	4682      	mov	sl, r0
9001296e:	4628      	mov	r0, r5
90012970:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90012972:	4798      	blx	r3
90012974:	4653      	mov	r3, sl
90012976:	9000      	str	r0, [sp, #0]
90012978:	a803      	add	r0, sp, #12
9001297a:	9a02      	ldr	r2, [sp, #8]
9001297c:	9925      	ldr	r1, [sp, #148]	@ 0x94
9001297e:	f004 ffe0 	bl	90017942 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90012982:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90012984:	f8d9 3000 	ldr.w	r3, [r9]
90012988:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
9001298c:	8925      	ldrh	r5, [r4, #8]
9001298e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90012992:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90012996:	eba5 050c 	sub.w	r5, r5, ip
9001299a:	784a      	ldrb	r2, [r1, #1]
9001299c:	f8d8 3000 	ldr.w	r3, [r8]
900129a0:	b22d      	sxth	r5, r5
900129a2:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
900129a6:	f3c2 0281 	ubfx	r2, r2, #2, #2
900129aa:	9500      	str	r5, [sp, #0]
900129ac:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
900129b0:	a803      	add	r0, sp, #12
900129b2:	f002 fae7 	bl	90014f84 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
900129b6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
900129ba:	b203      	sxth	r3, r0
900129bc:	18b9      	adds	r1, r7, r2
900129be:	2900      	cmp	r1, #0
900129c0:	dd0b      	ble.n	900129da <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
900129c2:	3b01      	subs	r3, #1
900129c4:	fb13 f302 	smulbb	r3, r3, r2
900129c8:	fb16 3300 	smlabb	r3, r6, r0, r3
900129cc:	b21f      	sxth	r7, r3
900129ce:	4638      	mov	r0, r7
900129d0:	b01d      	add	sp, #116	@ 0x74
900129d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900129d6:	b003      	add	sp, #12
900129d8:	4770      	bx	lr
900129da:	2b00      	cmp	r3, #0
900129dc:	dcf7      	bgt.n	900129ce <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900129de:	2700      	movs	r7, #0
900129e0:	e7f5      	b.n	900129ce <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900129e2:	bf00      	nop
900129e4:	24021c38 	.word	0x24021c38
900129e8:	24021c34 	.word	0x24021c34
900129ec:	24021c3c 	.word	0x24021c3c

900129f0 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
900129f0:	b570      	push	{r4, r5, r6, lr}
900129f2:	6803      	ldr	r3, [r0, #0]
900129f4:	4604      	mov	r4, r0
900129f6:	4615      	mov	r5, r2
900129f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900129fa:	4798      	blx	r3
900129fc:	6823      	ldr	r3, [r4, #0]
900129fe:	4629      	mov	r1, r5
90012a00:	4620      	mov	r0, r4
90012a02:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012a04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012a08:	4718      	bx	r3
	...

90012a0c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90012a0c:	b538      	push	{r3, r4, r5, lr}
90012a0e:	4b0e      	ldr	r3, [pc, #56]	@ (90012a48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90012a10:	4604      	mov	r4, r0
90012a12:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90012a14:	881b      	ldrh	r3, [r3, #0]
90012a16:	429a      	cmp	r2, r3
90012a18:	d214      	bcs.n	90012a44 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90012a1a:	6803      	ldr	r3, [r0, #0]
90012a1c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90012a1e:	4798      	blx	r3
90012a20:	6823      	ldr	r3, [r4, #0]
90012a22:	4605      	mov	r5, r0
90012a24:	4620      	mov	r0, r4
90012a26:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90012a28:	4798      	blx	r3
90012a2a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90012a2e:	b22d      	sxth	r5, r5
90012a30:	4601      	mov	r1, r0
90012a32:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90012a36:	bf06      	itte	eq
90012a38:	4602      	moveq	r2, r0
90012a3a:	4629      	moveq	r1, r5
90012a3c:	462a      	movne	r2, r5
90012a3e:	4620      	mov	r0, r4
90012a40:	f7ff ffd6 	bl	900129f0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90012a44:	bd38      	pop	{r3, r4, r5, pc}
90012a46:	bf00      	nop
90012a48:	24021c38 	.word	0x24021c38

90012a4c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90012a4c:	b530      	push	{r4, r5, lr}
90012a4e:	888b      	ldrh	r3, [r1, #4]
90012a50:	b085      	sub	sp, #20
90012a52:	4604      	mov	r4, r0
90012a54:	8583      	strh	r3, [r0, #44]	@ 0x2c
90012a56:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90012a5a:	b923      	cbnz	r3, 90012a66 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012a5c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90012a60:	b90b      	cbnz	r3, 90012a66 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012a62:	f7ff ffd3 	bl	90012a0c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90012a66:	6823      	ldr	r3, [r4, #0]
90012a68:	466d      	mov	r5, sp
90012a6a:	4621      	mov	r1, r4
90012a6c:	343c      	adds	r4, #60	@ 0x3c
90012a6e:	4628      	mov	r0, r5
90012a70:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90012a74:	4798      	blx	r3
90012a76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90012a7a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90012a7e:	b005      	add	sp, #20
90012a80:	bd30      	pop	{r4, r5, pc}

90012a82 <_ZNK8touchgfx3Box12getSolidRectEv>:
90012a82:	2300      	movs	r3, #0
90012a84:	8083      	strh	r3, [r0, #4]
90012a86:	80c3      	strh	r3, [r0, #6]
90012a88:	8003      	strh	r3, [r0, #0]
90012a8a:	8043      	strh	r3, [r0, #2]
90012a8c:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90012a90:	2bff      	cmp	r3, #255	@ 0xff
90012a92:	bf01      	itttt	eq
90012a94:	890b      	ldrheq	r3, [r1, #8]
90012a96:	8083      	strheq	r3, [r0, #4]
90012a98:	894b      	ldrheq	r3, [r1, #10]
90012a9a:	80c3      	strheq	r3, [r0, #6]
90012a9c:	4770      	bx	lr
	...

90012aa0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90012aa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012aa2:	4604      	mov	r4, r0
90012aa4:	466b      	mov	r3, sp
90012aa6:	6808      	ldr	r0, [r1, #0]
90012aa8:	6849      	ldr	r1, [r1, #4]
90012aaa:	c303      	stmia	r3!, {r0, r1}
90012aac:	6823      	ldr	r3, [r4, #0]
90012aae:	4669      	mov	r1, sp
90012ab0:	4620      	mov	r0, r4
90012ab2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012ab4:	4798      	blx	r3
90012ab6:	4b08      	ldr	r3, [pc, #32]	@ (90012ad8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90012ab8:	681b      	ldr	r3, [r3, #0]
90012aba:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90012abe:	b10a      	cbz	r2, 90012ac4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90012ac0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90012ac2:	b900      	cbnz	r0, 90012ac6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90012ac4:	6898      	ldr	r0, [r3, #8]
90012ac6:	6803      	ldr	r3, [r0, #0]
90012ac8:	4669      	mov	r1, sp
90012aca:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90012acc:	6a1d      	ldr	r5, [r3, #32]
90012ace:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90012ad2:	47a8      	blx	r5
90012ad4:	b003      	add	sp, #12
90012ad6:	bd30      	pop	{r4, r5, pc}
90012ad8:	24021bdc 	.word	0x24021bdc

90012adc <_ZN8touchgfx3BoxD1Ev>:
90012adc:	4770      	bx	lr

90012ade <_ZN8touchgfx3BoxD0Ev>:
90012ade:	b510      	push	{r4, lr}
90012ae0:	4604      	mov	r4, r0
90012ae2:	212c      	movs	r1, #44	@ 0x2c
90012ae4:	f015 faa4 	bl	90028030 <_ZdlPvj>
90012ae8:	4620      	mov	r0, r4
90012aea:	bd10      	pop	{r4, pc}

90012aec <_ZNK8touchgfx3Box17invalidateContentEv>:
90012aec:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90012af0:	b12a      	cbz	r2, 90012afe <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90012af2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012af6:	b112      	cbz	r2, 90012afe <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90012af8:	6803      	ldr	r3, [r0, #0]
90012afa:	695b      	ldr	r3, [r3, #20]
90012afc:	4718      	bx	r3
90012afe:	4770      	bx	lr

90012b00 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90012b00:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90012b04:	4770      	bx	lr

90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90012b06:	b570      	push	{r4, r5, r6, lr}
90012b08:	880b      	ldrh	r3, [r1, #0]
90012b0a:	4605      	mov	r5, r0
90012b0c:	4604      	mov	r4, r0
90012b0e:	85c3      	strh	r3, [r0, #46]	@ 0x2e
90012b10:	8813      	ldrh	r3, [r2, #0]
90012b12:	f825 3f30 	strh.w	r3, [r5, #48]!
90012b16:	4628      	mov	r0, r5
90012b18:	f006 fa34 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012b1c:	4606      	mov	r6, r0
90012b1e:	4628      	mov	r0, r5
90012b20:	f006 fa64 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
90012b24:	6823      	ldr	r3, [r4, #0]
90012b26:	4605      	mov	r5, r0
90012b28:	4631      	mov	r1, r6
90012b2a:	4620      	mov	r0, r4
90012b2c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012b2e:	4798      	blx	r3
90012b30:	6823      	ldr	r3, [r4, #0]
90012b32:	4629      	mov	r1, r5
90012b34:	4620      	mov	r0, r4
90012b36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012b38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012b3c:	4718      	bx	r3

90012b3e <_ZN8touchgfx14AbstractButton13executeActionEv>:
90012b3e:	b510      	push	{r4, lr}
90012b40:	4604      	mov	r4, r0
90012b42:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90012b44:	b150      	cbz	r0, 90012b5c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90012b46:	6803      	ldr	r3, [r0, #0]
90012b48:	68db      	ldr	r3, [r3, #12]
90012b4a:	4798      	blx	r3
90012b4c:	b130      	cbz	r0, 90012b5c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90012b4e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90012b50:	4621      	mov	r1, r4
90012b52:	6803      	ldr	r3, [r0, #0]
90012b54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012b58:	689b      	ldr	r3, [r3, #8]
90012b5a:	4718      	bx	r3
90012b5c:	bd10      	pop	{r4, pc}

90012b5e <_ZNK8touchgfx6Button12getSolidRectEv>:
90012b5e:	b510      	push	{r4, lr}
90012b60:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
90012b64:	4604      	mov	r4, r0
90012b66:	2bff      	cmp	r3, #255	@ 0xff
90012b68:	d006      	beq.n	90012b78 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90012b6a:	2300      	movs	r3, #0
90012b6c:	8003      	strh	r3, [r0, #0]
90012b6e:	8043      	strh	r3, [r0, #2]
90012b70:	8083      	strh	r3, [r0, #4]
90012b72:	80c3      	strh	r3, [r0, #6]
90012b74:	4620      	mov	r0, r4
90012b76:	bd10      	pop	{r4, pc}
90012b78:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
90012b7c:	b11b      	cbz	r3, 90012b86 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90012b7e:	3130      	adds	r1, #48	@ 0x30
90012b80:	f006 fa68 	bl	90019054 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012b84:	e7f6      	b.n	90012b74 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90012b86:	312e      	adds	r1, #46	@ 0x2e
90012b88:	e7fa      	b.n	90012b80 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90012b8c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90012b8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012b90:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90012b94:	b08a      	sub	sp, #40	@ 0x28
90012b96:	4604      	mov	r4, r0
90012b98:	4688      	mov	r8, r1
90012b9a:	2b00      	cmp	r3, #0
90012b9c:	d066      	beq.n	90012c6c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90012b9e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
90012ba0:	a805      	add	r0, sp, #20
90012ba2:	f8ad 3014 	strh.w	r3, [sp, #20]
90012ba6:	f006 f9ed 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012baa:	4607      	mov	r7, r0
90012bac:	a805      	add	r0, sp, #20
90012bae:	f006 fa1d 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
90012bb2:	f9b8 6000 	ldrsh.w	r6, [r8]
90012bb6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90012bba:	2300      	movs	r3, #0
90012bbc:	4432      	add	r2, r6
90012bbe:	9306      	str	r3, [sp, #24]
90012bc0:	b292      	uxth	r2, r2
90012bc2:	fa0f fc82 	sxth.w	ip, r2
90012bc6:	459c      	cmp	ip, r3
90012bc8:	dd52      	ble.n	90012c70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90012bca:	42b7      	cmp	r7, r6
90012bcc:	dd50      	ble.n	90012c70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90012bce:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90012bd2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90012bd6:	442b      	add	r3, r5
90012bd8:	b29b      	uxth	r3, r3
90012bda:	b219      	sxth	r1, r3
90012bdc:	2900      	cmp	r1, #0
90012bde:	dd47      	ble.n	90012c70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90012be0:	42a8      	cmp	r0, r5
90012be2:	dd45      	ble.n	90012c70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90012be4:	4567      	cmp	r7, ip
90012be6:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90012bea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90012bee:	bfb8      	it	lt
90012bf0:	b2ba      	uxthlt	r2, r7
90012bf2:	4288      	cmp	r0, r1
90012bf4:	f8ad 6018 	strh.w	r6, [sp, #24]
90012bf8:	bfb8      	it	lt
90012bfa:	b283      	uxthlt	r3, r0
90012bfc:	1b92      	subs	r2, r2, r6
90012bfe:	f8ad 501a 	strh.w	r5, [sp, #26]
90012c02:	1b5b      	subs	r3, r3, r5
90012c04:	f8ad 201c 	strh.w	r2, [sp, #28]
90012c08:	f8ad 301e 	strh.w	r3, [sp, #30]
90012c0c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90012c10:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90012c14:	429a      	cmp	r2, r3
90012c16:	d026      	beq.n	90012c66 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90012c18:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90012c1c:	2b00      	cmp	r3, #0
90012c1e:	dd22      	ble.n	90012c66 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90012c20:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90012c24:	2b00      	cmp	r3, #0
90012c26:	dd1e      	ble.n	90012c66 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90012c28:	2300      	movs	r3, #0
90012c2a:	a908      	add	r1, sp, #32
90012c2c:	4620      	mov	r0, r4
90012c2e:	e9cd 3308 	strd	r3, r3, [sp, #32]
90012c32:	6823      	ldr	r3, [r4, #0]
90012c34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012c36:	4798      	blx	r3
90012c38:	4b0f      	ldr	r3, [pc, #60]	@ (90012c78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90012c3a:	681b      	ldr	r3, [r3, #0]
90012c3c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90012c40:	b10a      	cbz	r2, 90012c46 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90012c42:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90012c44:	b900      	cbnz	r0, 90012c48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90012c46:	6898      	ldr	r0, [r3, #8]
90012c48:	2501      	movs	r5, #1
90012c4a:	6801      	ldr	r1, [r0, #0]
90012c4c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
90012c50:	9502      	str	r5, [sp, #8]
90012c52:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
90012c56:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90012c5a:	9401      	str	r4, [sp, #4]
90012c5c:	ac06      	add	r4, sp, #24
90012c5e:	9400      	str	r4, [sp, #0]
90012c60:	688c      	ldr	r4, [r1, #8]
90012c62:	a905      	add	r1, sp, #20
90012c64:	47a0      	blx	r4
90012c66:	b00a      	add	sp, #40	@ 0x28
90012c68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012c6c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
90012c6e:	e797      	b.n	90012ba0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90012c70:	2300      	movs	r3, #0
90012c72:	9307      	str	r3, [sp, #28]
90012c74:	e7ca      	b.n	90012c0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90012c76:	bf00      	nop
90012c78:	24021bdc 	.word	0x24021bdc

90012c7c <_ZNK8touchgfx6Button17invalidateContentEv>:
90012c7c:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
90012c80:	b12a      	cbz	r2, 90012c8e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90012c82:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012c86:	b112      	cbz	r2, 90012c8e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90012c88:	6803      	ldr	r3, [r0, #0]
90012c8a:	695b      	ldr	r3, [r3, #20]
90012c8c:	4718      	bx	r3
90012c8e:	4770      	bx	lr

90012c90 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90012c90:	4b30      	ldr	r3, [pc, #192]	@ (90012d54 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90012c92:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012c96:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90012c98:	b08d      	sub	sp, #52	@ 0x34
90012c9a:	881b      	ldrh	r3, [r3, #0]
90012c9c:	4604      	mov	r4, r0
90012c9e:	460f      	mov	r7, r1
90012ca0:	4293      	cmp	r3, r2
90012ca2:	d954      	bls.n	90012d4e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90012ca4:	4b2c      	ldr	r3, [pc, #176]	@ (90012d58 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90012ca6:	6819      	ldr	r1, [r3, #0]
90012ca8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90012cac:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90012cb0:	4a2a      	ldr	r2, [pc, #168]	@ (90012d5c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90012cb2:	6812      	ldr	r2, [r2, #0]
90012cb4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90012cb8:	2900      	cmp	r1, #0
90012cba:	d048      	beq.n	90012d4e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90012cbc:	785a      	ldrb	r2, [r3, #1]
90012cbe:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90012cc2:	f3c2 0801 	ubfx	r8, r2, #0, #2
90012cc6:	f3c2 0281 	ubfx	r2, r2, #2, #2
90012cca:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90012cce:	4b24      	ldr	r3, [pc, #144]	@ (90012d60 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90012cd0:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90012cd4:	681a      	ldr	r2, [r3, #0]
90012cd6:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
90012cda:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
90012cde:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
90012ce2:	6b26      	ldr	r6, [r4, #48]	@ 0x30
90012ce4:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
90012ce8:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
90012cec:	9107      	str	r1, [sp, #28]
90012cee:	f88d 8020 	strb.w	r8, [sp, #32]
90012cf2:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
90012cf6:	9609      	str	r6, [sp, #36]	@ 0x24
90012cf8:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
90012cfc:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
90012d00:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90012d04:	b10b      	cbz	r3, 90012d0a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90012d06:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
90012d08:	b905      	cbnz	r5, 90012d0c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90012d0a:	6895      	ldr	r5, [r2, #8]
90012d0c:	ae05      	add	r6, sp, #20
90012d0e:	4621      	mov	r1, r4
90012d10:	4630      	mov	r0, r6
90012d12:	f003 fedf 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012d16:	4b13      	ldr	r3, [pc, #76]	@ (90012d64 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90012d18:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90012d1a:	6818      	ldr	r0, [r3, #0]
90012d1c:	f7f3 f962 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
90012d20:	6823      	ldr	r3, [r4, #0]
90012d22:	4680      	mov	r8, r0
90012d24:	4620      	mov	r0, r4
90012d26:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012d28:	4798      	blx	r3
90012d2a:	6823      	ldr	r3, [r4, #0]
90012d2c:	4681      	mov	r9, r0
90012d2e:	4620      	mov	r0, r4
90012d30:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012d34:	4798      	blx	r3
90012d36:	ab07      	add	r3, sp, #28
90012d38:	f8cd 8004 	str.w	r8, [sp, #4]
90012d3c:	9300      	str	r3, [sp, #0]
90012d3e:	463b      	mov	r3, r7
90012d40:	e9cd 9002 	strd	r9, r0, [sp, #8]
90012d44:	4628      	mov	r0, r5
90012d46:	e896 0006 	ldmia.w	r6, {r1, r2}
90012d4a:	f7f3 f8fb 	bl	90005f44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90012d4e:	b00d      	add	sp, #52	@ 0x34
90012d50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012d54:	24021c38 	.word	0x24021c38
90012d58:	24021c34 	.word	0x24021c34
90012d5c:	24021c3c 	.word	0x24021c3c
90012d60:	24021bdc 	.word	0x24021bdc
90012d64:	24021c40 	.word	0x24021c40

90012d68 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
90012d68:	4770      	bx	lr

90012d6a <_ZN8touchgfx14ButtonWithIconD1Ev>:
90012d6a:	4770      	bx	lr

90012d6c <_ZN8touchgfx14ButtonWithIconD0Ev>:
90012d6c:	b510      	push	{r4, lr}
90012d6e:	4604      	mov	r4, r0
90012d70:	213c      	movs	r1, #60	@ 0x3c
90012d72:	f015 f95d 	bl	90028030 <_ZdlPvj>
90012d76:	4620      	mov	r0, r4
90012d78:	bd10      	pop	{r4, pc}

90012d7a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
90012d7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012d7e:	461c      	mov	r4, r3
90012d80:	4606      	mov	r6, r0
90012d82:	9f06      	ldr	r7, [sp, #24]
90012d84:	f7ff febf 	bl	90012b06 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
90012d88:	8823      	ldrh	r3, [r4, #0]
90012d8a:	f04f 0802 	mov.w	r8, #2
90012d8e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90012d92:	4638      	mov	r0, r7
90012d94:	86b3      	strh	r3, [r6, #52]	@ 0x34
90012d96:	883b      	ldrh	r3, [r7, #0]
90012d98:	fb95 f5f8 	sdiv	r5, r5, r8
90012d9c:	86f3      	strh	r3, [r6, #54]	@ 0x36
90012d9e:	b2ad      	uxth	r5, r5
90012da0:	f006 f8f0 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012da4:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
90012da8:	fb90 f0f8 	sdiv	r0, r0, r8
90012dac:	1a2d      	subs	r5, r5, r0
90012dae:	4638      	mov	r0, r7
90012db0:	fb94 f4f8 	sdiv	r4, r4, r8
90012db4:	8735      	strh	r5, [r6, #56]	@ 0x38
90012db6:	b2a4      	uxth	r4, r4
90012db8:	f006 f918 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
90012dbc:	fb90 f0f8 	sdiv	r0, r0, r8
90012dc0:	1a24      	subs	r4, r4, r0
90012dc2:	8774      	strh	r4, [r6, #58]	@ 0x3a
90012dc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012dc8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
90012dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012dcc:	4604      	mov	r4, r0
90012dce:	b08c      	sub	sp, #48	@ 0x30
90012dd0:	460d      	mov	r5, r1
90012dd2:	f7ff fedb 	bl	90012b8c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90012dd6:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90012dda:	2b00      	cmp	r3, #0
90012ddc:	d05d      	beq.n	90012e9a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
90012dde:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90012de0:	a805      	add	r0, sp, #20
90012de2:	f8ad 3014 	strh.w	r3, [sp, #20]
90012de6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
90012dea:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
90012dee:	f006 f8c9 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012df2:	4606      	mov	r6, r0
90012df4:	a805      	add	r0, sp, #20
90012df6:	f006 f8f9 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
90012dfa:	6869      	ldr	r1, [r5, #4]
90012dfc:	f8ad 001e 	strh.w	r0, [sp, #30]
90012e00:	ab08      	add	r3, sp, #32
90012e02:	6828      	ldr	r0, [r5, #0]
90012e04:	ad08      	add	r5, sp, #32
90012e06:	f8ad 8018 	strh.w	r8, [sp, #24]
90012e0a:	f8ad 701a 	strh.w	r7, [sp, #26]
90012e0e:	f8ad 601c 	strh.w	r6, [sp, #28]
90012e12:	c303      	stmia	r3!, {r0, r1}
90012e14:	a906      	add	r1, sp, #24
90012e16:	4628      	mov	r0, r5
90012e18:	f7fd f8d6 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
90012e1c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90012e20:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90012e24:	429a      	cmp	r2, r3
90012e26:	d035      	beq.n	90012e94 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90012e28:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90012e2c:	2b00      	cmp	r3, #0
90012e2e:	dd31      	ble.n	90012e94 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90012e30:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
90012e34:	2b00      	cmp	r3, #0
90012e36:	dd2d      	ble.n	90012e94 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90012e38:	2300      	movs	r3, #0
90012e3a:	a90a      	add	r1, sp, #40	@ 0x28
90012e3c:	4620      	mov	r0, r4
90012e3e:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
90012e42:	6823      	ldr	r3, [r4, #0]
90012e44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012e46:	4798      	blx	r3
90012e48:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90012e4c:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
90012e4e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
90012e52:	1a9b      	subs	r3, r3, r2
90012e54:	f8ad 3020 	strh.w	r3, [sp, #32]
90012e58:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
90012e5a:	1ac9      	subs	r1, r1, r3
90012e5c:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
90012e60:	490f      	ldr	r1, [pc, #60]	@ (90012ea0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
90012e62:	6809      	ldr	r1, [r1, #0]
90012e64:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
90012e68:	b108      	cbz	r0, 90012e6e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
90012e6a:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
90012e6c:	b900      	cbnz	r0, 90012e70 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90012e6e:	6888      	ldr	r0, [r1, #8]
90012e70:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
90012e74:	2601      	movs	r6, #1
90012e76:	440b      	add	r3, r1
90012e78:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
90012e7c:	440a      	add	r2, r1
90012e7e:	6801      	ldr	r1, [r0, #0]
90012e80:	9602      	str	r6, [sp, #8]
90012e82:	b21b      	sxth	r3, r3
90012e84:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
90012e88:	b212      	sxth	r2, r2
90012e8a:	e9cd 5400 	strd	r5, r4, [sp]
90012e8e:	688c      	ldr	r4, [r1, #8]
90012e90:	a905      	add	r1, sp, #20
90012e92:	47a0      	blx	r4
90012e94:	b00c      	add	sp, #48	@ 0x30
90012e96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012e9a:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90012e9c:	e7a0      	b.n	90012de0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
90012e9e:	bf00      	nop
90012ea0:	24021bdc 	.word	0x24021bdc

90012ea4 <_ZN8touchgfx14ButtonWithIconC1Ev>:
90012ea4:	2101      	movs	r1, #1
90012ea6:	2200      	movs	r2, #0
90012ea8:	b510      	push	{r4, lr}
90012eaa:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90012eae:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90012eb2:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90012eb6:	4c0d      	ldr	r4, [pc, #52]	@ (90012eec <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
90012eb8:	8082      	strh	r2, [r0, #4]
90012eba:	80c2      	strh	r2, [r0, #6]
90012ebc:	8102      	strh	r2, [r0, #8]
90012ebe:	8142      	strh	r2, [r0, #10]
90012ec0:	8182      	strh	r2, [r0, #12]
90012ec2:	81c2      	strh	r2, [r0, #14]
90012ec4:	8202      	strh	r2, [r0, #16]
90012ec6:	8242      	strh	r2, [r0, #18]
90012ec8:	61c2      	str	r2, [r0, #28]
90012eca:	8402      	strh	r2, [r0, #32]
90012ecc:	8442      	strh	r2, [r0, #34]	@ 0x22
90012ece:	6282      	str	r2, [r0, #40]	@ 0x28
90012ed0:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90012ed4:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90012ed6:	8601      	strh	r1, [r0, #48]	@ 0x30
90012ed8:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90012edc:	6004      	str	r4, [r0, #0]
90012ede:	8681      	strh	r1, [r0, #52]	@ 0x34
90012ee0:	86c1      	strh	r1, [r0, #54]	@ 0x36
90012ee2:	8702      	strh	r2, [r0, #56]	@ 0x38
90012ee4:	8742      	strh	r2, [r0, #58]	@ 0x3a
90012ee6:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012eea:	bd10      	pop	{r4, pc}
90012eec:	9002d83c 	.word	0x9002d83c

90012ef0 <_ZN8touchgfx5ImageD1Ev>:
90012ef0:	4770      	bx	lr

90012ef2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90012ef2:	b570      	push	{r4, r5, r6, lr}
90012ef4:	880b      	ldrh	r3, [r1, #0]
90012ef6:	460d      	mov	r5, r1
90012ef8:	4604      	mov	r4, r0
90012efa:	84c3      	strh	r3, [r0, #38]	@ 0x26
90012efc:	4608      	mov	r0, r1
90012efe:	f006 f841 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012f02:	4606      	mov	r6, r0
90012f04:	4628      	mov	r0, r5
90012f06:	f006 f871 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
90012f0a:	6823      	ldr	r3, [r4, #0]
90012f0c:	4605      	mov	r5, r0
90012f0e:	4631      	mov	r1, r6
90012f10:	4620      	mov	r0, r4
90012f12:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012f14:	4798      	blx	r3
90012f16:	6823      	ldr	r3, [r4, #0]
90012f18:	4629      	mov	r1, r5
90012f1a:	4620      	mov	r0, r4
90012f1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012f1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012f22:	4718      	bx	r3

90012f24 <_ZN8touchgfx5ImageD0Ev>:
90012f24:	b510      	push	{r4, lr}
90012f26:	4604      	mov	r4, r0
90012f28:	212c      	movs	r1, #44	@ 0x2c
90012f2a:	f015 f881 	bl	90028030 <_ZdlPvj>
90012f2e:	4620      	mov	r0, r4
90012f30:	bd10      	pop	{r4, pc}

90012f32 <_ZNK8touchgfx5Image12getSolidRectEv>:
90012f32:	b510      	push	{r4, lr}
90012f34:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90012f38:	4604      	mov	r4, r0
90012f3a:	2bff      	cmp	r3, #255	@ 0xff
90012f3c:	d006      	beq.n	90012f4c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90012f3e:	2300      	movs	r3, #0
90012f40:	8003      	strh	r3, [r0, #0]
90012f42:	8043      	strh	r3, [r0, #2]
90012f44:	8083      	strh	r3, [r0, #4]
90012f46:	80c3      	strh	r3, [r0, #6]
90012f48:	4620      	mov	r0, r4
90012f4a:	bd10      	pop	{r4, pc}
90012f4c:	3126      	adds	r1, #38	@ 0x26
90012f4e:	f006 f881 	bl	90019054 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012f52:	e7f9      	b.n	90012f48 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90012f54 <_ZNK8touchgfx5Image17invalidateContentEv>:
90012f54:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90012f58:	b12a      	cbz	r2, 90012f66 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012f5a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012f5e:	b112      	cbz	r2, 90012f66 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012f60:	6803      	ldr	r3, [r0, #0]
90012f62:	695b      	ldr	r3, [r3, #20]
90012f64:	4718      	bx	r3
90012f66:	4770      	bx	lr

90012f68 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90012f68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012f6c:	4604      	mov	r4, r0
90012f6e:	b088      	sub	sp, #32
90012f70:	2500      	movs	r5, #0
90012f72:	460f      	mov	r7, r1
90012f74:	f854 3b26 	ldr.w	r3, [r4], #38
90012f78:	a904      	add	r1, sp, #16
90012f7a:	4606      	mov	r6, r0
90012f7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012f7e:	e9cd 5504 	strd	r5, r5, [sp, #16]
90012f82:	4798      	blx	r3
90012f84:	4620      	mov	r0, r4
90012f86:	f005 fffd 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012f8a:	4680      	mov	r8, r0
90012f8c:	4620      	mov	r0, r4
90012f8e:	f006 f82d 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
90012f92:	9506      	str	r5, [sp, #24]
90012f94:	ad06      	add	r5, sp, #24
90012f96:	f8ad 001e 	strh.w	r0, [sp, #30]
90012f9a:	4639      	mov	r1, r7
90012f9c:	f8ad 801c 	strh.w	r8, [sp, #28]
90012fa0:	4628      	mov	r0, r5
90012fa2:	f7fd f811 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
90012fa6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90012faa:	2b00      	cmp	r3, #0
90012fac:	dd19      	ble.n	90012fe2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90012fae:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90012fb2:	2b00      	cmp	r3, #0
90012fb4:	dd15      	ble.n	90012fe2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90012fb6:	4b0c      	ldr	r3, [pc, #48]	@ (90012fe8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90012fb8:	681b      	ldr	r3, [r3, #0]
90012fba:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90012fbe:	b10a      	cbz	r2, 90012fc4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90012fc0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90012fc2:	b900      	cbnz	r0, 90012fc6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90012fc4:	6898      	ldr	r0, [r3, #8]
90012fc6:	2701      	movs	r7, #1
90012fc8:	6801      	ldr	r1, [r0, #0]
90012fca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90012fce:	9702      	str	r7, [sp, #8]
90012fd0:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90012fd4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90012fd8:	e9cd 5600 	strd	r5, r6, [sp]
90012fdc:	688d      	ldr	r5, [r1, #8]
90012fde:	4621      	mov	r1, r4
90012fe0:	47a8      	blx	r5
90012fe2:	b008      	add	sp, #32
90012fe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012fe8:	24021bdc 	.word	0x24021bdc

90012fec <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90012fec:	4770      	bx	lr

90012fee <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90012fee:	b510      	push	{r4, lr}
90012ff0:	4604      	mov	r4, r0
90012ff2:	2148      	movs	r1, #72	@ 0x48
90012ff4:	f015 f81c 	bl	90028030 <_ZdlPvj>
90012ff8:	4620      	mov	r0, r4
90012ffa:	bd10      	pop	{r4, pc}

90012ffc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90012ffc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013000:	b08d      	sub	sp, #52	@ 0x34
90013002:	4604      	mov	r4, r0
90013004:	460f      	mov	r7, r1
90013006:	f7ff fdc1 	bl	90012b8c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001300a:	4a55      	ldr	r2, [pc, #340]	@ (90013160 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
9001300c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001300e:	8812      	ldrh	r2, [r2, #0]
90013010:	429a      	cmp	r2, r3
90013012:	f240 8082 	bls.w	9001311a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013016:	4d53      	ldr	r5, [pc, #332]	@ (90013164 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90013018:	682a      	ldr	r2, [r5, #0]
9001301a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9001301e:	4b52      	ldr	r3, [pc, #328]	@ (90013168 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90013020:	681b      	ldr	r3, [r3, #0]
90013022:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90013026:	2200      	movs	r2, #0
90013028:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
9001302c:	e9cd 2203 	strd	r2, r2, [sp, #12]
90013030:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
90013034:	2a03      	cmp	r2, #3
90013036:	d811      	bhi.n	9001305c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013038:	e8df f002 	tbb	[pc, r2]
9001303c:	89727902 	.word	0x89727902
90013040:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013044:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013048:	1ad2      	subs	r2, r2, r3
9001304a:	2002      	movs	r0, #2
9001304c:	f8ad 1010 	strh.w	r1, [sp, #16]
90013050:	f8ad 3012 	strh.w	r3, [sp, #18]
90013054:	fb92 f2f0 	sdiv	r2, r2, r0
90013058:	f8ad 200e 	strh.w	r2, [sp, #14]
9001305c:	f10d 080c 	add.w	r8, sp, #12
90013060:	f10d 0914 	add.w	r9, sp, #20
90013064:	e898 0003 	ldmia.w	r8, {r0, r1}
90013068:	e889 0003 	stmia.w	r9, {r0, r1}
9001306c:	4639      	mov	r1, r7
9001306e:	4648      	mov	r0, r9
90013070:	f7fc ffaa 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
90013074:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013078:	2b00      	cmp	r3, #0
9001307a:	dd4e      	ble.n	9001311a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001307c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90013080:	2b00      	cmp	r3, #0
90013082:	dd4a      	ble.n	9001311a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013084:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90013088:	4641      	mov	r1, r8
9001308a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001308e:	4620      	mov	r0, r4
90013090:	1a9b      	subs	r3, r3, r2
90013092:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90013096:	f8ad 3014 	strh.w	r3, [sp, #20]
9001309a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
9001309e:	1a9b      	subs	r3, r3, r2
900130a0:	f8ad 3016 	strh.w	r3, [sp, #22]
900130a4:	6823      	ldr	r3, [r4, #0]
900130a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900130a8:	4798      	blx	r3
900130aa:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
900130ae:	2b00      	cmp	r3, #0
900130b0:	d053      	beq.n	9001315a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
900130b2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
900130b4:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
900130b6:	682b      	ldr	r3, [r5, #0]
900130b8:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
900130bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900130c0:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
900130c4:	785b      	ldrb	r3, [r3, #1]
900130c6:	9209      	str	r2, [sp, #36]	@ 0x24
900130c8:	f3c3 0501 	ubfx	r5, r3, #0, #2
900130cc:	f3c3 0381 	ubfx	r3, r3, #2, #2
900130d0:	9607      	str	r6, [sp, #28]
900130d2:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
900130d6:	2300      	movs	r3, #0
900130d8:	f88d 5020 	strb.w	r5, [sp, #32]
900130dc:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
900130e0:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
900130e4:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
900130e8:	4b20      	ldr	r3, [pc, #128]	@ (9001316c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
900130ea:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900130ee:	681b      	ldr	r3, [r3, #0]
900130f0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900130f4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900130f8:	b10a      	cbz	r2, 900130fe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
900130fa:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
900130fc:	b904      	cbnz	r4, 90013100 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
900130fe:	689c      	ldr	r4, [r3, #8]
90013100:	4b1b      	ldr	r3, [pc, #108]	@ (90013170 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90013102:	6818      	ldr	r0, [r3, #0]
90013104:	f7f2 ff6e 	bl	90005fe4 <_ZNK8touchgfx5Texts7getTextEt>
90013108:	ab07      	add	r3, sp, #28
9001310a:	9001      	str	r0, [sp, #4]
9001310c:	4620      	mov	r0, r4
9001310e:	9300      	str	r3, [sp, #0]
90013110:	464b      	mov	r3, r9
90013112:	e898 0006 	ldmia.w	r8, {r1, r2}
90013116:	f7f2 ff15 	bl	90005f44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001311a:	b00d      	add	sp, #52	@ 0x34
9001311c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013120:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013124:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013128:	1ad2      	subs	r2, r2, r3
9001312a:	3201      	adds	r2, #1
9001312c:	e78d      	b.n	9001304a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
9001312e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013132:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013136:	1ad2      	subs	r2, r2, r3
90013138:	3201      	adds	r2, #1
9001313a:	2002      	movs	r0, #2
9001313c:	f8ad 3010 	strh.w	r3, [sp, #16]
90013140:	f8ad 1012 	strh.w	r1, [sp, #18]
90013144:	fb92 f2f0 	sdiv	r2, r2, r0
90013148:	f8ad 200c 	strh.w	r2, [sp, #12]
9001314c:	e786      	b.n	9001305c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
9001314e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013152:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013156:	1ad2      	subs	r2, r2, r3
90013158:	e7ef      	b.n	9001313a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
9001315a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9001315c:	e7aa      	b.n	900130b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
9001315e:	bf00      	nop
90013160:	24021c38 	.word	0x24021c38
90013164:	24021c34 	.word	0x24021c34
90013168:	24021c3c 	.word	0x24021c3c
9001316c:	24021bdc 	.word	0x24021bdc
90013170:	24021c40 	.word	0x24021c40

90013174 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90013174:	2101      	movs	r1, #1
90013176:	2200      	movs	r2, #0
90013178:	b510      	push	{r4, lr}
9001317a:	4c13      	ldr	r4, [pc, #76]	@ (900131c8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
9001317c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90013180:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90013184:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90013188:	6004      	str	r4, [r0, #0]
9001318a:	4c10      	ldr	r4, [pc, #64]	@ (900131cc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
9001318c:	8082      	strh	r2, [r0, #4]
9001318e:	80c2      	strh	r2, [r0, #6]
90013190:	8102      	strh	r2, [r0, #8]
90013192:	8142      	strh	r2, [r0, #10]
90013194:	8182      	strh	r2, [r0, #12]
90013196:	81c2      	strh	r2, [r0, #14]
90013198:	8202      	strh	r2, [r0, #16]
9001319a:	8242      	strh	r2, [r0, #18]
9001319c:	61c2      	str	r2, [r0, #28]
9001319e:	8402      	strh	r2, [r0, #32]
900131a0:	8442      	strh	r2, [r0, #34]	@ 0x22
900131a2:	6282      	str	r2, [r0, #40]	@ 0x28
900131a4:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
900131a8:	85c1      	strh	r1, [r0, #46]	@ 0x2e
900131aa:	8601      	strh	r1, [r0, #48]	@ 0x30
900131ac:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
900131b0:	6344      	str	r4, [r0, #52]	@ 0x34
900131b2:	8701      	strh	r1, [r0, #56]	@ 0x38
900131b4:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
900131b8:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
900131bc:	e9c0 2205 	strd	r2, r2, [r0, #20]
900131c0:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
900131c4:	bd10      	pop	{r4, pc}
900131c6:	bf00      	nop
900131c8:	9002d920 	.word	0x9002d920
900131cc:	9002c9d8 	.word	0x9002c9d8

900131d0 <_ZN8touchgfx7OutlineD1Ev>:
900131d0:	4770      	bx	lr

900131d2 <_ZN8touchgfx7OutlineD0Ev>:
900131d2:	b510      	push	{r4, lr}
900131d4:	4604      	mov	r4, r0
900131d6:	2130      	movs	r1, #48	@ 0x30
900131d8:	f014 ff2a 	bl	90028030 <_ZdlPvj>
900131dc:	4620      	mov	r0, r4
900131de:	bd10      	pop	{r4, pc}

900131e0 <_ZN8touchgfx7Outline5resetEv>:
900131e0:	b510      	push	{r4, lr}
900131e2:	4604      	mov	r4, r0
900131e4:	f000 fe72 	bl	90013ecc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
900131e8:	60e0      	str	r0, [r4, #12]
900131ea:	f000 fe75 	bl	90013ed8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
900131ee:	68e3      	ldr	r3, [r4, #12]
900131f0:	08c0      	lsrs	r0, r0, #3
900131f2:	2200      	movs	r2, #0
900131f4:	f647 71ff 	movw	r1, #32767	@ 0x7fff
900131f8:	6123      	str	r3, [r4, #16]
900131fa:	3801      	subs	r0, #1
900131fc:	60a2      	str	r2, [r4, #8]
900131fe:	6060      	str	r0, [r4, #4]
90013200:	8019      	strh	r1, [r3, #0]
90013202:	8059      	strh	r1, [r3, #2]
90013204:	809a      	strh	r2, [r3, #4]
90013206:	80da      	strh	r2, [r3, #6]
90013208:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001320a:	f023 0301 	bic.w	r3, r3, #1
9001320e:	f043 0302 	orr.w	r3, r3, #2
90013212:	6263      	str	r3, [r4, #36]	@ 0x24
90013214:	bd10      	pop	{r4, pc}
	...

90013218 <_ZN8touchgfx7OutlineC1Ev>:
90013218:	4b0a      	ldr	r3, [pc, #40]	@ (90013244 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
9001321a:	b510      	push	{r4, lr}
9001321c:	6003      	str	r3, [r0, #0]
9001321e:	2300      	movs	r3, #0
90013220:	4604      	mov	r4, r0
90013222:	6243      	str	r3, [r0, #36]	@ 0x24
90013224:	e9c0 3301 	strd	r3, r3, [r0, #4]
90013228:	e9c0 3303 	strd	r3, r3, [r0, #12]
9001322c:	e9c0 3305 	strd	r3, r3, [r0, #20]
90013230:	e9c0 3307 	strd	r3, r3, [r0, #28]
90013234:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90013238:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
9001323c:	f7ff ffd0 	bl	900131e0 <_ZN8touchgfx7Outline5resetEv>
90013240:	4620      	mov	r0, r4
90013242:	bd10      	pop	{r4, pc}
90013244:	9002d994 	.word	0x9002d994

90013248 <_ZN8touchgfx7Outline10renderLineEiiii>:
90013248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001324c:	b093      	sub	sp, #76	@ 0x4c
9001324e:	1156      	asrs	r6, r2, #5
90013250:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90013252:	9305      	str	r3, [sp, #20]
90013254:	1153      	asrs	r3, r2, #5
90013256:	f004 051f 	and.w	r5, r4, #31
9001325a:	9303      	str	r3, [sp, #12]
9001325c:	1163      	asrs	r3, r4, #5
9001325e:	9504      	str	r5, [sp, #16]
90013260:	1165      	asrs	r5, r4, #5
90013262:	9306      	str	r3, [sp, #24]
90013264:	f002 031f 	and.w	r3, r2, #31
90013268:	42ae      	cmp	r6, r5
9001326a:	f040 80f4 	bne.w	90013456 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
9001326e:	9c04      	ldr	r4, [sp, #16]
90013270:	9a05      	ldr	r2, [sp, #20]
90013272:	42a3      	cmp	r3, r4
90013274:	ea4f 1e62 	mov.w	lr, r2, asr #5
90013278:	6902      	ldr	r2, [r0, #16]
9001327a:	d125      	bne.n	900132c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
9001327c:	f9b2 3000 	ldrsh.w	r3, [r2]
90013280:	459e      	cmp	lr, r3
90013282:	d103      	bne.n	9001328c <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90013284:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013288:	429e      	cmp	r6, r3
9001328a:	d035      	beq.n	900132f8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001328c:	88d1      	ldrh	r1, [r2, #6]
9001328e:	8893      	ldrh	r3, [r2, #4]
90013290:	430b      	orrs	r3, r1
90013292:	d010      	beq.n	900132b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013294:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013298:	2b00      	cmp	r3, #0
9001329a:	db0c      	blt.n	900132b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
9001329c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9001329e:	428b      	cmp	r3, r1
900132a0:	da09      	bge.n	900132b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900132a2:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900132a6:	428b      	cmp	r3, r1
900132a8:	f103 0301 	add.w	r3, r3, #1
900132ac:	bf38      	it	cc
900132ae:	3208      	addcc	r2, #8
900132b0:	6083      	str	r3, [r0, #8]
900132b2:	bf38      	it	cc
900132b4:	6102      	strcc	r2, [r0, #16]
900132b6:	6903      	ldr	r3, [r0, #16]
900132b8:	9a03      	ldr	r2, [sp, #12]
900132ba:	f8a3 e000 	strh.w	lr, [r3]
900132be:	805a      	strh	r2, [r3, #2]
900132c0:	2200      	movs	r2, #0
900132c2:	809a      	strh	r2, [r3, #4]
900132c4:	80da      	strh	r2, [r3, #6]
900132c6:	e017      	b.n	900132f8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900132c8:	9c05      	ldr	r4, [sp, #20]
900132ca:	114e      	asrs	r6, r1, #5
900132cc:	f001 0c1f 	and.w	ip, r1, #31
900132d0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
900132d4:	f004 041f 	and.w	r4, r4, #31
900132d8:	4576      	cmp	r6, lr
900132da:	f8b2 a006 	ldrh.w	sl, [r2, #6]
900132de:	9402      	str	r4, [sp, #8]
900132e0:	9c04      	ldr	r4, [sp, #16]
900132e2:	eba4 0403 	sub.w	r4, r4, r3
900132e6:	d10a      	bne.n	900132fe <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
900132e8:	9b02      	ldr	r3, [sp, #8]
900132ea:	44a0      	add	r8, r4
900132ec:	449c      	add	ip, r3
900132ee:	f8a2 8004 	strh.w	r8, [r2, #4]
900132f2:	fb04 a40c 	mla	r4, r4, ip, sl
900132f6:	80d4      	strh	r4, [r2, #6]
900132f8:	b013      	add	sp, #76	@ 0x4c
900132fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900132fe:	9d05      	ldr	r5, [sp, #20]
90013300:	1a69      	subs	r1, r5, r1
90013302:	bf51      	iteee	pl
90013304:	f1cc 0520 	rsbpl	r5, ip, #32
90013308:	fb04 f40c 	mulmi.w	r4, r4, ip
9001330c:	4249      	negmi	r1, r1
9001330e:	2500      	movmi	r5, #0
90013310:	bf5d      	ittte	pl
90013312:	436c      	mulpl	r4, r5
90013314:	2520      	movpl	r5, #32
90013316:	f04f 0901 	movpl.w	r9, #1
9001331a:	f04f 39ff 	movmi.w	r9, #4294967295
9001331e:	9501      	str	r5, [sp, #4]
90013320:	9f01      	ldr	r7, [sp, #4]
90013322:	444e      	add	r6, r9
90013324:	fb94 f5f1 	sdiv	r5, r4, r1
90013328:	fb01 4415 	mls	r4, r1, r5, r4
9001332c:	44bc      	add	ip, r7
9001332e:	2c00      	cmp	r4, #0
90013330:	bfbc      	itt	lt
90013332:	f105 35ff 	addlt.w	r5, r5, #4294967295
90013336:	1864      	addlt	r4, r4, r1
90013338:	44a8      	add	r8, r5
9001333a:	fb05 ac0c 	mla	ip, r5, ip, sl
9001333e:	f8a2 8004 	strh.w	r8, [r2, #4]
90013342:	f8a2 c006 	strh.w	ip, [r2, #6]
90013346:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001334a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001334e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90013352:	ea58 0202 	orrs.w	r2, r8, r2
90013356:	d011      	beq.n	9001337c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013358:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001335c:	f1b8 0f00 	cmp.w	r8, #0
90013360:	db0c      	blt.n	9001337c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013362:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90013364:	4590      	cmp	r8, r2
90013366:	da09      	bge.n	9001337c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013368:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
9001336c:	4590      	cmp	r8, r2
9001336e:	bf3c      	itt	cc
90013370:	f10c 0208 	addcc.w	r2, ip, #8
90013374:	6102      	strcc	r2, [r0, #16]
90013376:	f108 0201 	add.w	r2, r8, #1
9001337a:	6082      	str	r2, [r0, #8]
9001337c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013380:	2700      	movs	r7, #0
90013382:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90013386:	45b6      	cmp	lr, r6
90013388:	f8ac 6000 	strh.w	r6, [ip]
9001338c:	442b      	add	r3, r5
9001338e:	f8ac 2002 	strh.w	r2, [ip, #2]
90013392:	f8ac 7004 	strh.w	r7, [ip, #4]
90013396:	f8ac 7006 	strh.w	r7, [ip, #6]
9001339a:	d04b      	beq.n	90013434 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
9001339c:	9f04      	ldr	r7, [sp, #16]
9001339e:	1a64      	subs	r4, r4, r1
900133a0:	f04f 0a00 	mov.w	sl, #0
900133a4:	1aff      	subs	r7, r7, r3
900133a6:	443d      	add	r5, r7
900133a8:	016d      	lsls	r5, r5, #5
900133aa:	fb95 f8f1 	sdiv	r8, r5, r1
900133ae:	fb01 5518 	mls	r5, r1, r8, r5
900133b2:	2d00      	cmp	r5, #0
900133b4:	bfbc      	itt	lt
900133b6:	f108 38ff 	addlt.w	r8, r8, #4294967295
900133ba:	186d      	addlt	r5, r5, r1
900133bc:	f108 0701 	add.w	r7, r8, #1
900133c0:	9703      	str	r7, [sp, #12]
900133c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900133c6:	1964      	adds	r4, r4, r5
900133c8:	444e      	add	r6, r9
900133ca:	bf54      	ite	pl
900133cc:	9f03      	ldrpl	r7, [sp, #12]
900133ce:	4647      	movmi	r7, r8
900133d0:	f8bc b004 	ldrh.w	fp, [ip, #4]
900133d4:	bf58      	it	pl
900133d6:	1a64      	subpl	r4, r4, r1
900133d8:	443b      	add	r3, r7
900133da:	44bb      	add	fp, r7
900133dc:	f8ac b004 	strh.w	fp, [ip, #4]
900133e0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900133e4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900133e8:	f8ac b006 	strh.w	fp, [ip, #6]
900133ec:	f8d0 c010 	ldr.w	ip, [r0, #16]
900133f0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900133f4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900133f8:	ea5b 0707 	orrs.w	r7, fp, r7
900133fc:	d011      	beq.n	90013422 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900133fe:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013402:	f1bb 0f00 	cmp.w	fp, #0
90013406:	db0c      	blt.n	90013422 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013408:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001340a:	45bb      	cmp	fp, r7
9001340c:	da09      	bge.n	90013422 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001340e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013412:	45bb      	cmp	fp, r7
90013414:	bf3c      	itt	cc
90013416:	f10c 0708 	addcc.w	r7, ip, #8
9001341a:	6107      	strcc	r7, [r0, #16]
9001341c:	f10b 0701 	add.w	r7, fp, #1
90013420:	6087      	str	r7, [r0, #8]
90013422:	6907      	ldr	r7, [r0, #16]
90013424:	45b6      	cmp	lr, r6
90013426:	803e      	strh	r6, [r7, #0]
90013428:	807a      	strh	r2, [r7, #2]
9001342a:	f8a7 a004 	strh.w	sl, [r7, #4]
9001342e:	f8a7 a006 	strh.w	sl, [r7, #6]
90013432:	d1c6      	bne.n	900133c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90013434:	9a04      	ldr	r2, [sp, #16]
90013436:	1ad3      	subs	r3, r2, r3
90013438:	6902      	ldr	r2, [r0, #16]
9001343a:	8891      	ldrh	r1, [r2, #4]
9001343c:	88d6      	ldrh	r6, [r2, #6]
9001343e:	4419      	add	r1, r3
90013440:	8091      	strh	r1, [r2, #4]
90013442:	9902      	ldr	r1, [sp, #8]
90013444:	f101 0c20 	add.w	ip, r1, #32
90013448:	9901      	ldr	r1, [sp, #4]
9001344a:	ebac 0c01 	sub.w	ip, ip, r1
9001344e:	fb03 630c 	mla	r3, r3, ip, r6
90013452:	80d3      	strh	r3, [r2, #6]
90013454:	e750      	b.n	900132f8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013456:	9d05      	ldr	r5, [sp, #20]
90013458:	1aa2      	subs	r2, r4, r2
9001345a:	eba5 0501 	sub.w	r5, r5, r1
9001345e:	9202      	str	r2, [sp, #8]
90013460:	9508      	str	r5, [sp, #32]
90013462:	f140 8128 	bpl.w	900136b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90013466:	9a03      	ldr	r2, [sp, #12]
90013468:	2a00      	cmp	r2, #0
9001346a:	f6ff af45 	blt.w	900132f8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001346e:	9a02      	ldr	r2, [sp, #8]
90013470:	f04f 34ff 	mov.w	r4, #4294967295
90013474:	4252      	negs	r2, r2
90013476:	940b      	str	r4, [sp, #44]	@ 0x2c
90013478:	2400      	movs	r4, #0
9001347a:	9202      	str	r2, [sp, #8]
9001347c:	9a06      	ldr	r2, [sp, #24]
9001347e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90013482:	9206      	str	r2, [sp, #24]
90013484:	462a      	mov	r2, r5
90013486:	435a      	muls	r2, r3
90013488:	9401      	str	r4, [sp, #4]
9001348a:	9c02      	ldr	r4, [sp, #8]
9001348c:	9d02      	ldr	r5, [sp, #8]
9001348e:	fb92 f4f4 	sdiv	r4, r2, r4
90013492:	fb05 2214 	mls	r2, r5, r4, r2
90013496:	2a00      	cmp	r2, #0
90013498:	9207      	str	r2, [sp, #28]
9001349a:	bfbc      	itt	lt
9001349c:	1952      	addlt	r2, r2, r5
9001349e:	f104 34ff 	addlt.w	r4, r4, #4294967295
900134a2:	6905      	ldr	r5, [r0, #16]
900134a4:	bfb8      	it	lt
900134a6:	9207      	strlt	r2, [sp, #28]
900134a8:	eb04 0901 	add.w	r9, r4, r1
900134ac:	9a01      	ldr	r2, [sp, #4]
900134ae:	ea4f 1669 	mov.w	r6, r9, asr #5
900134b2:	429a      	cmp	r2, r3
900134b4:	f040 8111 	bne.w	900136da <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
900134b8:	f9b5 3000 	ldrsh.w	r3, [r5]
900134bc:	429e      	cmp	r6, r3
900134be:	d104      	bne.n	900134ca <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
900134c0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900134c4:	9a03      	ldr	r2, [sp, #12]
900134c6:	429a      	cmp	r2, r3
900134c8:	d01b      	beq.n	90013502 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900134ca:	88ea      	ldrh	r2, [r5, #6]
900134cc:	88ab      	ldrh	r3, [r5, #4]
900134ce:	4313      	orrs	r3, r2
900134d0:	d010      	beq.n	900134f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900134d2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900134d6:	2a00      	cmp	r2, #0
900134d8:	db0c      	blt.n	900134f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900134da:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900134dc:	429a      	cmp	r2, r3
900134de:	da09      	bge.n	900134f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900134e0:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
900134e4:	429a      	cmp	r2, r3
900134e6:	f102 0201 	add.w	r2, r2, #1
900134ea:	bf38      	it	cc
900134ec:	3508      	addcc	r5, #8
900134ee:	6082      	str	r2, [r0, #8]
900134f0:	bf38      	it	cc
900134f2:	6105      	strcc	r5, [r0, #16]
900134f4:	6903      	ldr	r3, [r0, #16]
900134f6:	9a03      	ldr	r2, [sp, #12]
900134f8:	801e      	strh	r6, [r3, #0]
900134fa:	805a      	strh	r2, [r3, #2]
900134fc:	2200      	movs	r2, #0
900134fe:	809a      	strh	r2, [r3, #4]
90013500:	80da      	strh	r2, [r3, #6]
90013502:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013504:	9a03      	ldr	r2, [sp, #12]
90013506:	6901      	ldr	r1, [r0, #16]
90013508:	441a      	add	r2, r3
9001350a:	f9b1 3000 	ldrsh.w	r3, [r1]
9001350e:	42b3      	cmp	r3, r6
90013510:	d103      	bne.n	9001351a <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90013512:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90013516:	429a      	cmp	r2, r3
90013518:	d01a      	beq.n	90013550 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
9001351a:	88cc      	ldrh	r4, [r1, #6]
9001351c:	888b      	ldrh	r3, [r1, #4]
9001351e:	4323      	orrs	r3, r4
90013520:	d010      	beq.n	90013544 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013522:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013526:	2c00      	cmp	r4, #0
90013528:	db0c      	blt.n	90013544 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001352a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001352c:	429c      	cmp	r4, r3
9001352e:	da09      	bge.n	90013544 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013530:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013534:	429c      	cmp	r4, r3
90013536:	f104 0401 	add.w	r4, r4, #1
9001353a:	bf38      	it	cc
9001353c:	3108      	addcc	r1, #8
9001353e:	6084      	str	r4, [r0, #8]
90013540:	bf38      	it	cc
90013542:	6101      	strcc	r1, [r0, #16]
90013544:	6903      	ldr	r3, [r0, #16]
90013546:	2100      	movs	r1, #0
90013548:	801e      	strh	r6, [r3, #0]
9001354a:	805a      	strh	r2, [r3, #2]
9001354c:	8099      	strh	r1, [r3, #4]
9001354e:	80d9      	strh	r1, [r3, #6]
90013550:	9b06      	ldr	r3, [sp, #24]
90013552:	4293      	cmp	r3, r2
90013554:	f000 8082 	beq.w	9001365c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90013558:	9b08      	ldr	r3, [sp, #32]
9001355a:	9902      	ldr	r1, [sp, #8]
9001355c:	015b      	lsls	r3, r3, #5
9001355e:	9c02      	ldr	r4, [sp, #8]
90013560:	fb93 f1f1 	sdiv	r1, r3, r1
90013564:	fb04 3311 	mls	r3, r4, r1, r3
90013568:	9103      	str	r1, [sp, #12]
9001356a:	2b00      	cmp	r3, #0
9001356c:	9308      	str	r3, [sp, #32]
9001356e:	da04      	bge.n	9001357a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90013570:	1e4b      	subs	r3, r1, #1
90013572:	9303      	str	r3, [sp, #12]
90013574:	9b08      	ldr	r3, [sp, #32]
90013576:	4423      	add	r3, r4
90013578:	9308      	str	r3, [sp, #32]
9001357a:	9b07      	ldr	r3, [sp, #28]
9001357c:	464f      	mov	r7, r9
9001357e:	9902      	ldr	r1, [sp, #8]
90013580:	2600      	movs	r6, #0
90013582:	1a5b      	subs	r3, r3, r1
90013584:	9307      	str	r3, [sp, #28]
90013586:	9b01      	ldr	r3, [sp, #4]
90013588:	f1c3 0320 	rsb	r3, r3, #32
9001358c:	930e      	str	r3, [sp, #56]	@ 0x38
9001358e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90013590:	9b01      	ldr	r3, [sp, #4]
90013592:	1a5b      	subs	r3, r3, r1
90013594:	930a      	str	r3, [sp, #40]	@ 0x28
90013596:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
9001359a:	185b      	adds	r3, r3, r1
9001359c:	bf58      	it	pl
9001359e:	9902      	ldrpl	r1, [sp, #8]
900135a0:	9307      	str	r3, [sp, #28]
900135a2:	bf57      	itett	pl
900135a4:	1a5b      	subpl	r3, r3, r1
900135a6:	9903      	ldrmi	r1, [sp, #12]
900135a8:	9307      	strpl	r3, [sp, #28]
900135aa:	9b03      	ldrpl	r3, [sp, #12]
900135ac:	bf58      	it	pl
900135ae:	1c59      	addpl	r1, r3, #1
900135b0:	2a00      	cmp	r2, #0
900135b2:	4489      	add	r9, r1
900135b4:	ea4f 1a69 	mov.w	sl, r9, asr #5
900135b8:	db2e      	blt.n	90013618 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900135ba:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900135bc:	4293      	cmp	r3, r2
900135be:	dd2b      	ble.n	90013618 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900135c0:	9c01      	ldr	r4, [sp, #4]
900135c2:	6905      	ldr	r5, [r0, #16]
900135c4:	46a0      	mov	r8, r4
900135c6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900135c8:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
900135cc:	45a0      	cmp	r8, r4
900135ce:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
900135d2:	f040 814c 	bne.w	9001386e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
900135d6:	f9b5 1000 	ldrsh.w	r1, [r5]
900135da:	4551      	cmp	r1, sl
900135dc:	d103      	bne.n	900135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
900135de:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
900135e2:	4291      	cmp	r1, r2
900135e4:	d018      	beq.n	90013618 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900135e6:	ea5c 010e 	orrs.w	r1, ip, lr
900135ea:	d00f      	beq.n	9001360c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900135ec:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
900135f0:	2900      	cmp	r1, #0
900135f2:	db0b      	blt.n	9001360c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900135f4:	428b      	cmp	r3, r1
900135f6:	dd09      	ble.n	9001360c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900135f8:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
900135fc:	4299      	cmp	r1, r3
900135fe:	f101 0101 	add.w	r1, r1, #1
90013602:	bf38      	it	cc
90013604:	3508      	addcc	r5, #8
90013606:	6081      	str	r1, [r0, #8]
90013608:	bf38      	it	cc
9001360a:	6105      	strcc	r5, [r0, #16]
9001360c:	6903      	ldr	r3, [r0, #16]
9001360e:	f8a3 a000 	strh.w	sl, [r3]
90013612:	805a      	strh	r2, [r3, #2]
90013614:	809e      	strh	r6, [r3, #4]
90013616:	80de      	strh	r6, [r3, #6]
90013618:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001361a:	6901      	ldr	r1, [r0, #16]
9001361c:	441a      	add	r2, r3
9001361e:	88cc      	ldrh	r4, [r1, #6]
90013620:	888b      	ldrh	r3, [r1, #4]
90013622:	4323      	orrs	r3, r4
90013624:	d010      	beq.n	90013648 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013626:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
9001362a:	2c00      	cmp	r4, #0
9001362c:	db0c      	blt.n	90013648 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001362e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013630:	429c      	cmp	r4, r3
90013632:	da09      	bge.n	90013648 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013634:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013638:	429c      	cmp	r4, r3
9001363a:	f104 0401 	add.w	r4, r4, #1
9001363e:	bf38      	it	cc
90013640:	3108      	addcc	r1, #8
90013642:	6084      	str	r4, [r0, #8]
90013644:	bf38      	it	cc
90013646:	6101      	strcc	r1, [r0, #16]
90013648:	6903      	ldr	r3, [r0, #16]
9001364a:	464f      	mov	r7, r9
9001364c:	f8a3 a000 	strh.w	sl, [r3]
90013650:	805a      	strh	r2, [r3, #2]
90013652:	809e      	strh	r6, [r3, #4]
90013654:	80de      	strh	r6, [r3, #6]
90013656:	9b06      	ldr	r3, [sp, #24]
90013658:	4293      	cmp	r3, r2
9001365a:	d19c      	bne.n	90013596 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
9001365c:	9b01      	ldr	r3, [sp, #4]
9001365e:	6907      	ldr	r7, [r0, #16]
90013660:	f1c3 0620 	rsb	r6, r3, #32
90013664:	9b05      	ldr	r3, [sp, #20]
90013666:	ea4f 1e63 	mov.w	lr, r3, asr #5
9001366a:	9b04      	ldr	r3, [sp, #16]
9001366c:	429e      	cmp	r6, r3
9001366e:	f040 81c7 	bne.w	90013a00 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90013672:	f9b7 3000 	ldrsh.w	r3, [r7]
90013676:	459e      	cmp	lr, r3
90013678:	d104      	bne.n	90013684 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
9001367a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
9001367e:	429a      	cmp	r2, r3
90013680:	f43f ae3a 	beq.w	900132f8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013684:	88f9      	ldrh	r1, [r7, #6]
90013686:	88bb      	ldrh	r3, [r7, #4]
90013688:	430b      	orrs	r3, r1
9001368a:	d010      	beq.n	900136ae <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001368c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90013690:	2b00      	cmp	r3, #0
90013692:	db0c      	blt.n	900136ae <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90013694:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90013696:	428b      	cmp	r3, r1
90013698:	da09      	bge.n	900136ae <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001369a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001369e:	428b      	cmp	r3, r1
900136a0:	f103 0301 	add.w	r3, r3, #1
900136a4:	bf38      	it	cc
900136a6:	3708      	addcc	r7, #8
900136a8:	6083      	str	r3, [r0, #8]
900136aa:	bf38      	it	cc
900136ac:	6107      	strcc	r7, [r0, #16]
900136ae:	6903      	ldr	r3, [r0, #16]
900136b0:	f8a3 e000 	strh.w	lr, [r3]
900136b4:	e603      	b.n	900132be <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
900136b6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
900136b8:	9c03      	ldr	r4, [sp, #12]
900136ba:	42a2      	cmp	r2, r4
900136bc:	f6ff ae1c 	blt.w	900132f8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900136c0:	9c06      	ldr	r4, [sp, #24]
900136c2:	42a2      	cmp	r2, r4
900136c4:	9c08      	ldr	r4, [sp, #32]
900136c6:	bfbc      	itt	lt
900136c8:	3201      	addlt	r2, #1
900136ca:	9206      	strlt	r2, [sp, #24]
900136cc:	f1c3 0220 	rsb	r2, r3, #32
900136d0:	4362      	muls	r2, r4
900136d2:	2401      	movs	r4, #1
900136d4:	940b      	str	r4, [sp, #44]	@ 0x2c
900136d6:	2420      	movs	r4, #32
900136d8:	e6d6      	b.n	90013488 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
900136da:	ea4f 1861 	mov.w	r8, r1, asr #5
900136de:	f009 021f 	and.w	r2, r9, #31
900136e2:	f001 011f 	and.w	r1, r1, #31
900136e6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
900136ea:	920c      	str	r2, [sp, #48]	@ 0x30
900136ec:	45b0      	cmp	r8, r6
900136ee:	9a01      	ldr	r2, [sp, #4]
900136f0:	f8b5 a006 	ldrh.w	sl, [r5, #6]
900136f4:	eba2 0203 	sub.w	r2, r2, r3
900136f8:	d108      	bne.n	9001370c <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
900136fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900136fc:	4496      	add	lr, r2
900136fe:	4419      	add	r1, r3
90013700:	f8a5 e004 	strh.w	lr, [r5, #4]
90013704:	fb02 a101 	mla	r1, r2, r1, sl
90013708:	80e9      	strh	r1, [r5, #6]
9001370a:	e6fa      	b.n	90013502 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001370c:	2c00      	cmp	r4, #0
9001370e:	f2c0 80a7 	blt.w	90013860 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90013712:	2701      	movs	r7, #1
90013714:	f1c1 0c20 	rsb	ip, r1, #32
90013718:	970a      	str	r7, [sp, #40]	@ 0x28
9001371a:	2720      	movs	r7, #32
9001371c:	fb02 f20c 	mul.w	r2, r2, ip
90013720:	9709      	str	r7, [sp, #36]	@ 0x24
90013722:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90013724:	fb92 fcf4 	sdiv	ip, r2, r4
90013728:	fb04 221c 	mls	r2, r4, ip, r2
9001372c:	4439      	add	r1, r7
9001372e:	2a00      	cmp	r2, #0
90013730:	bfbc      	itt	lt
90013732:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90013736:	1912      	addlt	r2, r2, r4
90013738:	fb0c a101 	mla	r1, ip, r1, sl
9001373c:	44e6      	add	lr, ip
9001373e:	80e9      	strh	r1, [r5, #6]
90013740:	990a      	ldr	r1, [sp, #40]	@ 0x28
90013742:	f8a5 e004 	strh.w	lr, [r5, #4]
90013746:	eb08 0501 	add.w	r5, r8, r1
9001374a:	6901      	ldr	r1, [r0, #16]
9001374c:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90013750:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90013754:	ea58 070e 	orrs.w	r7, r8, lr
90013758:	d010      	beq.n	9001377c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001375a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
9001375e:	f1be 0f00 	cmp.w	lr, #0
90013762:	db0b      	blt.n	9001377c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90013764:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013766:	45be      	cmp	lr, r7
90013768:	da08      	bge.n	9001377c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001376a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
9001376e:	45be      	cmp	lr, r7
90013770:	bf3c      	itt	cc
90013772:	3108      	addcc	r1, #8
90013774:	6101      	strcc	r1, [r0, #16]
90013776:	f10e 0101 	add.w	r1, lr, #1
9001377a:	6081      	str	r1, [r0, #8]
9001377c:	6901      	ldr	r1, [r0, #16]
9001377e:	f04f 0e00 	mov.w	lr, #0
90013782:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90013786:	42ae      	cmp	r6, r5
90013788:	800d      	strh	r5, [r1, #0]
9001378a:	4463      	add	r3, ip
9001378c:	f8a1 8002 	strh.w	r8, [r1, #2]
90013790:	f8a1 e004 	strh.w	lr, [r1, #4]
90013794:	f8a1 e006 	strh.w	lr, [r1, #6]
90013798:	d053      	beq.n	90013842 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001379a:	9901      	ldr	r1, [sp, #4]
9001379c:	1b12      	subs	r2, r2, r4
9001379e:	1ac9      	subs	r1, r1, r3
900137a0:	4461      	add	r1, ip
900137a2:	0149      	lsls	r1, r1, #5
900137a4:	fb91 fef4 	sdiv	lr, r1, r4
900137a8:	fb04 111e 	mls	r1, r4, lr, r1
900137ac:	2900      	cmp	r1, #0
900137ae:	bfbc      	itt	lt
900137b0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
900137b4:	1909      	addlt	r1, r1, r4
900137b6:	f10e 0701 	add.w	r7, lr, #1
900137ba:	970d      	str	r7, [sp, #52]	@ 0x34
900137bc:	f8d0 a010 	ldr.w	sl, [r0, #16]
900137c0:	1852      	adds	r2, r2, r1
900137c2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900137c4:	bf54      	ite	pl
900137c6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
900137ca:	46f4      	movmi	ip, lr
900137cc:	f8ba b004 	ldrh.w	fp, [sl, #4]
900137d0:	bf58      	it	pl
900137d2:	1b12      	subpl	r2, r2, r4
900137d4:	4463      	add	r3, ip
900137d6:	443d      	add	r5, r7
900137d8:	44e3      	add	fp, ip
900137da:	f8aa b004 	strh.w	fp, [sl, #4]
900137de:	f8ba b006 	ldrh.w	fp, [sl, #6]
900137e2:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
900137e6:	f8aa b006 	strh.w	fp, [sl, #6]
900137ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
900137ee:	f8bc b006 	ldrh.w	fp, [ip, #6]
900137f2:	f8bc a004 	ldrh.w	sl, [ip, #4]
900137f6:	ea5b 070a 	orrs.w	r7, fp, sl
900137fa:	d014      	beq.n	90013826 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900137fc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90013800:	f1ba 0f00 	cmp.w	sl, #0
90013804:	db0f      	blt.n	90013826 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013806:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013808:	45ba      	cmp	sl, r7
9001380a:	da0c      	bge.n	90013826 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
9001380c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90013810:	45ba      	cmp	sl, r7
90013812:	f10a 0a01 	add.w	sl, sl, #1
90013816:	bf38      	it	cc
90013818:	f10c 0c08 	addcc.w	ip, ip, #8
9001381c:	f8c0 a008 	str.w	sl, [r0, #8]
90013820:	bf38      	it	cc
90013822:	f8c0 c010 	strcc.w	ip, [r0, #16]
90013826:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001382a:	f04f 0700 	mov.w	r7, #0
9001382e:	42ae      	cmp	r6, r5
90013830:	f8ac 5000 	strh.w	r5, [ip]
90013834:	f8ac 8002 	strh.w	r8, [ip, #2]
90013838:	f8ac 7004 	strh.w	r7, [ip, #4]
9001383c:	f8ac 7006 	strh.w	r7, [ip, #6]
90013840:	d1bc      	bne.n	900137bc <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90013842:	6904      	ldr	r4, [r0, #16]
90013844:	9a01      	ldr	r2, [sp, #4]
90013846:	990c      	ldr	r1, [sp, #48]	@ 0x30
90013848:	1ad3      	subs	r3, r2, r3
9001384a:	88a2      	ldrh	r2, [r4, #4]
9001384c:	3120      	adds	r1, #32
9001384e:	441a      	add	r2, r3
90013850:	80a2      	strh	r2, [r4, #4]
90013852:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90013854:	1a89      	subs	r1, r1, r2
90013856:	88e2      	ldrh	r2, [r4, #6]
90013858:	fb03 2301 	mla	r3, r3, r1, r2
9001385c:	80e3      	strh	r3, [r4, #6]
9001385e:	e650      	b.n	90013502 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013860:	f04f 37ff 	mov.w	r7, #4294967295
90013864:	434a      	muls	r2, r1
90013866:	4264      	negs	r4, r4
90013868:	970a      	str	r7, [sp, #40]	@ 0x28
9001386a:	2700      	movs	r7, #0
9001386c:	e758      	b.n	90013720 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
9001386e:	ea4f 1867 	mov.w	r8, r7, asr #5
90013872:	f009 031f 	and.w	r3, r9, #31
90013876:	f007 071f 	and.w	r7, r7, #31
9001387a:	fa1f fc8c 	uxth.w	ip, ip
9001387e:	45d0      	cmp	r8, sl
90013880:	930f      	str	r3, [sp, #60]	@ 0x3c
90013882:	fa1f fe8e 	uxth.w	lr, lr
90013886:	d10a      	bne.n	9001389e <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90013888:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001388a:	449c      	add	ip, r3
9001388c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001388e:	441f      	add	r7, r3
90013890:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90013892:	f8a5 c004 	strh.w	ip, [r5, #4]
90013896:	fb03 e707 	mla	r7, r3, r7, lr
9001389a:	80ef      	strh	r7, [r5, #6]
9001389c:	e6bc      	b.n	90013618 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001389e:	2900      	cmp	r1, #0
900138a0:	f2c0 80a6 	blt.w	900139f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
900138a4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900138a6:	f1c7 0320 	rsb	r3, r7, #32
900138aa:	4363      	muls	r3, r4
900138ac:	2401      	movs	r4, #1
900138ae:	940d      	str	r4, [sp, #52]	@ 0x34
900138b0:	2420      	movs	r4, #32
900138b2:	940c      	str	r4, [sp, #48]	@ 0x30
900138b4:	fb93 f4f1 	sdiv	r4, r3, r1
900138b8:	fb01 3b14 	mls	fp, r1, r4, r3
900138bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900138be:	f1bb 0f00 	cmp.w	fp, #0
900138c2:	441f      	add	r7, r3
900138c4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900138c6:	bfbc      	itt	lt
900138c8:	f104 34ff 	addlt.w	r4, r4, #4294967295
900138cc:	448b      	addlt	fp, r1
900138ce:	fb04 e707 	mla	r7, r4, r7, lr
900138d2:	44a4      	add	ip, r4
900138d4:	80ef      	strh	r7, [r5, #6]
900138d6:	f8a5 c004 	strh.w	ip, [r5, #4]
900138da:	eb08 0503 	add.w	r5, r8, r3
900138de:	f8d0 c010 	ldr.w	ip, [r0, #16]
900138e2:	f8bc e006 	ldrh.w	lr, [ip, #6]
900138e6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900138ea:	ea5e 0307 	orrs.w	r3, lr, r7
900138ee:	d011      	beq.n	90013914 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900138f0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900138f4:	f1be 0f00 	cmp.w	lr, #0
900138f8:	db0c      	blt.n	90013914 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900138fa:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900138fc:	45be      	cmp	lr, r7
900138fe:	da09      	bge.n	90013914 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90013900:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90013904:	45be      	cmp	lr, r7
90013906:	bf3c      	itt	cc
90013908:	f10c 0708 	addcc.w	r7, ip, #8
9001390c:	6107      	strcc	r7, [r0, #16]
9001390e:	f10e 0701 	add.w	r7, lr, #1
90013912:	6087      	str	r7, [r0, #8]
90013914:	6907      	ldr	r7, [r0, #16]
90013916:	b213      	sxth	r3, r2
90013918:	4555      	cmp	r5, sl
9001391a:	9310      	str	r3, [sp, #64]	@ 0x40
9001391c:	807b      	strh	r3, [r7, #2]
9001391e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90013920:	803d      	strh	r5, [r7, #0]
90013922:	80be      	strh	r6, [r7, #4]
90013924:	eb04 0c03 	add.w	ip, r4, r3
90013928:	80fe      	strh	r6, [r7, #6]
9001392a:	d050      	beq.n	900139ce <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
9001392c:	9b01      	ldr	r3, [sp, #4]
9001392e:	eba3 070c 	sub.w	r7, r3, ip
90013932:	ebab 0301 	sub.w	r3, fp, r1
90013936:	443c      	add	r4, r7
90013938:	9309      	str	r3, [sp, #36]	@ 0x24
9001393a:	0164      	lsls	r4, r4, #5
9001393c:	fb94 f8f1 	sdiv	r8, r4, r1
90013940:	fb01 4418 	mls	r4, r1, r8, r4
90013944:	2c00      	cmp	r4, #0
90013946:	bfbc      	itt	lt
90013948:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001394c:	1864      	addlt	r4, r4, r1
9001394e:	f108 0701 	add.w	r7, r8, #1
90013952:	9711      	str	r7, [sp, #68]	@ 0x44
90013954:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90013956:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001395a:	191b      	adds	r3, r3, r4
9001395c:	f8be b004 	ldrh.w	fp, [lr, #4]
90013960:	bf54      	ite	pl
90013962:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
90013964:	4647      	movmi	r7, r8
90013966:	9309      	str	r3, [sp, #36]	@ 0x24
90013968:	bf58      	it	pl
9001396a:	1a5b      	subpl	r3, r3, r1
9001396c:	44bb      	add	fp, r7
9001396e:	44bc      	add	ip, r7
90013970:	bf58      	it	pl
90013972:	9309      	strpl	r3, [sp, #36]	@ 0x24
90013974:	f8ae b004 	strh.w	fp, [lr, #4]
90013978:	f8be b006 	ldrh.w	fp, [lr, #6]
9001397c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013980:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
90013982:	f8ae b006 	strh.w	fp, [lr, #6]
90013986:	443d      	add	r5, r7
90013988:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001398c:	f8be b006 	ldrh.w	fp, [lr, #6]
90013990:	f8be 7004 	ldrh.w	r7, [lr, #4]
90013994:	ea5b 0307 	orrs.w	r3, fp, r7
90013998:	d011      	beq.n	900139be <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001399a:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001399e:	f1bb 0f00 	cmp.w	fp, #0
900139a2:	db0c      	blt.n	900139be <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900139a4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900139a6:	45bb      	cmp	fp, r7
900139a8:	da09      	bge.n	900139be <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900139aa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900139ae:	45bb      	cmp	fp, r7
900139b0:	bf3c      	itt	cc
900139b2:	f10e 0708 	addcc.w	r7, lr, #8
900139b6:	6107      	strcc	r7, [r0, #16]
900139b8:	f10b 0701 	add.w	r7, fp, #1
900139bc:	6087      	str	r7, [r0, #8]
900139be:	6907      	ldr	r7, [r0, #16]
900139c0:	4555      	cmp	r5, sl
900139c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900139c4:	803d      	strh	r5, [r7, #0]
900139c6:	807b      	strh	r3, [r7, #2]
900139c8:	80be      	strh	r6, [r7, #4]
900139ca:	80fe      	strh	r6, [r7, #6]
900139cc:	d1c2      	bne.n	90013954 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
900139ce:	9b01      	ldr	r3, [sp, #4]
900139d0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900139d2:	eba3 0c0c 	sub.w	ip, r3, ip
900139d6:	6903      	ldr	r3, [r0, #16]
900139d8:	3720      	adds	r7, #32
900139da:	8899      	ldrh	r1, [r3, #4]
900139dc:	4461      	add	r1, ip
900139de:	8099      	strh	r1, [r3, #4]
900139e0:	990c      	ldr	r1, [sp, #48]	@ 0x30
900139e2:	1a7f      	subs	r7, r7, r1
900139e4:	88d9      	ldrh	r1, [r3, #6]
900139e6:	fb0c 1c07 	mla	ip, ip, r7, r1
900139ea:	f8a3 c006 	strh.w	ip, [r3, #6]
900139ee:	e613      	b.n	90013618 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900139f0:	f04f 34ff 	mov.w	r4, #4294967295
900139f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900139f6:	4249      	negs	r1, r1
900139f8:	940d      	str	r4, [sp, #52]	@ 0x34
900139fa:	2400      	movs	r4, #0
900139fc:	437b      	muls	r3, r7
900139fe:	e758      	b.n	900138b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90013a00:	9905      	ldr	r1, [sp, #20]
90013a02:	ea4f 1b69 	mov.w	fp, r9, asr #5
90013a06:	f009 0c1f 	and.w	ip, r9, #31
90013a0a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90013a0e:	f001 011f 	and.w	r1, r1, #31
90013a12:	45f3      	cmp	fp, lr
90013a14:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90013a18:	9102      	str	r1, [sp, #8]
90013a1a:	9904      	ldr	r1, [sp, #16]
90013a1c:	eba1 0406 	sub.w	r4, r1, r6
90013a20:	d108      	bne.n	90013a34 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90013a22:	9b02      	ldr	r3, [sp, #8]
90013a24:	44a0      	add	r8, r4
90013a26:	449c      	add	ip, r3
90013a28:	f8a7 8004 	strh.w	r8, [r7, #4]
90013a2c:	fb04 a40c 	mla	r4, r4, ip, sl
90013a30:	80fc      	strh	r4, [r7, #6]
90013a32:	e461      	b.n	900132f8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013a34:	9905      	ldr	r1, [sp, #20]
90013a36:	ebb1 0109 	subs.w	r1, r1, r9
90013a3a:	bf51      	iteee	pl
90013a3c:	f1cc 0520 	rsbpl	r5, ip, #32
90013a40:	fb04 f40c 	mulmi.w	r4, r4, ip
90013a44:	4249      	negmi	r1, r1
90013a46:	2500      	movmi	r5, #0
90013a48:	bf5d      	ittte	pl
90013a4a:	436c      	mulpl	r4, r5
90013a4c:	2520      	movpl	r5, #32
90013a4e:	f04f 0901 	movpl.w	r9, #1
90013a52:	f04f 39ff 	movmi.w	r9, #4294967295
90013a56:	9501      	str	r5, [sp, #4]
90013a58:	9b01      	ldr	r3, [sp, #4]
90013a5a:	fb94 f5f1 	sdiv	r5, r4, r1
90013a5e:	fb01 4415 	mls	r4, r1, r5, r4
90013a62:	449c      	add	ip, r3
90013a64:	eb0b 0309 	add.w	r3, fp, r9
90013a68:	2c00      	cmp	r4, #0
90013a6a:	bfbc      	itt	lt
90013a6c:	f105 35ff 	addlt.w	r5, r5, #4294967295
90013a70:	1864      	addlt	r4, r4, r1
90013a72:	44a8      	add	r8, r5
90013a74:	fb05 ac0c 	mla	ip, r5, ip, sl
90013a78:	f8a7 8004 	strh.w	r8, [r7, #4]
90013a7c:	f8a7 c006 	strh.w	ip, [r7, #6]
90013a80:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013a84:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90013a88:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013a8c:	ea58 0707 	orrs.w	r7, r8, r7
90013a90:	d011      	beq.n	90013ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90013a92:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013a96:	f1b8 0f00 	cmp.w	r8, #0
90013a9a:	db0c      	blt.n	90013ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90013a9c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013a9e:	45b8      	cmp	r8, r7
90013aa0:	da09      	bge.n	90013ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90013aa2:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90013aa6:	45b8      	cmp	r8, r7
90013aa8:	bf3c      	itt	cc
90013aaa:	f10c 0708 	addcc.w	r7, ip, #8
90013aae:	6107      	strcc	r7, [r0, #16]
90013ab0:	f108 0701 	add.w	r7, r8, #1
90013ab4:	6087      	str	r7, [r0, #8]
90013ab6:	6907      	ldr	r7, [r0, #16]
90013ab8:	f04f 0c00 	mov.w	ip, #0
90013abc:	b212      	sxth	r2, r2
90013abe:	459e      	cmp	lr, r3
90013ac0:	803b      	strh	r3, [r7, #0]
90013ac2:	442e      	add	r6, r5
90013ac4:	807a      	strh	r2, [r7, #2]
90013ac6:	f8a7 c004 	strh.w	ip, [r7, #4]
90013aca:	f8a7 c006 	strh.w	ip, [r7, #6]
90013ace:	d04b      	beq.n	90013b68 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90013ad0:	9f04      	ldr	r7, [sp, #16]
90013ad2:	1a64      	subs	r4, r4, r1
90013ad4:	f04f 0a00 	mov.w	sl, #0
90013ad8:	1bbf      	subs	r7, r7, r6
90013ada:	443d      	add	r5, r7
90013adc:	016d      	lsls	r5, r5, #5
90013ade:	fb95 f8f1 	sdiv	r8, r5, r1
90013ae2:	fb01 5518 	mls	r5, r1, r8, r5
90013ae6:	4565      	cmp	r5, ip
90013ae8:	bfbc      	itt	lt
90013aea:	f108 38ff 	addlt.w	r8, r8, #4294967295
90013aee:	186d      	addlt	r5, r5, r1
90013af0:	f108 0701 	add.w	r7, r8, #1
90013af4:	9703      	str	r7, [sp, #12]
90013af6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013afa:	1964      	adds	r4, r4, r5
90013afc:	444b      	add	r3, r9
90013afe:	bf54      	ite	pl
90013b00:	9f03      	ldrpl	r7, [sp, #12]
90013b02:	4647      	movmi	r7, r8
90013b04:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013b08:	bf58      	it	pl
90013b0a:	1a64      	subpl	r4, r4, r1
90013b0c:	443e      	add	r6, r7
90013b0e:	44bb      	add	fp, r7
90013b10:	f8ac b004 	strh.w	fp, [ip, #4]
90013b14:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013b18:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013b1c:	f8ac b006 	strh.w	fp, [ip, #6]
90013b20:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013b24:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013b28:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013b2c:	ea5b 0707 	orrs.w	r7, fp, r7
90013b30:	d011      	beq.n	90013b56 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90013b32:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013b36:	f1bb 0f00 	cmp.w	fp, #0
90013b3a:	db0c      	blt.n	90013b56 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90013b3c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013b3e:	45bb      	cmp	fp, r7
90013b40:	da09      	bge.n	90013b56 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90013b42:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013b46:	45bb      	cmp	fp, r7
90013b48:	bf3c      	itt	cc
90013b4a:	f10c 0708 	addcc.w	r7, ip, #8
90013b4e:	6107      	strcc	r7, [r0, #16]
90013b50:	f10b 0701 	add.w	r7, fp, #1
90013b54:	6087      	str	r7, [r0, #8]
90013b56:	6907      	ldr	r7, [r0, #16]
90013b58:	459e      	cmp	lr, r3
90013b5a:	803b      	strh	r3, [r7, #0]
90013b5c:	807a      	strh	r2, [r7, #2]
90013b5e:	f8a7 a004 	strh.w	sl, [r7, #4]
90013b62:	f8a7 a006 	strh.w	sl, [r7, #6]
90013b66:	d1c6      	bne.n	90013af6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90013b68:	9b04      	ldr	r3, [sp, #16]
90013b6a:	1b9e      	subs	r6, r3, r6
90013b6c:	6903      	ldr	r3, [r0, #16]
90013b6e:	889a      	ldrh	r2, [r3, #4]
90013b70:	4432      	add	r2, r6
90013b72:	809a      	strh	r2, [r3, #4]
90013b74:	9a02      	ldr	r2, [sp, #8]
90013b76:	f102 0c20 	add.w	ip, r2, #32
90013b7a:	9a01      	ldr	r2, [sp, #4]
90013b7c:	ebac 0c02 	sub.w	ip, ip, r2
90013b80:	88da      	ldrh	r2, [r3, #6]
90013b82:	fb06 260c 	mla	r6, r6, ip, r2
90013b86:	80de      	strh	r6, [r3, #6]
90013b88:	f7ff bbb6 	b.w	900132f8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90013b8c <_ZN8touchgfx7Outline6lineToEii>:
90013b8c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013b8e:	079b      	lsls	r3, r3, #30
90013b90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90013b92:	460e      	mov	r6, r1
90013b94:	4615      	mov	r5, r2
90013b96:	d511      	bpl.n	90013bbc <_ZN8touchgfx7Outline6lineToEii+0x30>
90013b98:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90013b9c:	ea86 0701 	eor.w	r7, r6, r1
90013ba0:	ea85 0302 	eor.w	r3, r5, r2
90013ba4:	433b      	orrs	r3, r7
90013ba6:	d009      	beq.n	90013bbc <_ZN8touchgfx7Outline6lineToEii+0x30>
90013ba8:	4633      	mov	r3, r6
90013baa:	9500      	str	r5, [sp, #0]
90013bac:	f7ff fb4c 	bl	90013248 <_ZN8touchgfx7Outline10renderLineEiiii>
90013bb0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013bb2:	f043 0301 	orr.w	r3, r3, #1
90013bb6:	e9c0 6505 	strd	r6, r5, [r0, #20]
90013bba:	6243      	str	r3, [r0, #36]	@ 0x24
90013bbc:	b003      	add	sp, #12
90013bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}

90013bc0 <_ZN8touchgfx7Outline6moveToEii>:
90013bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90013bc2:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013bc4:	4615      	mov	r5, r2
90013bc6:	4604      	mov	r4, r0
90013bc8:	460e      	mov	r6, r1
90013bca:	079a      	lsls	r2, r3, #30
90013bcc:	d401      	bmi.n	90013bd2 <_ZN8touchgfx7Outline6moveToEii+0x12>
90013bce:	f7ff fb07 	bl	900131e0 <_ZN8touchgfx7Outline5resetEv>
90013bd2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013bd4:	07db      	lsls	r3, r3, #31
90013bd6:	d504      	bpl.n	90013be2 <_ZN8touchgfx7Outline6moveToEii+0x22>
90013bd8:	4620      	mov	r0, r4
90013bda:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90013bde:	f7ff ffd5 	bl	90013b8c <_ZN8touchgfx7Outline6lineToEii>
90013be2:	6923      	ldr	r3, [r4, #16]
90013be4:	1170      	asrs	r0, r6, #5
90013be6:	1169      	asrs	r1, r5, #5
90013be8:	f9b3 2000 	ldrsh.w	r2, [r3]
90013bec:	4290      	cmp	r0, r2
90013bee:	d103      	bne.n	90013bf8 <_ZN8touchgfx7Outline6moveToEii+0x38>
90013bf0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013bf4:	4291      	cmp	r1, r2
90013bf6:	d01a      	beq.n	90013c2e <_ZN8touchgfx7Outline6moveToEii+0x6e>
90013bf8:	88df      	ldrh	r7, [r3, #6]
90013bfa:	889a      	ldrh	r2, [r3, #4]
90013bfc:	433a      	orrs	r2, r7
90013bfe:	d010      	beq.n	90013c22 <_ZN8touchgfx7Outline6moveToEii+0x62>
90013c00:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013c04:	2a00      	cmp	r2, #0
90013c06:	db0c      	blt.n	90013c22 <_ZN8touchgfx7Outline6moveToEii+0x62>
90013c08:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90013c0a:	42ba      	cmp	r2, r7
90013c0c:	da09      	bge.n	90013c22 <_ZN8touchgfx7Outline6moveToEii+0x62>
90013c0e:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90013c12:	42ba      	cmp	r2, r7
90013c14:	f102 0201 	add.w	r2, r2, #1
90013c18:	bf38      	it	cc
90013c1a:	3308      	addcc	r3, #8
90013c1c:	60a2      	str	r2, [r4, #8]
90013c1e:	bf38      	it	cc
90013c20:	6123      	strcc	r3, [r4, #16]
90013c22:	6923      	ldr	r3, [r4, #16]
90013c24:	2200      	movs	r2, #0
90013c26:	8018      	strh	r0, [r3, #0]
90013c28:	8059      	strh	r1, [r3, #2]
90013c2a:	809a      	strh	r2, [r3, #4]
90013c2c:	80da      	strh	r2, [r3, #6]
90013c2e:	6166      	str	r6, [r4, #20]
90013c30:	6225      	str	r5, [r4, #32]
90013c32:	e9c4 5606 	strd	r5, r6, [r4, #24]
90013c36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90013c38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90013c38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013c3c:	b0d0      	sub	sp, #320	@ 0x140
90013c3e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90013c42:	466c      	mov	r4, sp
90013c44:	4627      	mov	r7, r4
90013c46:	1a0d      	subs	r5, r1, r0
90013c48:	f100 0308 	add.w	r3, r0, #8
90013c4c:	2d48      	cmp	r5, #72	@ 0x48
90013c4e:	f340 80d5 	ble.w	90013dfc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90013c52:	112d      	asrs	r5, r5, #4
90013c54:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90013c58:	f9b0 9000 	ldrsh.w	r9, [r0]
90013c5c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90013c60:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90013c64:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013c68:	6816      	ldr	r6, [r2, #0]
90013c6a:	6006      	str	r6, [r0, #0]
90013c6c:	6856      	ldr	r6, [r2, #4]
90013c6e:	6046      	str	r6, [r0, #4]
90013c70:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90013c74:	f8a2 8002 	strh.w	r8, [r2, #2]
90013c78:	f8a2 e004 	strh.w	lr, [r2, #4]
90013c7c:	f8a2 c006 	strh.w	ip, [r2, #6]
90013c80:	f1a1 0208 	sub.w	r2, r1, #8
90013c84:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013c88:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90013c8c:	4565      	cmp	r5, ip
90013c8e:	db06      	blt.n	90013c9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90013c90:	d119      	bne.n	90013cc6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90013c92:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90013c96:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90013c9a:	42ae      	cmp	r6, r5
90013c9c:	dd13      	ble.n	90013cc6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90013c9e:	460e      	mov	r6, r1
90013ca0:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90013ca4:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90013ca8:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013cac:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90013cb0:	601d      	str	r5, [r3, #0]
90013cb2:	6875      	ldr	r5, [r6, #4]
90013cb4:	605d      	str	r5, [r3, #4]
90013cb6:	f821 9c08 	strh.w	r9, [r1, #-8]
90013cba:	f821 cc06 	strh.w	ip, [r1, #-6]
90013cbe:	f821 8c04 	strh.w	r8, [r1, #-4]
90013cc2:	f821 ec02 	strh.w	lr, [r1, #-2]
90013cc6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013cca:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90013cce:	42ae      	cmp	r6, r5
90013cd0:	db06      	blt.n	90013ce0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90013cd2:	d116      	bne.n	90013d02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013cd4:	f9b0 c000 	ldrsh.w	ip, [r0]
90013cd8:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90013cdc:	45ac      	cmp	ip, r5
90013cde:	da10      	bge.n	90013d02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013ce0:	681d      	ldr	r5, [r3, #0]
90013ce2:	f9b0 8000 	ldrsh.w	r8, [r0]
90013ce6:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013cea:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90013cee:	6005      	str	r5, [r0, #0]
90013cf0:	685d      	ldr	r5, [r3, #4]
90013cf2:	f8a0 8008 	strh.w	r8, [r0, #8]
90013cf6:	6045      	str	r5, [r0, #4]
90013cf8:	8146      	strh	r6, [r0, #10]
90013cfa:	f8a0 e00c 	strh.w	lr, [r0, #12]
90013cfe:	f8a0 c00e 	strh.w	ip, [r0, #14]
90013d02:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013d06:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013d0a:	4565      	cmp	r5, ip
90013d0c:	db06      	blt.n	90013d1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90013d0e:	d119      	bne.n	90013d44 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013d10:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90013d14:	f9b0 5000 	ldrsh.w	r5, [r0]
90013d18:	42ae      	cmp	r6, r5
90013d1a:	da13      	bge.n	90013d44 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013d1c:	460e      	mov	r6, r1
90013d1e:	f9b0 9000 	ldrsh.w	r9, [r0]
90013d22:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90013d26:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013d2a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90013d2e:	6005      	str	r5, [r0, #0]
90013d30:	6875      	ldr	r5, [r6, #4]
90013d32:	6045      	str	r5, [r0, #4]
90013d34:	f821 9c08 	strh.w	r9, [r1, #-8]
90013d38:	f821 cc06 	strh.w	ip, [r1, #-6]
90013d3c:	f821 8c04 	strh.w	r8, [r1, #-4]
90013d40:	f821 ec02 	strh.w	lr, [r1, #-2]
90013d44:	3308      	adds	r3, #8
90013d46:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013d4a:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90013d4e:	45e6      	cmp	lr, ip
90013d50:	dbf8      	blt.n	90013d44 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013d52:	d105      	bne.n	90013d60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013d54:	f9b3 6000 	ldrsh.w	r6, [r3]
90013d58:	f9b0 5000 	ldrsh.w	r5, [r0]
90013d5c:	42ae      	cmp	r6, r5
90013d5e:	dbf1      	blt.n	90013d44 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013d60:	4615      	mov	r5, r2
90013d62:	3a08      	subs	r2, #8
90013d64:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90013d68:	45b4      	cmp	ip, r6
90013d6a:	dbf9      	blt.n	90013d60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013d6c:	d105      	bne.n	90013d7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90013d6e:	f9b0 8000 	ldrsh.w	r8, [r0]
90013d72:	f9b2 6000 	ldrsh.w	r6, [r2]
90013d76:	45b0      	cmp	r8, r6
90013d78:	dbf2      	blt.n	90013d60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013d7a:	4293      	cmp	r3, r2
90013d7c:	f1a5 0608 	sub.w	r6, r5, #8
90013d80:	d816      	bhi.n	90013db0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90013d82:	f8d6 c000 	ldr.w	ip, [r6]
90013d86:	f9b3 a000 	ldrsh.w	sl, [r3]
90013d8a:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90013d8e:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90013d92:	f8c3 c000 	str.w	ip, [r3]
90013d96:	f8d6 c004 	ldr.w	ip, [r6, #4]
90013d9a:	f8c3 c004 	str.w	ip, [r3, #4]
90013d9e:	f825 ac08 	strh.w	sl, [r5, #-8]
90013da2:	f825 ec06 	strh.w	lr, [r5, #-6]
90013da6:	f825 9c04 	strh.w	r9, [r5, #-4]
90013daa:	f825 8c02 	strh.w	r8, [r5, #-2]
90013dae:	e7c9      	b.n	90013d44 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013db0:	f8d6 e000 	ldr.w	lr, [r6]
90013db4:	f9b0 a000 	ldrsh.w	sl, [r0]
90013db8:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90013dbc:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90013dc0:	f8c0 e000 	str.w	lr, [r0]
90013dc4:	f8d6 e004 	ldr.w	lr, [r6, #4]
90013dc8:	1a16      	subs	r6, r2, r0
90013dca:	f8c0 e004 	str.w	lr, [r0, #4]
90013dce:	f825 ac08 	strh.w	sl, [r5, #-8]
90013dd2:	f825 cc06 	strh.w	ip, [r5, #-6]
90013dd6:	f825 9c04 	strh.w	r9, [r5, #-4]
90013dda:	f825 8c02 	strh.w	r8, [r5, #-2]
90013dde:	1acd      	subs	r5, r1, r3
90013de0:	10ed      	asrs	r5, r5, #3
90013de2:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90013de6:	bfb5      	itete	lt
90013de8:	e9c4 0200 	strdlt	r0, r2, [r4]
90013dec:	e9c4 3100 	strdge	r3, r1, [r4]
90013df0:	460a      	movlt	r2, r1
90013df2:	4603      	movge	r3, r0
90013df4:	3408      	adds	r4, #8
90013df6:	4618      	mov	r0, r3
90013df8:	4611      	mov	r1, r2
90013dfa:	e724      	b.n	90013c46 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013dfc:	4299      	cmp	r1, r3
90013dfe:	d927      	bls.n	90013e50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90013e00:	f1a3 0210 	sub.w	r2, r3, #16
90013e04:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90013e08:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90013e0c:	45ac      	cmp	ip, r5
90013e0e:	db06      	blt.n	90013e1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90013e10:	d11c      	bne.n	90013e4c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90013e12:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90013e16:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90013e1a:	42ae      	cmp	r6, r5
90013e1c:	da16      	bge.n	90013e4c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90013e1e:	4615      	mov	r5, r2
90013e20:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90013e24:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90013e28:	3a08      	subs	r2, #8
90013e2a:	f855 6f08 	ldr.w	r6, [r5, #8]!
90013e2e:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90013e32:	6196      	str	r6, [r2, #24]
90013e34:	42a8      	cmp	r0, r5
90013e36:	686e      	ldr	r6, [r5, #4]
90013e38:	f8a2 9010 	strh.w	r9, [r2, #16]
90013e3c:	61d6      	str	r6, [r2, #28]
90013e3e:	f8a2 c012 	strh.w	ip, [r2, #18]
90013e42:	f8a2 8014 	strh.w	r8, [r2, #20]
90013e46:	f8a2 e016 	strh.w	lr, [r2, #22]
90013e4a:	d1db      	bne.n	90013e04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90013e4c:	3308      	adds	r3, #8
90013e4e:	e7d5      	b.n	90013dfc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90013e50:	42bc      	cmp	r4, r7
90013e52:	d903      	bls.n	90013e5c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90013e54:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90013e58:	3c08      	subs	r4, #8
90013e5a:	e6f4      	b.n	90013c46 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013e5c:	b050      	add	sp, #320	@ 0x140
90013e5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90013e62 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90013e62:	b510      	push	{r4, lr}
90013e64:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013e66:	4604      	mov	r4, r0
90013e68:	07da      	lsls	r2, r3, #31
90013e6a:	d507      	bpl.n	90013e7c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90013e6c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90013e70:	f7ff fe8c 	bl	90013b8c <_ZN8touchgfx7Outline6lineToEii>
90013e74:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013e76:	f023 0301 	bic.w	r3, r3, #1
90013e7a:	6243      	str	r3, [r0, #36]	@ 0x24
90013e7c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013e7e:	079b      	lsls	r3, r3, #30
90013e80:	d521      	bpl.n	90013ec6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90013e82:	6923      	ldr	r3, [r4, #16]
90013e84:	88d9      	ldrh	r1, [r3, #6]
90013e86:	889a      	ldrh	r2, [r3, #4]
90013e88:	430a      	orrs	r2, r1
90013e8a:	d010      	beq.n	90013eae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013e8c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013e90:	2a00      	cmp	r2, #0
90013e92:	db0c      	blt.n	90013eae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013e94:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90013e96:	428a      	cmp	r2, r1
90013e98:	da09      	bge.n	90013eae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013e9a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90013e9e:	4291      	cmp	r1, r2
90013ea0:	f102 0201 	add.w	r2, r2, #1
90013ea4:	bf88      	it	hi
90013ea6:	3308      	addhi	r3, #8
90013ea8:	60a2      	str	r2, [r4, #8]
90013eaa:	bf88      	it	hi
90013eac:	6123      	strhi	r3, [r4, #16]
90013eae:	68a1      	ldr	r1, [r4, #8]
90013eb0:	b129      	cbz	r1, 90013ebe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013eb2:	6863      	ldr	r3, [r4, #4]
90013eb4:	4299      	cmp	r1, r3
90013eb6:	d802      	bhi.n	90013ebe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013eb8:	68e0      	ldr	r0, [r4, #12]
90013eba:	f7ff febd 	bl	90013c38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90013ebe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013ec0:	f023 0302 	bic.w	r3, r3, #2
90013ec4:	6263      	str	r3, [r4, #36]	@ 0x24
90013ec6:	68e0      	ldr	r0, [r4, #12]
90013ec8:	bd10      	pop	{r4, pc}
	...

90013ecc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90013ecc:	4b01      	ldr	r3, [pc, #4]	@ (90013ed4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90013ece:	6818      	ldr	r0, [r3, #0]
90013ed0:	4770      	bx	lr
90013ed2:	bf00      	nop
90013ed4:	24021be4 	.word	0x24021be4

90013ed8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90013ed8:	4b01      	ldr	r3, [pc, #4]	@ (90013ee0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90013eda:	6818      	ldr	r0, [r3, #0]
90013edc:	4770      	bx	lr
90013ede:	bf00      	nop
90013ee0:	24021be8 	.word	0x24021be8

90013ee4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90013ee4:	b510      	push	{r4, lr}
90013ee6:	6803      	ldr	r3, [r0, #0]
90013ee8:	460c      	mov	r4, r1
90013eea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013eec:	4798      	blx	r3
90013eee:	1b03      	subs	r3, r0, r4
90013ef0:	4258      	negs	r0, r3
90013ef2:	4158      	adcs	r0, r3
90013ef4:	bd10      	pop	{r4, pc}
	...

90013ef8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90013ef8:	4b01      	ldr	r3, [pc, #4]	@ (90013f00 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90013efa:	6019      	str	r1, [r3, #0]
90013efc:	4770      	bx	lr
90013efe:	bf00      	nop
90013f00:	24021bec 	.word	0x24021bec

90013f04 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013f08:	4696      	mov	lr, r2
90013f0a:	b097      	sub	sp, #92	@ 0x5c
90013f0c:	4605      	mov	r5, r0
90013f0e:	4614      	mov	r4, r2
90013f10:	460e      	mov	r6, r1
90013f12:	461f      	mov	r7, r3
90013f14:	f10d 0c1c 	add.w	ip, sp, #28
90013f18:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90013f1c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90013f20:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90013f24:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013f28:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013f2c:	f8de 3000 	ldr.w	r3, [lr]
90013f30:	f104 0e14 	add.w	lr, r4, #20
90013f34:	f8cc 3000 	str.w	r3, [ip]
90013f38:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90013f3c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013f40:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013f44:	f8de 3000 	ldr.w	r3, [lr]
90013f48:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90013f4c:	f8cc 3000 	str.w	r3, [ip]
90013f50:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90013f54:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013f58:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013f5c:	f8de 3000 	ldr.w	r3, [lr]
90013f60:	4631      	mov	r1, r6
90013f62:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90013f64:	4628      	mov	r0, r5
90013f66:	f8cc 3000 	str.w	r3, [ip]
90013f6a:	682b      	ldr	r3, [r5, #0]
90013f6c:	9201      	str	r2, [sp, #4]
90013f6e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90013f70:	f8cd 8008 	str.w	r8, [sp, #8]
90013f74:	9200      	str	r2, [sp, #0]
90013f76:	aa07      	add	r2, sp, #28
90013f78:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013f7c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90013f80:	463b      	mov	r3, r7
90013f82:	47d8      	blx	fp
90013f84:	46a6      	mov	lr, r4
90013f86:	f10d 0c1c 	add.w	ip, sp, #28
90013f8a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013f8e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013f92:	f8de 3000 	ldr.w	r3, [lr]
90013f96:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90013f9a:	343c      	adds	r4, #60	@ 0x3c
90013f9c:	f8cc 3000 	str.w	r3, [ip]
90013fa0:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90013fa4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013fa8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013fac:	f8de 3000 	ldr.w	r3, [lr]
90013fb0:	f8cc 3000 	str.w	r3, [ip]
90013fb4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90013fb8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90013fba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013fbe:	6823      	ldr	r3, [r4, #0]
90013fc0:	4631      	mov	r1, r6
90013fc2:	4628      	mov	r0, r5
90013fc4:	f8cc 3000 	str.w	r3, [ip]
90013fc8:	682b      	ldr	r3, [r5, #0]
90013fca:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013fce:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90013fd0:	f8cd 8008 	str.w	r8, [sp, #8]
90013fd4:	9201      	str	r2, [sp, #4]
90013fd6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90013fd8:	9200      	str	r2, [sp, #0]
90013fda:	aa07      	add	r2, sp, #28
90013fdc:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90013fde:	463b      	mov	r3, r7
90013fe0:	47a0      	blx	r4
90013fe2:	b017      	add	sp, #92	@ 0x5c
90013fe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90013fe8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90013fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013fec:	b08d      	sub	sp, #52	@ 0x34
90013fee:	4688      	mov	r8, r1
90013ff0:	f8d3 c000 	ldr.w	ip, [r3]
90013ff4:	9916      	ldr	r1, [sp, #88]	@ 0x58
90013ff6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90013ffa:	680f      	ldr	r7, [r1, #0]
90013ffc:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90014000:	eba7 070c 	sub.w	r7, r7, ip
90014004:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90014008:	edd3 6a07 	vldr	s13, [r3, #28]
9001400c:	42bc      	cmp	r4, r7
9001400e:	9918      	ldr	r1, [sp, #96]	@ 0x60
90014010:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90014014:	bfa8      	it	ge
90014016:	463c      	movge	r4, r7
90014018:	f9b1 9000 	ldrsh.w	r9, [r1]
9001401c:	f9ba 1000 	ldrsh.w	r1, [sl]
90014020:	ee07 4a90 	vmov	s15, r4
90014024:	eb09 0e0c 	add.w	lr, r9, ip
90014028:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
9001402c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90014030:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90014034:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90014038:	4571      	cmp	r1, lr
9001403a:	ee25 4a04 	vmul.f32	s8, s10, s8
9001403e:	ee65 4a24 	vmul.f32	s9, s10, s9
90014042:	ee25 5a27 	vmul.f32	s10, s10, s15
90014046:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9001404a:	ee71 0aa4 	vadd.f32	s1, s3, s9
9001404e:	ee32 1a05 	vadd.f32	s2, s4, s10
90014052:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90014056:	ee36 0a84 	vadd.f32	s0, s13, s8
9001405a:	ee61 1a87 	vmul.f32	s3, s3, s14
9001405e:	ee22 2a07 	vmul.f32	s4, s4, s14
90014062:	f340 808c 	ble.w	9001417e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90014066:	eba1 060e 	sub.w	r6, r1, lr
9001406a:	fb96 f5f4 	sdiv	r5, r6, r4
9001406e:	ee07 5a10 	vmov	s14, r5
90014072:	2d00      	cmp	r5, #0
90014074:	fb04 6615 	mls	r6, r4, r5, r6
90014078:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001407c:	eea7 0a04 	vfma.f32	s0, s14, s8
90014080:	eee7 0a24 	vfma.f32	s1, s14, s9
90014084:	eea7 1a05 	vfma.f32	s2, s14, s10
90014088:	dd12      	ble.n	900140b0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9001408a:	ee70 6a44 	vsub.f32	s13, s0, s8
9001408e:	ee70 1ae4 	vsub.f32	s3, s1, s9
90014092:	ee31 2a45 	vsub.f32	s4, s2, s10
90014096:	eef5 6a40 	vcmp.f32	s13, #0.0
9001409a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001409e:	bf14      	ite	ne
900140a0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900140a4:	eeb0 7a67 	vmoveq.f32	s14, s15
900140a8:	ee61 1a87 	vmul.f32	s3, s3, s14
900140ac:	ee22 2a07 	vmul.f32	s4, s4, s14
900140b0:	fb05 f204 	mul.w	r2, r5, r4
900140b4:	1abf      	subs	r7, r7, r2
900140b6:	4494      	add	ip, r2
900140b8:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900140bc:	4411      	add	r1, r2
900140be:	eb09 020c 	add.w	r2, r9, ip
900140c2:	b209      	sxth	r1, r1
900140c4:	443a      	add	r2, r7
900140c6:	428a      	cmp	r2, r1
900140c8:	bfc4      	itt	gt
900140ca:	eba1 0209 	subgt.w	r2, r1, r9
900140ce:	eba2 070c 	subgt.w	r7, r2, ip
900140d2:	2f00      	cmp	r7, #0
900140d4:	dd50      	ble.n	90014178 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
900140d6:	fb97 f1f4 	sdiv	r1, r7, r4
900140da:	fb04 7211 	mls	r2, r4, r1, r7
900140de:	b90a      	cbnz	r2, 900140e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
900140e0:	3901      	subs	r1, #1
900140e2:	4622      	mov	r2, r4
900140e4:	eec7 3a80 	vdiv.f32	s7, s15, s0
900140e8:	6840      	ldr	r0, [r0, #4]
900140ea:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
900140ee:	44b6      	add	lr, r6
900140f0:	f8d0 a000 	ldr.w	sl, [r0]
900140f4:	2900      	cmp	r1, #0
900140f6:	bfcc      	ite	gt
900140f8:	46a1      	movgt	r9, r4
900140fa:	4691      	movle	r9, r2
900140fc:	900b      	str	r0, [sp, #44]	@ 0x2c
900140fe:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90014100:	fb04 e505 	mla	r5, r4, r5, lr
90014104:	eef0 6a42 	vmov.f32	s13, s4
90014108:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
9001410c:	9008      	str	r0, [sp, #32]
9001410e:	eeb0 7a61 	vmov.f32	s14, s3
90014112:	9818      	ldr	r0, [sp, #96]	@ 0x60
90014114:	695b      	ldr	r3, [r3, #20]
90014116:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001411a:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
9001411e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90014122:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90014124:	445b      	add	r3, fp
90014126:	9307      	str	r3, [sp, #28]
90014128:	ee16 3a90 	vmov	r3, s13
9001412c:	e9cd 8505 	strd	r8, r5, [sp, #20]
90014130:	ee60 2aa3 	vmul.f32	s5, s1, s7
90014134:	ee21 3a23 	vmul.f32	s6, s2, s7
90014138:	ee72 7ae1 	vsub.f32	s15, s5, s3
9001413c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014140:	ee17 7a90 	vmov	r7, s15
90014144:	ee73 7a42 	vsub.f32	s15, s6, s4
90014148:	fb97 f7f4 	sdiv	r7, r7, r4
9001414c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014150:	ee17 ca90 	vmov	ip, s15
90014154:	fb9c fcf4 	sdiv	ip, ip, r4
90014158:	fb0c 3306 	mla	r3, ip, r6, r3
9001415c:	9302      	str	r3, [sp, #8]
9001415e:	ee17 3a10 	vmov	r3, s14
90014162:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90014166:	fb07 3706 	mla	r7, r7, r6, r3
9001416a:	eba9 0306 	sub.w	r3, r9, r6
9001416e:	e9cd 4700 	strd	r4, r7, [sp]
90014172:	f8da 4008 	ldr.w	r4, [sl, #8]
90014176:	47a0      	blx	r4
90014178:	b00d      	add	sp, #52	@ 0x34
9001417a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001417e:	2500      	movs	r5, #0
90014180:	462e      	mov	r6, r5
90014182:	e799      	b.n	900140b8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90014184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90014184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014188:	b0db      	sub	sp, #364	@ 0x16c
9001418a:	461d      	mov	r5, r3
9001418c:	4614      	mov	r4, r2
9001418e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90014192:	910f      	str	r1, [sp, #60]	@ 0x3c
90014194:	4629      	mov	r1, r5
90014196:	930a      	str	r3, [sp, #40]	@ 0x28
90014198:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
9001419c:	9009      	str	r0, [sp, #36]	@ 0x24
9001419e:	930b      	str	r3, [sp, #44]	@ 0x2c
900141a0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
900141a4:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
900141a8:	9310      	str	r3, [sp, #64]	@ 0x40
900141aa:	6803      	ldr	r3, [r0, #0]
900141ac:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
900141ae:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
900141b2:	47b8      	blx	r7
900141b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900141b6:	6058      	str	r0, [r3, #4]
900141b8:	2800      	cmp	r0, #0
900141ba:	f000 83a1 	beq.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900141be:	682b      	ldr	r3, [r5, #0]
900141c0:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
900141c4:	ed94 7a02 	vldr	s14, [r4, #8]
900141c8:	9314      	str	r3, [sp, #80]	@ 0x50
900141ca:	686b      	ldr	r3, [r5, #4]
900141cc:	eeb4 7ae7 	vcmpe.f32	s14, s15
900141d0:	9315      	str	r3, [sp, #84]	@ 0x54
900141d2:	4bc1      	ldr	r3, [pc, #772]	@ (900144d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
900141d4:	7819      	ldrb	r1, [r3, #0]
900141d6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
900141da:	2900      	cmp	r1, #0
900141dc:	bf16      	itet	ne
900141de:	4619      	movne	r1, r3
900141e0:	4611      	moveq	r1, r2
900141e2:	4613      	movne	r3, r2
900141e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900141e8:	9116      	str	r1, [sp, #88]	@ 0x58
900141ea:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
900141ee:	f240 8387 	bls.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900141f2:	ed94 7a07 	vldr	s14, [r4, #28]
900141f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
900141fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900141fe:	f240 837f 	bls.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014202:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90014206:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001420a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001420e:	f240 8377 	bls.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014212:	6822      	ldr	r2, [r4, #0]
90014214:	4bb1      	ldr	r3, [pc, #708]	@ (900144dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90014216:	429a      	cmp	r2, r3
90014218:	f2c0 8372 	blt.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001421c:	49b0      	ldr	r1, [pc, #704]	@ (900144e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
9001421e:	6963      	ldr	r3, [r4, #20]
90014220:	428a      	cmp	r2, r1
90014222:	f300 836d 	bgt.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014226:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
9001422a:	48ae      	ldr	r0, [pc, #696]	@ (900144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
9001422c:	33ff      	adds	r3, #255	@ 0xff
9001422e:	4283      	cmp	r3, r0
90014230:	f200 8366 	bhi.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014234:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90014236:	4dac      	ldr	r5, [pc, #688]	@ (900144e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90014238:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
9001423c:	33ff      	adds	r3, #255	@ 0xff
9001423e:	42ab      	cmp	r3, r5
90014240:	f200 835e 	bhi.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014244:	6862      	ldr	r2, [r4, #4]
90014246:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
9001424a:	33ff      	adds	r3, #255	@ 0xff
9001424c:	4283      	cmp	r3, r0
9001424e:	f200 8357 	bhi.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014252:	69a1      	ldr	r1, [r4, #24]
90014254:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90014258:	33ff      	adds	r3, #255	@ 0xff
9001425a:	4283      	cmp	r3, r0
9001425c:	f200 8350 	bhi.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014260:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90014262:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90014266:	30ff      	adds	r0, #255	@ 0xff
90014268:	42a8      	cmp	r0, r5
9001426a:	f200 8349 	bhi.w	90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001426e:	428a      	cmp	r2, r1
90014270:	f280 8110 	bge.w	90014494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90014274:	429a      	cmp	r2, r3
90014276:	f300 8119 	bgt.w	900144ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
9001427a:	4299      	cmp	r1, r3
9001427c:	f280 811d 	bge.w	900144ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90014280:	2502      	movs	r5, #2
90014282:	2701      	movs	r7, #1
90014284:	46a9      	mov	r9, r5
90014286:	46b8      	mov	r8, r7
90014288:	f04f 0a00 	mov.w	sl, #0
9001428c:	4621      	mov	r1, r4
9001428e:	a849      	add	r0, sp, #292	@ 0x124
90014290:	f004 f836 	bl	90018300 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90014294:	4622      	mov	r2, r4
90014296:	4653      	mov	r3, sl
90014298:	a949      	add	r1, sp, #292	@ 0x124
9001429a:	f8cd 9000 	str.w	r9, [sp]
9001429e:	a819      	add	r0, sp, #100	@ 0x64
900142a0:	f004 f95e 	bl	90018560 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900142a4:	4622      	mov	r2, r4
900142a6:	4653      	mov	r3, sl
900142a8:	a949      	add	r1, sp, #292	@ 0x124
900142aa:	f8cd 8000 	str.w	r8, [sp]
900142ae:	a829      	add	r0, sp, #164	@ 0xa4
900142b0:	f004 f956 	bl	90018560 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900142b4:	4643      	mov	r3, r8
900142b6:	4622      	mov	r2, r4
900142b8:	a949      	add	r1, sp, #292	@ 0x124
900142ba:	f8cd 9000 	str.w	r9, [sp]
900142be:	a839      	add	r0, sp, #228	@ 0xe4
900142c0:	f004 f94e 	bl	90018560 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900142c4:	42af      	cmp	r7, r5
900142c6:	af12      	add	r7, sp, #72	@ 0x48
900142c8:	bfb7      	itett	lt
900142ca:	2300      	movlt	r3, #0
900142cc:	2301      	movge	r3, #1
900142ce:	ad29      	addlt	r5, sp, #164	@ 0xa4
900142d0:	ac19      	addlt	r4, sp, #100	@ 0x64
900142d2:	bfb1      	iteee	lt
900142d4:	930e      	strlt	r3, [sp, #56]	@ 0x38
900142d6:	ad19      	addge	r5, sp, #100	@ 0x64
900142d8:	930e      	strge	r3, [sp, #56]	@ 0x38
900142da:	ac29      	addge	r4, sp, #164	@ 0xa4
900142dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900142de:	e893 0003 	ldmia.w	r3, {r0, r1}
900142e2:	e887 0003 	stmia.w	r7, {r0, r1}
900142e6:	b928      	cbnz	r0, 900142f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
900142e8:	4b80      	ldr	r3, [pc, #512]	@ (900144ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
900142ea:	6818      	ldr	r0, [r3, #0]
900142ec:	6803      	ldr	r3, [r0, #0]
900142ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900142f0:	4798      	blx	r3
900142f2:	6038      	str	r0, [r7, #0]
900142f4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900142f6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900142fa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900142fe:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90014300:	930c      	str	r3, [sp, #48]	@ 0x30
90014302:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014304:	6963      	ldr	r3, [r4, #20]
90014306:	440b      	add	r3, r1
90014308:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9001430c:	4408      	add	r0, r1
9001430e:	b200      	sxth	r0, r0
90014310:	4283      	cmp	r3, r0
90014312:	900d      	str	r0, [sp, #52]	@ 0x34
90014314:	f280 80dd 	bge.w	900144d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90014318:	428b      	cmp	r3, r1
9001431a:	da08      	bge.n	9001432e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9001431c:	2a00      	cmp	r2, #0
9001431e:	dd06      	ble.n	9001432e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014320:	1acb      	subs	r3, r1, r3
90014322:	429a      	cmp	r2, r3
90014324:	f2c0 80e4 	blt.w	900144f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90014328:	2b00      	cmp	r3, #0
9001432a:	f300 80e2 	bgt.w	900144f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
9001432e:	6967      	ldr	r7, [r4, #20]
90014330:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90014334:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014336:	443b      	add	r3, r7
90014338:	461f      	mov	r7, r3
9001433a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001433c:	1bdf      	subs	r7, r3, r7
9001433e:	4297      	cmp	r7, r2
90014340:	bfa8      	it	ge
90014342:	4617      	movge	r7, r2
90014344:	2f00      	cmp	r7, #0
90014346:	f340 8166 	ble.w	90014616 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
9001434a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001434c:	6829      	ldr	r1, [r5, #0]
9001434e:	f9b3 2000 	ldrsh.w	r2, [r3]
90014352:	f9bb 3000 	ldrsh.w	r3, [fp]
90014356:	4411      	add	r1, r2
90014358:	6820      	ldr	r0, [r4, #0]
9001435a:	4299      	cmp	r1, r3
9001435c:	dd1a      	ble.n	90014394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
9001435e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90014362:	4402      	add	r2, r0
90014364:	440b      	add	r3, r1
90014366:	b21b      	sxth	r3, r3
90014368:	429a      	cmp	r2, r3
9001436a:	dc13      	bgt.n	90014394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
9001436c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001436e:	a912      	add	r1, sp, #72	@ 0x48
90014370:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014372:	9809      	ldr	r0, [sp, #36]	@ 0x24
90014374:	681b      	ldr	r3, [r3, #0]
90014376:	9206      	str	r2, [sp, #24]
90014378:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001437a:	9500      	str	r5, [sp, #0]
9001437c:	9205      	str	r2, [sp, #20]
9001437e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90014380:	e9cd b203 	strd	fp, r2, [sp, #12]
90014384:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90014386:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001438a:	aa49      	add	r2, sp, #292	@ 0x124
9001438c:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90014390:	4623      	mov	r3, r4
90014392:	47c8      	blx	r9
90014394:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90014398:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
9001439c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
900143a0:	ee37 7a27 	vadd.f32	s14, s14, s15
900143a4:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
900143a8:	68a1      	ldr	r1, [r4, #8]
900143aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
900143ae:	ed94 6a08 	vldr	s12, [r4, #32]
900143b2:	edd4 6a07 	vldr	s13, [r4, #28]
900143b6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900143ba:	ee76 6a86 	vadd.f32	s13, s13, s12
900143be:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900143c2:	e9d4 2300 	ldrd	r2, r3, [r4]
900143c6:	edc4 6a07 	vstr	s13, [r4, #28]
900143ca:	441a      	add	r2, r3
900143cc:	6963      	ldr	r3, [r4, #20]
900143ce:	3301      	adds	r3, #1
900143d0:	6022      	str	r2, [r4, #0]
900143d2:	6163      	str	r3, [r4, #20]
900143d4:	69a3      	ldr	r3, [r4, #24]
900143d6:	3b01      	subs	r3, #1
900143d8:	61a3      	str	r3, [r4, #24]
900143da:	6923      	ldr	r3, [r4, #16]
900143dc:	440b      	add	r3, r1
900143de:	68e1      	ldr	r1, [r4, #12]
900143e0:	428b      	cmp	r3, r1
900143e2:	6123      	str	r3, [r4, #16]
900143e4:	db15      	blt.n	90014412 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
900143e6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
900143ea:	3201      	adds	r2, #1
900143ec:	1a5b      	subs	r3, r3, r1
900143ee:	ee76 6a26 	vadd.f32	s13, s12, s13
900143f2:	6022      	str	r2, [r4, #0]
900143f4:	6123      	str	r3, [r4, #16]
900143f6:	edc4 6a07 	vstr	s13, [r4, #28]
900143fa:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
900143fe:	ee36 7a87 	vadd.f32	s14, s13, s14
90014402:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014406:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
9001440a:	ee77 7a27 	vadd.f32	s15, s14, s15
9001440e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90014412:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90014416:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
9001441a:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
9001441e:	ee37 7a27 	vadd.f32	s14, s14, s15
90014422:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90014426:	68a9      	ldr	r1, [r5, #8]
90014428:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001442c:	ed95 6a08 	vldr	s12, [r5, #32]
90014430:	edd5 6a07 	vldr	s13, [r5, #28]
90014434:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90014438:	ee76 6a86 	vadd.f32	s13, s13, s12
9001443c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90014440:	e9d5 2300 	ldrd	r2, r3, [r5]
90014444:	edc5 6a07 	vstr	s13, [r5, #28]
90014448:	441a      	add	r2, r3
9001444a:	696b      	ldr	r3, [r5, #20]
9001444c:	3301      	adds	r3, #1
9001444e:	602a      	str	r2, [r5, #0]
90014450:	616b      	str	r3, [r5, #20]
90014452:	69ab      	ldr	r3, [r5, #24]
90014454:	3b01      	subs	r3, #1
90014456:	61ab      	str	r3, [r5, #24]
90014458:	692b      	ldr	r3, [r5, #16]
9001445a:	440b      	add	r3, r1
9001445c:	68e9      	ldr	r1, [r5, #12]
9001445e:	428b      	cmp	r3, r1
90014460:	612b      	str	r3, [r5, #16]
90014462:	db15      	blt.n	90014490 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90014464:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90014468:	3201      	adds	r2, #1
9001446a:	1a5b      	subs	r3, r3, r1
9001446c:	ee76 6a26 	vadd.f32	s13, s12, s13
90014470:	602a      	str	r2, [r5, #0]
90014472:	612b      	str	r3, [r5, #16]
90014474:	edc5 6a07 	vstr	s13, [r5, #28]
90014478:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001447c:	ee36 7a87 	vadd.f32	s14, s13, s14
90014480:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90014484:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90014488:	ee77 7a27 	vadd.f32	s15, s14, s15
9001448c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90014490:	3f01      	subs	r7, #1
90014492:	e757      	b.n	90014344 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90014494:	4299      	cmp	r1, r3
90014496:	dc13      	bgt.n	900144c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90014498:	429a      	cmp	r2, r3
9001449a:	da14      	bge.n	900144c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
9001449c:	2502      	movs	r5, #2
9001449e:	2703      	movs	r7, #3
900144a0:	f04f 0800 	mov.w	r8, #0
900144a4:	46a9      	mov	r9, r5
900144a6:	f04f 0a01 	mov.w	sl, #1
900144aa:	e6ef      	b.n	9001428c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900144ac:	2501      	movs	r5, #1
900144ae:	2700      	movs	r7, #0
900144b0:	46a9      	mov	r9, r5
900144b2:	46b8      	mov	r8, r7
900144b4:	f04f 0a02 	mov.w	sl, #2
900144b8:	e6e8      	b.n	9001428c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900144ba:	2501      	movs	r5, #1
900144bc:	2702      	movs	r7, #2
900144be:	e6e1      	b.n	90014284 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
900144c0:	2500      	movs	r5, #0
900144c2:	2701      	movs	r7, #1
900144c4:	e7f4      	b.n	900144b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
900144c6:	2702      	movs	r7, #2
900144c8:	2503      	movs	r5, #3
900144ca:	f04f 0900 	mov.w	r9, #0
900144ce:	46b8      	mov	r8, r7
900144d0:	e7e9      	b.n	900144a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
900144d2:	4613      	mov	r3, r2
900144d4:	e728      	b.n	90014328 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
900144d6:	bf00      	nop
900144d8:	24021bd4 	.word	0x24021bd4
900144dc:	fffd8f01 	.word	0xfffd8f01
900144e0:	00027100 	.word	0x00027100
900144e4:	0004e1ff 	.word	0x0004e1ff
900144e8:	0004e1fe 	.word	0x0004e1fe
900144ec:	24021bdc 	.word	0x24021bdc
900144f0:	4613      	mov	r3, r2
900144f2:	992b      	ldr	r1, [sp, #172]	@ 0xac
900144f4:	469e      	mov	lr, r3
900144f6:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
900144f8:	469c      	mov	ip, r3
900144fa:	9111      	str	r1, [sp, #68]	@ 0x44
900144fc:	f04f 0900 	mov.w	r9, #0
90014500:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90014504:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90014508:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
9001450c:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90014510:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90014514:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90014518:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
9001451c:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90014520:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90014524:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90014528:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
9001452c:	f1bc 0f00 	cmp.w	ip, #0
90014530:	d147      	bne.n	900145c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90014532:	eb03 0c07 	add.w	ip, r3, r7
90014536:	1ad7      	subs	r7, r2, r3
90014538:	f1b9 0f00 	cmp.w	r9, #0
9001453c:	d009      	beq.n	90014552 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
9001453e:	9029      	str	r0, [sp, #164]	@ 0xa4
90014540:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90014544:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90014548:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
9001454c:	912d      	str	r1, [sp, #180]	@ 0xb4
9001454e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90014552:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90014554:	f04f 0800 	mov.w	r8, #0
90014558:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
9001455c:	9111      	str	r1, [sp, #68]	@ 0x44
9001455e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90014562:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90014566:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
9001456a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
9001456e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90014572:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90014576:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
9001457a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
9001457e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90014582:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90014586:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
9001458a:	f1be 0f00 	cmp.w	lr, #0
9001458e:	d031      	beq.n	900145f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90014590:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90014592:	4450      	add	r0, sl
90014594:	ee76 6aa4 	vadd.f32	s13, s13, s9
90014598:	4431      	add	r1, r6
9001459a:	ee37 7a04 	vadd.f32	s14, s14, s8
9001459e:	ee77 7aa3 	vadd.f32	s15, s15, s7
900145a2:	4549      	cmp	r1, r9
900145a4:	db08      	blt.n	900145b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
900145a6:	ee77 7a85 	vadd.f32	s15, s15, s10
900145aa:	3001      	adds	r0, #1
900145ac:	ee76 6aa5 	vadd.f32	s13, s13, s11
900145b0:	eba1 0109 	sub.w	r1, r1, r9
900145b4:	ee37 7a06 	vadd.f32	s14, s14, s12
900145b8:	f10e 3eff 	add.w	lr, lr, #4294967295
900145bc:	f04f 0801 	mov.w	r8, #1
900145c0:	e7e3      	b.n	9001458a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
900145c2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
900145c4:	4450      	add	r0, sl
900145c6:	ee37 7a24 	vadd.f32	s14, s14, s9
900145ca:	4431      	add	r1, r6
900145cc:	ee77 7a84 	vadd.f32	s15, s15, s8
900145d0:	ee76 6aa3 	vadd.f32	s13, s13, s7
900145d4:	4541      	cmp	r1, r8
900145d6:	db08      	blt.n	900145ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
900145d8:	ee76 6a85 	vadd.f32	s13, s13, s10
900145dc:	3001      	adds	r0, #1
900145de:	ee37 7a25 	vadd.f32	s14, s14, s11
900145e2:	eba1 0108 	sub.w	r1, r1, r8
900145e6:	ee77 7a86 	vadd.f32	s15, s15, s12
900145ea:	f10c 3cff 	add.w	ip, ip, #4294967295
900145ee:	f04f 0901 	mov.w	r9, #1
900145f2:	e79b      	b.n	9001452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
900145f4:	449c      	add	ip, r3
900145f6:	1aff      	subs	r7, r7, r3
900145f8:	f1b8 0f00 	cmp.w	r8, #0
900145fc:	d009      	beq.n	90014612 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
900145fe:	9019      	str	r0, [sp, #100]	@ 0x64
90014600:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90014604:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90014608:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001460c:	911d      	str	r1, [sp, #116]	@ 0x74
9001460e:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90014612:	1ad2      	subs	r2, r2, r3
90014614:	e68b      	b.n	9001432e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014616:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014618:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
9001461a:	2b00      	cmp	r3, #0
9001461c:	f000 80d1 	beq.w	900147c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90014620:	ad19      	add	r5, sp, #100	@ 0x64
90014622:	ac39      	add	r4, sp, #228	@ 0xe4
90014624:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014626:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001462a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001462e:	930c      	str	r3, [sp, #48]	@ 0x30
90014630:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014632:	6963      	ldr	r3, [r4, #20]
90014634:	440b      	add	r3, r1
90014636:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9001463a:	4408      	add	r0, r1
9001463c:	b200      	sxth	r0, r0
9001463e:	4283      	cmp	r3, r0
90014640:	900d      	str	r0, [sp, #52]	@ 0x34
90014642:	f280 80c1 	bge.w	900147c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90014646:	428b      	cmp	r3, r1
90014648:	da08      	bge.n	9001465c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001464a:	2a00      	cmp	r2, #0
9001464c:	dd06      	ble.n	9001465c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001464e:	1acb      	subs	r3, r1, r3
90014650:	429a      	cmp	r2, r3
90014652:	f2c0 80bb 	blt.w	900147cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90014656:	2b00      	cmp	r3, #0
90014658:	f300 80b9 	bgt.w	900147ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
9001465c:	6967      	ldr	r7, [r4, #20]
9001465e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90014662:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014664:	443b      	add	r3, r7
90014666:	461f      	mov	r7, r3
90014668:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001466a:	1bdf      	subs	r7, r3, r7
9001466c:	4297      	cmp	r7, r2
9001466e:	bfa8      	it	ge
90014670:	4617      	movge	r7, r2
90014672:	2f00      	cmp	r7, #0
90014674:	f340 813c 	ble.w	900148f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90014678:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001467a:	6829      	ldr	r1, [r5, #0]
9001467c:	f9b3 2000 	ldrsh.w	r2, [r3]
90014680:	f9bb 3000 	ldrsh.w	r3, [fp]
90014684:	4411      	add	r1, r2
90014686:	6820      	ldr	r0, [r4, #0]
90014688:	4299      	cmp	r1, r3
9001468a:	dd1a      	ble.n	900146c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001468c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90014690:	4402      	add	r2, r0
90014692:	440b      	add	r3, r1
90014694:	b21b      	sxth	r3, r3
90014696:	429a      	cmp	r2, r3
90014698:	dc13      	bgt.n	900146c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001469a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001469c:	a912      	add	r1, sp, #72	@ 0x48
9001469e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900146a0:	9809      	ldr	r0, [sp, #36]	@ 0x24
900146a2:	681b      	ldr	r3, [r3, #0]
900146a4:	9206      	str	r2, [sp, #24]
900146a6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900146a8:	9500      	str	r5, [sp, #0]
900146aa:	9205      	str	r2, [sp, #20]
900146ac:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900146ae:	e9cd b203 	strd	fp, r2, [sp, #12]
900146b2:	9a64      	ldr	r2, [sp, #400]	@ 0x190
900146b4:	e9cd 8201 	strd	r8, r2, [sp, #4]
900146b8:	aa49      	add	r2, sp, #292	@ 0x124
900146ba:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
900146be:	4623      	mov	r3, r4
900146c0:	47c8      	blx	r9
900146c2:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
900146c6:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
900146ca:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
900146ce:	ee37 7a27 	vadd.f32	s14, s14, s15
900146d2:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
900146d6:	68a1      	ldr	r1, [r4, #8]
900146d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
900146dc:	ed94 6a08 	vldr	s12, [r4, #32]
900146e0:	edd4 6a07 	vldr	s13, [r4, #28]
900146e4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900146e8:	ee76 6a86 	vadd.f32	s13, s13, s12
900146ec:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900146f0:	e9d4 2300 	ldrd	r2, r3, [r4]
900146f4:	edc4 6a07 	vstr	s13, [r4, #28]
900146f8:	441a      	add	r2, r3
900146fa:	6963      	ldr	r3, [r4, #20]
900146fc:	3301      	adds	r3, #1
900146fe:	6022      	str	r2, [r4, #0]
90014700:	6163      	str	r3, [r4, #20]
90014702:	69a3      	ldr	r3, [r4, #24]
90014704:	3b01      	subs	r3, #1
90014706:	61a3      	str	r3, [r4, #24]
90014708:	6923      	ldr	r3, [r4, #16]
9001470a:	440b      	add	r3, r1
9001470c:	68e1      	ldr	r1, [r4, #12]
9001470e:	428b      	cmp	r3, r1
90014710:	6123      	str	r3, [r4, #16]
90014712:	db15      	blt.n	90014740 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90014714:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90014718:	3201      	adds	r2, #1
9001471a:	1a5b      	subs	r3, r3, r1
9001471c:	ee76 6a26 	vadd.f32	s13, s12, s13
90014720:	6022      	str	r2, [r4, #0]
90014722:	6123      	str	r3, [r4, #16]
90014724:	edc4 6a07 	vstr	s13, [r4, #28]
90014728:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
9001472c:	ee36 7a87 	vadd.f32	s14, s13, s14
90014730:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014734:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90014738:	ee77 7a27 	vadd.f32	s15, s14, s15
9001473c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90014740:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90014744:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90014748:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
9001474c:	ee37 7a27 	vadd.f32	s14, s14, s15
90014750:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90014754:	68a9      	ldr	r1, [r5, #8]
90014756:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001475a:	ed95 6a08 	vldr	s12, [r5, #32]
9001475e:	edd5 6a07 	vldr	s13, [r5, #28]
90014762:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90014766:	ee76 6a86 	vadd.f32	s13, s13, s12
9001476a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001476e:	e9d5 2300 	ldrd	r2, r3, [r5]
90014772:	edc5 6a07 	vstr	s13, [r5, #28]
90014776:	441a      	add	r2, r3
90014778:	696b      	ldr	r3, [r5, #20]
9001477a:	3301      	adds	r3, #1
9001477c:	602a      	str	r2, [r5, #0]
9001477e:	616b      	str	r3, [r5, #20]
90014780:	69ab      	ldr	r3, [r5, #24]
90014782:	3b01      	subs	r3, #1
90014784:	61ab      	str	r3, [r5, #24]
90014786:	692b      	ldr	r3, [r5, #16]
90014788:	440b      	add	r3, r1
9001478a:	68e9      	ldr	r1, [r5, #12]
9001478c:	428b      	cmp	r3, r1
9001478e:	612b      	str	r3, [r5, #16]
90014790:	db15      	blt.n	900147be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90014792:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90014796:	3201      	adds	r2, #1
90014798:	1a5b      	subs	r3, r3, r1
9001479a:	ee76 6a26 	vadd.f32	s13, s12, s13
9001479e:	602a      	str	r2, [r5, #0]
900147a0:	612b      	str	r3, [r5, #16]
900147a2:	edc5 6a07 	vstr	s13, [r5, #28]
900147a6:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
900147aa:	ee36 7a87 	vadd.f32	s14, s13, s14
900147ae:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900147b2:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
900147b6:	ee77 7a27 	vadd.f32	s15, s14, s15
900147ba:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900147be:	3f01      	subs	r7, #1
900147c0:	e757      	b.n	90014672 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
900147c2:	ad39      	add	r5, sp, #228	@ 0xe4
900147c4:	ac19      	add	r4, sp, #100	@ 0x64
900147c6:	e72d      	b.n	90014624 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
900147c8:	4613      	mov	r3, r2
900147ca:	e744      	b.n	90014656 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
900147cc:	4613      	mov	r3, r2
900147ce:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
900147d0:	469e      	mov	lr, r3
900147d2:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
900147d6:	461f      	mov	r7, r3
900147d8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
900147dc:	f04f 0900 	mov.w	r9, #0
900147e0:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
900147e4:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
900147e8:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
900147ec:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
900147f0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
900147f4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
900147f6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
900147fa:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
900147fe:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
90014802:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
90014806:	960e      	str	r6, [sp, #56]	@ 0x38
90014808:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
9001480c:	2f00      	cmp	r7, #0
9001480e:	d146      	bne.n	9001489e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90014810:	449c      	add	ip, r3
90014812:	1ad7      	subs	r7, r2, r3
90014814:	f1b9 0f00 	cmp.w	r9, #0
90014818:	d009      	beq.n	9001482e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
9001481a:	9039      	str	r0, [sp, #228]	@ 0xe4
9001481c:	913d      	str	r1, [sp, #244]	@ 0xf4
9001481e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
90014822:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90014826:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
9001482a:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
9001482e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90014830:	f04f 0800 	mov.w	r8, #0
90014834:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90014838:	910e      	str	r1, [sp, #56]	@ 0x38
9001483a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001483e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90014842:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90014846:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
9001484a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
9001484e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90014852:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90014856:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
9001485a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
9001485e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90014862:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90014866:	f1be 0f00 	cmp.w	lr, #0
9001486a:	d030      	beq.n	900148ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
9001486c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
9001486e:	4450      	add	r0, sl
90014870:	ee76 6aa4 	vadd.f32	s13, s13, s9
90014874:	4431      	add	r1, r6
90014876:	ee37 7a04 	vadd.f32	s14, s14, s8
9001487a:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001487e:	4549      	cmp	r1, r9
90014880:	db08      	blt.n	90014894 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90014882:	ee77 7a85 	vadd.f32	s15, s15, s10
90014886:	3001      	adds	r0, #1
90014888:	ee76 6aa5 	vadd.f32	s13, s13, s11
9001488c:	eba1 0109 	sub.w	r1, r1, r9
90014890:	ee37 7a06 	vadd.f32	s14, s14, s12
90014894:	f10e 3eff 	add.w	lr, lr, #4294967295
90014898:	f04f 0801 	mov.w	r8, #1
9001489c:	e7e3      	b.n	90014866 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9001489e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
900148a0:	4450      	add	r0, sl
900148a2:	ee37 7a24 	vadd.f32	s14, s14, s9
900148a6:	4431      	add	r1, r6
900148a8:	ee77 7a84 	vadd.f32	s15, s15, s8
900148ac:	ee76 6aa3 	vadd.f32	s13, s13, s7
900148b0:	4541      	cmp	r1, r8
900148b2:	db08      	blt.n	900148c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
900148b4:	ee76 6a85 	vadd.f32	s13, s13, s10
900148b8:	3001      	adds	r0, #1
900148ba:	ee37 7a25 	vadd.f32	s14, s14, s11
900148be:	eba1 0108 	sub.w	r1, r1, r8
900148c2:	ee77 7a86 	vadd.f32	s15, s15, s12
900148c6:	3f01      	subs	r7, #1
900148c8:	f04f 0901 	mov.w	r9, #1
900148cc:	e79e      	b.n	9001480c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
900148ce:	449c      	add	ip, r3
900148d0:	1aff      	subs	r7, r7, r3
900148d2:	f1b8 0f00 	cmp.w	r8, #0
900148d6:	d009      	beq.n	900148ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
900148d8:	9019      	str	r0, [sp, #100]	@ 0x64
900148da:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
900148de:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
900148e2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
900148e6:	911d      	str	r1, [sp, #116]	@ 0x74
900148e8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
900148ec:	1ad2      	subs	r2, r2, r3
900148ee:	e6b5      	b.n	9001465c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900148f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900148f2:	681b      	ldr	r3, [r3, #0]
900148f4:	b923      	cbnz	r3, 90014900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900148f6:	4b04      	ldr	r3, [pc, #16]	@ (90014908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900148f8:	6818      	ldr	r0, [r3, #0]
900148fa:	6803      	ldr	r3, [r0, #0]
900148fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900148fe:	4798      	blx	r3
90014900:	b05b      	add	sp, #364	@ 0x16c
90014902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014906:	bf00      	nop
90014908:	24021bdc 	.word	0x24021bdc

9001490c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
9001490c:	b570      	push	{r4, r5, r6, lr}
9001490e:	4604      	mov	r4, r0
90014910:	2500      	movs	r5, #0
90014912:	9805      	ldr	r0, [sp, #20]
90014914:	f89d 601c 	ldrb.w	r6, [sp, #28]
90014918:	6061      	str	r1, [r4, #4]
9001491a:	8263      	strh	r3, [r4, #18]
9001491c:	f89d 1010 	ldrb.w	r1, [sp, #16]
90014920:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014924:	8025      	strh	r5, [r4, #0]
90014926:	7221      	strb	r1, [r4, #8]
90014928:	7266      	strb	r6, [r4, #9]
9001492a:	60e0      	str	r0, [r4, #12]
9001492c:	8222      	strh	r2, [r4, #16]
9001492e:	82a3      	strh	r3, [r4, #20]
90014930:	82e5      	strh	r5, [r4, #22]
90014932:	8325      	strh	r5, [r4, #24]
90014934:	8365      	strh	r5, [r4, #26]
90014936:	83a5      	strh	r5, [r4, #28]
90014938:	83e5      	strh	r5, [r4, #30]
9001493a:	8425      	strh	r5, [r4, #32]
9001493c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
90014940:	b32e      	cbz	r6, 9001498e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90014942:	6803      	ldr	r3, [r0, #0]
90014944:	695b      	ldr	r3, [r3, #20]
90014946:	4798      	blx	r3
90014948:	4606      	mov	r6, r0
9001494a:	b300      	cbz	r0, 9001498e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001494c:	68e0      	ldr	r0, [r4, #12]
9001494e:	4631      	mov	r1, r6
90014950:	6803      	ldr	r3, [r0, #0]
90014952:	68db      	ldr	r3, [r3, #12]
90014954:	4798      	blx	r3
90014956:	4605      	mov	r5, r0
90014958:	b1c8      	cbz	r0, 9001498e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001495a:	7b43      	ldrb	r3, [r0, #13]
9001495c:	7a82      	ldrb	r2, [r0, #10]
9001495e:	005b      	lsls	r3, r3, #1
90014960:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90014964:	4313      	orrs	r3, r2
90014966:	8423      	strh	r3, [r4, #32]
90014968:	7a63      	ldrb	r3, [r4, #9]
9001496a:	2b06      	cmp	r3, #6
9001496c:	d10f      	bne.n	9001498e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001496e:	68e0      	ldr	r0, [r4, #12]
90014970:	462a      	mov	r2, r5
90014972:	4631      	mov	r1, r6
90014974:	6803      	ldr	r3, [r0, #0]
90014976:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90014978:	4798      	blx	r3
9001497a:	7b6b      	ldrb	r3, [r5, #13]
9001497c:	005b      	lsls	r3, r3, #1
9001497e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90014982:	7aab      	ldrb	r3, [r5, #10]
90014984:	4313      	orrs	r3, r2
90014986:	4418      	add	r0, r3
90014988:	8c23      	ldrh	r3, [r4, #32]
9001498a:	4418      	add	r0, r3
9001498c:	8420      	strh	r0, [r4, #32]
9001498e:	4620      	mov	r0, r4
90014990:	bd70      	pop	{r4, r5, r6, pc}

90014992 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90014992:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014996:	2400      	movs	r4, #0
90014998:	b085      	sub	sp, #20
9001499a:	4681      	mov	r9, r0
9001499c:	4688      	mov	r8, r1
9001499e:	4692      	mov	sl, r2
900149a0:	469b      	mov	fp, r3
900149a2:	4627      	mov	r7, r4
900149a4:	4625      	mov	r5, r4
900149a6:	4626      	mov	r6, r4
900149a8:	4554      	cmp	r4, sl
900149aa:	da2a      	bge.n	90014a02 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900149ac:	2300      	movs	r3, #0
900149ae:	9303      	str	r3, [sp, #12]
900149b0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900149b4:	429d      	cmp	r5, r3
900149b6:	d004      	beq.n	900149c2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
900149b8:	f242 030b 	movw	r3, #8203	@ 0x200b
900149bc:	429d      	cmp	r5, r3
900149be:	bf18      	it	ne
900149c0:	462f      	movne	r7, r5
900149c2:	ab03      	add	r3, sp, #12
900149c4:	4642      	mov	r2, r8
900149c6:	4659      	mov	r1, fp
900149c8:	4648      	mov	r0, r9
900149ca:	f003 faaf 	bl	90017f2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900149ce:	4605      	mov	r5, r0
900149d0:	b1b8      	cbz	r0, 90014a02 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900149d2:	280a      	cmp	r0, #10
900149d4:	d015      	beq.n	90014a02 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900149d6:	9a03      	ldr	r2, [sp, #12]
900149d8:	b18a      	cbz	r2, 900149fe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
900149da:	7b50      	ldrb	r0, [r2, #13]
900149dc:	4639      	mov	r1, r7
900149de:	7a93      	ldrb	r3, [r2, #10]
900149e0:	0040      	lsls	r0, r0, #1
900149e2:	8895      	ldrh	r5, [r2, #4]
900149e4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
900149e8:	4303      	orrs	r3, r0
900149ea:	4640      	mov	r0, r8
900149ec:	9301      	str	r3, [sp, #4]
900149ee:	f8d8 3000 	ldr.w	r3, [r8]
900149f2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900149f4:	4798      	blx	r3
900149f6:	9b01      	ldr	r3, [sp, #4]
900149f8:	4418      	add	r0, r3
900149fa:	4406      	add	r6, r0
900149fc:	b2b6      	uxth	r6, r6
900149fe:	3401      	adds	r4, #1
90014a00:	e7d2      	b.n	900149a8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90014a02:	4630      	mov	r0, r6
90014a04:	b005      	add	sp, #20
90014a06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90014a0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90014a0a:	2a02      	cmp	r2, #2
90014a0c:	b530      	push	{r4, r5, lr}
90014a0e:	d011      	beq.n	90014a34 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90014a10:	2a03      	cmp	r2, #3
90014a12:	d01c      	beq.n	90014a4e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90014a14:	2a01      	cmp	r2, #1
90014a16:	d10c      	bne.n	90014a32 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90014a18:	888b      	ldrh	r3, [r1, #4]
90014a1a:	8801      	ldrh	r1, [r0, #0]
90014a1c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90014a20:	1a5b      	subs	r3, r3, r1
90014a22:	8844      	ldrh	r4, [r0, #2]
90014a24:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90014a28:	1a9b      	subs	r3, r3, r2
90014a2a:	8004      	strh	r4, [r0, #0]
90014a2c:	8081      	strh	r1, [r0, #4]
90014a2e:	8043      	strh	r3, [r0, #2]
90014a30:	80c2      	strh	r2, [r0, #6]
90014a32:	bd30      	pop	{r4, r5, pc}
90014a34:	88cb      	ldrh	r3, [r1, #6]
90014a36:	8842      	ldrh	r2, [r0, #2]
90014a38:	1a9b      	subs	r3, r3, r2
90014a3a:	88c2      	ldrh	r2, [r0, #6]
90014a3c:	1a9b      	subs	r3, r3, r2
90014a3e:	888a      	ldrh	r2, [r1, #4]
90014a40:	8801      	ldrh	r1, [r0, #0]
90014a42:	8043      	strh	r3, [r0, #2]
90014a44:	1a52      	subs	r2, r2, r1
90014a46:	8881      	ldrh	r1, [r0, #4]
90014a48:	1a52      	subs	r2, r2, r1
90014a4a:	8002      	strh	r2, [r0, #0]
90014a4c:	e7f1      	b.n	90014a32 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90014a4e:	88cb      	ldrh	r3, [r1, #6]
90014a50:	8841      	ldrh	r1, [r0, #2]
90014a52:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90014a56:	1a5b      	subs	r3, r3, r1
90014a58:	f9b0 5000 	ldrsh.w	r5, [r0]
90014a5c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90014a60:	1a9b      	subs	r3, r3, r2
90014a62:	8045      	strh	r5, [r0, #2]
90014a64:	8082      	strh	r2, [r0, #4]
90014a66:	8003      	strh	r3, [r0, #0]
90014a68:	80c4      	strh	r4, [r0, #6]
90014a6a:	e7e2      	b.n	90014a32 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90014a6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90014a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a70:	b09f      	sub	sp, #124	@ 0x7c
90014a72:	920f      	str	r2, [sp, #60]	@ 0x3c
90014a74:	9312      	str	r3, [sp, #72]	@ 0x48
90014a76:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90014a78:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90014a7a:	8812      	ldrh	r2, [r2, #0]
90014a7c:	889b      	ldrh	r3, [r3, #4]
90014a7e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90014a80:	4413      	add	r3, r2
90014a82:	900e      	str	r0, [sp, #56]	@ 0x38
90014a84:	6828      	ldr	r0, [r5, #0]
90014a86:	b21b      	sxth	r3, r3
90014a88:	9117      	str	r1, [sp, #92]	@ 0x5c
90014a8a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
90014a8e:	9311      	str	r3, [sp, #68]	@ 0x44
90014a90:	6803      	ldr	r3, [r0, #0]
90014a92:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
90014a96:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90014a98:	4798      	blx	r3
90014a9a:	682b      	ldr	r3, [r5, #0]
90014a9c:	9013      	str	r0, [sp, #76]	@ 0x4c
90014a9e:	7b1a      	ldrb	r2, [r3, #12]
90014aa0:	7adb      	ldrb	r3, [r3, #11]
90014aa2:	9215      	str	r2, [sp, #84]	@ 0x54
90014aa4:	9316      	str	r3, [sp, #88]	@ 0x58
90014aa6:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
90014aaa:	2c00      	cmp	r4, #0
90014aac:	d067      	beq.n	90014b7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90014aae:	7c2b      	ldrb	r3, [r5, #16]
90014ab0:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90014ab2:	2b06      	cmp	r3, #6
90014ab4:	bf14      	ite	ne
90014ab6:	2301      	movne	r3, #1
90014ab8:	2302      	moveq	r3, #2
90014aba:	4413      	add	r3, r2
90014abc:	f04f 0900 	mov.w	r9, #0
90014ac0:	9310      	str	r3, [sp, #64]	@ 0x40
90014ac2:	464c      	mov	r4, r9
90014ac4:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
90014ac8:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90014acc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014ace:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90014ad0:	4293      	cmp	r3, r2
90014ad2:	f280 808b 	bge.w	90014bec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90014ad6:	2300      	movs	r3, #0
90014ad8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90014adc:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90014ae0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014ae4:	429c      	cmp	r4, r3
90014ae6:	d006      	beq.n	90014af6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90014ae8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014aea:	f242 020b 	movw	r2, #8203	@ 0x200b
90014aee:	4294      	cmp	r4, r2
90014af0:	bf18      	it	ne
90014af2:	4623      	movne	r3, r4
90014af4:	930c      	str	r3, [sp, #48]	@ 0x30
90014af6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014af8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
90014afa:	682a      	ldr	r2, [r5, #0]
90014afc:	428b      	cmp	r3, r1
90014afe:	db40      	blt.n	90014b82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90014b00:	6813      	ldr	r3, [r2, #0]
90014b02:	4610      	mov	r0, r2
90014b04:	695b      	ldr	r3, [r3, #20]
90014b06:	4798      	blx	r3
90014b08:	4604      	mov	r4, r0
90014b0a:	6828      	ldr	r0, [r5, #0]
90014b0c:	aa1d      	add	r2, sp, #116	@ 0x74
90014b0e:	4621      	mov	r1, r4
90014b10:	6803      	ldr	r3, [r0, #0]
90014b12:	689f      	ldr	r7, [r3, #8]
90014b14:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90014b18:	47b8      	blx	r7
90014b1a:	901c      	str	r0, [sp, #112]	@ 0x70
90014b1c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014b20:	429c      	cmp	r4, r3
90014b22:	f000 80eb 	beq.w	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014b26:	f242 030b 	movw	r3, #8203	@ 0x200b
90014b2a:	429c      	cmp	r4, r3
90014b2c:	f000 80e6 	beq.w	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014b30:	2c00      	cmp	r4, #0
90014b32:	f000 810d 	beq.w	90014d50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90014b36:	2c0a      	cmp	r4, #10
90014b38:	d05e      	beq.n	90014bf8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90014b3a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90014b3c:	b36a      	cbz	r2, 90014b9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90014b3e:	8894      	ldrh	r4, [r2, #4]
90014b40:	f1bb 0f00 	cmp.w	fp, #0
90014b44:	d03a      	beq.n	90014bbc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
90014b46:	f892 900d 	ldrb.w	r9, [r2, #13]
90014b4a:	f1bb 0f01 	cmp.w	fp, #1
90014b4e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90014b52:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90014b56:	f892 900a 	ldrb.w	r9, [r2, #10]
90014b5a:	ea49 0903 	orr.w	r9, r9, r3
90014b5e:	d133      	bne.n	90014bc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90014b60:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014b62:	eba6 0609 	sub.w	r6, r6, r9
90014b66:	2b00      	cmp	r3, #0
90014b68:	d14d      	bne.n	90014c06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90014b6a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90014b6c:	eb09 0306 	add.w	r3, r9, r6
90014b70:	4413      	add	r3, r2
90014b72:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90014b74:	f9b2 2000 	ldrsh.w	r2, [r2]
90014b78:	4293      	cmp	r3, r2
90014b7a:	da4e      	bge.n	90014c1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90014b7c:	e036      	b.n	90014bec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90014b7e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90014b80:	e79c      	b.n	90014abc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90014b82:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90014b86:	4659      	mov	r1, fp
90014b88:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90014b8a:	9301      	str	r3, [sp, #4]
90014b8c:	ab1d      	add	r3, sp, #116	@ 0x74
90014b8e:	9300      	str	r3, [sp, #0]
90014b90:	ab1c      	add	r3, sp, #112	@ 0x70
90014b92:	f003 fa14 	bl	90017fbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90014b96:	4604      	mov	r4, r0
90014b98:	e7c0      	b.n	90014b1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90014b9a:	6828      	ldr	r0, [r5, #0]
90014b9c:	6803      	ldr	r3, [r0, #0]
90014b9e:	691b      	ldr	r3, [r3, #16]
90014ba0:	4798      	blx	r3
90014ba2:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014ba6:	4298      	cmp	r0, r3
90014ba8:	f000 80a8 	beq.w	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014bac:	f242 030b 	movw	r3, #8203	@ 0x200b
90014bb0:	4298      	cmp	r0, r3
90014bb2:	f000 80a3 	beq.w	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014bb6:	f1bb 0f00 	cmp.w	fp, #0
90014bba:	d100      	bne.n	90014bbe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90014bbc:	444e      	add	r6, r9
90014bbe:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90014bc0:	2a00      	cmp	r2, #0
90014bc2:	d1c0      	bne.n	90014b46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90014bc4:	4691      	mov	r9, r2
90014bc6:	e099      	b.n	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014bc8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014bca:	2b00      	cmp	r3, #0
90014bcc:	f000 80c2 	beq.w	90014d54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90014bd0:	f1bb 0f00 	cmp.w	fp, #0
90014bd4:	d117      	bne.n	90014c06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90014bd6:	6828      	ldr	r0, [r5, #0]
90014bd8:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014bda:	6803      	ldr	r3, [r0, #0]
90014bdc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90014bde:	4798      	blx	r3
90014be0:	4406      	add	r6, r0
90014be2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90014be4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90014be6:	1af3      	subs	r3, r6, r3
90014be8:	4293      	cmp	r3, r2
90014bea:	dd16      	ble.n	90014c1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90014bec:	2c00      	cmp	r4, #0
90014bee:	f000 80af 	beq.w	90014d50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90014bf2:	2c0a      	cmp	r4, #10
90014bf4:	f040 809d 	bne.w	90014d32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90014bf8:	240a      	movs	r4, #10
90014bfa:	fab4 f084 	clz	r0, r4
90014bfe:	0940      	lsrs	r0, r0, #5
90014c00:	b01f      	add	sp, #124	@ 0x7c
90014c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014c06:	6828      	ldr	r0, [r5, #0]
90014c08:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014c0a:	6803      	ldr	r3, [r0, #0]
90014c0c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90014c0e:	4798      	blx	r3
90014c10:	f1bb 0f01 	cmp.w	fp, #1
90014c14:	eba6 0600 	sub.w	r6, r6, r0
90014c18:	d0a7      	beq.n	90014b6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90014c1a:	981c      	ldr	r0, [sp, #112]	@ 0x70
90014c1c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90014c1e:	f990 1009 	ldrsb.w	r1, [r0, #9]
90014c22:	f9b3 8000 	ldrsh.w	r8, [r3]
90014c26:	7b43      	ldrb	r3, [r0, #13]
90014c28:	4431      	add	r1, r6
90014c2a:	015b      	lsls	r3, r3, #5
90014c2c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90014c30:	7983      	ldrb	r3, [r0, #6]
90014c32:	4313      	orrs	r3, r2
90014c34:	440b      	add	r3, r1
90014c36:	4543      	cmp	r3, r8
90014c38:	db60      	blt.n	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014c3a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90014c3c:	4299      	cmp	r1, r3
90014c3e:	da5d      	bge.n	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014c40:	6828      	ldr	r0, [r5, #0]
90014c42:	45b0      	cmp	r8, r6
90014c44:	6803      	ldr	r3, [r0, #0]
90014c46:	bfcc      	ite	gt
90014c48:	eba8 0806 	subgt.w	r8, r8, r6
90014c4c:	f04f 0800 	movle.w	r8, #0
90014c50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90014c52:	bfc8      	it	gt
90014c54:	fa1f f888 	uxthgt.w	r8, r8
90014c58:	4798      	blx	r3
90014c5a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90014c5c:	7b53      	ldrb	r3, [r2, #13]
90014c5e:	00d9      	lsls	r1, r3, #3
90014c60:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90014c64:	7a11      	ldrb	r1, [r2, #8]
90014c66:	4339      	orrs	r1, r7
90014c68:	065f      	lsls	r7, r3, #25
90014c6a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90014c6c:	bf48      	it	mi
90014c6e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90014c72:	4407      	add	r7, r0
90014c74:	bf48      	it	mi
90014c76:	b209      	sxthmi	r1, r1
90014c78:	1a7f      	subs	r7, r7, r1
90014c7a:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90014c7c:	b2bf      	uxth	r7, r7
90014c7e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90014c82:	fa0f fa87 	sxth.w	sl, r7
90014c86:	4551      	cmp	r1, sl
90014c88:	dd3c      	ble.n	90014d04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
90014c8a:	011b      	lsls	r3, r3, #4
90014c8c:	79d0      	ldrb	r0, [r2, #7]
90014c8e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90014c92:	4303      	orrs	r3, r0
90014c94:	449a      	add	sl, r3
90014c96:	4551      	cmp	r1, sl
90014c98:	dc30      	bgt.n	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014c9a:	1bcf      	subs	r7, r1, r7
90014c9c:	468a      	mov	sl, r1
90014c9e:	b23f      	sxth	r7, r7
90014ca0:	9219      	str	r2, [sp, #100]	@ 0x64
90014ca2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90014ca4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90014ca6:	6828      	ldr	r0, [r5, #0]
90014ca8:	2a00      	cmp	r2, #0
90014caa:	d12d      	bne.n	90014d08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90014cac:	9318      	str	r3, [sp, #96]	@ 0x60
90014cae:	b2bf      	uxth	r7, r7
90014cb0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014cb2:	6819      	ldr	r1, [r3, #0]
90014cb4:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
90014cb6:	6801      	ldr	r1, [r0, #0]
90014cb8:	9314      	str	r3, [sp, #80]	@ 0x50
90014cba:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90014cbc:	4788      	blx	r1
90014cbe:	79a9      	ldrb	r1, [r5, #6]
90014cc0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90014cc2:	910b      	str	r1, [sp, #44]	@ 0x2c
90014cc4:	7ba9      	ldrb	r1, [r5, #14]
90014cc6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90014cc8:	910a      	str	r1, [sp, #40]	@ 0x28
90014cca:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
90014cce:	9109      	str	r1, [sp, #36]	@ 0x24
90014cd0:	68a9      	ldr	r1, [r5, #8]
90014cd2:	9306      	str	r3, [sp, #24]
90014cd4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90014cd6:	9205      	str	r2, [sp, #20]
90014cd8:	9304      	str	r3, [sp, #16]
90014cda:	f8cd a004 	str.w	sl, [sp, #4]
90014cde:	e9cd 8702 	strd	r8, r7, [sp, #8]
90014ce2:	44b0      	add	r8, r6
90014ce4:	9f14      	ldr	r7, [sp, #80]	@ 0x50
90014ce6:	fa0f f388 	sxth.w	r3, r8
90014cea:	9300      	str	r3, [sp, #0]
90014cec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90014cee:	e9cd 0107 	strd	r0, r1, [sp, #28]
90014cf2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90014cf4:	681a      	ldr	r2, [r3, #0]
90014cf6:	980e      	ldr	r0, [sp, #56]	@ 0x38
90014cf8:	685b      	ldr	r3, [r3, #4]
90014cfa:	47b8      	blx	r7
90014cfc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014cfe:	3301      	adds	r3, #1
90014d00:	930d      	str	r3, [sp, #52]	@ 0x34
90014d02:	e6e3      	b.n	90014acc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90014d04:	2700      	movs	r7, #0
90014d06:	e7cb      	b.n	90014ca0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90014d08:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90014d0a:	f8d2 c008 	ldr.w	ip, [r2, #8]
90014d0e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90014d10:	f8dc 1000 	ldr.w	r1, [ip]
90014d14:	e9cd 6204 	strd	r6, r2, [sp, #16]
90014d18:	79aa      	ldrb	r2, [r5, #6]
90014d1a:	9203      	str	r2, [sp, #12]
90014d1c:	7baa      	ldrb	r2, [r5, #14]
90014d1e:	9202      	str	r2, [sp, #8]
90014d20:	68aa      	ldr	r2, [r5, #8]
90014d22:	e9cd 0200 	strd	r0, r2, [sp]
90014d26:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90014d28:	4660      	mov	r0, ip
90014d2a:	688f      	ldr	r7, [r1, #8]
90014d2c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90014d2e:	47b8      	blx	r7
90014d30:	e7e4      	b.n	90014cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014d32:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90014d34:	3501      	adds	r5, #1
90014d36:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90014d38:	429d      	cmp	r5, r3
90014d3a:	f6bf af5e 	bge.w	90014bfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90014d3e:	4659      	mov	r1, fp
90014d40:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90014d42:	f7f1 f8ad 	bl	90005ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90014d46:	4604      	mov	r4, r0
90014d48:	b110      	cbz	r0, 90014d50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90014d4a:	280a      	cmp	r0, #10
90014d4c:	d1f2      	bne.n	90014d34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90014d4e:	e753      	b.n	90014bf8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90014d50:	2400      	movs	r4, #0
90014d52:	e752      	b.n	90014bfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90014d54:	f1bb 0f00 	cmp.w	fp, #0
90014d58:	f43f af43 	beq.w	90014be2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90014d5c:	e75d      	b.n	90014c1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90014d5e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90014d5e:	b530      	push	{r4, r5, lr}
90014d60:	8ac4      	ldrh	r4, [r0, #22]
90014d62:	8b45      	ldrh	r5, [r0, #26]
90014d64:	8343      	strh	r3, [r0, #26]
90014d66:	442c      	add	r4, r5
90014d68:	1ae4      	subs	r4, r4, r3
90014d6a:	8b83      	ldrh	r3, [r0, #28]
90014d6c:	82c4      	strh	r4, [r0, #22]
90014d6e:	8b04      	ldrh	r4, [r0, #24]
90014d70:	4422      	add	r2, r4
90014d72:	440c      	add	r4, r1
90014d74:	1a59      	subs	r1, r3, r1
90014d76:	83c2      	strh	r2, [r0, #30]
90014d78:	8304      	strh	r4, [r0, #24]
90014d7a:	8381      	strh	r1, [r0, #28]
90014d7c:	bd30      	pop	{r4, r5, pc}

90014d7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90014d7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014d82:	4604      	mov	r4, r0
90014d84:	8a47      	ldrh	r7, [r0, #18]
90014d86:	68c0      	ldr	r0, [r0, #12]
90014d88:	b085      	sub	sp, #20
90014d8a:	6803      	ldr	r3, [r0, #0]
90014d8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014d8e:	4798      	blx	r3
90014d90:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90014d94:	7a63      	ldrb	r3, [r4, #9]
90014d96:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90014d9a:	3b01      	subs	r3, #1
90014d9c:	42b7      	cmp	r7, r6
90014d9e:	bfac      	ite	ge
90014da0:	f04f 0900 	movge.w	r9, #0
90014da4:	f04f 0901 	movlt.w	r9, #1
90014da8:	2b05      	cmp	r3, #5
90014daa:	d804      	bhi.n	90014db6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90014dac:	e8df f003 	tbb	[pc, r3]
90014db0:	470f0854 	.word	0x470f0854
90014db4:	4c4c      	.short	0x4c4c
90014db6:	2500      	movs	r5, #0
90014db8:	46a9      	mov	r9, r5
90014dba:	462e      	mov	r6, r5
90014dbc:	462f      	mov	r7, r5
90014dbe:	e00e      	b.n	90014dde <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90014dc0:	42b7      	cmp	r7, r6
90014dc2:	f04f 0500 	mov.w	r5, #0
90014dc6:	bfb4      	ite	lt
90014dc8:	2600      	movlt	r6, #0
90014dca:	2601      	movge	r6, #1
90014dcc:	e7f6      	b.n	90014dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90014dce:	42b7      	cmp	r7, r6
90014dd0:	464d      	mov	r5, r9
90014dd2:	f04f 0900 	mov.w	r9, #0
90014dd6:	bfb4      	ite	lt
90014dd8:	2600      	movlt	r6, #0
90014dda:	2601      	movge	r6, #1
90014ddc:	464f      	mov	r7, r9
90014dde:	f04f 0800 	mov.w	r8, #0
90014de2:	f8a4 8016 	strh.w	r8, [r4, #22]
90014de6:	f8a4 8018 	strh.w	r8, [r4, #24]
90014dea:	f8cd 8004 	str.w	r8, [sp, #4]
90014dee:	2300      	movs	r3, #0
90014df0:	9303      	str	r3, [sp, #12]
90014df2:	8823      	ldrh	r3, [r4, #0]
90014df4:	2b20      	cmp	r3, #32
90014df6:	d033      	beq.n	90014e60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90014df8:	f242 010b 	movw	r1, #8203	@ 0x200b
90014dfc:	1a5a      	subs	r2, r3, r1
90014dfe:	f1d2 0a00 	rsbs	sl, r2, #0
90014e02:	eb4a 0a02 	adc.w	sl, sl, r2
90014e06:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90014e0a:	4293      	cmp	r3, r2
90014e0c:	d008      	beq.n	90014e20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90014e0e:	428b      	cmp	r3, r1
90014e10:	9a01      	ldr	r2, [sp, #4]
90014e12:	bf0e      	itee	eq
90014e14:	f04f 0a01 	moveq.w	sl, #1
90014e18:	461a      	movne	r2, r3
90014e1a:	f04f 0a00 	movne.w	sl, #0
90014e1e:	9201      	str	r2, [sp, #4]
90014e20:	ab03      	add	r3, sp, #12
90014e22:	68e2      	ldr	r2, [r4, #12]
90014e24:	7a21      	ldrb	r1, [r4, #8]
90014e26:	6860      	ldr	r0, [r4, #4]
90014e28:	f003 f880 	bl	90017f2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90014e2c:	8020      	strh	r0, [r4, #0]
90014e2e:	b9d8      	cbnz	r0, 90014e68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90014e30:	8ba2      	ldrh	r2, [r4, #28]
90014e32:	2300      	movs	r3, #0
90014e34:	4611      	mov	r1, r2
90014e36:	4620      	mov	r0, r4
90014e38:	f7ff ff91 	bl	90014d5e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014e3c:	e06e      	b.n	90014f1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90014e3e:	2500      	movs	r5, #0
90014e40:	2701      	movs	r7, #1
90014e42:	46a9      	mov	r9, r5
90014e44:	462e      	mov	r6, r5
90014e46:	e7ca      	b.n	90014dde <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90014e48:	42b7      	cmp	r7, r6
90014e4a:	f04f 0500 	mov.w	r5, #0
90014e4e:	bfb4      	ite	lt
90014e50:	2700      	movlt	r7, #0
90014e52:	2701      	movge	r7, #1
90014e54:	462e      	mov	r6, r5
90014e56:	e7c2      	b.n	90014dde <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90014e58:	2500      	movs	r5, #0
90014e5a:	2601      	movs	r6, #1
90014e5c:	46a9      	mov	r9, r5
90014e5e:	e7ad      	b.n	90014dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90014e60:	9301      	str	r3, [sp, #4]
90014e62:	f04f 0a01 	mov.w	sl, #1
90014e66:	e7db      	b.n	90014e20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90014e68:	8b63      	ldrh	r3, [r4, #26]
90014e6a:	280a      	cmp	r0, #10
90014e6c:	f103 0301 	add.w	r3, r3, #1
90014e70:	8363      	strh	r3, [r4, #26]
90014e72:	d0dd      	beq.n	90014e30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90014e74:	9a03      	ldr	r2, [sp, #12]
90014e76:	bb62      	cbnz	r2, 90014ed2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90014e78:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014e7c:	4298      	cmp	r0, r3
90014e7e:	d003      	beq.n	90014e88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90014e80:	f242 030b 	movw	r3, #8203	@ 0x200b
90014e84:	4298      	cmp	r0, r3
90014e86:	d1b2      	bne.n	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014e88:	8823      	ldrh	r3, [r4, #0]
90014e8a:	8ba1      	ldrh	r1, [r4, #28]
90014e8c:	2b20      	cmp	r3, #32
90014e8e:	d003      	beq.n	90014e98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90014e90:	f242 000b 	movw	r0, #8203	@ 0x200b
90014e94:	4283      	cmp	r3, r0
90014e96:	d131      	bne.n	90014efc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90014e98:	f1ba 0f00 	cmp.w	sl, #0
90014e9c:	bf0a      	itet	eq
90014e9e:	4688      	moveq	r8, r1
90014ea0:	4650      	movne	r0, sl
90014ea2:	2001      	moveq	r0, #1
90014ea4:	440a      	add	r2, r1
90014ea6:	8b23      	ldrh	r3, [r4, #24]
90014ea8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90014eac:	b292      	uxth	r2, r2
90014eae:	83a2      	strh	r2, [r4, #28]
90014eb0:	4413      	add	r3, r2
90014eb2:	f1b9 0f00 	cmp.w	r9, #0
90014eb6:	d102      	bne.n	90014ebe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90014eb8:	2d00      	cmp	r5, #0
90014eba:	d042      	beq.n	90014f42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90014ebc:	b300      	cbz	r0, 90014f00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90014ebe:	8c21      	ldrh	r1, [r4, #32]
90014ec0:	4419      	add	r1, r3
90014ec2:	458c      	cmp	ip, r1
90014ec4:	da37      	bge.n	90014f36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014ec6:	8ae1      	ldrh	r1, [r4, #22]
90014ec8:	2900      	cmp	r1, #0
90014eca:	d034      	beq.n	90014f36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014ecc:	4563      	cmp	r3, ip
90014ece:	dd8e      	ble.n	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014ed0:	e01d      	b.n	90014f0e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90014ed2:	8893      	ldrh	r3, [r2, #4]
90014ed4:	9901      	ldr	r1, [sp, #4]
90014ed6:	8023      	strh	r3, [r4, #0]
90014ed8:	f892 b00d 	ldrb.w	fp, [r2, #13]
90014edc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90014ee0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90014ee4:	f892 b00a 	ldrb.w	fp, [r2, #10]
90014ee8:	ea4b 0b00 	orr.w	fp, fp, r0
90014eec:	68e0      	ldr	r0, [r4, #12]
90014eee:	6803      	ldr	r3, [r0, #0]
90014ef0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90014ef2:	4798      	blx	r3
90014ef4:	eb0b 0200 	add.w	r2, fp, r0
90014ef8:	b292      	uxth	r2, r2
90014efa:	e7c5      	b.n	90014e88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90014efc:	2000      	movs	r0, #0
90014efe:	e7d1      	b.n	90014ea4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90014f00:	4563      	cmp	r3, ip
90014f02:	f77f af74 	ble.w	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014f06:	8ae3      	ldrh	r3, [r4, #22]
90014f08:	2b00      	cmp	r3, #0
90014f0a:	f43f af70 	beq.w	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014f0e:	2301      	movs	r3, #1
90014f10:	8c22      	ldrh	r2, [r4, #32]
90014f12:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90014f16:	8be3      	ldrh	r3, [r4, #30]
90014f18:	4413      	add	r3, r2
90014f1a:	83e3      	strh	r3, [r4, #30]
90014f1c:	68e0      	ldr	r0, [r4, #12]
90014f1e:	6803      	ldr	r3, [r0, #0]
90014f20:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014f22:	4798      	blx	r3
90014f24:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90014f28:	4418      	add	r0, r3
90014f2a:	8a63      	ldrh	r3, [r4, #18]
90014f2c:	1a18      	subs	r0, r3, r0
90014f2e:	8260      	strh	r0, [r4, #18]
90014f30:	b005      	add	sp, #20
90014f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014f36:	2300      	movs	r3, #0
90014f38:	4611      	mov	r1, r2
90014f3a:	4620      	mov	r0, r4
90014f3c:	f7ff ff0f 	bl	90014d5e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014f40:	e755      	b.n	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014f42:	4563      	cmp	r3, ip
90014f44:	dd14      	ble.n	90014f70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90014f46:	b117      	cbz	r7, 90014f4e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90014f48:	2301      	movs	r3, #1
90014f4a:	460a      	mov	r2, r1
90014f4c:	e772      	b.n	90014e34 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90014f4e:	2e00      	cmp	r6, #0
90014f50:	f43f af4d 	beq.w	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014f54:	2800      	cmp	r0, #0
90014f56:	f47f af4a 	bne.w	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014f5a:	f1ba 0f00 	cmp.w	sl, #0
90014f5e:	d002      	beq.n	90014f66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90014f60:	2301      	movs	r3, #1
90014f62:	4642      	mov	r2, r8
90014f64:	e767      	b.n	90014e36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90014f66:	8ae3      	ldrh	r3, [r4, #22]
90014f68:	2b00      	cmp	r3, #0
90014f6a:	f43f af40 	beq.w	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014f6e:	e7d5      	b.n	90014f1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90014f70:	2800      	cmp	r0, #0
90014f72:	f47f af3c 	bne.w	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014f76:	f1ba 0f00 	cmp.w	sl, #0
90014f7a:	f43f af38 	beq.w	90014dee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014f7e:	2301      	movs	r3, #1
90014f80:	4642      	mov	r2, r8
90014f82:	e7da      	b.n	90014f3a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90014f84 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90014f84:	b5f0      	push	{r4, r5, r6, r7, lr}
90014f86:	4605      	mov	r5, r0
90014f88:	b08f      	sub	sp, #60	@ 0x3c
90014f8a:	4617      	mov	r7, r2
90014f8c:	461c      	mov	r4, r3
90014f8e:	460e      	mov	r6, r1
90014f90:	b1d1      	cbz	r1, 90014fc8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90014f92:	681b      	ldr	r3, [r3, #0]
90014f94:	4620      	mov	r0, r4
90014f96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014f98:	4798      	blx	r3
90014f9a:	4240      	negs	r0, r0
90014f9c:	9603      	str	r6, [sp, #12]
90014f9e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90014fa2:	b200      	sxth	r0, r0
90014fa4:	9700      	str	r7, [sp, #0]
90014fa6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
90014faa:	4629      	mov	r1, r5
90014fac:	e9cd 4001 	strd	r4, r0, [sp, #4]
90014fb0:	2401      	movs	r4, #1
90014fb2:	a805      	add	r0, sp, #20
90014fb4:	f7ff fcaa 	bl	9001490c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90014fb8:	a805      	add	r0, sp, #20
90014fba:	f7ff fee0 	bl	90014d7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014fbe:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90014fc2:	b163      	cbz	r3, 90014fde <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90014fc4:	3401      	adds	r4, #1
90014fc6:	e7f7      	b.n	90014fb8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90014fc8:	2401      	movs	r4, #1
90014fca:	f003 f87b 	bl	900180c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
90014fce:	280a      	cmp	r0, #10
90014fd0:	4628      	mov	r0, r5
90014fd2:	bf08      	it	eq
90014fd4:	3401      	addeq	r4, #1
90014fd6:	f003 f875 	bl	900180c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
90014fda:	2800      	cmp	r0, #0
90014fdc:	d1f7      	bne.n	90014fce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90014fde:	b2a0      	uxth	r0, r4
90014fe0:	b00f      	add	sp, #60	@ 0x3c
90014fe2:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014fe4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90014fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014fe8:	b0e3      	sub	sp, #396	@ 0x18c
90014fea:	461c      	mov	r4, r3
90014fec:	4683      	mov	fp, r0
90014fee:	4688      	mov	r8, r1
90014ff0:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90014ff2:	2b00      	cmp	r3, #0
90014ff4:	f000 8112 	beq.w	9001521c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014ff8:	6823      	ldr	r3, [r4, #0]
90014ffa:	2b00      	cmp	r3, #0
90014ffc:	f000 810e 	beq.w	9001521c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015000:	7ba3      	ldrb	r3, [r4, #14]
90015002:	2b00      	cmp	r3, #0
90015004:	f000 810a 	beq.w	9001521c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015008:	ad0a      	add	r5, sp, #40	@ 0x28
9001500a:	6810      	ldr	r0, [r2, #0]
9001500c:	6851      	ldr	r1, [r2, #4]
9001500e:	462b      	mov	r3, r5
90015010:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90015014:	c303      	stmia	r3!, {r0, r1}
90015016:	2100      	movs	r1, #0
90015018:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001501c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90015020:	4628      	mov	r0, r5
90015022:	910c      	str	r1, [sp, #48]	@ 0x30
90015024:	a90c      	add	r1, sp, #48	@ 0x30
90015026:	79a2      	ldrb	r2, [r4, #6]
90015028:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001502c:	f7ff fced 	bl	90014a0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90015030:	a90c      	add	r1, sp, #48	@ 0x30
90015032:	79a2      	ldrb	r2, [r4, #6]
90015034:	4608      	mov	r0, r1
90015036:	f7ff fce8 	bl	90014a0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001503a:	a817      	add	r0, sp, #92	@ 0x5c
9001503c:	f002 fc2e 	bl	9001789c <_ZN8touchgfx12TextProviderC1Ev>
90015040:	6820      	ldr	r0, [r4, #0]
90015042:	6803      	ldr	r3, [r0, #0]
90015044:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90015046:	4798      	blx	r3
90015048:	4606      	mov	r6, r0
9001504a:	6820      	ldr	r0, [r4, #0]
9001504c:	6803      	ldr	r3, [r0, #0]
9001504e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90015050:	4798      	blx	r3
90015052:	4633      	mov	r3, r6
90015054:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90015056:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90015058:	9000      	str	r0, [sp, #0]
9001505a:	a817      	add	r0, sp, #92	@ 0x5c
9001505c:	f002 fc71 	bl	90017942 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015060:	6820      	ldr	r0, [r4, #0]
90015062:	f894 a004 	ldrb.w	sl, [r4, #4]
90015066:	6803      	ldr	r3, [r0, #0]
90015068:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001506a:	4798      	blx	r3
9001506c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90015070:	6823      	ldr	r3, [r4, #0]
90015072:	4607      	mov	r7, r0
90015074:	4406      	add	r6, r0
90015076:	a830      	add	r0, sp, #192	@ 0xc0
90015078:	f893 9009 	ldrb.w	r9, [r3, #9]
9001507c:	f002 fc0e 	bl	9001789c <_ZN8touchgfx12TextProviderC1Ev>
90015080:	7c23      	ldrb	r3, [r4, #16]
90015082:	b17b      	cbz	r3, 900150a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90015084:	6820      	ldr	r0, [r4, #0]
90015086:	6803      	ldr	r3, [r0, #0]
90015088:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001508a:	4798      	blx	r3
9001508c:	9009      	str	r0, [sp, #36]	@ 0x24
9001508e:	6820      	ldr	r0, [r4, #0]
90015090:	6802      	ldr	r2, [r0, #0]
90015092:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90015094:	4790      	blx	r2
90015096:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015098:	9000      	str	r0, [sp, #0]
9001509a:	a830      	add	r0, sp, #192	@ 0xc0
9001509c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
9001509e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
900150a0:	f002 fc4f 	bl	90017942 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900150a4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900150a8:	a80e      	add	r0, sp, #56	@ 0x38
900150aa:	7be2      	ldrb	r2, [r4, #15]
900150ac:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
900150b0:	1a8a      	subs	r2, r1, r2
900150b2:	7c21      	ldrb	r1, [r4, #16]
900150b4:	9103      	str	r1, [sp, #12]
900150b6:	b292      	uxth	r2, r2
900150b8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900150bc:	9102      	str	r1, [sp, #8]
900150be:	6821      	ldr	r1, [r4, #0]
900150c0:	9101      	str	r1, [sp, #4]
900150c2:	7961      	ldrb	r1, [r4, #5]
900150c4:	9100      	str	r1, [sp, #0]
900150c6:	a930      	add	r1, sp, #192	@ 0xc0
900150c8:	f7ff fc20 	bl	9001490c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900150cc:	2e00      	cmp	r6, #0
900150ce:	dc5b      	bgt.n	90015188 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900150d0:	af17      	add	r7, sp, #92	@ 0x5c
900150d2:	f04f 0900 	mov.w	r9, #0
900150d6:	7c23      	ldrb	r3, [r4, #16]
900150d8:	2b00      	cmp	r3, #0
900150da:	f000 80b1 	beq.w	90015240 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900150de:	a80e      	add	r0, sp, #56	@ 0x38
900150e0:	f7ff fe4d 	bl	90014d7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900150e4:	f1ba 0f00 	cmp.w	sl, #0
900150e8:	f000 80a5 	beq.w	90015236 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900150ec:	7c23      	ldrb	r3, [r4, #16]
900150ee:	2264      	movs	r2, #100	@ 0x64
900150f0:	4639      	mov	r1, r7
900150f2:	a849      	add	r0, sp, #292	@ 0x124
900150f4:	9309      	str	r3, [sp, #36]	@ 0x24
900150f6:	f013 fe90 	bl	90028e1a <memcpy>
900150fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900150fc:	2b00      	cmp	r3, #0
900150fe:	f000 80a7 	beq.w	90015250 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90015102:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90015106:	7922      	ldrb	r2, [r4, #4]
90015108:	2a01      	cmp	r2, #1
9001510a:	f040 808a 	bne.w	90015222 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
9001510e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90015112:	1ac0      	subs	r0, r0, r3
90015114:	2302      	movs	r3, #2
90015116:	fb90 f0f3 	sdiv	r0, r0, r3
9001511a:	b200      	sxth	r0, r0
9001511c:	7c23      	ldrb	r3, [r4, #16]
9001511e:	2b00      	cmp	r3, #0
90015120:	f000 808b 	beq.w	9001523a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90015124:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90015128:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
9001512c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90015130:	e9cd 2105 	strd	r2, r1, [sp, #20]
90015134:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90015138:	2100      	movs	r1, #0
9001513a:	4410      	add	r0, r2
9001513c:	4642      	mov	r2, r8
9001513e:	b200      	sxth	r0, r0
90015140:	e9cd 9703 	strd	r9, r7, [sp, #12]
90015144:	9000      	str	r0, [sp, #0]
90015146:	4658      	mov	r0, fp
90015148:	e9cd 5401 	strd	r5, r4, [sp, #4]
9001514c:	f7ff fc8e 	bl	90014a6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90015150:	2800      	cmp	r0, #0
90015152:	d163      	bne.n	9001521c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015154:	b2b2      	uxth	r2, r6
90015156:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001515a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
9001515e:	4413      	add	r3, r2
90015160:	1a8a      	subs	r2, r1, r2
90015162:	b21b      	sxth	r3, r3
90015164:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90015168:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
9001516c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015170:	2a00      	cmp	r2, #0
90015172:	d153      	bne.n	9001521c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015174:	6822      	ldr	r2, [r4, #0]
90015176:	8869      	ldrh	r1, [r5, #2]
90015178:	7a12      	ldrb	r2, [r2, #8]
9001517a:	1a9b      	subs	r3, r3, r2
9001517c:	88ea      	ldrh	r2, [r5, #6]
9001517e:	440a      	add	r2, r1
90015180:	b212      	sxth	r2, r2
90015182:	4293      	cmp	r3, r2
90015184:	dda7      	ble.n	900150d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90015186:	e049      	b.n	9001521c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015188:	7c23      	ldrb	r3, [r4, #16]
9001518a:	444f      	add	r7, r9
9001518c:	b1c3      	cbz	r3, 900151c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
9001518e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90015192:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90015196:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001519a:	443b      	add	r3, r7
9001519c:	4293      	cmp	r3, r2
9001519e:	da97      	bge.n	900150d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900151a0:	a80e      	add	r0, sp, #56	@ 0x38
900151a2:	f7ff fdec 	bl	90014d7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900151a6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
900151aa:	3b01      	subs	r3, #1
900151ac:	b29b      	uxth	r3, r3
900151ae:	454b      	cmp	r3, r9
900151b0:	9309      	str	r3, [sp, #36]	@ 0x24
900151b2:	d021      	beq.n	900151f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
900151b4:	7961      	ldrb	r1, [r4, #5]
900151b6:	a817      	add	r0, sp, #92	@ 0x5c
900151b8:	f7f0 fe72 	bl	90005ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900151bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900151be:	e7f4      	b.n	900151aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
900151c0:	fa1f f986 	uxth.w	r9, r6
900151c4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900151c8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900151cc:	443b      	add	r3, r7
900151ce:	4293      	cmp	r3, r2
900151d0:	f6bf af7e 	bge.w	900150d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900151d4:	a817      	add	r0, sp, #92	@ 0x5c
900151d6:	f002 ff75 	bl	900180c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
900151da:	b1f8      	cbz	r0, 9001521c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900151dc:	280a      	cmp	r0, #10
900151de:	d1f1      	bne.n	900151c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900151e0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
900151e4:	444b      	add	r3, r9
900151e6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900151ea:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
900151ee:	eba3 0309 	sub.w	r3, r3, r9
900151f2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900151f6:	e7e5      	b.n	900151c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900151f8:	b2b3      	uxth	r3, r6
900151fa:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
900151fe:	441a      	add	r2, r3
90015200:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90015204:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90015208:	1ad3      	subs	r3, r2, r3
9001520a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001520e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90015212:	b11b      	cbz	r3, 9001521c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015214:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90015218:	2b00      	cmp	r3, #0
9001521a:	d0ba      	beq.n	90015192 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
9001521c:	b063      	add	sp, #396	@ 0x18c
9001521e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015222:	2a02      	cmp	r2, #2
90015224:	d105      	bne.n	90015232 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90015226:	7be2      	ldrb	r2, [r4, #15]
90015228:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
9001522c:	1a80      	subs	r0, r0, r2
9001522e:	1ac0      	subs	r0, r0, r3
90015230:	e773      	b.n	9001511a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90015232:	2000      	movs	r0, #0
90015234:	e772      	b.n	9001511c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015236:	7be0      	ldrb	r0, [r4, #15]
90015238:	e770      	b.n	9001511c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001523a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
9001523e:	e773      	b.n	90015128 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90015240:	f1ba 0f00 	cmp.w	sl, #0
90015244:	d0f7      	beq.n	90015236 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90015246:	2264      	movs	r2, #100	@ 0x64
90015248:	4639      	mov	r1, r7
9001524a:	a849      	add	r0, sp, #292	@ 0x124
9001524c:	f013 fde5 	bl	90028e1a <memcpy>
90015250:	2300      	movs	r3, #0
90015252:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90015256:	6821      	ldr	r1, [r4, #0]
90015258:	a849      	add	r0, sp, #292	@ 0x124
9001525a:	f7ff fb9a 	bl	90014992 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9001525e:	b203      	sxth	r3, r0
90015260:	e751      	b.n	90015106 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90015262 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90015262:	2b03      	cmp	r3, #3
90015264:	d818      	bhi.n	90015298 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90015266:	e8df f003 	tbb	[pc, r3]
9001526a:	0602      	.short	0x0602
9001526c:	130d      	.short	0x130d
9001526e:	f9b0 2000 	ldrsh.w	r2, [r0]
90015272:	1850      	adds	r0, r2, r1
90015274:	4770      	bx	lr
90015276:	8803      	ldrh	r3, [r0, #0]
90015278:	8880      	ldrh	r0, [r0, #4]
9001527a:	4418      	add	r0, r3
9001527c:	b200      	sxth	r0, r0
9001527e:	1a80      	subs	r0, r0, r2
90015280:	3801      	subs	r0, #1
90015282:	4770      	bx	lr
90015284:	8803      	ldrh	r3, [r0, #0]
90015286:	8880      	ldrh	r0, [r0, #4]
90015288:	4418      	add	r0, r3
9001528a:	b200      	sxth	r0, r0
9001528c:	1a40      	subs	r0, r0, r1
9001528e:	e7f7      	b.n	90015280 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90015290:	f9b0 0000 	ldrsh.w	r0, [r0]
90015294:	4410      	add	r0, r2
90015296:	4770      	bx	lr
90015298:	2000      	movs	r0, #0
9001529a:	4770      	bx	lr

9001529c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
9001529c:	2b03      	cmp	r3, #3
9001529e:	d817      	bhi.n	900152d0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
900152a0:	e8df f003 	tbb	[pc, r3]
900152a4:	10090602 	.word	0x10090602
900152a8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
900152ac:	1850      	adds	r0, r2, r1
900152ae:	4770      	bx	lr
900152b0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900152b4:	e7fa      	b.n	900152ac <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
900152b6:	8843      	ldrh	r3, [r0, #2]
900152b8:	88c0      	ldrh	r0, [r0, #6]
900152ba:	4418      	add	r0, r3
900152bc:	b200      	sxth	r0, r0
900152be:	1a80      	subs	r0, r0, r2
900152c0:	3801      	subs	r0, #1
900152c2:	4770      	bx	lr
900152c4:	8843      	ldrh	r3, [r0, #2]
900152c6:	88c0      	ldrh	r0, [r0, #6]
900152c8:	4418      	add	r0, r3
900152ca:	b200      	sxth	r0, r0
900152cc:	1a40      	subs	r0, r0, r1
900152ce:	e7f7      	b.n	900152c0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
900152d0:	2000      	movs	r0, #0
900152d2:	4770      	bx	lr

900152d4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
900152d4:	4b01      	ldr	r3, [pc, #4]	@ (900152dc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
900152d6:	2200      	movs	r2, #0
900152d8:	601a      	str	r2, [r3, #0]
900152da:	4770      	bx	lr
900152dc:	24021bec 	.word	0x24021bec

900152e0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
900152e0:	4603      	mov	r3, r0
900152e2:	b1c8      	cbz	r0, 90015318 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
900152e4:	0c02      	lsrs	r2, r0, #16
900152e6:	0412      	lsls	r2, r2, #16
900152e8:	b9a2      	cbnz	r2, 90015314 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
900152ea:	0403      	lsls	r3, r0, #16
900152ec:	2010      	movs	r0, #16
900152ee:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
900152f2:	bf04      	itt	eq
900152f4:	021b      	lsleq	r3, r3, #8
900152f6:	3008      	addeq	r0, #8
900152f8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
900152fc:	bf04      	itt	eq
900152fe:	011b      	lsleq	r3, r3, #4
90015300:	3004      	addeq	r0, #4
90015302:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90015306:	bf04      	itt	eq
90015308:	009b      	lsleq	r3, r3, #2
9001530a:	3002      	addeq	r0, #2
9001530c:	2b00      	cmp	r3, #0
9001530e:	db04      	blt.n	9001531a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90015310:	3001      	adds	r0, #1
90015312:	4770      	bx	lr
90015314:	2000      	movs	r0, #0
90015316:	e7ea      	b.n	900152ee <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90015318:	2020      	movs	r0, #32
9001531a:	4770      	bx	lr

9001531c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
9001531c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015320:	b087      	sub	sp, #28
90015322:	460d      	mov	r5, r1
90015324:	4616      	mov	r6, r2
90015326:	4698      	mov	r8, r3
90015328:	4601      	mov	r1, r0
9001532a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
9001532e:	b120      	cbz	r0, 9001533a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015330:	b11a      	cbz	r2, 9001533a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015332:	2d1f      	cmp	r5, #31
90015334:	d801      	bhi.n	9001533a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015336:	2b1f      	cmp	r3, #31
90015338:	d904      	bls.n	90015344 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
9001533a:	2000      	movs	r0, #0
9001533c:	6038      	str	r0, [r7, #0]
9001533e:	b007      	add	sp, #28
90015340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015344:	b97d      	cbnz	r5, 90015366 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90015346:	b143      	cbz	r3, 9001535a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90015348:	4602      	mov	r2, r0
9001534a:	462b      	mov	r3, r5
9001534c:	4641      	mov	r1, r8
9001534e:	4630      	mov	r0, r6
90015350:	e9cd 4700 	strd	r4, r7, [sp]
90015354:	f7ff ffe2 	bl	9001531c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015358:	e7f1      	b.n	9001533e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001535a:	f04f 33ff 	mov.w	r3, #4294967295
9001535e:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90015362:	603b      	str	r3, [r7, #0]
90015364:	e7eb      	b.n	9001533e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015366:	fa32 fa05 	lsrs.w	sl, r2, r5
9001536a:	d106      	bne.n	9001537a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
9001536c:	4346      	muls	r6, r0
9001536e:	fbb6 f0f4 	udiv	r0, r6, r4
90015372:	fb04 6610 	mls	r6, r4, r0, r6
90015376:	603e      	str	r6, [r7, #0]
90015378:	e7e1      	b.n	9001533e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001537a:	2201      	movs	r2, #1
9001537c:	fa00 fb05 	lsl.w	fp, r0, r5
90015380:	40aa      	lsls	r2, r5
90015382:	fbbb f9f4 	udiv	r9, fp, r4
90015386:	3a01      	subs	r2, #1
90015388:	fb0a f309 	mul.w	r3, sl, r9
9001538c:	fb04 b919 	mls	r9, r4, r9, fp
90015390:	4016      	ands	r6, r2
90015392:	9303      	str	r3, [sp, #12]
90015394:	4630      	mov	r0, r6
90015396:	f7ff ffa3 	bl	900152e0 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001539a:	462b      	mov	r3, r5
9001539c:	460a      	mov	r2, r1
9001539e:	4601      	mov	r1, r0
900153a0:	4630      	mov	r0, r6
900153a2:	e9cd 4700 	strd	r4, r7, [sp]
900153a6:	f7ff ffb9 	bl	9001531c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900153aa:	4606      	mov	r6, r0
900153ac:	4648      	mov	r0, r9
900153ae:	eb05 0108 	add.w	r1, r5, r8
900153b2:	f7ff ff95 	bl	900152e0 <_ZN8touchgfx16TouchCalibration4clzuEm>
900153b6:	ab05      	add	r3, sp, #20
900153b8:	464a      	mov	r2, r9
900153ba:	e9cd 4300 	strd	r4, r3, [sp]
900153be:	4603      	mov	r3, r0
900153c0:	4650      	mov	r0, sl
900153c2:	f7ff ffab 	bl	9001531c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900153c6:	6839      	ldr	r1, [r7, #0]
900153c8:	9a05      	ldr	r2, [sp, #20]
900153ca:	9b03      	ldr	r3, [sp, #12]
900153cc:	4411      	add	r1, r2
900153ce:	fbb1 f2f4 	udiv	r2, r1, r4
900153d2:	18d3      	adds	r3, r2, r3
900153d4:	fb04 1412 	mls	r4, r4, r2, r1
900153d8:	441e      	add	r6, r3
900153da:	603c      	str	r4, [r7, #0]
900153dc:	4430      	add	r0, r6
900153de:	e7ae      	b.n	9001533e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

900153e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
900153e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900153e4:	b085      	sub	sp, #20
900153e6:	f1b0 0900 	subs.w	r9, r0, #0
900153ea:	461d      	mov	r5, r3
900153ec:	4617      	mov	r7, r2
900153ee:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900153f0:	bfbb      	ittet	lt
900153f2:	f1c9 0900 	rsblt	r9, r9, #0
900153f6:	f04f 36ff 	movlt.w	r6, #4294967295
900153fa:	2601      	movge	r6, #1
900153fc:	6823      	ldrlt	r3, [r4, #0]
900153fe:	bfbc      	itt	lt
90015400:	425b      	neglt	r3, r3
90015402:	6023      	strlt	r3, [r4, #0]
90015404:	2a00      	cmp	r2, #0
90015406:	da04      	bge.n	90015412 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90015408:	6823      	ldr	r3, [r4, #0]
9001540a:	4257      	negs	r7, r2
9001540c:	4276      	negs	r6, r6
9001540e:	425b      	negs	r3, r3
90015410:	6023      	str	r3, [r4, #0]
90015412:	2d00      	cmp	r5, #0
90015414:	4638      	mov	r0, r7
90015416:	bfba      	itte	lt
90015418:	426d      	neglt	r5, r5
9001541a:	f04f 38ff 	movlt.w	r8, #4294967295
9001541e:	f04f 0801 	movge.w	r8, #1
90015422:	f7ff ff5d 	bl	900152e0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015426:	ab03      	add	r3, sp, #12
90015428:	463a      	mov	r2, r7
9001542a:	e9cd 5300 	strd	r5, r3, [sp]
9001542e:	4603      	mov	r3, r0
90015430:	4648      	mov	r0, r9
90015432:	f7ff ff73 	bl	9001531c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015436:	6823      	ldr	r3, [r4, #0]
90015438:	9a03      	ldr	r2, [sp, #12]
9001543a:	4546      	cmp	r6, r8
9001543c:	441a      	add	r2, r3
9001543e:	fb92 f3f5 	sdiv	r3, r2, r5
90015442:	4418      	add	r0, r3
90015444:	fb05 2313 	mls	r3, r5, r3, r2
90015448:	bf18      	it	ne
9001544a:	4240      	negne	r0, r0
9001544c:	1c72      	adds	r2, r6, #1
9001544e:	6023      	str	r3, [r4, #0]
90015450:	d105      	bne.n	9001545e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90015452:	2b00      	cmp	r3, #0
90015454:	f1c3 0200 	rsb	r2, r3, #0
90015458:	db0b      	blt.n	90015472 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
9001545a:	6022      	str	r2, [r4, #0]
9001545c:	e006      	b.n	9001546c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001545e:	2e01      	cmp	r6, #1
90015460:	d104      	bne.n	9001546c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015462:	2b00      	cmp	r3, #0
90015464:	da02      	bge.n	9001546c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015466:	442b      	add	r3, r5
90015468:	3801      	subs	r0, #1
9001546a:	6023      	str	r3, [r4, #0]
9001546c:	b005      	add	sp, #20
9001546e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015472:	3801      	subs	r0, #1
90015474:	1b52      	subs	r2, r2, r5
90015476:	e7f0      	b.n	9001545a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90015478 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90015478:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9001547c:	4c1c      	ldr	r4, [pc, #112]	@ (900154f0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
9001547e:	4605      	mov	r5, r0
90015480:	6807      	ldr	r7, [r0, #0]
90015482:	69a3      	ldr	r3, [r4, #24]
90015484:	b92b      	cbnz	r3, 90015492 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90015486:	6840      	ldr	r0, [r0, #4]
90015488:	e9c5 7000 	strd	r7, r0, [r5]
9001548c:	b004      	add	sp, #16
9001548e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015492:	f04f 0802 	mov.w	r8, #2
90015496:	68a2      	ldr	r2, [r4, #8]
90015498:	ae04      	add	r6, sp, #16
9001549a:	6820      	ldr	r0, [r4, #0]
9001549c:	fb93 f1f8 	sdiv	r1, r3, r8
900154a0:	440a      	add	r2, r1
900154a2:	69e1      	ldr	r1, [r4, #28]
900154a4:	f846 2d04 	str.w	r2, [r6, #-4]!
900154a8:	463a      	mov	r2, r7
900154aa:	9600      	str	r6, [sp, #0]
900154ac:	f7ff ff98 	bl	900153e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900154b0:	69a3      	ldr	r3, [r4, #24]
900154b2:	4607      	mov	r7, r0
900154b4:	686a      	ldr	r2, [r5, #4]
900154b6:	6a21      	ldr	r1, [r4, #32]
900154b8:	9600      	str	r6, [sp, #0]
900154ba:	6860      	ldr	r0, [r4, #4]
900154bc:	f7ff ff90 	bl	900153e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900154c0:	69a3      	ldr	r3, [r4, #24]
900154c2:	6962      	ldr	r2, [r4, #20]
900154c4:	4407      	add	r7, r0
900154c6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900154c8:	9600      	str	r6, [sp, #0]
900154ca:	68e0      	ldr	r0, [r4, #12]
900154cc:	fb93 f8f8 	sdiv	r8, r3, r8
900154d0:	4442      	add	r2, r8
900154d2:	9203      	str	r2, [sp, #12]
900154d4:	682a      	ldr	r2, [r5, #0]
900154d6:	f7ff ff83 	bl	900153e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900154da:	4680      	mov	r8, r0
900154dc:	9600      	str	r6, [sp, #0]
900154de:	69a3      	ldr	r3, [r4, #24]
900154e0:	686a      	ldr	r2, [r5, #4]
900154e2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
900154e4:	6920      	ldr	r0, [r4, #16]
900154e6:	f7ff ff7b 	bl	900153e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900154ea:	4440      	add	r0, r8
900154ec:	e7cc      	b.n	90015488 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
900154ee:	bf00      	nop
900154f0:	24021bf0 	.word	0x24021bf0

900154f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
900154f4:	4b07      	ldr	r3, [pc, #28]	@ (90015514 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
900154f6:	781b      	ldrb	r3, [r3, #0]
900154f8:	2b01      	cmp	r3, #1
900154fa:	d109      	bne.n	90015510 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
900154fc:	f9b1 3000 	ldrsh.w	r3, [r1]
90015500:	f9b0 2000 	ldrsh.w	r2, [r0]
90015504:	8003      	strh	r3, [r0, #0]
90015506:	4b04      	ldr	r3, [pc, #16]	@ (90015518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90015508:	881b      	ldrh	r3, [r3, #0]
9001550a:	3b01      	subs	r3, #1
9001550c:	1a9b      	subs	r3, r3, r2
9001550e:	800b      	strh	r3, [r1, #0]
90015510:	4770      	bx	lr
90015512:	bf00      	nop
90015514:	24021bd4 	.word	0x24021bd4
90015518:	24021bd0 	.word	0x24021bd0

9001551c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
9001551c:	4b07      	ldr	r3, [pc, #28]	@ (9001553c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
9001551e:	b510      	push	{r4, lr}
90015520:	781b      	ldrb	r3, [r3, #0]
90015522:	2b01      	cmp	r3, #1
90015524:	d108      	bne.n	90015538 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90015526:	4b06      	ldr	r3, [pc, #24]	@ (90015540 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90015528:	880c      	ldrh	r4, [r1, #0]
9001552a:	881b      	ldrh	r3, [r3, #0]
9001552c:	f9b0 2000 	ldrsh.w	r2, [r0]
90015530:	3b01      	subs	r3, #1
90015532:	1b1b      	subs	r3, r3, r4
90015534:	8003      	strh	r3, [r0, #0]
90015536:	800a      	strh	r2, [r1, #0]
90015538:	bd10      	pop	{r4, pc}
9001553a:	bf00      	nop
9001553c:	24021bd4 	.word	0x24021bd4
90015540:	24021bd0 	.word	0x24021bd0

90015544 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90015544:	4b0a      	ldr	r3, [pc, #40]	@ (90015570 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90015546:	b510      	push	{r4, lr}
90015548:	781b      	ldrb	r3, [r3, #0]
9001554a:	2b01      	cmp	r3, #1
9001554c:	d10e      	bne.n	9001556c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
9001554e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015552:	8843      	ldrh	r3, [r0, #2]
90015554:	f9b0 4000 	ldrsh.w	r4, [r0]
90015558:	18ca      	adds	r2, r1, r3
9001555a:	4b06      	ldr	r3, [pc, #24]	@ (90015574 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
9001555c:	8044      	strh	r4, [r0, #2]
9001555e:	881b      	ldrh	r3, [r3, #0]
90015560:	1a9b      	subs	r3, r3, r2
90015562:	8003      	strh	r3, [r0, #0]
90015564:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015568:	8081      	strh	r1, [r0, #4]
9001556a:	80c3      	strh	r3, [r0, #6]
9001556c:	bd10      	pop	{r4, pc}
9001556e:	bf00      	nop
90015570:	24021bd4 	.word	0x24021bd4
90015574:	24021bd0 	.word	0x24021bd0

90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90015578:	4b08      	ldr	r3, [pc, #32]	@ (9001559c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
9001557a:	781b      	ldrb	r3, [r3, #0]
9001557c:	2b01      	cmp	r3, #1
9001557e:	d10c      	bne.n	9001559a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90015580:	8803      	ldrh	r3, [r0, #0]
90015582:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90015586:	8842      	ldrh	r2, [r0, #2]
90015588:	8002      	strh	r2, [r0, #0]
9001558a:	185a      	adds	r2, r3, r1
9001558c:	4b04      	ldr	r3, [pc, #16]	@ (900155a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
9001558e:	881b      	ldrh	r3, [r3, #0]
90015590:	1a9b      	subs	r3, r3, r2
90015592:	8043      	strh	r3, [r0, #2]
90015594:	88c3      	ldrh	r3, [r0, #6]
90015596:	80c1      	strh	r1, [r0, #6]
90015598:	8083      	strh	r3, [r0, #4]
9001559a:	4770      	bx	lr
9001559c:	24021bd4 	.word	0x24021bd4
900155a0:	24021bd0 	.word	0x24021bd0

900155a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
900155a4:	4b07      	ldr	r3, [pc, #28]	@ (900155c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
900155a6:	b510      	push	{r4, lr}
900155a8:	781b      	ldrb	r3, [r3, #0]
900155aa:	2b01      	cmp	r3, #1
900155ac:	d108      	bne.n	900155c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
900155ae:	f9b1 3000 	ldrsh.w	r3, [r1]
900155b2:	f9b0 4000 	ldrsh.w	r4, [r0]
900155b6:	8003      	strh	r3, [r0, #0]
900155b8:	8893      	ldrh	r3, [r2, #4]
900155ba:	3b01      	subs	r3, #1
900155bc:	1b1b      	subs	r3, r3, r4
900155be:	800b      	strh	r3, [r1, #0]
900155c0:	bd10      	pop	{r4, pc}
900155c2:	bf00      	nop
900155c4:	24021bd4 	.word	0x24021bd4

900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
900155c8:	4b0a      	ldr	r3, [pc, #40]	@ (900155f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
900155ca:	460a      	mov	r2, r1
900155cc:	b510      	push	{r4, lr}
900155ce:	781b      	ldrb	r3, [r3, #0]
900155d0:	2b01      	cmp	r3, #1
900155d2:	d10d      	bne.n	900155f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
900155d4:	8881      	ldrh	r1, [r0, #4]
900155d6:	8803      	ldrh	r3, [r0, #0]
900155d8:	440b      	add	r3, r1
900155da:	4601      	mov	r1, r0
900155dc:	3b01      	subs	r3, #1
900155de:	f821 3b02 	strh.w	r3, [r1], #2
900155e2:	f7ff ffdf 	bl	900155a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
900155e6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900155ea:	88c2      	ldrh	r2, [r0, #6]
900155ec:	80c3      	strh	r3, [r0, #6]
900155ee:	8082      	strh	r2, [r0, #4]
900155f0:	bd10      	pop	{r4, pc}
900155f2:	bf00      	nop
900155f4:	24021bd4 	.word	0x24021bd4

900155f8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
900155f8:	4770      	bx	lr
	...

900155fc <_ZN8touchgfx11Application13requestRedrawEv>:
900155fc:	4b06      	ldr	r3, [pc, #24]	@ (90015618 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900155fe:	2100      	movs	r1, #0
90015600:	f9b3 2000 	ldrsh.w	r2, [r3]
90015604:	4b05      	ldr	r3, [pc, #20]	@ (9001561c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90015606:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
9001560a:	f9b3 3000 	ldrsh.w	r3, [r3]
9001560e:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90015612:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90015616:	4770      	bx	lr
90015618:	24021bd0 	.word	0x24021bd0
9001561c:	24021bd2 	.word	0x24021bd2

90015620 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90015620:	4b03      	ldr	r3, [pc, #12]	@ (90015630 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90015622:	6818      	ldr	r0, [r3, #0]
90015624:	b110      	cbz	r0, 9001562c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90015626:	6803      	ldr	r3, [r0, #0]
90015628:	699b      	ldr	r3, [r3, #24]
9001562a:	4718      	bx	r3
9001562c:	4770      	bx	lr
9001562e:	bf00      	nop
90015630:	24021c20 	.word	0x24021c20

90015634 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90015634:	4770      	bx	lr
	...

90015638 <_ZN8touchgfx11Application4drawEv>:
90015638:	4b09      	ldr	r3, [pc, #36]	@ (90015660 <_ZN8touchgfx11Application4drawEv+0x28>)
9001563a:	b507      	push	{r0, r1, r2, lr}
9001563c:	f9b3 2000 	ldrsh.w	r2, [r3]
90015640:	2100      	movs	r1, #0
90015642:	4b08      	ldr	r3, [pc, #32]	@ (90015664 <_ZN8touchgfx11Application4drawEv+0x2c>)
90015644:	9100      	str	r1, [sp, #0]
90015646:	4669      	mov	r1, sp
90015648:	f9b3 3000 	ldrsh.w	r3, [r3]
9001564c:	f8ad 2004 	strh.w	r2, [sp, #4]
90015650:	f8ad 3006 	strh.w	r3, [sp, #6]
90015654:	6803      	ldr	r3, [r0, #0]
90015656:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90015658:	4798      	blx	r3
9001565a:	b003      	add	sp, #12
9001565c:	f85d fb04 	ldr.w	pc, [sp], #4
90015660:	24021bd0 	.word	0x24021bd0
90015664:	24021bd2 	.word	0x24021bd2

90015668 <_ZN8touchgfx11Application10invalidateEv>:
90015668:	4b09      	ldr	r3, [pc, #36]	@ (90015690 <_ZN8touchgfx11Application10invalidateEv+0x28>)
9001566a:	b082      	sub	sp, #8
9001566c:	2100      	movs	r1, #0
9001566e:	f9b3 2000 	ldrsh.w	r2, [r3]
90015672:	4b08      	ldr	r3, [pc, #32]	@ (90015694 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90015674:	f8ad 2004 	strh.w	r2, [sp, #4]
90015678:	aa02      	add	r2, sp, #8
9001567a:	f9b3 3000 	ldrsh.w	r3, [r3]
9001567e:	9100      	str	r1, [sp, #0]
90015680:	f8ad 3006 	strh.w	r3, [sp, #6]
90015684:	6803      	ldr	r3, [r0, #0]
90015686:	e912 0006 	ldmdb	r2, {r1, r2}
9001568a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001568c:	b002      	add	sp, #8
9001568e:	4718      	bx	r3
90015690:	24021bd0 	.word	0x24021bd0
90015694:	24021bd2 	.word	0x24021bd2

90015698 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90015698:	4b03      	ldr	r3, [pc, #12]	@ (900156a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
9001569a:	6818      	ldr	r0, [r3, #0]
9001569c:	b110      	cbz	r0, 900156a4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
9001569e:	6803      	ldr	r3, [r0, #0]
900156a0:	69db      	ldr	r3, [r3, #28]
900156a2:	4718      	bx	r3
900156a4:	4770      	bx	lr
900156a6:	bf00      	nop
900156a8:	24021c20 	.word	0x24021c20

900156ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
900156ac:	4b03      	ldr	r3, [pc, #12]	@ (900156bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
900156ae:	6818      	ldr	r0, [r3, #0]
900156b0:	b110      	cbz	r0, 900156b8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
900156b2:	6803      	ldr	r3, [r0, #0]
900156b4:	6a1b      	ldr	r3, [r3, #32]
900156b6:	4718      	bx	r3
900156b8:	4770      	bx	lr
900156ba:	bf00      	nop
900156bc:	24021c20 	.word	0x24021c20

900156c0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
900156c0:	2300      	movs	r3, #0
900156c2:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
900156c6:	4770      	bx	lr

900156c8 <_ZN8touchgfx11Application14handleKeyEventEh>:
900156c8:	4b03      	ldr	r3, [pc, #12]	@ (900156d8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
900156ca:	6818      	ldr	r0, [r3, #0]
900156cc:	b110      	cbz	r0, 900156d4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
900156ce:	6803      	ldr	r3, [r0, #0]
900156d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900156d2:	4718      	bx	r3
900156d4:	4770      	bx	lr
900156d6:	bf00      	nop
900156d8:	24021c20 	.word	0x24021c20

900156dc <_ZN8touchgfx11ApplicationD1Ev>:
900156dc:	4770      	bx	lr

900156de <_ZN8touchgfx11ApplicationD0Ev>:
900156de:	b510      	push	{r4, lr}
900156e0:	4604      	mov	r4, r0
900156e2:	f44f 719e 	mov.w	r1, #316	@ 0x13c
900156e6:	f012 fca3 	bl	90028030 <_ZdlPvj>
900156ea:	4620      	mov	r0, r4
900156ec:	bd10      	pop	{r4, pc}

900156ee <_ZNK8touchgfx4Rect9intersectERKS0_>:
900156ee:	b510      	push	{r4, lr}
900156f0:	f9b1 4000 	ldrsh.w	r4, [r1]
900156f4:	888a      	ldrh	r2, [r1, #4]
900156f6:	f9b0 3000 	ldrsh.w	r3, [r0]
900156fa:	4422      	add	r2, r4
900156fc:	b212      	sxth	r2, r2
900156fe:	4293      	cmp	r3, r2
90015700:	da15      	bge.n	9001572e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90015702:	8882      	ldrh	r2, [r0, #4]
90015704:	4413      	add	r3, r2
90015706:	b21b      	sxth	r3, r3
90015708:	429c      	cmp	r4, r3
9001570a:	da10      	bge.n	9001572e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001570c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90015710:	88c9      	ldrh	r1, [r1, #6]
90015712:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90015716:	4419      	add	r1, r3
90015718:	b209      	sxth	r1, r1
9001571a:	428a      	cmp	r2, r1
9001571c:	da07      	bge.n	9001572e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001571e:	88c0      	ldrh	r0, [r0, #6]
90015720:	4410      	add	r0, r2
90015722:	b200      	sxth	r0, r0
90015724:	4283      	cmp	r3, r0
90015726:	bfac      	ite	ge
90015728:	2000      	movge	r0, #0
9001572a:	2001      	movlt	r0, #1
9001572c:	bd10      	pop	{r4, pc}
9001572e:	2000      	movs	r0, #0
90015730:	e7fc      	b.n	9001572c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90015732 <_ZN8touchgfx4Rect10restrictToEss>:
90015732:	f9b0 3000 	ldrsh.w	r3, [r0]
90015736:	2b00      	cmp	r3, #0
90015738:	b510      	push	{r4, lr}
9001573a:	da04      	bge.n	90015746 <_ZN8touchgfx4Rect10restrictToEss+0x14>
9001573c:	8884      	ldrh	r4, [r0, #4]
9001573e:	4423      	add	r3, r4
90015740:	8083      	strh	r3, [r0, #4]
90015742:	2300      	movs	r3, #0
90015744:	8003      	strh	r3, [r0, #0]
90015746:	f9b0 4000 	ldrsh.w	r4, [r0]
9001574a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001574e:	1b09      	subs	r1, r1, r4
90015750:	428b      	cmp	r3, r1
90015752:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90015756:	bfc8      	it	gt
90015758:	8081      	strhgt	r1, [r0, #4]
9001575a:	2b00      	cmp	r3, #0
9001575c:	da04      	bge.n	90015768 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001575e:	88c1      	ldrh	r1, [r0, #6]
90015760:	440b      	add	r3, r1
90015762:	80c3      	strh	r3, [r0, #6]
90015764:	2300      	movs	r3, #0
90015766:	8043      	strh	r3, [r0, #2]
90015768:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001576c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90015770:	1a52      	subs	r2, r2, r1
90015772:	4293      	cmp	r3, r2
90015774:	bfc8      	it	gt
90015776:	80c2      	strhgt	r2, [r0, #6]
90015778:	bd10      	pop	{r4, pc}
	...

9001577c <_ZN8touchgfx11Application4drawERNS_4RectE>:
9001577c:	4b10      	ldr	r3, [pc, #64]	@ (900157c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001577e:	b510      	push	{r4, lr}
90015780:	460c      	mov	r4, r1
90015782:	f9b3 2000 	ldrsh.w	r2, [r3]
90015786:	4b0f      	ldr	r3, [pc, #60]	@ (900157c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90015788:	4620      	mov	r0, r4
9001578a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001578e:	f7ff ffd0 	bl	90015732 <_ZN8touchgfx4Rect10restrictToEss>
90015792:	4b0d      	ldr	r3, [pc, #52]	@ (900157c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90015794:	6818      	ldr	r0, [r3, #0]
90015796:	b190      	cbz	r0, 900157be <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90015798:	6803      	ldr	r3, [r0, #0]
9001579a:	4621      	mov	r1, r4
9001579c:	689b      	ldr	r3, [r3, #8]
9001579e:	4798      	blx	r3
900157a0:	4b0a      	ldr	r3, [pc, #40]	@ (900157cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
900157a2:	6818      	ldr	r0, [r3, #0]
900157a4:	b118      	cbz	r0, 900157ae <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
900157a6:	6803      	ldr	r3, [r0, #0]
900157a8:	4621      	mov	r1, r4
900157aa:	689b      	ldr	r3, [r3, #8]
900157ac:	4798      	blx	r3
900157ae:	4b08      	ldr	r3, [pc, #32]	@ (900157d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
900157b0:	4621      	mov	r1, r4
900157b2:	6818      	ldr	r0, [r3, #0]
900157b4:	6803      	ldr	r3, [r0, #0]
900157b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900157ba:	69db      	ldr	r3, [r3, #28]
900157bc:	4718      	bx	r3
900157be:	bd10      	pop	{r4, pc}
900157c0:	24021bd2 	.word	0x24021bd2
900157c4:	24021bd0 	.word	0x24021bd0
900157c8:	24021c20 	.word	0x24021c20
900157cc:	24021c1c 	.word	0x24021c1c
900157d0:	24021bdc 	.word	0x24021bdc

900157d4 <_ZNK8touchgfx4Rect8includesERKS0_>:
900157d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900157d6:	4606      	mov	r6, r0
900157d8:	4608      	mov	r0, r1
900157da:	460f      	mov	r7, r1
900157dc:	f7fa fc37 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
900157e0:	b9e8      	cbnz	r0, 9001581e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900157e2:	f9b7 5000 	ldrsh.w	r5, [r7]
900157e6:	f9b6 4000 	ldrsh.w	r4, [r6]
900157ea:	42a5      	cmp	r5, r4
900157ec:	db17      	blt.n	9001581e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900157ee:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900157f2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900157f6:	429a      	cmp	r2, r3
900157f8:	db11      	blt.n	9001581e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900157fa:	88b9      	ldrh	r1, [r7, #4]
900157fc:	440d      	add	r5, r1
900157fe:	88b1      	ldrh	r1, [r6, #4]
90015800:	440c      	add	r4, r1
90015802:	b22d      	sxth	r5, r5
90015804:	b224      	sxth	r4, r4
90015806:	42a5      	cmp	r5, r4
90015808:	dc09      	bgt.n	9001581e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001580a:	88f8      	ldrh	r0, [r7, #6]
9001580c:	4410      	add	r0, r2
9001580e:	88f2      	ldrh	r2, [r6, #6]
90015810:	4413      	add	r3, r2
90015812:	b200      	sxth	r0, r0
90015814:	b21b      	sxth	r3, r3
90015816:	4298      	cmp	r0, r3
90015818:	bfcc      	ite	gt
9001581a:	2000      	movgt	r0, #0
9001581c:	2001      	movle	r0, #1
9001581e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90015820 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90015820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015822:	4604      	mov	r4, r0
90015824:	4608      	mov	r0, r1
90015826:	460d      	mov	r5, r1
90015828:	f7fa fc11 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001582c:	b978      	cbnz	r0, 9001584e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001582e:	4620      	mov	r0, r4
90015830:	f7fa fc0d 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
90015834:	f9b5 6000 	ldrsh.w	r6, [r5]
90015838:	b150      	cbz	r0, 90015850 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001583a:	8026      	strh	r6, [r4, #0]
9001583c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90015840:	8063      	strh	r3, [r4, #2]
90015842:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90015846:	80a3      	strh	r3, [r4, #4]
90015848:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9001584c:	80e3      	strh	r3, [r4, #6]
9001584e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90015850:	f9b4 1000 	ldrsh.w	r1, [r4]
90015854:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015858:	42b1      	cmp	r1, r6
9001585a:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001585e:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90015862:	460f      	mov	r7, r1
90015864:	88ed      	ldrh	r5, [r5, #6]
90015866:	bfa8      	it	ge
90015868:	4637      	movge	r7, r6
9001586a:	4293      	cmp	r3, r2
9001586c:	4618      	mov	r0, r3
9001586e:	4466      	add	r6, ip
90015870:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90015874:	bfa8      	it	ge
90015876:	4610      	movge	r0, r2
90015878:	442a      	add	r2, r5
9001587a:	88e5      	ldrh	r5, [r4, #6]
9001587c:	4461      	add	r1, ip
9001587e:	b236      	sxth	r6, r6
90015880:	8027      	strh	r7, [r4, #0]
90015882:	442b      	add	r3, r5
90015884:	b209      	sxth	r1, r1
90015886:	b212      	sxth	r2, r2
90015888:	8060      	strh	r0, [r4, #2]
9001588a:	b21b      	sxth	r3, r3
9001588c:	428e      	cmp	r6, r1
9001588e:	bfac      	ite	ge
90015890:	ebc7 0106 	rsbge	r1, r7, r6
90015894:	ebc7 0101 	rsblt	r1, r7, r1
90015898:	429a      	cmp	r2, r3
9001589a:	bfac      	ite	ge
9001589c:	ebc0 0202 	rsbge	r2, r0, r2
900158a0:	ebc0 0203 	rsblt	r2, r0, r3
900158a4:	80a1      	strh	r1, [r4, #4]
900158a6:	80e2      	strh	r2, [r4, #6]
900158a8:	e7d1      	b.n	9001584e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

900158ac <_ZN8touchgfx11Application11getInstanceEv>:
900158ac:	4b01      	ldr	r3, [pc, #4]	@ (900158b4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
900158ae:	6818      	ldr	r0, [r3, #0]
900158b0:	4770      	bx	lr
900158b2:	bf00      	nop
900158b4:	24021c30 	.word	0x24021c30

900158b8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
900158b8:	2300      	movs	r3, #0
900158ba:	b510      	push	{r4, lr}
900158bc:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
900158c0:	4604      	mov	r4, r0
900158c2:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900158c6:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900158ca:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900158ce:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
900158d2:	429a      	cmp	r2, r3
900158d4:	d90e      	bls.n	900158f4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900158d6:	18e2      	adds	r2, r4, r3
900158d8:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
900158dc:	b122      	cbz	r2, 900158e8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900158de:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900158e2:	6803      	ldr	r3, [r0, #0]
900158e4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900158e6:	4798      	blx	r3
900158e8:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900158ec:	3301      	adds	r3, #1
900158ee:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900158f2:	e7ea      	b.n	900158ca <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
900158f4:	bd10      	pop	{r4, pc}

900158f6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
900158f6:	2300      	movs	r3, #0
900158f8:	f100 0284 	add.w	r2, r0, #132	@ 0x84
900158fc:	30a4      	adds	r0, #164	@ 0xa4
900158fe:	f820 3c24 	strh.w	r3, [r0, #-36]
90015902:	f802 3b01 	strb.w	r3, [r2], #1
90015906:	4282      	cmp	r2, r0
90015908:	d1fb      	bne.n	90015902 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001590a:	4770      	bx	lr

9001590c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
9001590c:	b570      	push	{r4, r5, r6, lr}
9001590e:	4c0b      	ldr	r4, [pc, #44]	@ (9001593c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90015910:	4605      	mov	r5, r0
90015912:	460e      	mov	r6, r1
90015914:	6820      	ldr	r0, [r4, #0]
90015916:	b110      	cbz	r0, 9001591e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90015918:	6803      	ldr	r3, [r0, #0]
9001591a:	695b      	ldr	r3, [r3, #20]
9001591c:	4798      	blx	r3
9001591e:	1d28      	adds	r0, r5, #4
90015920:	f7ff ffe9 	bl	900158f6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90015924:	6026      	str	r6, [r4, #0]
90015926:	6833      	ldr	r3, [r6, #0]
90015928:	4630      	mov	r0, r6
9001592a:	68db      	ldr	r3, [r3, #12]
9001592c:	4798      	blx	r3
9001592e:	682b      	ldr	r3, [r5, #0]
90015930:	4628      	mov	r0, r5
90015932:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015934:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015938:	4718      	bx	r3
9001593a:	bf00      	nop
9001593c:	24021c20 	.word	0x24021c20

90015940 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90015940:	2300      	movs	r3, #0
90015942:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
90015946:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
9001594a:	461a      	mov	r2, r3
9001594c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001594e:	461c      	mov	r4, r3
90015950:	461d      	mov	r5, r3
90015952:	459c      	cmp	ip, r3
90015954:	dd1a      	ble.n	9001598c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90015956:	18c6      	adds	r6, r0, r3
90015958:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
9001595c:	b16e      	cbz	r6, 9001597a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001595e:	429a      	cmp	r2, r3
90015960:	d008      	beq.n	90015974 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90015962:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90015966:	fa1f fe82 	uxth.w	lr, r2
9001596a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001596e:	1887      	adds	r7, r0, r2
90015970:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90015974:	3201      	adds	r2, #1
90015976:	3301      	adds	r3, #1
90015978:	e7eb      	b.n	90015952 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001597a:	4299      	cmp	r1, r3
9001597c:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
90015980:	bfa8      	it	ge
90015982:	3501      	addge	r5, #1
90015984:	429e      	cmp	r6, r3
90015986:	bfc8      	it	gt
90015988:	3401      	addgt	r4, #1
9001598a:	e7f4      	b.n	90015976 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
9001598c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
90015990:	1b49      	subs	r1, r1, r5
90015992:	1b1b      	subs	r3, r3, r4
90015994:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
90015998:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001599c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900159a0:	4293      	cmp	r3, r2
900159a2:	dd03      	ble.n	900159ac <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900159a4:	3b01      	subs	r3, #1
900159a6:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
900159aa:	e7f7      	b.n	9001599c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900159ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900159b0 <_ZN8touchgfx11Application15handleTickEventEv>:
900159b0:	b570      	push	{r4, r5, r6, lr}
900159b2:	4d16      	ldr	r5, [pc, #88]	@ (90015a0c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900159b4:	4604      	mov	r4, r0
900159b6:	6828      	ldr	r0, [r5, #0]
900159b8:	b140      	cbz	r0, 900159cc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900159ba:	7a03      	ldrb	r3, [r0, #8]
900159bc:	b933      	cbnz	r3, 900159cc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900159be:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900159c2:	6803      	ldr	r3, [r0, #0]
900159c4:	689b      	ldr	r3, [r3, #8]
900159c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900159ca:	4718      	bx	r3
900159cc:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900159d0:	4e0f      	ldr	r6, [pc, #60]	@ (90015a10 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900159d2:	b973      	cbnz	r3, 900159f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900159d4:	b168      	cbz	r0, 900159f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900159d6:	7a03      	ldrb	r3, [r0, #8]
900159d8:	b15b      	cbz	r3, 900159f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900159da:	6830      	ldr	r0, [r6, #0]
900159dc:	b110      	cbz	r0, 900159e4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900159de:	6803      	ldr	r3, [r0, #0]
900159e0:	691b      	ldr	r3, [r3, #16]
900159e2:	4798      	blx	r3
900159e4:	6828      	ldr	r0, [r5, #0]
900159e6:	6803      	ldr	r3, [r0, #0]
900159e8:	68db      	ldr	r3, [r3, #12]
900159ea:	4798      	blx	r3
900159ec:	2301      	movs	r3, #1
900159ee:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900159f2:	3404      	adds	r4, #4
900159f4:	4620      	mov	r0, r4
900159f6:	f7ff ff5f 	bl	900158b8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
900159fa:	4620      	mov	r0, r4
900159fc:	f7ff ffa0 	bl	90015940 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90015a00:	6830      	ldr	r0, [r6, #0]
90015a02:	b110      	cbz	r0, 90015a0a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90015a04:	6803      	ldr	r3, [r0, #0]
90015a06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90015a08:	e7dd      	b.n	900159c6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90015a0a:	bd70      	pop	{r4, r5, r6, pc}
90015a0c:	24021c24 	.word	0x24021c24
90015a10:	24021c20 	.word	0x24021c20

90015a14 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90015a14:	4603      	mov	r3, r0
90015a16:	f100 0140 	add.w	r1, r0, #64	@ 0x40
90015a1a:	2200      	movs	r2, #0
90015a1c:	801a      	strh	r2, [r3, #0]
90015a1e:	3308      	adds	r3, #8
90015a20:	f823 2c06 	strh.w	r2, [r3, #-6]
90015a24:	f823 2c04 	strh.w	r2, [r3, #-4]
90015a28:	f823 2c02 	strh.w	r2, [r3, #-2]
90015a2c:	428b      	cmp	r3, r1
90015a2e:	d1f5      	bne.n	90015a1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90015a30:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90015a34:	4770      	bx	lr
	...

90015a38 <_ZN8touchgfx11ApplicationC1Ev>:
90015a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015a3a:	4b1d      	ldr	r3, [pc, #116]	@ (90015ab0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90015a3c:	4606      	mov	r6, r0
90015a3e:	4604      	mov	r4, r0
90015a40:	2500      	movs	r5, #0
90015a42:	f846 3b04 	str.w	r3, [r6], #4
90015a46:	22a8      	movs	r2, #168	@ 0xa8
90015a48:	2100      	movs	r1, #0
90015a4a:	4630      	mov	r0, r6
90015a4c:	f013 f904 	bl	90028c58 <memset>
90015a50:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
90015a54:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90015a58:	4f16      	ldr	r7, [pc, #88]	@ (90015ab4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90015a5a:	f7ff ffdb 	bl	90015a14 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015a5e:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90015a62:	f7ff ffd7 	bl	90015a14 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015a66:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
90015a6a:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
90015a6e:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
90015a72:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
90015a76:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
90015a7a:	490f      	ldr	r1, [pc, #60]	@ (90015ab8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90015a7c:	480f      	ldr	r0, [pc, #60]	@ (90015abc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90015a7e:	f011 fc47 	bl	90027310 <CRC_Lock>
90015a82:	4b0f      	ldr	r3, [pc, #60]	@ (90015ac0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90015a84:	b158      	cbz	r0, 90015a9e <_ZN8touchgfx11ApplicationC1Ev+0x66>
90015a86:	801d      	strh	r5, [r3, #0]
90015a88:	2300      	movs	r3, #0
90015a8a:	4a0e      	ldr	r2, [pc, #56]	@ (90015ac4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90015a8c:	4630      	mov	r0, r6
90015a8e:	6013      	str	r3, [r2, #0]
90015a90:	4a0d      	ldr	r2, [pc, #52]	@ (90015ac8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90015a92:	603b      	str	r3, [r7, #0]
90015a94:	6013      	str	r3, [r2, #0]
90015a96:	f7ff ff2e 	bl	900158f6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90015a9a:	4620      	mov	r0, r4
90015a9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90015a9e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90015aa2:	2002      	movs	r0, #2
90015aa4:	801a      	strh	r2, [r3, #0]
90015aa6:	6038      	str	r0, [r7, #0]
90015aa8:	f001 fd7e 	bl	900175a8 <_ZN8touchgfx6Screen4drawEv>
90015aac:	e7ec      	b.n	90015a88 <_ZN8touchgfx11ApplicationC1Ev+0x50>
90015aae:	bf00      	nop
90015ab0:	9002d9a4 	.word	0x9002d9a4
90015ab4:	24021c20 	.word	0x24021c20
90015ab8:	b5e8b5cd 	.word	0xb5e8b5cd
90015abc:	f407a5c2 	.word	0xf407a5c2
90015ac0:	24000098 	.word	0x24000098
90015ac4:	24021c30 	.word	0x24021c30
90015ac8:	24021c24 	.word	0x24021c24

90015acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90015acc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90015ad0:	3b01      	subs	r3, #1
90015ad2:	b29b      	uxth	r3, r3
90015ad4:	428b      	cmp	r3, r1
90015ad6:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
90015ada:	b510      	push	{r4, lr}
90015adc:	d908      	bls.n	90015af0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90015ade:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90015ae2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90015ae6:	681a      	ldr	r2, [r3, #0]
90015ae8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90015aec:	685a      	ldr	r2, [r3, #4]
90015aee:	6062      	str	r2, [r4, #4]
90015af0:	bd10      	pop	{r4, pc}
	...

90015af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90015af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015af8:	b08f      	sub	sp, #60	@ 0x3c
90015afa:	4b8f      	ldr	r3, [pc, #572]	@ (90015d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90015afc:	4683      	mov	fp, r0
90015afe:	ac0a      	add	r4, sp, #40	@ 0x28
90015b00:	e884 0006 	stmia.w	r4, {r1, r2}
90015b04:	f9b3 2000 	ldrsh.w	r2, [r3]
90015b08:	4620      	mov	r0, r4
90015b0a:	4b8c      	ldr	r3, [pc, #560]	@ (90015d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90015b0c:	f9b3 1000 	ldrsh.w	r1, [r3]
90015b10:	f7ff fe0f 	bl	90015732 <_ZN8touchgfx4Rect10restrictToEss>
90015b14:	4620      	mov	r0, r4
90015b16:	f7fa fa9a 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
90015b1a:	2800      	cmp	r0, #0
90015b1c:	d16a      	bne.n	90015bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90015b1e:	9403      	str	r4, [sp, #12]
90015b20:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90015b24:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90015b28:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90015b2c:	9301      	str	r3, [sp, #4]
90015b2e:	35a4      	adds	r5, #164	@ 0xa4
90015b30:	b15c      	cbz	r4, 90015b4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
90015b32:	4629      	mov	r1, r5
90015b34:	9803      	ldr	r0, [sp, #12]
90015b36:	f7ff fe4d 	bl	900157d4 <_ZNK8touchgfx4Rect8includesERKS0_>
90015b3a:	3c01      	subs	r4, #1
90015b3c:	b118      	cbz	r0, 90015b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
90015b3e:	b2a1      	uxth	r1, r4
90015b40:	9801      	ldr	r0, [sp, #4]
90015b42:	f7ff ffc3 	bl	90015acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015b46:	3d08      	subs	r5, #8
90015b48:	e7f2      	b.n	90015b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90015b4a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
90015b4e:	f10a 33ff 	add.w	r3, sl, #4294967295
90015b52:	f8cd a010 	str.w	sl, [sp, #16]
90015b56:	9302      	str	r3, [sp, #8]
90015b58:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90015b5c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
90015b60:	9306      	str	r3, [sp, #24]
90015b62:	445c      	add	r4, fp
90015b64:	2500      	movs	r5, #0
90015b66:	4626      	mov	r6, r4
90015b68:	f8cd a014 	str.w	sl, [sp, #20]
90015b6c:	462f      	mov	r7, r5
90015b6e:	9b05      	ldr	r3, [sp, #20]
90015b70:	2b00      	cmp	r3, #0
90015b72:	d073      	beq.n	90015c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90015b74:	9903      	ldr	r1, [sp, #12]
90015b76:	4630      	mov	r0, r6
90015b78:	f7ff fdb9 	bl	900156ee <_ZNK8touchgfx4Rect9intersectERKS0_>
90015b7c:	b350      	cbz	r0, 90015bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90015b7e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
90015b82:	f9b6 c000 	ldrsh.w	ip, [r6]
90015b86:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
90015b8a:	45e6      	cmp	lr, ip
90015b8c:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90015b90:	db33      	blt.n	90015bfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90015b92:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90015b96:	88b3      	ldrh	r3, [r6, #4]
90015b98:	4472      	add	r2, lr
90015b9a:	4463      	add	r3, ip
90015b9c:	b212      	sxth	r2, r2
90015b9e:	b21b      	sxth	r3, r3
90015ba0:	429a      	cmp	r2, r3
90015ba2:	dc2a      	bgt.n	90015bfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90015ba4:	fa1f f289 	uxth.w	r2, r9
90015ba8:	88f3      	ldrh	r3, [r6, #6]
90015baa:	45c8      	cmp	r8, r9
90015bac:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90015bb0:	4413      	add	r3, r2
90015bb2:	fa1f fc88 	uxth.w	ip, r8
90015bb6:	b29b      	uxth	r3, r3
90015bb8:	fa0f fe83 	sxth.w	lr, r3
90015bbc:	db0f      	blt.n	90015bde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90015bbe:	eba3 030c 	sub.w	r3, r3, ip
90015bc2:	1ac9      	subs	r1, r1, r3
90015bc4:	b209      	sxth	r1, r1
90015bc6:	2900      	cmp	r1, #0
90015bc8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015bcc:	dd12      	ble.n	90015bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90015bce:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
90015bd2:	4605      	mov	r5, r0
90015bd4:	9b05      	ldr	r3, [sp, #20]
90015bd6:	3e08      	subs	r6, #8
90015bd8:	3b01      	subs	r3, #1
90015bda:	9305      	str	r3, [sp, #20]
90015bdc:	e7c7      	b.n	90015b6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90015bde:	4461      	add	r1, ip
90015be0:	b209      	sxth	r1, r1
90015be2:	4571      	cmp	r1, lr
90015be4:	dc38      	bgt.n	90015c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015be6:	eba2 020c 	sub.w	r2, r2, ip
90015bea:	b212      	sxth	r2, r2
90015bec:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90015bf0:	2a00      	cmp	r2, #0
90015bf2:	dcee      	bgt.n	90015bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015bf4:	b00f      	add	sp, #60	@ 0x3c
90015bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015bfa:	45c8      	cmp	r8, r9
90015bfc:	db2c      	blt.n	90015c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015bfe:	88f3      	ldrh	r3, [r6, #6]
90015c00:	4499      	add	r9, r3
90015c02:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90015c06:	4498      	add	r8, r3
90015c08:	fa0f f989 	sxth.w	r9, r9
90015c0c:	fa0f f888 	sxth.w	r8, r8
90015c10:	45c1      	cmp	r9, r8
90015c12:	db21      	blt.n	90015c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015c14:	fa1f f28c 	uxth.w	r2, ip
90015c18:	88b3      	ldrh	r3, [r6, #4]
90015c1a:	45e6      	cmp	lr, ip
90015c1c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90015c20:	4413      	add	r3, r2
90015c22:	fa1f f88e 	uxth.w	r8, lr
90015c26:	b29b      	uxth	r3, r3
90015c28:	fa0f f983 	sxth.w	r9, r3
90015c2c:	db0a      	blt.n	90015c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90015c2e:	eba3 0308 	sub.w	r3, r3, r8
90015c32:	1ac9      	subs	r1, r1, r3
90015c34:	b209      	sxth	r1, r1
90015c36:	2900      	cmp	r1, #0
90015c38:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90015c3c:	ddda      	ble.n	90015bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90015c3e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90015c42:	e7c6      	b.n	90015bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015c44:	4441      	add	r1, r8
90015c46:	b209      	sxth	r1, r1
90015c48:	4549      	cmp	r1, r9
90015c4a:	dc05      	bgt.n	90015c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015c4c:	eba2 0208 	sub.w	r2, r2, r8
90015c50:	b212      	sxth	r2, r2
90015c52:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90015c56:	e7cb      	b.n	90015bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90015c58:	4607      	mov	r7, r0
90015c5a:	e7bb      	b.n	90015bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90015c5c:	2d00      	cmp	r5, #0
90015c5e:	d181      	bne.n	90015b64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90015c60:	2f00      	cmp	r7, #0
90015c62:	f000 81dd 	beq.w	90016020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015c66:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
90015c6a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
90015c6e:	b2b3      	uxth	r3, r6
90015c70:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90015c74:	9305      	str	r3, [sp, #20]
90015c76:	9a05      	ldr	r2, [sp, #20]
90015c78:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90015c7c:	4413      	add	r3, r2
90015c7e:	b2ba      	uxth	r2, r7
90015c80:	4492      	add	sl, r2
90015c82:	b29b      	uxth	r3, r3
90015c84:	fa1f fa8a 	uxth.w	sl, sl
90015c88:	fa0f f883 	sxth.w	r8, r3
90015c8c:	fa0f f98a 	sxth.w	r9, sl
90015c90:	e9cd 2307 	strd	r2, r3, [sp, #28]
90015c94:	9b04      	ldr	r3, [sp, #16]
90015c96:	2b00      	cmp	r3, #0
90015c98:	d052      	beq.n	90015d40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90015c9a:	9903      	ldr	r1, [sp, #12]
90015c9c:	4620      	mov	r0, r4
90015c9e:	f7ff fd26 	bl	900156ee <_ZNK8touchgfx4Rect9intersectERKS0_>
90015ca2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90015ca6:	b1c0      	cbz	r0, 90015cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015ca8:	f9b4 e000 	ldrsh.w	lr, [r4]
90015cac:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90015cb0:	4576      	cmp	r6, lr
90015cb2:	dc22      	bgt.n	90015cfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90015cb4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90015cb8:	44f4      	add	ip, lr
90015cba:	fa0f fc8c 	sxth.w	ip, ip
90015cbe:	45e0      	cmp	r8, ip
90015cc0:	db1b      	blt.n	90015cfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90015cc2:	428f      	cmp	r7, r1
90015cc4:	fa1f fc81 	uxth.w	ip, r1
90015cc8:	88e1      	ldrh	r1, [r4, #6]
90015cca:	dc0d      	bgt.n	90015ce8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90015ccc:	ebaa 0c0c 	sub.w	ip, sl, ip
90015cd0:	f8a4 9002 	strh.w	r9, [r4, #2]
90015cd4:	eba1 010c 	sub.w	r1, r1, ip
90015cd8:	80e1      	strh	r1, [r4, #6]
90015cda:	4628      	mov	r0, r5
90015cdc:	9904      	ldr	r1, [sp, #16]
90015cde:	3c08      	subs	r4, #8
90015ce0:	4605      	mov	r5, r0
90015ce2:	3901      	subs	r1, #1
90015ce4:	9104      	str	r1, [sp, #16]
90015ce6:	e7d3      	b.n	90015c90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90015ce8:	4461      	add	r1, ip
90015cea:	b209      	sxth	r1, r1
90015cec:	4549      	cmp	r1, r9
90015cee:	dcf5      	bgt.n	90015cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015cf0:	eba2 0c0c 	sub.w	ip, r2, ip
90015cf4:	f8a4 c006 	strh.w	ip, [r4, #6]
90015cf8:	e7ef      	b.n	90015cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015cfa:	428f      	cmp	r7, r1
90015cfc:	dcee      	bgt.n	90015cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015cfe:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90015d02:	4461      	add	r1, ip
90015d04:	b209      	sxth	r1, r1
90015d06:	4589      	cmp	r9, r1
90015d08:	dbe8      	blt.n	90015cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015d0a:	4576      	cmp	r6, lr
90015d0c:	fa1f fc8e 	uxth.w	ip, lr
90015d10:	88a1      	ldrh	r1, [r4, #4]
90015d12:	dc07      	bgt.n	90015d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90015d14:	eba3 0c0c 	sub.w	ip, r3, ip
90015d18:	f8a4 8000 	strh.w	r8, [r4]
90015d1c:	eba1 010c 	sub.w	r1, r1, ip
90015d20:	80a1      	strh	r1, [r4, #4]
90015d22:	e7da      	b.n	90015cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015d24:	4461      	add	r1, ip
90015d26:	b209      	sxth	r1, r1
90015d28:	4588      	cmp	r8, r1
90015d2a:	dbd7      	blt.n	90015cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015d2c:	9905      	ldr	r1, [sp, #20]
90015d2e:	eba1 0c0c 	sub.w	ip, r1, ip
90015d32:	f8a4 c004 	strh.w	ip, [r4, #4]
90015d36:	e7d0      	b.n	90015cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015d38:	24021bd2 	.word	0x24021bd2
90015d3c:	24021bd0 	.word	0x24021bd0
90015d40:	2d00      	cmp	r5, #0
90015d42:	f000 816d 	beq.w	90016020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015d46:	9b06      	ldr	r3, [sp, #24]
90015d48:	445b      	add	r3, fp
90015d4a:	461c      	mov	r4, r3
90015d4c:	9b02      	ldr	r3, [sp, #8]
90015d4e:	3301      	adds	r3, #1
90015d50:	f000 8166 	beq.w	90016020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015d54:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
90015d58:	9803      	ldr	r0, [sp, #12]
90015d5a:	4629      	mov	r1, r5
90015d5c:	f7ff fd3a 	bl	900157d4 <_ZNK8touchgfx4Rect8includesERKS0_>
90015d60:	b120      	cbz	r0, 90015d6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
90015d62:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90015d66:	9801      	ldr	r0, [sp, #4]
90015d68:	f7ff feb0 	bl	90015acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015d6c:	9903      	ldr	r1, [sp, #12]
90015d6e:	4628      	mov	r0, r5
90015d70:	f7ff fcbd 	bl	900156ee <_ZNK8touchgfx4Rect9intersectERKS0_>
90015d74:	2800      	cmp	r0, #0
90015d76:	f000 809c 	beq.w	90015eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90015d7a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90015d7e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90015d82:	fa1f f189 	uxth.w	r1, r9
90015d86:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90015d8a:	9309      	str	r3, [sp, #36]	@ 0x24
90015d8c:	eb01 0c03 	add.w	ip, r1, r3
90015d90:	b283      	uxth	r3, r0
90015d92:	4548      	cmp	r0, r9
90015d94:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
90015d98:	fa1f fa8c 	uxth.w	sl, ip
90015d9c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90015da0:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90015da4:	eb03 050c 	add.w	r5, r3, ip
90015da8:	b2ad      	uxth	r5, r5
90015daa:	9505      	str	r5, [sp, #20]
90015dac:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90015db0:	9504      	str	r5, [sp, #16]
90015db2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
90015db6:	f340 8099 	ble.w	90015eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90015dba:	1a5b      	subs	r3, r3, r1
90015dbc:	4596      	cmp	lr, r2
90015dbe:	fa0f f08a 	sxth.w	r0, sl
90015dc2:	b29b      	uxth	r3, r3
90015dc4:	b21e      	sxth	r6, r3
90015dc6:	dd2e      	ble.n	90015e26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90015dc8:	9f02      	ldr	r7, [sp, #8]
90015dca:	fa1f fe8e 	uxth.w	lr, lr
90015dce:	b292      	uxth	r2, r2
90015dd0:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90015dd4:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90015dd8:	9f04      	ldr	r7, [sp, #16]
90015dda:	ebae 0102 	sub.w	r1, lr, r2
90015dde:	44a6      	add	lr, r4
90015de0:	1a3f      	subs	r7, r7, r0
90015de2:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
90015de6:	b289      	uxth	r1, r1
90015de8:	4402      	add	r2, r0
90015dea:	fa0f fe8e 	sxth.w	lr, lr
90015dee:	b20d      	sxth	r5, r1
90015df0:	b212      	sxth	r2, r2
90015df2:	436f      	muls	r7, r5
90015df4:	ebae 0202 	sub.w	r2, lr, r2
90015df8:	4372      	muls	r2, r6
90015dfa:	4297      	cmp	r7, r2
90015dfc:	db09      	blt.n	90015e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
90015dfe:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
90015e02:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
90015e06:	449c      	add	ip, r3
90015e08:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90015e0c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90015e10:	e686      	b.n	90015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015e12:	4421      	add	r1, r4
90015e14:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90015e18:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90015e1c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015e20:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90015e24:	e67c      	b.n	90015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015e26:	9f04      	ldr	r7, [sp, #16]
90015e28:	42b8      	cmp	r0, r7
90015e2a:	da27      	bge.n	90015e7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90015e2c:	9902      	ldr	r1, [sp, #8]
90015e2e:	1a3f      	subs	r7, r7, r0
90015e30:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
90015e34:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90015e38:	eb05 010e 	add.w	r1, r5, lr
90015e3c:	fa1f f881 	uxth.w	r8, r1
90015e40:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
90015e44:	4411      	add	r1, r2
90015e46:	fa0f f988 	sxth.w	r9, r8
90015e4a:	eba2 020e 	sub.w	r2, r2, lr
90015e4e:	eba1 0108 	sub.w	r1, r1, r8
90015e52:	4372      	muls	r2, r6
90015e54:	b289      	uxth	r1, r1
90015e56:	fa0f f881 	sxth.w	r8, r1
90015e5a:	fb08 f707 	mul.w	r7, r8, r7
90015e5e:	42ba      	cmp	r2, r7
90015e60:	dc06      	bgt.n	90015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
90015e62:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
90015e66:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90015e6a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90015e6e:	e7ca      	b.n	90015e06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90015e70:	4429      	add	r1, r5
90015e72:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
90015e76:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015e7a:	e651      	b.n	90015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015e7c:	9805      	ldr	r0, [sp, #20]
90015e7e:	2d06      	cmp	r5, #6
90015e80:	ebaa 0000 	sub.w	r0, sl, r0
90015e84:	b280      	uxth	r0, r0
90015e86:	fa0f fe80 	sxth.w	lr, r0
90015e8a:	d817      	bhi.n	90015ebc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90015e8c:	9b04      	ldr	r3, [sp, #16]
90015e8e:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90015e92:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90015e96:	1c6b      	adds	r3, r5, #1
90015e98:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90015e9c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90015ea0:	9b01      	ldr	r3, [sp, #4]
90015ea2:	9801      	ldr	r0, [sp, #4]
90015ea4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015ea8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90015eac:	805a      	strh	r2, [r3, #2]
90015eae:	809e      	strh	r6, [r3, #4]
90015eb0:	80d9      	strh	r1, [r3, #6]
90015eb2:	9b02      	ldr	r3, [sp, #8]
90015eb4:	3c08      	subs	r4, #8
90015eb6:	3b01      	subs	r3, #1
90015eb8:	9302      	str	r3, [sp, #8]
90015eba:	e747      	b.n	90015d4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90015ebc:	9a02      	ldr	r2, [sp, #8]
90015ebe:	45b6      	cmp	lr, r6
90015ec0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015ec4:	db0d      	blt.n	90015ee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90015ec6:	449c      	add	ip, r3
90015ec8:	445a      	add	r2, fp
90015eca:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90015ece:	fa1f fc8c 	uxth.w	ip, ip
90015ed2:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
90015ed6:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90015eda:	448c      	add	ip, r1
90015edc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90015ee0:	e61e      	b.n	90015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015ee2:	445a      	add	r2, fp
90015ee4:	4484      	add	ip, r0
90015ee6:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
90015eea:	e78f      	b.n	90015e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015eec:	fa1f f18e 	uxth.w	r1, lr
90015ef0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90015ef4:	b293      	uxth	r3, r2
90015ef6:	4596      	cmp	lr, r2
90015ef8:	eb01 0806 	add.w	r8, r1, r6
90015efc:	9306      	str	r3, [sp, #24]
90015efe:	fa1f f888 	uxth.w	r8, r8
90015f02:	9f06      	ldr	r7, [sp, #24]
90015f04:	fa0f f388 	sxth.w	r3, r8
90015f08:	9307      	str	r3, [sp, #28]
90015f0a:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90015f0e:	443b      	add	r3, r7
90015f10:	b29b      	uxth	r3, r3
90015f12:	9308      	str	r3, [sp, #32]
90015f14:	da24      	bge.n	90015f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90015f16:	9905      	ldr	r1, [sp, #20]
90015f18:	eba3 0308 	sub.w	r3, r3, r8
90015f1c:	eba2 020e 	sub.w	r2, r2, lr
90015f20:	eba9 0000 	sub.w	r0, r9, r0
90015f24:	ebaa 0401 	sub.w	r4, sl, r1
90015f28:	b29b      	uxth	r3, r3
90015f2a:	b2a4      	uxth	r4, r4
90015f2c:	b219      	sxth	r1, r3
90015f2e:	b225      	sxth	r5, r4
90015f30:	4348      	muls	r0, r1
90015f32:	436a      	muls	r2, r5
90015f34:	4282      	cmp	r2, r0
90015f36:	9a02      	ldr	r2, [sp, #8]
90015f38:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015f3c:	445a      	add	r2, fp
90015f3e:	dc06      	bgt.n	90015f4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90015f40:	9b07      	ldr	r3, [sp, #28]
90015f42:	44a4      	add	ip, r4
90015f44:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90015f48:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90015f4c:	e75e      	b.n	90015e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015f4e:	9904      	ldr	r1, [sp, #16]
90015f50:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
90015f54:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90015f58:	4433      	add	r3, r6
90015f5a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015f5e:	e5df      	b.n	90015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015f60:	9f06      	ldr	r7, [sp, #24]
90015f62:	9b04      	ldr	r3, [sp, #16]
90015f64:	1bc9      	subs	r1, r1, r7
90015f66:	fa0f f78a 	sxth.w	r7, sl
90015f6a:	b289      	uxth	r1, r1
90015f6c:	429f      	cmp	r7, r3
90015f6e:	fa0f fe81 	sxth.w	lr, r1
90015f72:	dd23      	ble.n	90015fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90015f74:	9a05      	ldr	r2, [sp, #20]
90015f76:	eba9 0000 	sub.w	r0, r9, r0
90015f7a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90015f7e:	ebaa 0202 	sub.w	r2, sl, r2
90015f82:	9d07      	ldr	r5, [sp, #28]
90015f84:	fb0e f000 	mul.w	r0, lr, r0
90015f88:	b292      	uxth	r2, r2
90015f8a:	eba5 0a03 	sub.w	sl, r5, r3
90015f8e:	9b02      	ldr	r3, [sp, #8]
90015f90:	b214      	sxth	r4, r2
90015f92:	00db      	lsls	r3, r3, #3
90015f94:	fb04 fa0a 	mul.w	sl, r4, sl
90015f98:	445b      	add	r3, fp
90015f9a:	4550      	cmp	r0, sl
90015f9c:	db03      	blt.n	90015fa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90015f9e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90015fa2:	4494      	add	ip, r2
90015fa4:	e732      	b.n	90015e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015fa6:	9a04      	ldr	r2, [sp, #16]
90015fa8:	4431      	add	r1, r6
90015faa:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90015fae:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90015fb2:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90015fb6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90015fba:	e75c      	b.n	90015e76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90015fbc:	9b08      	ldr	r3, [sp, #32]
90015fbe:	2d06      	cmp	r5, #6
90015fc0:	eba3 0308 	sub.w	r3, r3, r8
90015fc4:	b29b      	uxth	r3, r3
90015fc6:	b218      	sxth	r0, r3
90015fc8:	d813      	bhi.n	90015ff2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90015fca:	9b07      	ldr	r3, [sp, #28]
90015fcc:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90015fd0:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90015fd4:	1c6b      	adds	r3, r5, #1
90015fd6:	9901      	ldr	r1, [sp, #4]
90015fd8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90015fdc:	9b01      	ldr	r3, [sp, #4]
90015fde:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90015fe2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015fe6:	805a      	strh	r2, [r3, #2]
90015fe8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90015fea:	f8a3 e006 	strh.w	lr, [r3, #6]
90015fee:	809a      	strh	r2, [r3, #4]
90015ff0:	e75f      	b.n	90015eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90015ff2:	9c02      	ldr	r4, [sp, #8]
90015ff4:	4570      	cmp	r0, lr
90015ff6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90015ffa:	db0d      	blt.n	90016018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90015ffc:	4431      	add	r1, r6
90015ffe:	9b06      	ldr	r3, [sp, #24]
90016000:	445c      	add	r4, fp
90016002:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90016006:	b289      	uxth	r1, r1
90016008:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
9001600c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90016010:	4419      	add	r1, r3
90016012:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90016016:	e583      	b.n	90015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016018:	445c      	add	r4, fp
9001601a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
9001601e:	e79b      	b.n	90015f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90016020:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90016024:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90016028:	1e65      	subs	r5, r4, #1
9001602a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
9001602e:	b2ad      	uxth	r5, r5
90016030:	42b5      	cmp	r5, r6
90016032:	d044      	beq.n	900160be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90016034:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90016038:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
9001603c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90016040:	4282      	cmp	r2, r0
90016042:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90016046:	d11f      	bne.n	90016088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90016048:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
9001604c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90016050:	459c      	cmp	ip, r3
90016052:	d119      	bne.n	90016088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90016054:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90016058:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
9001605c:	19d8      	adds	r0, r3, r7
9001605e:	b200      	sxth	r0, r0
90016060:	4288      	cmp	r0, r1
90016062:	d109      	bne.n	90016078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90016064:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90016068:	4413      	add	r3, r2
9001606a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001606e:	4629      	mov	r1, r5
90016070:	9801      	ldr	r0, [sp, #4]
90016072:	f7ff fd2b 	bl	90015acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016076:	e003      	b.n	90016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016078:	4411      	add	r1, r2
9001607a:	b209      	sxth	r1, r1
9001607c:	42b9      	cmp	r1, r7
9001607e:	d0f3      	beq.n	90016068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90016080:	3d01      	subs	r5, #1
90016082:	3c08      	subs	r4, #8
90016084:	b2ad      	uxth	r5, r5
90016086:	e7d3      	b.n	90016030 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90016088:	42b9      	cmp	r1, r7
9001608a:	d1f9      	bne.n	90016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
9001608c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90016090:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90016094:	4299      	cmp	r1, r3
90016096:	d1f3      	bne.n	90016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016098:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
9001609c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
900160a0:	181f      	adds	r7, r3, r0
900160a2:	b23f      	sxth	r7, r7
900160a4:	42ba      	cmp	r2, r7
900160a6:	d105      	bne.n	900160b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
900160a8:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
900160ac:	440b      	add	r3, r1
900160ae:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900160b2:	e7dc      	b.n	9001606e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
900160b4:	440a      	add	r2, r1
900160b6:	b212      	sxth	r2, r2
900160b8:	4290      	cmp	r0, r2
900160ba:	d1e1      	bne.n	90016080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900160bc:	e7f6      	b.n	900160ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
900160be:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
900160c2:	2e07      	cmp	r6, #7
900160c4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
900160c8:	d812      	bhi.n	900160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
900160ca:	1c75      	adds	r5, r6, #1
900160cc:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900160d0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
900160d4:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
900160d8:	9d01      	ldr	r5, [sp, #4]
900160da:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900160de:	442c      	add	r4, r5
900160e0:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
900160e4:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
900160e8:	8061      	strh	r1, [r4, #2]
900160ea:	80a2      	strh	r2, [r4, #4]
900160ec:	80e3      	strh	r3, [r4, #6]
900160ee:	e581      	b.n	90015bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900160f0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
900160f4:	3e01      	subs	r6, #1
900160f6:	445c      	add	r4, fp
900160f8:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
900160fc:	f04f 37ff 	mov.w	r7, #4294967295
90016100:	2500      	movs	r5, #0
90016102:	9305      	str	r3, [sp, #20]
90016104:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90016108:	1e72      	subs	r2, r6, #1
9001610a:	9302      	str	r3, [sp, #8]
9001610c:	4691      	mov	r9, r2
9001610e:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90016112:	9304      	str	r3, [sp, #16]
90016114:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90016118:	f1b9 3fff 	cmp.w	r9, #4294967295
9001611c:	6818      	ldr	r0, [r3, #0]
9001611e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90016122:	9207      	str	r2, [sp, #28]
90016124:	bf16      	itet	ne
90016126:	9905      	ldrne	r1, [sp, #20]
90016128:	f8dd e00c 	ldreq.w	lr, [sp, #12]
9001612c:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90016130:	9306      	str	r3, [sp, #24]
90016132:	f8be 1006 	ldrh.w	r1, [lr, #6]
90016136:	f8be 8004 	ldrh.w	r8, [lr, #4]
9001613a:	fb18 f801 	smulbb	r8, r8, r1
9001613e:	6859      	ldr	r1, [r3, #4]
90016140:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016144:	4671      	mov	r1, lr
90016146:	a80c      	add	r0, sp, #48	@ 0x30
90016148:	f7ff fb6a 	bl	90015820 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001614c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90016150:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90016154:	f04f 0c08 	mov.w	ip, #8
90016158:	9b04      	ldr	r3, [sp, #16]
9001615a:	9a02      	ldr	r2, [sp, #8]
9001615c:	fb10 f001 	smulbb	r0, r0, r1
90016160:	fb02 8803 	mla	r8, r2, r3, r8
90016164:	eba0 0108 	sub.w	r1, r0, r8
90016168:	fb90 f0fc 	sdiv	r0, r0, ip
9001616c:	4288      	cmp	r0, r1
9001616e:	dc20      	bgt.n	900161b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90016170:	4551      	cmp	r1, sl
90016172:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90016176:	da03      	bge.n	90016180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90016178:	b1d9      	cbz	r1, 900161b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
9001617a:	468a      	mov	sl, r1
9001617c:	464f      	mov	r7, r9
9001617e:	4635      	mov	r5, r6
90016180:	f109 39ff 	add.w	r9, r9, #4294967295
90016184:	f119 0f02 	cmn.w	r9, #2
90016188:	d1c6      	bne.n	90016118 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
9001618a:	4616      	mov	r6, r2
9001618c:	3201      	adds	r2, #1
9001618e:	f1a4 0408 	sub.w	r4, r4, #8
90016192:	d1b7      	bne.n	90016104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90016194:	9b01      	ldr	r3, [sp, #4]
90016196:	b2ac      	uxth	r4, r5
90016198:	00ed      	lsls	r5, r5, #3
9001619a:	1958      	adds	r0, r3, r5
9001619c:	1c7b      	adds	r3, r7, #1
9001619e:	d10b      	bne.n	900161b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
900161a0:	4601      	mov	r1, r0
900161a2:	9803      	ldr	r0, [sp, #12]
900161a4:	f7ff fb3c 	bl	90015820 <_ZN8touchgfx4Rect11expandToFitERKS0_>
900161a8:	4621      	mov	r1, r4
900161aa:	9801      	ldr	r0, [sp, #4]
900161ac:	f7ff fc8e 	bl	90015acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900161b0:	e4b6      	b.n	90015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900161b2:	464f      	mov	r7, r9
900161b4:	4635      	mov	r5, r6
900161b6:	e7ed      	b.n	90016194 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
900161b8:	9b01      	ldr	r3, [sp, #4]
900161ba:	00ff      	lsls	r7, r7, #3
900161bc:	445d      	add	r5, fp
900161be:	19d9      	adds	r1, r3, r7
900161c0:	445f      	add	r7, fp
900161c2:	f7ff fb2d 	bl	90015820 <_ZN8touchgfx4Rect11expandToFitERKS0_>
900161c6:	9b03      	ldr	r3, [sp, #12]
900161c8:	cb03      	ldmia	r3!, {r0, r1}
900161ca:	9b03      	ldr	r3, [sp, #12]
900161cc:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
900161d0:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
900161d4:	f855 0fac 	ldr.w	r0, [r5, #172]!
900161d8:	6869      	ldr	r1, [r5, #4]
900161da:	c303      	stmia	r3!, {r0, r1}
900161dc:	e7e4      	b.n	900161a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
900161de:	bf00      	nop

900161e0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
900161e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900161e4:	f500 7698 	add.w	r6, r0, #304	@ 0x130
900161e8:	b09b      	sub	sp, #108	@ 0x6c
900161ea:	4604      	mov	r4, r0
900161ec:	4630      	mov	r0, r6
900161ee:	f7f9 ff2e 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
900161f2:	4605      	mov	r5, r0
900161f4:	b948      	cbnz	r0, 9001620a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
900161f6:	6823      	ldr	r3, [r4, #0]
900161f8:	4620      	mov	r0, r4
900161fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900161fc:	e896 0006 	ldmia.w	r6, {r1, r2}
90016200:	4798      	blx	r3
90016202:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90016206:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
9001620a:	4bc5      	ldr	r3, [pc, #788]	@ (90016520 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
9001620c:	681b      	ldr	r3, [r3, #0]
9001620e:	2b00      	cmp	r3, #0
90016210:	d03f      	beq.n	90016292 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90016212:	4dc4      	ldr	r5, [pc, #784]	@ (90016524 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90016214:	4628      	mov	r0, r5
90016216:	f7f9 ff1a 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001621a:	4606      	mov	r6, r0
9001621c:	2800      	cmp	r0, #0
9001621e:	d138      	bne.n	90016292 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90016220:	4628      	mov	r0, r5
90016222:	f7ff f98f 	bl	90015544 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90016226:	6823      	ldr	r3, [r4, #0]
90016228:	6829      	ldr	r1, [r5, #0]
9001622a:	4620      	mov	r0, r4
9001622c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001622e:	686a      	ldr	r2, [r5, #4]
90016230:	4798      	blx	r3
90016232:	802e      	strh	r6, [r5, #0]
90016234:	806e      	strh	r6, [r5, #2]
90016236:	80ae      	strh	r6, [r5, #4]
90016238:	80ee      	strh	r6, [r5, #6]
9001623a:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
9001623e:	4dba      	ldr	r5, [pc, #744]	@ (90016528 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90016240:	4640      	mov	r0, r8
90016242:	f7ff fbe7 	bl	90015a14 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016246:	882e      	ldrh	r6, [r5, #0]
90016248:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
9001624c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90016250:	4633      	mov	r3, r6
90016252:	42bb      	cmp	r3, r7
90016254:	d224      	bcs.n	900162a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90016256:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
9001625a:	2907      	cmp	r1, #7
9001625c:	d816      	bhi.n	9001628c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
9001625e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90016262:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90016266:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
9001626a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
9001626e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90016272:	1c4a      	adds	r2, r1, #1
90016274:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
90016278:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
9001627c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90016280:	f8a2 a002 	strh.w	sl, [r2, #2]
90016284:	f8a2 e004 	strh.w	lr, [r2, #4]
90016288:	f8a2 c006 	strh.w	ip, [r2, #6]
9001628c:	3301      	adds	r3, #1
9001628e:	b29b      	uxth	r3, r3
90016290:	e7df      	b.n	90016252 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90016292:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016296:	2b00      	cmp	r3, #0
90016298:	d1cf      	bne.n	9001623a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
9001629a:	b01b      	add	sp, #108	@ 0x6c
9001629c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900162a0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
900162a4:	42b3      	cmp	r3, r6
900162a6:	d90c      	bls.n	900162c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
900162a8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
900162ac:	6822      	ldr	r2, [r4, #0]
900162ae:	3601      	adds	r6, #1
900162b0:	4620      	mov	r0, r4
900162b2:	6c17      	ldr	r7, [r2, #64]	@ 0x40
900162b4:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
900162b8:	b2b6      	uxth	r6, r6
900162ba:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
900162be:	47b8      	blx	r7
900162c0:	e7ee      	b.n	900162a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
900162c2:	4a9a      	ldr	r2, [pc, #616]	@ (9001652c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
900162c4:	6813      	ldr	r3, [r2, #0]
900162c6:	4691      	mov	r9, r2
900162c8:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
900162cc:	2b01      	cmp	r3, #1
900162ce:	f040 80e0 	bne.w	90016492 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
900162d2:	8829      	ldrh	r1, [r5, #0]
900162d4:	2600      	movs	r6, #0
900162d6:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
900162da:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
900162de:	33ae      	adds	r3, #174	@ 0xae
900162e0:	428f      	cmp	r7, r1
900162e2:	f103 0308 	add.w	r3, r3, #8
900162e6:	dd0a      	ble.n	900162fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
900162e8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
900162ec:	3101      	adds	r1, #1
900162ee:	f833 0c08 	ldrh.w	r0, [r3, #-8]
900162f2:	4402      	add	r2, r0
900162f4:	b212      	sxth	r2, r2
900162f6:	4296      	cmp	r6, r2
900162f8:	bfb8      	it	lt
900162fa:	4616      	movlt	r6, r2
900162fc:	e7f0      	b.n	900162e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
900162fe:	4b8c      	ldr	r3, [pc, #560]	@ (90016530 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90016300:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 9001652c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90016304:	881b      	ldrh	r3, [r3, #0]
90016306:	2b0f      	cmp	r3, #15
90016308:	bf8c      	ite	hi
9001630a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
9001630e:	f04f 0b01 	movls.w	fp, #1
90016312:	2300      	movs	r3, #0
90016314:	e9cd 3305 	strd	r3, r3, [sp, #20]
90016318:	f8bd 7016 	ldrh.w	r7, [sp, #22]
9001631c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90016320:	4b82      	ldr	r3, [pc, #520]	@ (9001652c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90016322:	4438      	add	r0, r7
90016324:	b207      	sxth	r7, r0
90016326:	6818      	ldr	r0, [r3, #0]
90016328:	42b7      	cmp	r7, r6
9001632a:	6803      	ldr	r3, [r0, #0]
9001632c:	f280 8083 	bge.w	90016436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90016330:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90016334:	4798      	blx	r3
90016336:	eb07 030b 	add.w	r3, r7, fp
9001633a:	4298      	cmp	r0, r3
9001633c:	da07      	bge.n	9001634e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001633e:	42b0      	cmp	r0, r6
90016340:	da05      	bge.n	9001634e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90016342:	4287      	cmp	r7, r0
90016344:	dd6c      	ble.n	90016420 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90016346:	2f00      	cmp	r7, #0
90016348:	dd6a      	ble.n	90016420 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001634a:	4630      	mov	r0, r6
9001634c:	e004      	b.n	90016358 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
9001634e:	4287      	cmp	r7, r0
90016350:	dcfb      	bgt.n	9001634a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90016352:	42b0      	cmp	r0, r6
90016354:	bfa8      	it	ge
90016356:	4630      	movge	r0, r6
90016358:	4b76      	ldr	r3, [pc, #472]	@ (90016534 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
9001635a:	1bc0      	subs	r0, r0, r7
9001635c:	2200      	movs	r2, #0
9001635e:	f8ad 7016 	strh.w	r7, [sp, #22]
90016362:	f9b3 3000 	ldrsh.w	r3, [r3]
90016366:	882f      	ldrh	r7, [r5, #0]
90016368:	f8ad 2014 	strh.w	r2, [sp, #20]
9001636c:	f8ad 3018 	strh.w	r3, [sp, #24]
90016370:	f8ad 001a 	strh.w	r0, [sp, #26]
90016374:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016378:	42bb      	cmp	r3, r7
9001637a:	d9cd      	bls.n	90016318 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
9001637c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90016380:	ab07      	add	r3, sp, #28
90016382:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016386:	6851      	ldr	r1, [r2, #4]
90016388:	c303      	stmia	r3!, {r0, r1}
9001638a:	a905      	add	r1, sp, #20
9001638c:	a807      	add	r0, sp, #28
9001638e:	f7ff f9ae 	bl	900156ee <_ZNK8touchgfx4Rect9intersectERKS0_>
90016392:	2800      	cmp	r0, #0
90016394:	d04c      	beq.n	90016430 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90016396:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
9001639a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
9001639e:	f8bd a020 	ldrh.w	sl, [sp, #32]
900163a2:	4686      	mov	lr, r0
900163a4:	4290      	cmp	r0, r2
900163a6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
900163aa:	4450      	add	r0, sl
900163ac:	f8bd a018 	ldrh.w	sl, [sp, #24]
900163b0:	bfb8      	it	lt
900163b2:	4696      	movlt	lr, r2
900163b4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900163b8:	4452      	add	r2, sl
900163ba:	b280      	uxth	r0, r0
900163bc:	4299      	cmp	r1, r3
900163be:	468c      	mov	ip, r1
900163c0:	b292      	uxth	r2, r2
900163c2:	9302      	str	r3, [sp, #8]
900163c4:	bfb8      	it	lt
900163c6:	469c      	movlt	ip, r3
900163c8:	b203      	sxth	r3, r0
900163ca:	fa0f fa82 	sxth.w	sl, r2
900163ce:	f8ad e01c 	strh.w	lr, [sp, #28]
900163d2:	f8ad c01e 	strh.w	ip, [sp, #30]
900163d6:	4553      	cmp	r3, sl
900163d8:	bfb8      	it	lt
900163da:	4602      	movlt	r2, r0
900163dc:	9b02      	ldr	r3, [sp, #8]
900163de:	eba2 020e 	sub.w	r2, r2, lr
900163e2:	f8ad 2020 	strh.w	r2, [sp, #32]
900163e6:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
900163ea:	4411      	add	r1, r2
900163ec:	f8bd 201a 	ldrh.w	r2, [sp, #26]
900163f0:	4413      	add	r3, r2
900163f2:	b289      	uxth	r1, r1
900163f4:	b29b      	uxth	r3, r3
900163f6:	b208      	sxth	r0, r1
900163f8:	b21a      	sxth	r2, r3
900163fa:	4290      	cmp	r0, r2
900163fc:	bfb8      	it	lt
900163fe:	460b      	movlt	r3, r1
90016400:	eba3 030c 	sub.w	r3, r3, ip
90016404:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90016408:	a807      	add	r0, sp, #28
9001640a:	f7f9 fe20 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001640e:	b920      	cbnz	r0, 9001641a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90016410:	6823      	ldr	r3, [r4, #0]
90016412:	a907      	add	r1, sp, #28
90016414:	4620      	mov	r0, r4
90016416:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016418:	4798      	blx	r3
9001641a:	3701      	adds	r7, #1
9001641c:	b2bf      	uxth	r7, r7
9001641e:	e7a9      	b.n	90016374 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90016420:	f8d9 0000 	ldr.w	r0, [r9]
90016424:	2101      	movs	r1, #1
90016426:	6803      	ldr	r3, [r0, #0]
90016428:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
9001642c:	4798      	blx	r3
9001642e:	e773      	b.n	90016318 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90016430:	e9cd 0007 	strd	r0, r0, [sp, #28]
90016434:	e7e8      	b.n	90016408 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90016436:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90016438:	4798      	blx	r3
9001643a:	4b3f      	ldr	r3, [pc, #252]	@ (90016538 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
9001643c:	781b      	ldrb	r3, [r3, #0]
9001643e:	2b00      	cmp	r3, #0
90016440:	f43f af2b 	beq.w	9001629a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90016444:	2300      	movs	r3, #0
90016446:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
9001644a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
9001644e:	882b      	ldrh	r3, [r5, #0]
90016450:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
90016454:	42ab      	cmp	r3, r5
90016456:	f4bf af20 	bcs.w	9001629a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001645a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
9001645e:	2907      	cmp	r1, #7
90016460:	d814      	bhi.n	9001648c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90016462:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90016466:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
9001646a:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
9001646e:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90016472:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90016476:	1c4a      	adds	r2, r1, #1
90016478:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
9001647c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90016480:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90016484:	f8a2 c002 	strh.w	ip, [r2, #2]
90016488:	8097      	strh	r7, [r2, #4]
9001648a:	80d6      	strh	r6, [r2, #6]
9001648c:	3301      	adds	r3, #1
9001648e:	b29b      	uxth	r3, r3
90016490:	e7e0      	b.n	90016454 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90016492:	2b02      	cmp	r3, #2
90016494:	f040 8133 	bne.w	900166fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90016498:	4b28      	ldr	r3, [pc, #160]	@ (9001653c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
9001649a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
9001649e:	781b      	ldrb	r3, [r3, #0]
900164a0:	2b01      	cmp	r3, #1
900164a2:	f000 8098 	beq.w	900165d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900164a6:	882a      	ldrh	r2, [r5, #0]
900164a8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
900164ac:	3201      	adds	r2, #1
900164ae:	b292      	uxth	r2, r2
900164b0:	2900      	cmp	r1, #0
900164b2:	d0c2      	beq.n	9001643a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900164b4:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
900164b8:	4694      	mov	ip, r2
900164ba:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
900164be:	f04f 0900 	mov.w	r9, #0
900164c2:	441e      	add	r6, r3
900164c4:	b236      	sxth	r6, r6
900164c6:	fa1f f38c 	uxth.w	r3, ip
900164ca:	ea4f 07c9 	mov.w	r7, r9, lsl #3
900164ce:	4299      	cmp	r1, r3
900164d0:	f240 80be 	bls.w	90016650 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
900164d4:	4427      	add	r7, r4
900164d6:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
900164da:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
900164de:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
900164e2:	4283      	cmp	r3, r0
900164e4:	f340 80a0 	ble.w	90016628 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
900164e8:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
900164ec:	46e1      	mov	r9, ip
900164ee:	4406      	add	r6, r0
900164f0:	b236      	sxth	r6, r6
900164f2:	429e      	cmp	r6, r3
900164f4:	bfa8      	it	ge
900164f6:	461e      	movge	r6, r3
900164f8:	f10c 0c01 	add.w	ip, ip, #1
900164fc:	e7e3      	b.n	900164c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
900164fe:	d10a      	bne.n	90016516 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90016500:	4562      	cmp	r2, ip
90016502:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
90016506:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
9001650a:	bfb8      	it	lt
9001650c:	4662      	movlt	r2, ip
9001650e:	4288      	cmp	r0, r1
90016510:	bfb8      	it	lt
90016512:	461f      	movlt	r7, r3
90016514:	e086      	b.n	90016624 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90016516:	428a      	cmp	r2, r1
90016518:	bfb8      	it	lt
9001651a:	460a      	movlt	r2, r1
9001651c:	e082      	b.n	90016624 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001651e:	bf00      	nop
90016520:	24021c1c 	.word	0x24021c1c
90016524:	24021c28 	.word	0x24021c28
90016528:	24000098 	.word	0x24000098
9001652c:	24021bdc 	.word	0x24021bdc
90016530:	24021bd2 	.word	0x24021bd2
90016534:	24021bd0 	.word	0x24021bd0
90016538:	24021bda 	.word	0x24021bda
9001653c:	24021bd4 	.word	0x24021bd4
90016540:	19a1      	adds	r1, r4, r6
90016542:	ab07      	add	r3, sp, #28
90016544:	f851 0fac 	ldr.w	r0, [r1, #172]!
90016548:	6849      	ldr	r1, [r1, #4]
9001654a:	c303      	stmia	r3!, {r0, r1}
9001654c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90016550:	a807      	add	r0, sp, #28
90016552:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90016556:	2b13      	cmp	r3, #19
90016558:	440b      	add	r3, r1
9001655a:	bfd8      	it	le
9001655c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90016560:	1a9b      	subs	r3, r3, r2
90016562:	f8ad 201c 	strh.w	r2, [sp, #28]
90016566:	f8ad 3020 	strh.w	r3, [sp, #32]
9001656a:	f7ff f805 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001656e:	a807      	add	r0, sp, #28
90016570:	f7f9 fd6d 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
90016574:	bb78      	cbnz	r0, 900165d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90016576:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
9001657a:	4426      	add	r6, r4
9001657c:	f8d9 0000 	ldr.w	r0, [r9]
90016580:	f1bc 0f14 	cmp.w	ip, #20
90016584:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90016588:	f8d0 e000 	ldr.w	lr, [r0]
9001658c:	bfa8      	it	ge
9001658e:	f04f 0c14 	movge.w	ip, #20
90016592:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90016596:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001659a:	fa1f fc8c 	uxth.w	ip, ip
9001659e:	f8cd c000 	str.w	ip, [sp]
900165a2:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
900165a6:	47d8      	blx	fp
900165a8:	4683      	mov	fp, r0
900165aa:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
900165ae:	a807      	add	r0, sp, #28
900165b0:	f7fe ffc8 	bl	90015544 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900165b4:	6823      	ldr	r3, [r4, #0]
900165b6:	4620      	mov	r0, r4
900165b8:	a907      	add	r1, sp, #28
900165ba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900165bc:	4798      	blx	r3
900165be:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
900165c2:	eba0 000b 	sub.w	r0, r0, fp
900165c6:	b200      	sxth	r0, r0
900165c8:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
900165cc:	b918      	cbnz	r0, 900165d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900165ce:	b2b9      	uxth	r1, r7
900165d0:	4650      	mov	r0, sl
900165d2:	f7ff fa7b 	bl	90015acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900165d6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
900165da:	f1bb 0f00 	cmp.w	fp, #0
900165de:	f43f af2c 	beq.w	9001643a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900165e2:	882b      	ldrh	r3, [r5, #0]
900165e4:	2700      	movs	r7, #0
900165e6:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
900165ea:	3301      	adds	r3, #1
900165ec:	b29b      	uxth	r3, r3
900165ee:	b299      	uxth	r1, r3
900165f0:	00fe      	lsls	r6, r7, #3
900165f2:	458b      	cmp	fp, r1
900165f4:	d9a4      	bls.n	90016540 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
900165f6:	4426      	add	r6, r4
900165f8:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
900165fc:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
90016600:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
90016604:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
90016608:	4408      	add	r0, r1
9001660a:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
9001660e:	4461      	add	r1, ip
90016610:	b200      	sxth	r0, r0
90016612:	b209      	sxth	r1, r1
90016614:	4288      	cmp	r0, r1
90016616:	f6bf af72 	bge.w	900164fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
9001661a:	4584      	cmp	ip, r0
9001661c:	4662      	mov	r2, ip
9001661e:	461f      	mov	r7, r3
90016620:	bfb8      	it	lt
90016622:	4602      	movlt	r2, r0
90016624:	3301      	adds	r3, #1
90016626:	e7e2      	b.n	900165ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90016628:	d10e      	bne.n	90016648 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
9001662a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
9001662e:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
90016632:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
90016636:	4473      	add	r3, lr
90016638:	b21b      	sxth	r3, r3
9001663a:	429e      	cmp	r6, r3
9001663c:	bfa8      	it	ge
9001663e:	461e      	movge	r6, r3
90016640:	4287      	cmp	r7, r0
90016642:	bfb8      	it	lt
90016644:	46e1      	movlt	r9, ip
90016646:	e757      	b.n	900164f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90016648:	4286      	cmp	r6, r0
9001664a:	bfa8      	it	ge
9001664c:	4606      	movge	r6, r0
9001664e:	e753      	b.n	900164f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90016650:	eb0a 0007 	add.w	r0, sl, r7
90016654:	4427      	add	r7, r4
90016656:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
9001665a:	f1bb 0f13 	cmp.w	fp, #19
9001665e:	bfdc      	itt	le
90016660:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
90016664:	445e      	addle	r6, fp
90016666:	e9cd 2102 	strd	r2, r1, [sp, #8]
9001666a:	bfd8      	it	le
9001666c:	b236      	sxthle	r6, r6
9001666e:	f7f9 fcee 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
90016672:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90016676:	2800      	cmp	r0, #0
90016678:	f47f af1a 	bne.w	900164b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
9001667c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
90016680:	fa1f fb8b 	uxth.w	fp, fp
90016684:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
90016688:	1ab6      	subs	r6, r6, r2
9001668a:	4829      	ldr	r0, [pc, #164]	@ (90016730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
9001668c:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
90016690:	2e14      	cmp	r6, #20
90016692:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
90016696:	6800      	ldr	r0, [r0, #0]
90016698:	bfa8      	it	ge
9001669a:	2614      	movge	r6, #20
9001669c:	f8ad 101c 	strh.w	r1, [sp, #28]
900166a0:	f8ad 201e 	strh.w	r2, [sp, #30]
900166a4:	b289      	uxth	r1, r1
900166a6:	f8ad 3020 	strh.w	r3, [sp, #32]
900166aa:	b2b6      	uxth	r6, r6
900166ac:	f8d0 c000 	ldr.w	ip, [r0]
900166b0:	b292      	uxth	r2, r2
900166b2:	455e      	cmp	r6, fp
900166b4:	bf94      	ite	ls
900166b6:	9600      	strls	r6, [sp, #0]
900166b8:	f8cd b000 	strhi.w	fp, [sp]
900166bc:	b29b      	uxth	r3, r3
900166be:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
900166c2:	47b0      	blx	r6
900166c4:	6823      	ldr	r3, [r4, #0]
900166c6:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
900166ca:	a907      	add	r1, sp, #28
900166cc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900166ce:	4620      	mov	r0, r4
900166d0:	4798      	blx	r3
900166d2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
900166d6:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
900166da:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
900166de:	1a5b      	subs	r3, r3, r1
900166e0:	440a      	add	r2, r1
900166e2:	b21b      	sxth	r3, r3
900166e4:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
900166e8:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
900166ec:	2b00      	cmp	r3, #0
900166ee:	f47f aeda 	bne.w	900164a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900166f2:	fa1f f189 	uxth.w	r1, r9
900166f6:	4650      	mov	r0, sl
900166f8:	f7ff f9e8 	bl	90015acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900166fc:	e6d3      	b.n	900164a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900166fe:	882e      	ldrh	r6, [r5, #0]
90016700:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016704:	42b3      	cmp	r3, r6
90016706:	f67f ae98 	bls.w	9001643a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001670a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
9001670e:	ab07      	add	r3, sp, #28
90016710:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016714:	6851      	ldr	r1, [r2, #4]
90016716:	c303      	stmia	r3!, {r0, r1}
90016718:	a807      	add	r0, sp, #28
9001671a:	f7f9 fc98 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001671e:	b920      	cbnz	r0, 9001672a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90016720:	6823      	ldr	r3, [r4, #0]
90016722:	a907      	add	r1, sp, #28
90016724:	4620      	mov	r0, r4
90016726:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016728:	4798      	blx	r3
9001672a:	3601      	adds	r6, #1
9001672c:	b2b6      	uxth	r6, r6
9001672e:	e7e7      	b.n	90016700 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90016730:	24021bdc 	.word	0x24021bdc

90016734 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90016734:	4b03      	ldr	r3, [pc, #12]	@ (90016744 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90016736:	2200      	movs	r2, #0
90016738:	801a      	strh	r2, [r3, #0]
9001673a:	805a      	strh	r2, [r3, #2]
9001673c:	809a      	strh	r2, [r3, #4]
9001673e:	80da      	strh	r2, [r3, #6]
90016740:	4770      	bx	lr
90016742:	bf00      	nop
90016744:	24021c28 	.word	0x24021c28

90016748 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90016748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001674c:	b09d      	sub	sp, #116	@ 0x74
9001674e:	4606      	mov	r6, r0
90016750:	4614      	mov	r4, r2
90016752:	468a      	mov	sl, r1
90016754:	a803      	add	r0, sp, #12
90016756:	461d      	mov	r5, r3
90016758:	f001 f8a0 	bl	9001789c <_ZN8touchgfx12TextProviderC1Ev>
9001675c:	6833      	ldr	r3, [r6, #0]
9001675e:	4630      	mov	r0, r6
90016760:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90016764:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016766:	4798      	blx	r3
90016768:	6833      	ldr	r3, [r6, #0]
9001676a:	4607      	mov	r7, r0
9001676c:	4630      	mov	r0, r6
9001676e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016770:	4798      	blx	r3
90016772:	462a      	mov	r2, r5
90016774:	2500      	movs	r5, #0
90016776:	4621      	mov	r1, r4
90016778:	9000      	str	r0, [sp, #0]
9001677a:	463b      	mov	r3, r7
9001677c:	462c      	mov	r4, r5
9001677e:	46a9      	mov	r9, r5
90016780:	46a8      	mov	r8, r5
90016782:	a803      	add	r0, sp, #12
90016784:	f001 f8dd 	bl	90017942 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016788:	2300      	movs	r3, #0
9001678a:	9302      	str	r3, [sp, #8]
9001678c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016790:	429c      	cmp	r4, r3
90016792:	d002      	beq.n	9001679a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90016794:	455c      	cmp	r4, fp
90016796:	bf18      	it	ne
90016798:	4625      	movne	r5, r4
9001679a:	ab02      	add	r3, sp, #8
9001679c:	4632      	mov	r2, r6
9001679e:	4651      	mov	r1, sl
900167a0:	a803      	add	r0, sp, #12
900167a2:	f001 fbc3 	bl	90017f2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900167a6:	4604      	mov	r4, r0
900167a8:	b108      	cbz	r0, 900167ae <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
900167aa:	280a      	cmp	r0, #10
900167ac:	d10a      	bne.n	900167c4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
900167ae:	45c1      	cmp	r9, r8
900167b0:	bf38      	it	cc
900167b2:	46c1      	movcc	r9, r8
900167b4:	f04f 0800 	mov.w	r8, #0
900167b8:	2c00      	cmp	r4, #0
900167ba:	d1e5      	bne.n	90016788 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900167bc:	4648      	mov	r0, r9
900167be:	b01d      	add	sp, #116	@ 0x74
900167c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900167c4:	9a02      	ldr	r2, [sp, #8]
900167c6:	2a00      	cmp	r2, #0
900167c8:	d0de      	beq.n	90016788 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900167ca:	7b57      	ldrb	r7, [r2, #13]
900167cc:	4629      	mov	r1, r5
900167ce:	6833      	ldr	r3, [r6, #0]
900167d0:	007f      	lsls	r7, r7, #1
900167d2:	8894      	ldrh	r4, [r2, #4]
900167d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900167d6:	f407 7080 	and.w	r0, r7, #256	@ 0x100
900167da:	7a97      	ldrb	r7, [r2, #10]
900167dc:	4307      	orrs	r7, r0
900167de:	4630      	mov	r0, r6
900167e0:	4798      	blx	r3
900167e2:	4438      	add	r0, r7
900167e4:	4480      	add	r8, r0
900167e6:	fa1f f888 	uxth.w	r8, r8
900167ea:	e7e5      	b.n	900167b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900167ec <_ZNK8touchgfx4Font12getCharWidthEt>:
900167ec:	b508      	push	{r3, lr}
900167ee:	6803      	ldr	r3, [r0, #0]
900167f0:	68db      	ldr	r3, [r3, #12]
900167f2:	4798      	blx	r3
900167f4:	b128      	cbz	r0, 90016802 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
900167f6:	7b43      	ldrb	r3, [r0, #13]
900167f8:	7a80      	ldrb	r0, [r0, #10]
900167fa:	005b      	lsls	r3, r3, #1
900167fc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90016800:	4318      	orrs	r0, r3
90016802:	bd08      	pop	{r3, pc}

90016804 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90016804:	b40e      	push	{r1, r2, r3}
90016806:	b5f0      	push	{r4, r5, r6, r7, lr}
90016808:	b09e      	sub	sp, #120	@ 0x78
9001680a:	4605      	mov	r5, r0
9001680c:	ab23      	add	r3, sp, #140	@ 0x8c
9001680e:	a805      	add	r0, sp, #20
90016810:	f853 4b04 	ldr.w	r4, [r3], #4
90016814:	9303      	str	r3, [sp, #12]
90016816:	f001 f841 	bl	9001789c <_ZN8touchgfx12TextProviderC1Ev>
9001681a:	682b      	ldr	r3, [r5, #0]
9001681c:	4628      	mov	r0, r5
9001681e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016820:	4798      	blx	r3
90016822:	682b      	ldr	r3, [r5, #0]
90016824:	4606      	mov	r6, r0
90016826:	4628      	mov	r0, r5
90016828:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001682a:	4798      	blx	r3
9001682c:	4633      	mov	r3, r6
9001682e:	4621      	mov	r1, r4
90016830:	ae1e      	add	r6, sp, #120	@ 0x78
90016832:	2400      	movs	r4, #0
90016834:	9000      	str	r0, [sp, #0]
90016836:	9a03      	ldr	r2, [sp, #12]
90016838:	a805      	add	r0, sp, #20
9001683a:	f001 f882 	bl	90017942 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001683e:	f846 4d68 	str.w	r4, [r6, #-104]!
90016842:	462a      	mov	r2, r5
90016844:	4633      	mov	r3, r6
90016846:	4621      	mov	r1, r4
90016848:	a805      	add	r0, sp, #20
9001684a:	f001 fb6f 	bl	90017f2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001684e:	b300      	cbz	r0, 90016892 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90016850:	280a      	cmp	r0, #10
90016852:	d01a      	beq.n	9001688a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90016854:	9f04      	ldr	r7, [sp, #16]
90016856:	b1c7      	cbz	r7, 9001688a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90016858:	7b78      	ldrb	r0, [r7, #13]
9001685a:	7a3b      	ldrb	r3, [r7, #8]
9001685c:	00c1      	lsls	r1, r0, #3
9001685e:	88ea      	ldrh	r2, [r5, #6]
90016860:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90016864:	4319      	orrs	r1, r3
90016866:	0643      	lsls	r3, r0, #25
90016868:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001686c:	bf48      	it	mi
9001686e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
90016872:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90016876:	bf48      	it	mi
90016878:	b219      	sxthmi	r1, r3
9001687a:	79fb      	ldrb	r3, [r7, #7]
9001687c:	4303      	orrs	r3, r0
9001687e:	4413      	add	r3, r2
90016880:	1a5b      	subs	r3, r3, r1
90016882:	b21b      	sxth	r3, r3
90016884:	429c      	cmp	r4, r3
90016886:	bfb8      	it	lt
90016888:	461c      	movlt	r4, r3
9001688a:	4633      	mov	r3, r6
9001688c:	462a      	mov	r2, r5
9001688e:	2100      	movs	r1, #0
90016890:	e7da      	b.n	90016848 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90016892:	b2a0      	uxth	r0, r4
90016894:	b01e      	add	sp, #120	@ 0x78
90016896:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001689a:	b003      	add	sp, #12
9001689c:	4770      	bx	lr

9001689e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001689e:	7a43      	ldrb	r3, [r0, #9]
900168a0:	8880      	ldrh	r0, [r0, #4]
900168a2:	4418      	add	r0, r3
900168a4:	b280      	uxth	r0, r0
900168a6:	4770      	bx	lr

900168a8 <_ZNK8touchgfx4Font13getFontHeightEv>:
900168a8:	6803      	ldr	r3, [r0, #0]
900168aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900168ac:	4718      	bx	r3

900168ae <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
900168ae:	b40e      	push	{r1, r2, r3}
900168b0:	b570      	push	{r4, r5, r6, lr}
900168b2:	b09d      	sub	sp, #116	@ 0x74
900168b4:	4604      	mov	r4, r0
900168b6:	ab21      	add	r3, sp, #132	@ 0x84
900168b8:	a803      	add	r0, sp, #12
900168ba:	f853 5b04 	ldr.w	r5, [r3], #4
900168be:	9302      	str	r3, [sp, #8]
900168c0:	f000 ffec 	bl	9001789c <_ZN8touchgfx12TextProviderC1Ev>
900168c4:	6823      	ldr	r3, [r4, #0]
900168c6:	4620      	mov	r0, r4
900168c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900168ca:	4798      	blx	r3
900168cc:	6823      	ldr	r3, [r4, #0]
900168ce:	4606      	mov	r6, r0
900168d0:	4620      	mov	r0, r4
900168d2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900168d4:	2401      	movs	r4, #1
900168d6:	4798      	blx	r3
900168d8:	4633      	mov	r3, r6
900168da:	9000      	str	r0, [sp, #0]
900168dc:	4629      	mov	r1, r5
900168de:	9a02      	ldr	r2, [sp, #8]
900168e0:	a803      	add	r0, sp, #12
900168e2:	f001 f82e 	bl	90017942 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900168e6:	a803      	add	r0, sp, #12
900168e8:	f001 fbec 	bl	900180c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
900168ec:	b2a3      	uxth	r3, r4
900168ee:	b138      	cbz	r0, 90016900 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900168f0:	280a      	cmp	r0, #10
900168f2:	a803      	add	r0, sp, #12
900168f4:	bf04      	itt	eq
900168f6:	3301      	addeq	r3, #1
900168f8:	b21c      	sxtheq	r4, r3
900168fa:	f001 fbe3 	bl	900180c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
900168fe:	e7f5      	b.n	900168ec <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90016900:	4618      	mov	r0, r3
90016902:	b01d      	add	sp, #116	@ 0x74
90016904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016908:	b003      	add	sp, #12
9001690a:	4770      	bx	lr

9001690c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
9001690c:	b40e      	push	{r1, r2, r3}
9001690e:	b5f0      	push	{r4, r5, r6, r7, lr}
90016910:	b09e      	sub	sp, #120	@ 0x78
90016912:	4604      	mov	r4, r0
90016914:	ab23      	add	r3, sp, #140	@ 0x8c
90016916:	a805      	add	r0, sp, #20
90016918:	f853 5b04 	ldr.w	r5, [r3], #4
9001691c:	9303      	str	r3, [sp, #12]
9001691e:	f000 ffbd 	bl	9001789c <_ZN8touchgfx12TextProviderC1Ev>
90016922:	6823      	ldr	r3, [r4, #0]
90016924:	4620      	mov	r0, r4
90016926:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016928:	4798      	blx	r3
9001692a:	6823      	ldr	r3, [r4, #0]
9001692c:	4606      	mov	r6, r0
9001692e:	4620      	mov	r0, r4
90016930:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016932:	4798      	blx	r3
90016934:	4633      	mov	r3, r6
90016936:	4629      	mov	r1, r5
90016938:	9000      	str	r0, [sp, #0]
9001693a:	9a03      	ldr	r2, [sp, #12]
9001693c:	a805      	add	r0, sp, #20
9001693e:	f001 f800 	bl	90017942 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016942:	ad1e      	add	r5, sp, #120	@ 0x78
90016944:	2100      	movs	r1, #0
90016946:	f647 76ff 	movw	r6, #32767	@ 0x7fff
9001694a:	4622      	mov	r2, r4
9001694c:	a805      	add	r0, sp, #20
9001694e:	f845 1d68 	str.w	r1, [r5, #-104]!
90016952:	462b      	mov	r3, r5
90016954:	f001 faea 	bl	90017f2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016958:	b1d8      	cbz	r0, 90016992 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001695a:	280a      	cmp	r0, #10
9001695c:	d012      	beq.n	90016984 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001695e:	9804      	ldr	r0, [sp, #16]
90016960:	b180      	cbz	r0, 90016984 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90016962:	7b47      	ldrb	r7, [r0, #13]
90016964:	88e2      	ldrh	r2, [r4, #6]
90016966:	00fb      	lsls	r3, r7, #3
90016968:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001696c:	7a03      	ldrb	r3, [r0, #8]
9001696e:	430b      	orrs	r3, r1
90016970:	0679      	lsls	r1, r7, #25
90016972:	bf44      	itt	mi
90016974:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90016978:	b21b      	sxthmi	r3, r3
9001697a:	1ad3      	subs	r3, r2, r3
9001697c:	b21b      	sxth	r3, r3
9001697e:	429e      	cmp	r6, r3
90016980:	bfa8      	it	ge
90016982:	461e      	movge	r6, r3
90016984:	462b      	mov	r3, r5
90016986:	4622      	mov	r2, r4
90016988:	2100      	movs	r1, #0
9001698a:	a805      	add	r0, sp, #20
9001698c:	f001 face 	bl	90017f2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016990:	e7e2      	b.n	90016958 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90016992:	4630      	mov	r0, r6
90016994:	b01e      	add	sp, #120	@ 0x78
90016996:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001699a:	b003      	add	sp, #12
9001699c:	4770      	bx	lr

9001699e <_ZNK8touchgfx8Drawable10invalidateEv>:
9001699e:	b513      	push	{r0, r1, r4, lr}
900169a0:	6803      	ldr	r3, [r0, #0]
900169a2:	2400      	movs	r4, #0
900169a4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900169a8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900169ac:	f8ad 1004 	strh.w	r1, [sp, #4]
900169b0:	4669      	mov	r1, sp
900169b2:	691b      	ldr	r3, [r3, #16]
900169b4:	9400      	str	r4, [sp, #0]
900169b6:	f8ad 2006 	strh.w	r2, [sp, #6]
900169ba:	4798      	blx	r3
900169bc:	b002      	add	sp, #8
900169be:	bd10      	pop	{r4, pc}

900169c0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
900169c0:	b538      	push	{r3, r4, r5, lr}
900169c2:	680b      	ldr	r3, [r1, #0]
900169c4:	460c      	mov	r4, r1
900169c6:	4605      	mov	r5, r0
900169c8:	68db      	ldr	r3, [r3, #12]
900169ca:	4798      	blx	r3
900169cc:	6823      	ldr	r3, [r4, #0]
900169ce:	4620      	mov	r0, r4
900169d0:	4629      	mov	r1, r5
900169d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900169d4:	4798      	blx	r3
900169d6:	4628      	mov	r0, r5
900169d8:	bd38      	pop	{r3, r4, r5, pc}

900169da <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900169da:	b410      	push	{r4}
900169dc:	880a      	ldrh	r2, [r1, #0]
900169de:	8884      	ldrh	r4, [r0, #4]
900169e0:	4422      	add	r2, r4
900169e2:	800a      	strh	r2, [r1, #0]
900169e4:	884a      	ldrh	r2, [r1, #2]
900169e6:	88c4      	ldrh	r4, [r0, #6]
900169e8:	4422      	add	r2, r4
900169ea:	804a      	strh	r2, [r1, #2]
900169ec:	6940      	ldr	r0, [r0, #20]
900169ee:	b120      	cbz	r0, 900169fa <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
900169f0:	6803      	ldr	r3, [r0, #0]
900169f2:	f85d 4b04 	ldr.w	r4, [sp], #4
900169f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900169f8:	4718      	bx	r3
900169fa:	f85d 4b04 	ldr.w	r4, [sp], #4
900169fe:	4770      	bx	lr

90016a00 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90016a00:	b570      	push	{r4, r5, r6, lr}
90016a02:	8882      	ldrh	r2, [r0, #4]
90016a04:	460c      	mov	r4, r1
90016a06:	880b      	ldrh	r3, [r1, #0]
90016a08:	4605      	mov	r5, r0
90016a0a:	4413      	add	r3, r2
90016a0c:	800b      	strh	r3, [r1, #0]
90016a0e:	884b      	ldrh	r3, [r1, #2]
90016a10:	88c2      	ldrh	r2, [r0, #6]
90016a12:	4413      	add	r3, r2
90016a14:	804b      	strh	r3, [r1, #2]
90016a16:	1d01      	adds	r1, r0, #4
90016a18:	4620      	mov	r0, r4
90016a1a:	f7f9 fad5 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
90016a1e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90016a22:	2b00      	cmp	r3, #0
90016a24:	dd0b      	ble.n	90016a3e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016a26:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90016a2a:	2b00      	cmp	r3, #0
90016a2c:	dd07      	ble.n	90016a3e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016a2e:	6968      	ldr	r0, [r5, #20]
90016a30:	b128      	cbz	r0, 90016a3e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016a32:	6803      	ldr	r3, [r0, #0]
90016a34:	4621      	mov	r1, r4
90016a36:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90016a38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016a3c:	4718      	bx	r3
90016a3e:	bd70      	pop	{r4, r5, r6, pc}

90016a40 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90016a40:	b570      	push	{r4, r5, r6, lr}
90016a42:	8882      	ldrh	r2, [r0, #4]
90016a44:	460c      	mov	r4, r1
90016a46:	880b      	ldrh	r3, [r1, #0]
90016a48:	4605      	mov	r5, r0
90016a4a:	4413      	add	r3, r2
90016a4c:	800b      	strh	r3, [r1, #0]
90016a4e:	884b      	ldrh	r3, [r1, #2]
90016a50:	88c2      	ldrh	r2, [r0, #6]
90016a52:	4413      	add	r3, r2
90016a54:	804b      	strh	r3, [r1, #2]
90016a56:	1d01      	adds	r1, r0, #4
90016a58:	4620      	mov	r0, r4
90016a5a:	f7f9 fab5 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
90016a5e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90016a62:	2b00      	cmp	r3, #0
90016a64:	dd19      	ble.n	90016a9a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90016a66:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90016a6a:	2b00      	cmp	r3, #0
90016a6c:	dd15      	ble.n	90016a9a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90016a6e:	6968      	ldr	r0, [r5, #20]
90016a70:	b128      	cbz	r0, 90016a7e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90016a72:	6803      	ldr	r3, [r0, #0]
90016a74:	4621      	mov	r1, r4
90016a76:	691b      	ldr	r3, [r3, #16]
90016a78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016a7c:	4718      	bx	r3
90016a7e:	4b07      	ldr	r3, [pc, #28]	@ (90016a9c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90016a80:	681b      	ldr	r3, [r3, #0]
90016a82:	3304      	adds	r3, #4
90016a84:	429d      	cmp	r5, r3
90016a86:	d108      	bne.n	90016a9a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90016a88:	f7fe ff10 	bl	900158ac <_ZN8touchgfx11Application11getInstanceEv>
90016a8c:	6803      	ldr	r3, [r0, #0]
90016a8e:	6821      	ldr	r1, [r4, #0]
90016a90:	6862      	ldr	r2, [r4, #4]
90016a92:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90016a94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016a98:	4718      	bx	r3
90016a9a:	bd70      	pop	{r4, r5, r6, pc}
90016a9c:	24021c20 	.word	0x24021c20

90016aa0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90016aa0:	b570      	push	{r4, r5, r6, lr}
90016aa2:	4604      	mov	r4, r0
90016aa4:	4616      	mov	r6, r2
90016aa6:	460d      	mov	r5, r1
90016aa8:	b901      	cbnz	r1, 90016aac <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90016aaa:	b192      	cbz	r2, 90016ad2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90016aac:	6823      	ldr	r3, [r4, #0]
90016aae:	4620      	mov	r0, r4
90016ab0:	699b      	ldr	r3, [r3, #24]
90016ab2:	4798      	blx	r3
90016ab4:	88e2      	ldrh	r2, [r4, #6]
90016ab6:	88a1      	ldrh	r1, [r4, #4]
90016ab8:	4620      	mov	r0, r4
90016aba:	4432      	add	r2, r6
90016abc:	4429      	add	r1, r5
90016abe:	b212      	sxth	r2, r2
90016ac0:	b209      	sxth	r1, r1
90016ac2:	f7f9 fd57 	bl	90010574 <_ZN8touchgfx8Drawable5setXYEss>
90016ac6:	6823      	ldr	r3, [r4, #0]
90016ac8:	4620      	mov	r0, r4
90016aca:	699b      	ldr	r3, [r3, #24]
90016acc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016ad0:	4718      	bx	r3
90016ad2:	bd70      	pop	{r4, r5, r6, pc}

90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90016ad4:	b510      	push	{r4, lr}
90016ad6:	2300      	movs	r3, #0
90016ad8:	4604      	mov	r4, r0
90016ada:	4608      	mov	r0, r1
90016adc:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90016ae0:	8023      	strh	r3, [r4, #0]
90016ae2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016ae6:	8063      	strh	r3, [r4, #2]
90016ae8:	6803      	ldr	r3, [r0, #0]
90016aea:	80a1      	strh	r1, [r4, #4]
90016aec:	4621      	mov	r1, r4
90016aee:	80e2      	strh	r2, [r4, #6]
90016af0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016af2:	4798      	blx	r3
90016af4:	4620      	mov	r0, r4
90016af6:	bd10      	pop	{r4, pc}

90016af8 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
90016af8:	4770      	bx	lr

90016afa <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
90016afa:	b510      	push	{r4, lr}
90016afc:	4604      	mov	r4, r0
90016afe:	211c      	movs	r1, #28
90016b00:	f011 fa96 	bl	90028030 <_ZdlPvj>
90016b04:	4620      	mov	r0, r4
90016b06:	bd10      	pop	{r4, pc}

90016b08 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
90016b08:	4a04      	ldr	r2, [pc, #16]	@ (90016b1c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
90016b0a:	6002      	str	r2, [r0, #0]
90016b0c:	2200      	movs	r2, #0
90016b0e:	e9c0 2201 	strd	r2, r2, [r0, #4]
90016b12:	e9c0 2203 	strd	r2, r2, [r0, #12]
90016b16:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016b1a:	4770      	bx	lr
90016b1c:	9002d9f8 	.word	0x9002d9f8

90016b20 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
90016b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016b24:	4604      	mov	r4, r0
90016b26:	b087      	sub	sp, #28
90016b28:	4696      	mov	lr, r2
90016b2a:	6880      	ldr	r0, [r0, #8]
90016b2c:	8b22      	ldrh	r2, [r4, #24]
90016b2e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
90016b32:	9105      	str	r1, [sp, #20]
90016b34:	1c51      	adds	r1, r2, #1
90016b36:	8321      	strh	r1, [r4, #24]
90016b38:	2101      	movs	r1, #1
90016b3a:	5481      	strb	r1, [r0, r2]
90016b3c:	4689      	mov	r9, r1
90016b3e:	f9b3 2000 	ldrsh.w	r2, [r3]
90016b42:	8b60      	ldrh	r0, [r4, #26]
90016b44:	ee06 2a90 	vmov	s13, r2
90016b48:	68e2      	ldr	r2, [r4, #12]
90016b4a:	1845      	adds	r5, r0, r1
90016b4c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90016b50:	eb02 0280 	add.w	r2, r2, r0, lsl #2
90016b54:	8365      	strh	r5, [r4, #26]
90016b56:	edc2 6a00 	vstr	s13, [r2]
90016b5a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016b5e:	8b60      	ldrh	r0, [r4, #26]
90016b60:	ee07 2a10 	vmov	s14, r2
90016b64:	68e2      	ldr	r2, [r4, #12]
90016b66:	1845      	adds	r5, r0, r1
90016b68:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90016b6c:	eb02 0280 	add.w	r2, r2, r0, lsl #2
90016b70:	8365      	strh	r5, [r4, #26]
90016b72:	1d18      	adds	r0, r3, #4
90016b74:	460d      	mov	r5, r1
90016b76:	ed82 7a00 	vstr	s14, [r2]
90016b7a:	f8be 2000 	ldrh.w	r2, [lr]
90016b7e:	9203      	str	r2, [sp, #12]
90016b80:	2200      	movs	r2, #0
90016b82:	4613      	mov	r3, r2
90016b84:	4694      	mov	ip, r2
90016b86:	9201      	str	r2, [sp, #4]
90016b88:	9202      	str	r2, [sp, #8]
90016b8a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
90016b8e:	9e05      	ldr	r6, [sp, #20]
90016b90:	f108 0701 	add.w	r7, r8, #1
90016b94:	f8d4 a008 	ldr.w	sl, [r4, #8]
90016b98:	428e      	cmp	r6, r1
90016b9a:	b2bf      	uxth	r7, r7
90016b9c:	eb0a 0b08 	add.w	fp, sl, r8
90016ba0:	f340 80b6 	ble.w	90016d10 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
90016ba4:	9b03      	ldr	r3, [sp, #12]
90016ba6:	f9b0 c000 	ldrsh.w	ip, [r0]
90016baa:	fa43 fb05 	asr.w	fp, r3, r5
90016bae:	f00b 0b01 	and.w	fp, fp, #1
90016bb2:	fa5f f38b 	uxtb.w	r3, fp
90016bb6:	9304      	str	r3, [sp, #16]
90016bb8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90016bbc:	f1bb 0f00 	cmp.w	fp, #0
90016bc0:	d057      	beq.n	90016c72 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
90016bc2:	ee07 ca90 	vmov	s15, ip
90016bc6:	8327      	strh	r7, [r4, #24]
90016bc8:	eef8 5ae7 	vcvt.f32.s32	s11, s15
90016bcc:	ee07 3a90 	vmov	s15, r3
90016bd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016bd4:	f1b9 0f00 	cmp.w	r9, #0
90016bd8:	d028      	beq.n	90016c2c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
90016bda:	f04f 0602 	mov.w	r6, #2
90016bde:	f80a 6008 	strb.w	r6, [sl, r8]
90016be2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016be6:	68e7      	ldr	r7, [r4, #12]
90016be8:	f108 0901 	add.w	r9, r8, #1
90016bec:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016bf0:	f8a4 901a 	strh.w	r9, [r4, #26]
90016bf4:	edc7 5a00 	vstr	s11, [r7]
90016bf8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016bfc:	68e7      	ldr	r7, [r4, #12]
90016bfe:	f108 0901 	add.w	r9, r8, #1
90016c02:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016c06:	f8a4 901a 	strh.w	r9, [r4, #26]
90016c0a:	edc7 7a00 	vstr	s15, [r7]
90016c0e:	3501      	adds	r5, #1
90016c10:	2d10      	cmp	r5, #16
90016c12:	d106      	bne.n	90016c22 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
90016c14:	9d02      	ldr	r5, [sp, #8]
90016c16:	3501      	adds	r5, #1
90016c18:	9502      	str	r5, [sp, #8]
90016c1a:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
90016c1e:	9503      	str	r5, [sp, #12]
90016c20:	2500      	movs	r5, #0
90016c22:	3101      	adds	r1, #1
90016c24:	3004      	adds	r0, #4
90016c26:	f8dd 9010 	ldr.w	r9, [sp, #16]
90016c2a:	e7ae      	b.n	90016b8a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
90016c2c:	f04f 0605 	mov.w	r6, #5
90016c30:	ed9d 5a01 	vldr	s10, [sp, #4]
90016c34:	f80a 6008 	strb.w	r6, [sl, r8]
90016c38:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90016c3c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016c40:	68e7      	ldr	r7, [r4, #12]
90016c42:	f108 0901 	add.w	r9, r8, #1
90016c46:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016c4a:	f8a4 901a 	strh.w	r9, [r4, #26]
90016c4e:	ed87 5a00 	vstr	s10, [r7]
90016c52:	ee05 2a10 	vmov	s10, r2
90016c56:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016c5a:	68e7      	ldr	r7, [r4, #12]
90016c5c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90016c60:	f108 0901 	add.w	r9, r8, #1
90016c64:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016c68:	f8a4 901a 	strh.w	r9, [r4, #26]
90016c6c:	ed87 5a00 	vstr	s10, [r7]
90016c70:	e7b7      	b.n	90016be2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
90016c72:	f1b9 0f00 	cmp.w	r9, #0
90016c76:	d147      	bne.n	90016d08 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
90016c78:	f04f 0605 	mov.w	r6, #5
90016c7c:	eddd 7a01 	vldr	s15, [sp, #4]
90016c80:	8327      	strh	r7, [r4, #24]
90016c82:	f80a 6008 	strb.w	r6, [sl, r8]
90016c86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016c8a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016c8e:	68e7      	ldr	r7, [r4, #12]
90016c90:	f108 0901 	add.w	r9, r8, #1
90016c94:	9e01      	ldr	r6, [sp, #4]
90016c96:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016c9a:	f8a4 901a 	strh.w	r9, [r4, #26]
90016c9e:	4466      	add	r6, ip
90016ca0:	edc7 7a00 	vstr	s15, [r7]
90016ca4:	ee07 2a90 	vmov	s15, r2
90016ca8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016cac:	441a      	add	r2, r3
90016cae:	68e7      	ldr	r7, [r4, #12]
90016cb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016cb4:	f108 0901 	add.w	r9, r8, #1
90016cb8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016cbc:	f8a4 901a 	strh.w	r9, [r4, #26]
90016cc0:	edc7 7a00 	vstr	s15, [r7]
90016cc4:	ee07 6a90 	vmov	s15, r6
90016cc8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016ccc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016cd0:	68e7      	ldr	r7, [r4, #12]
90016cd2:	f108 0901 	add.w	r9, r8, #1
90016cd6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016cda:	ee67 7a86 	vmul.f32	s15, s15, s12
90016cde:	f8a4 901a 	strh.w	r9, [r4, #26]
90016ce2:	edc7 7a00 	vstr	s15, [r7]
90016ce6:	ee07 2a90 	vmov	s15, r2
90016cea:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016cee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016cf2:	68e7      	ldr	r7, [r4, #12]
90016cf4:	f108 0901 	add.w	r9, r8, #1
90016cf8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016cfc:	ee67 7a86 	vmul.f32	s15, s15, s12
90016d00:	f8a4 901a 	strh.w	r9, [r4, #26]
90016d04:	edc7 7a00 	vstr	s15, [r7]
90016d08:	461a      	mov	r2, r3
90016d0a:	f8cd c004 	str.w	ip, [sp, #4]
90016d0e:	e77e      	b.n	90016c0e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
90016d10:	f1b9 0f00 	cmp.w	r9, #0
90016d14:	d028      	beq.n	90016d68 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
90016d16:	ee07 ca90 	vmov	s15, ip
90016d1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016d1e:	eef4 6a67 	vcmp.f32	s13, s15
90016d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016d26:	d108      	bne.n	90016d3a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
90016d28:	ee07 3a90 	vmov	s15, r3
90016d2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016d30:	eeb4 7a67 	vcmp.f32	s14, s15
90016d34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016d38:	d016      	beq.n	90016d68 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
90016d3a:	2302      	movs	r3, #2
90016d3c:	8327      	strh	r7, [r4, #24]
90016d3e:	f88b 3000 	strb.w	r3, [fp]
90016d42:	8b62      	ldrh	r2, [r4, #26]
90016d44:	68e3      	ldr	r3, [r4, #12]
90016d46:	1c51      	adds	r1, r2, #1
90016d48:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016d4c:	8361      	strh	r1, [r4, #26]
90016d4e:	edc3 6a00 	vstr	s13, [r3]
90016d52:	8b62      	ldrh	r2, [r4, #26]
90016d54:	68e3      	ldr	r3, [r4, #12]
90016d56:	1c51      	adds	r1, r2, #1
90016d58:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016d5c:	8361      	strh	r1, [r4, #26]
90016d5e:	ed83 7a00 	vstr	s14, [r3]
90016d62:	b007      	add	sp, #28
90016d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016d68:	2305      	movs	r3, #5
90016d6a:	eddd 7a01 	vldr	s15, [sp, #4]
90016d6e:	8327      	strh	r7, [r4, #24]
90016d70:	f88b 3000 	strb.w	r3, [fp]
90016d74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016d78:	8b61      	ldrh	r1, [r4, #26]
90016d7a:	68e3      	ldr	r3, [r4, #12]
90016d7c:	1c4d      	adds	r5, r1, #1
90016d7e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90016d82:	8365      	strh	r5, [r4, #26]
90016d84:	edc3 7a00 	vstr	s15, [r3]
90016d88:	ee07 2a90 	vmov	s15, r2
90016d8c:	8b61      	ldrh	r1, [r4, #26]
90016d8e:	68e3      	ldr	r3, [r4, #12]
90016d90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016d94:	1c4d      	adds	r5, r1, #1
90016d96:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90016d9a:	8365      	strh	r5, [r4, #26]
90016d9c:	edc3 7a00 	vstr	s15, [r3]
90016da0:	e7cf      	b.n	90016d42 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

90016da4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90016da4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90016da8:	4604      	mov	r4, r0
90016daa:	b08e      	sub	sp, #56	@ 0x38
90016dac:	4699      	mov	r9, r3
90016dae:	4688      	mov	r8, r1
90016db0:	4615      	mov	r5, r2
90016db2:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90016db4:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
90016db8:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
90016dba:	f7ec fbb7 	bl	9000352c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
90016dbe:	6060      	str	r0, [r4, #4]
90016dc0:	f1b9 0f00 	cmp.w	r9, #0
90016dc4:	f000 80e8 	beq.w	90016f98 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90016dc8:	2800      	cmp	r0, #0
90016dca:	f000 80e5 	beq.w	90016f98 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90016dce:	a805      	add	r0, sp, #20
90016dd0:	f000 f8f9 	bl	90016fc6 <_ZN8touchgfx9Matrix3x3C1Ev>
90016dd4:	6833      	ldr	r3, [r6, #0]
90016dd6:	4630      	mov	r0, r6
90016dd8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
90016dda:	4798      	blx	r3
90016ddc:	a805      	add	r0, sp, #20
90016dde:	eef0 0a40 	vmov.f32	s1, s0
90016de2:	f000 f8f4 	bl	90016fce <_ZN8touchgfx9Matrix3x35scaleEff>
90016de6:	6860      	ldr	r0, [r4, #4]
90016de8:	f1ba 0f03 	cmp.w	sl, #3
90016dec:	d83b      	bhi.n	90016e66 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
90016dee:	e8df f00a 	tbb	[pc, sl]
90016df2:	1002      	.short	0x1002
90016df4:	9f71      	.short	0x9f71
90016df6:	6803      	ldr	r3, [r0, #0]
90016df8:	462a      	mov	r2, r5
90016dfa:	4641      	mov	r1, r8
90016dfc:	689b      	ldr	r3, [r3, #8]
90016dfe:	4798      	blx	r3
90016e00:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90016e04:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90016e08:	ee07 7a90 	vmov	s15, r7
90016e0c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
90016e10:	e026      	b.n	90016e60 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
90016e12:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90016e16:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90016e1a:	8869      	ldrh	r1, [r5, #2]
90016e1c:	1a9b      	subs	r3, r3, r2
90016e1e:	f8ad 2010 	strh.w	r2, [sp, #16]
90016e22:	aa03      	add	r2, sp, #12
90016e24:	1a5b      	subs	r3, r3, r1
90016e26:	4641      	mov	r1, r8
90016e28:	f8ad 300c 	strh.w	r3, [sp, #12]
90016e2c:	882b      	ldrh	r3, [r5, #0]
90016e2e:	f8ad 300e 	strh.w	r3, [sp, #14]
90016e32:	88ab      	ldrh	r3, [r5, #4]
90016e34:	f8ad 3012 	strh.w	r3, [sp, #18]
90016e38:	6803      	ldr	r3, [r0, #0]
90016e3a:	689b      	ldr	r3, [r3, #8]
90016e3c:	4798      	blx	r3
90016e3e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90016fa0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
90016e42:	a805      	add	r0, sp, #20
90016e44:	f000 f8e8 	bl	90017018 <_ZN8touchgfx9Matrix3x36rotateEf>
90016e48:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90016e4c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90016e4e:	ee07 7a90 	vmov	s15, r7
90016e52:	1a9b      	subs	r3, r3, r2
90016e54:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90016e58:	ee00 3a10 	vmov	s0, r3
90016e5c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90016e60:	a805      	add	r0, sp, #20
90016e62:	f000 f927 	bl	900170b4 <_ZN8touchgfx9Matrix3x39translateEff>
90016e66:	6860      	ldr	r0, [r4, #4]
90016e68:	a905      	add	r1, sp, #20
90016e6a:	2500      	movs	r5, #0
90016e6c:	f109 0602 	add.w	r6, r9, #2
90016e70:	6803      	ldr	r3, [r0, #0]
90016e72:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90016e74:	4798      	blx	r3
90016e76:	6860      	ldr	r0, [r4, #4]
90016e78:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90016e7a:	6803      	ldr	r3, [r0, #0]
90016e7c:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90016e80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90016e82:	4798      	blx	r3
90016e84:	6860      	ldr	r0, [r4, #4]
90016e86:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90016e8a:	6803      	ldr	r3, [r0, #0]
90016e8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016e8e:	4798      	blx	r3
90016e90:	6860      	ldr	r0, [r4, #4]
90016e92:	2101      	movs	r1, #1
90016e94:	6803      	ldr	r3, [r0, #0]
90016e96:	68db      	ldr	r3, [r3, #12]
90016e98:	4798      	blx	r3
90016e9a:	f8b9 7000 	ldrh.w	r7, [r9]
90016e9e:	f104 0310 	add.w	r3, r4, #16
90016ea2:	61a5      	str	r5, [r4, #24]
90016ea4:	f104 0208 	add.w	r2, r4, #8
90016ea8:	f104 0114 	add.w	r1, r4, #20
90016eac:	f104 000c 	add.w	r0, r4, #12
90016eb0:	f7ef f8ba 	bl	90006028 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90016eb4:	42af      	cmp	r7, r5
90016eb6:	dd60      	ble.n	90016f7a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90016eb8:	8831      	ldrh	r1, [r6, #0]
90016eba:	1cb2      	adds	r2, r6, #2
90016ebc:	4620      	mov	r0, r4
90016ebe:	3501      	adds	r5, #1
90016ec0:	f101 030f 	add.w	r3, r1, #15
90016ec4:	f3c3 1307 	ubfx	r3, r3, #4, #8
90016ec8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90016ecc:	f7ff fe28 	bl	90016b20 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90016ed0:	4606      	mov	r6, r0
90016ed2:	e7ef      	b.n	90016eb4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90016ed4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90016ed8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90016edc:	8829      	ldrh	r1, [r5, #0]
90016ede:	1a9b      	subs	r3, r3, r2
90016ee0:	f8ad 2010 	strh.w	r2, [sp, #16]
90016ee4:	aa03      	add	r2, sp, #12
90016ee6:	1a5b      	subs	r3, r3, r1
90016ee8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016eec:	886d      	ldrh	r5, [r5, #2]
90016eee:	f8ad 300c 	strh.w	r3, [sp, #12]
90016ef2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90016ef6:	f8ad 1012 	strh.w	r1, [sp, #18]
90016efa:	1a5b      	subs	r3, r3, r1
90016efc:	4641      	mov	r1, r8
90016efe:	1b5b      	subs	r3, r3, r5
90016f00:	f8ad 300e 	strh.w	r3, [sp, #14]
90016f04:	6803      	ldr	r3, [r0, #0]
90016f06:	689b      	ldr	r3, [r3, #8]
90016f08:	4798      	blx	r3
90016f0a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90016fa4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90016f0e:	a805      	add	r0, sp, #20
90016f10:	f000 f882 	bl	90017018 <_ZN8touchgfx9Matrix3x36rotateEf>
90016f14:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016f18:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90016f1a:	1a9b      	subs	r3, r3, r2
90016f1c:	ee00 3a90 	vmov	s1, r3
90016f20:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90016f24:	1bdb      	subs	r3, r3, r7
90016f26:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90016f2a:	ee00 3a10 	vmov	s0, r3
90016f2e:	e795      	b.n	90016e5c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90016f30:	886b      	ldrh	r3, [r5, #2]
90016f32:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90016f36:	f8ad 300c 	strh.w	r3, [sp, #12]
90016f3a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90016f3e:	8829      	ldrh	r1, [r5, #0]
90016f40:	1a9b      	subs	r3, r3, r2
90016f42:	f8ad 2012 	strh.w	r2, [sp, #18]
90016f46:	aa03      	add	r2, sp, #12
90016f48:	1a5b      	subs	r3, r3, r1
90016f4a:	4641      	mov	r1, r8
90016f4c:	f8ad 300e 	strh.w	r3, [sp, #14]
90016f50:	88eb      	ldrh	r3, [r5, #6]
90016f52:	f8ad 3010 	strh.w	r3, [sp, #16]
90016f56:	6803      	ldr	r3, [r0, #0]
90016f58:	689b      	ldr	r3, [r3, #8]
90016f5a:	4798      	blx	r3
90016f5c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90016fa8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90016f60:	a805      	add	r0, sp, #20
90016f62:	f000 f859 	bl	90017018 <_ZN8touchgfx9Matrix3x36rotateEf>
90016f66:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016f6a:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90016f6e:	1bdb      	subs	r3, r3, r7
90016f70:	ee00 3a90 	vmov	s1, r3
90016f74:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90016f78:	e748      	b.n	90016e0c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90016f7a:	6860      	ldr	r0, [r4, #4]
90016f7c:	2100      	movs	r1, #0
90016f7e:	8b22      	ldrh	r2, [r4, #24]
90016f80:	6803      	ldr	r3, [r0, #0]
90016f82:	9101      	str	r1, [sp, #4]
90016f84:	8b61      	ldrh	r1, [r4, #26]
90016f86:	9100      	str	r1, [sp, #0]
90016f88:	6a1d      	ldr	r5, [r3, #32]
90016f8a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90016f8e:	47a8      	blx	r5
90016f90:	6860      	ldr	r0, [r4, #4]
90016f92:	6803      	ldr	r3, [r0, #0]
90016f94:	69db      	ldr	r3, [r3, #28]
90016f96:	4798      	blx	r3
90016f98:	b00e      	add	sp, #56	@ 0x38
90016f9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016f9e:	bf00      	nop
90016fa0:	42b40000 	.word	0x42b40000
90016fa4:	43340000 	.word	0x43340000
90016fa8:	43870000 	.word	0x43870000

90016fac <_ZN8touchgfx9Matrix3x35resetEv>:
90016fac:	2300      	movs	r3, #0
90016fae:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90016fb2:	6043      	str	r3, [r0, #4]
90016fb4:	6002      	str	r2, [r0, #0]
90016fb6:	6083      	str	r3, [r0, #8]
90016fb8:	60c3      	str	r3, [r0, #12]
90016fba:	6102      	str	r2, [r0, #16]
90016fbc:	6143      	str	r3, [r0, #20]
90016fbe:	6183      	str	r3, [r0, #24]
90016fc0:	61c3      	str	r3, [r0, #28]
90016fc2:	6202      	str	r2, [r0, #32]
90016fc4:	4770      	bx	lr

90016fc6 <_ZN8touchgfx9Matrix3x3C1Ev>:
90016fc6:	b508      	push	{r3, lr}
90016fc8:	f7ff fff0 	bl	90016fac <_ZN8touchgfx9Matrix3x35resetEv>
90016fcc:	bd08      	pop	{r3, pc}

90016fce <_ZN8touchgfx9Matrix3x35scaleEff>:
90016fce:	edd0 7a00 	vldr	s15, [r0]
90016fd2:	ee67 7a80 	vmul.f32	s15, s15, s0
90016fd6:	edc0 7a00 	vstr	s15, [r0]
90016fda:	edd0 7a01 	vldr	s15, [r0, #4]
90016fde:	ee67 7a80 	vmul.f32	s15, s15, s0
90016fe2:	edc0 7a01 	vstr	s15, [r0, #4]
90016fe6:	edd0 7a02 	vldr	s15, [r0, #8]
90016fea:	ee27 0a80 	vmul.f32	s0, s15, s0
90016fee:	edd0 7a03 	vldr	s15, [r0, #12]
90016ff2:	ee67 7aa0 	vmul.f32	s15, s15, s1
90016ff6:	ed80 0a02 	vstr	s0, [r0, #8]
90016ffa:	edc0 7a03 	vstr	s15, [r0, #12]
90016ffe:	edd0 7a04 	vldr	s15, [r0, #16]
90017002:	ee67 7aa0 	vmul.f32	s15, s15, s1
90017006:	edc0 7a04 	vstr	s15, [r0, #16]
9001700a:	edd0 7a05 	vldr	s15, [r0, #20]
9001700e:	ee67 0aa0 	vmul.f32	s1, s15, s1
90017012:	edc0 0a05 	vstr	s1, [r0, #20]
90017016:	4770      	bx	lr

90017018 <_ZN8touchgfx9Matrix3x36rotateEf>:
90017018:	eddf 7a24 	vldr	s15, [pc, #144]	@ 900170ac <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
9001701c:	ee20 0a27 	vmul.f32	s0, s0, s15
90017020:	eddf 7a23 	vldr	s15, [pc, #140]	@ 900170b0 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90017024:	b510      	push	{r4, lr}
90017026:	ed2d 8b02 	vpush	{d8}
9001702a:	eec0 8a27 	vdiv.f32	s17, s0, s15
9001702e:	4604      	mov	r4, r0
90017030:	eeb0 0a68 	vmov.f32	s0, s17
90017034:	f011 f934 	bl	900282a0 <cosf>
90017038:	eeb0 8a40 	vmov.f32	s16, s0
9001703c:	eeb0 0a68 	vmov.f32	s0, s17
90017040:	f011 f86a 	bl	90028118 <sinf>
90017044:	edd4 6a03 	vldr	s13, [r4, #12]
90017048:	edd4 4a00 	vldr	s9, [r4]
9001704c:	ee60 7a66 	vnmul.f32	s15, s0, s13
90017050:	ed94 7a04 	vldr	s14, [r4, #16]
90017054:	ed94 5a01 	vldr	s10, [r4, #4]
90017058:	ee66 6a88 	vmul.f32	s13, s13, s16
9001705c:	edd4 5a02 	vldr	s11, [r4, #8]
90017060:	eee8 7a24 	vfma.f32	s15, s16, s9
90017064:	eee0 6a24 	vfma.f32	s13, s0, s9
90017068:	edc4 7a00 	vstr	s15, [r4]
9001706c:	ee60 7a47 	vnmul.f32	s15, s0, s14
90017070:	ee27 7a08 	vmul.f32	s14, s14, s16
90017074:	edc4 6a03 	vstr	s13, [r4, #12]
90017078:	eee8 7a05 	vfma.f32	s15, s16, s10
9001707c:	eea0 7a05 	vfma.f32	s14, s0, s10
90017080:	edc4 7a01 	vstr	s15, [r4, #4]
90017084:	edd4 7a05 	vldr	s15, [r4, #20]
90017088:	ed84 7a04 	vstr	s14, [r4, #16]
9001708c:	ee20 6a67 	vnmul.f32	s12, s0, s15
90017090:	ee67 7a88 	vmul.f32	s15, s15, s16
90017094:	eea8 6a25 	vfma.f32	s12, s16, s11
90017098:	eee0 7a25 	vfma.f32	s15, s0, s11
9001709c:	ecbd 8b02 	vpop	{d8}
900170a0:	ed84 6a02 	vstr	s12, [r4, #8]
900170a4:	edc4 7a05 	vstr	s15, [r4, #20]
900170a8:	bd10      	pop	{r4, pc}
900170aa:	bf00      	nop
900170ac:	40490fdb 	.word	0x40490fdb
900170b0:	43340000 	.word	0x43340000

900170b4 <_ZN8touchgfx9Matrix3x39translateEff>:
900170b4:	ed90 6a06 	vldr	s12, [r0, #24]
900170b8:	edd0 7a00 	vldr	s15, [r0]
900170bc:	edd0 6a07 	vldr	s13, [r0, #28]
900170c0:	eee6 7a00 	vfma.f32	s15, s12, s0
900170c4:	ed90 7a08 	vldr	s14, [r0, #32]
900170c8:	edc0 7a00 	vstr	s15, [r0]
900170cc:	edd0 7a01 	vldr	s15, [r0, #4]
900170d0:	eee6 7a80 	vfma.f32	s15, s13, s0
900170d4:	edc0 7a01 	vstr	s15, [r0, #4]
900170d8:	edd0 7a02 	vldr	s15, [r0, #8]
900170dc:	eee7 7a00 	vfma.f32	s15, s14, s0
900170e0:	edc0 7a02 	vstr	s15, [r0, #8]
900170e4:	edd0 7a03 	vldr	s15, [r0, #12]
900170e8:	eee6 7a20 	vfma.f32	s15, s12, s1
900170ec:	edc0 7a03 	vstr	s15, [r0, #12]
900170f0:	edd0 7a04 	vldr	s15, [r0, #16]
900170f4:	eee6 7aa0 	vfma.f32	s15, s13, s1
900170f8:	edc0 7a04 	vstr	s15, [r0, #16]
900170fc:	edd0 7a05 	vldr	s15, [r0, #20]
90017100:	eee7 7a20 	vfma.f32	s15, s14, s1
90017104:	edc0 7a05 	vstr	s15, [r0, #20]
90017108:	4770      	bx	lr

9001710a <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
9001710a:	edd0 6a01 	vldr	s13, [r0, #4]
9001710e:	b084      	sub	sp, #16
90017110:	edd0 7a04 	vldr	s15, [r0, #16]
90017114:	ed90 7a03 	vldr	s14, [r0, #12]
90017118:	ee60 7aa7 	vmul.f32	s15, s1, s15
9001711c:	ee60 0aa6 	vmul.f32	s1, s1, s13
90017120:	edd0 6a00 	vldr	s13, [r0]
90017124:	eee7 7a00 	vfma.f32	s15, s14, s0
90017128:	ed90 7a05 	vldr	s14, [r0, #20]
9001712c:	eee6 0a80 	vfma.f32	s1, s13, s0
90017130:	ed90 0a02 	vldr	s0, [r0, #8]
90017134:	ee30 0a80 	vadd.f32	s0, s1, s0
90017138:	ee77 0a87 	vadd.f32	s1, s15, s14
9001713c:	b004      	add	sp, #16
9001713e:	4770      	bx	lr

90017140 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90017140:	b530      	push	{r4, r5, lr}
90017142:	8083      	strh	r3, [r0, #4]
90017144:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90017148:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001714c:	80c3      	strh	r3, [r0, #6]
9001714e:	f89d 3010 	ldrb.w	r3, [sp, #16]
90017152:	6141      	str	r1, [r0, #20]
90017154:	7203      	strb	r3, [r0, #8]
90017156:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001715a:	8302      	strh	r2, [r0, #24]
9001715c:	7243      	strb	r3, [r0, #9]
9001715e:	7a83      	ldrb	r3, [r0, #10]
90017160:	f365 0306 	bfi	r3, r5, #0, #7
90017164:	f89d 501c 	ldrb.w	r5, [sp, #28]
90017168:	f365 13c7 	bfi	r3, r5, #7, #1
9001716c:	7283      	strb	r3, [r0, #10]
9001716e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90017172:	72c3      	strb	r3, [r0, #11]
90017174:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90017178:	7303      	strb	r3, [r0, #12]
9001717a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001717e:	81c3      	strh	r3, [r0, #14]
90017180:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90017184:	8203      	strh	r3, [r0, #16]
90017186:	4b01      	ldr	r3, [pc, #4]	@ (9001718c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90017188:	6003      	str	r3, [r0, #0]
9001718a:	bd30      	pop	{r4, r5, pc}
9001718c:	9002da0c 	.word	0x9002da0c

90017190 <_ZNK8touchgfx9ConstFont4findEt>:
90017190:	b5f0      	push	{r4, r5, r6, r7, lr}
90017192:	6944      	ldr	r4, [r0, #20]
90017194:	b3bc      	cbz	r4, 90017206 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017196:	88a3      	ldrh	r3, [r4, #4]
90017198:	8b02      	ldrh	r2, [r0, #24]
9001719a:	1acb      	subs	r3, r1, r3
9001719c:	f102 32ff 	add.w	r2, r2, #4294967295
900171a0:	d431      	bmi.n	90017206 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900171a2:	4293      	cmp	r3, r2
900171a4:	dd0c      	ble.n	900171c0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
900171a6:	230e      	movs	r3, #14
900171a8:	fb03 4302 	mla	r3, r3, r2, r4
900171ac:	889b      	ldrh	r3, [r3, #4]
900171ae:	1a5b      	subs	r3, r3, r1
900171b0:	1ad3      	subs	r3, r2, r3
900171b2:	429a      	cmp	r2, r3
900171b4:	db27      	blt.n	90017206 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900171b6:	2b00      	cmp	r3, #0
900171b8:	bfbc      	itt	lt
900171ba:	2302      	movlt	r3, #2
900171bc:	fb92 f3f3 	sdivlt	r3, r2, r3
900171c0:	2500      	movs	r5, #0
900171c2:	260e      	movs	r6, #14
900171c4:	4295      	cmp	r5, r2
900171c6:	dc1e      	bgt.n	90017206 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900171c8:	fb06 4003 	mla	r0, r6, r3, r4
900171cc:	8887      	ldrh	r7, [r0, #4]
900171ce:	42b9      	cmp	r1, r7
900171d0:	d01a      	beq.n	90017208 <_ZNK8touchgfx9ConstFont4findEt+0x78>
900171d2:	d20d      	bcs.n	900171f0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
900171d4:	1e5a      	subs	r2, r3, #1
900171d6:	4295      	cmp	r5, r2
900171d8:	dc15      	bgt.n	90017206 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900171da:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
900171de:	1a5b      	subs	r3, r3, r1
900171e0:	1ad3      	subs	r3, r2, r3
900171e2:	429a      	cmp	r2, r3
900171e4:	db0f      	blt.n	90017206 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900171e6:	429d      	cmp	r5, r3
900171e8:	ddec      	ble.n	900171c4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900171ea:	1953      	adds	r3, r2, r5
900171ec:	105b      	asrs	r3, r3, #1
900171ee:	e7e9      	b.n	900171c4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900171f0:	1c5d      	adds	r5, r3, #1
900171f2:	42aa      	cmp	r2, r5
900171f4:	db07      	blt.n	90017206 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900171f6:	8a43      	ldrh	r3, [r0, #18]
900171f8:	1acb      	subs	r3, r1, r3
900171fa:	442b      	add	r3, r5
900171fc:	429d      	cmp	r5, r3
900171fe:	dc02      	bgt.n	90017206 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017200:	429a      	cmp	r2, r3
90017202:	dadf      	bge.n	900171c4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017204:	e7f1      	b.n	900171ea <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90017206:	2000      	movs	r0, #0
90017208:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001720a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001720a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001720c:	4604      	mov	r4, r0
9001720e:	4617      	mov	r7, r2
90017210:	461e      	mov	r6, r3
90017212:	b911      	cbnz	r1, 9001721a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90017214:	2500      	movs	r5, #0
90017216:	4628      	mov	r0, r5
90017218:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001721a:	290a      	cmp	r1, #10
9001721c:	d0fa      	beq.n	90017214 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001721e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90017222:	4291      	cmp	r1, r2
90017224:	d0f6      	beq.n	90017214 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017226:	f242 020b 	movw	r2, #8203	@ 0x200b
9001722a:	4291      	cmp	r1, r2
9001722c:	d0f2      	beq.n	90017214 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001722e:	f7ff ffaf 	bl	90017190 <_ZNK8touchgfx9ConstFont4findEt>
90017232:	4605      	mov	r5, r0
90017234:	b950      	cbnz	r0, 9001724c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90017236:	6823      	ldr	r3, [r4, #0]
90017238:	4620      	mov	r0, r4
9001723a:	691b      	ldr	r3, [r3, #16]
9001723c:	4798      	blx	r3
9001723e:	4601      	mov	r1, r0
90017240:	4620      	mov	r0, r4
90017242:	f7ff ffa5 	bl	90017190 <_ZNK8touchgfx9ConstFont4findEt>
90017246:	4605      	mov	r5, r0
90017248:	2800      	cmp	r0, #0
9001724a:	d0e3      	beq.n	90017214 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001724c:	6823      	ldr	r3, [r4, #0]
9001724e:	4629      	mov	r1, r5
90017250:	4620      	mov	r0, r4
90017252:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90017254:	4798      	blx	r3
90017256:	6038      	str	r0, [r7, #0]
90017258:	6823      	ldr	r3, [r4, #0]
9001725a:	4620      	mov	r0, r4
9001725c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001725e:	4798      	blx	r3
90017260:	7030      	strb	r0, [r6, #0]
90017262:	e7d8      	b.n	90017216 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90017264 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90017264:	2000      	movs	r0, #0
90017266:	4770      	bx	lr

90017268 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90017268:	2001      	movs	r0, #1
9001726a:	4770      	bx	lr

9001726c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001726c:	2002      	movs	r0, #2
9001726e:	4770      	bx	lr

90017270 <_ZN8touchgfx6ScreenD1Ev>:
90017270:	4770      	bx	lr

90017272 <_ZN8touchgfx6Screen11setupScreenEv>:
90017272:	4770      	bx	lr

90017274 <_ZN8touchgfx12GestureEventD1Ev>:
90017274:	4770      	bx	lr

90017276 <_ZN8touchgfx9DragEventD1Ev>:
90017276:	4770      	bx	lr

90017278 <_ZN8touchgfx10ClickEventD1Ev>:
90017278:	4770      	bx	lr

9001727a <_ZN8touchgfx10ClickEventD0Ev>:
9001727a:	b510      	push	{r4, lr}
9001727c:	4604      	mov	r4, r0
9001727e:	210c      	movs	r1, #12
90017280:	f010 fed6 	bl	90028030 <_ZdlPvj>
90017284:	4620      	mov	r0, r4
90017286:	bd10      	pop	{r4, pc}

90017288 <_ZN8touchgfx9DragEventD0Ev>:
90017288:	b510      	push	{r4, lr}
9001728a:	4604      	mov	r4, r0
9001728c:	2110      	movs	r1, #16
9001728e:	f010 fecf 	bl	90028030 <_ZdlPvj>
90017292:	4620      	mov	r0, r4
90017294:	bd10      	pop	{r4, pc}

90017296 <_ZN8touchgfx12GestureEventD0Ev>:
90017296:	b510      	push	{r4, lr}
90017298:	4604      	mov	r4, r0
9001729a:	210c      	movs	r1, #12
9001729c:	f010 fec8 	bl	90028030 <_ZdlPvj>
900172a0:	4620      	mov	r0, r4
900172a2:	bd10      	pop	{r4, pc}

900172a4 <_ZN8touchgfx6ScreenD0Ev>:
900172a4:	b510      	push	{r4, lr}
900172a6:	4604      	mov	r4, r0
900172a8:	213c      	movs	r1, #60	@ 0x3c
900172aa:	f010 fec1 	bl	90028030 <_ZdlPvj>
900172ae:	4620      	mov	r0, r4
900172b0:	bd10      	pop	{r4, pc}
	...

900172b4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900172b4:	b530      	push	{r4, r5, lr}
900172b6:	460d      	mov	r5, r1
900172b8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
900172ba:	b087      	sub	sp, #28
900172bc:	4604      	mov	r4, r0
900172be:	b301      	cbz	r1, 90017302 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900172c0:	a801      	add	r0, sp, #4
900172c2:	f7ff fc07 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900172c6:	892a      	ldrh	r2, [r5, #8]
900172c8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900172cc:	7928      	ldrb	r0, [r5, #4]
900172ce:	1ad2      	subs	r2, r2, r3
900172d0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
900172d2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900172d6:	441a      	add	r2, r3
900172d8:	896b      	ldrh	r3, [r5, #10]
900172da:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900172de:	f88d 0010 	strb.w	r0, [sp, #16]
900172e2:	1b5b      	subs	r3, r3, r5
900172e4:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
900172e6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900172e8:	442b      	add	r3, r5
900172ea:	4d07      	ldr	r5, [pc, #28]	@ (90017308 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
900172ec:	f8ad 1012 	strh.w	r1, [sp, #18]
900172f0:	a903      	add	r1, sp, #12
900172f2:	9503      	str	r5, [sp, #12]
900172f4:	f8ad 2014 	strh.w	r2, [sp, #20]
900172f8:	f8ad 3016 	strh.w	r3, [sp, #22]
900172fc:	6803      	ldr	r3, [r0, #0]
900172fe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017300:	4798      	blx	r3
90017302:	b007      	add	sp, #28
90017304:	bd30      	pop	{r4, r5, pc}
90017306:	bf00      	nop
90017308:	9002da9c 	.word	0x9002da9c

9001730c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001730c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017310:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90017312:	b08a      	sub	sp, #40	@ 0x28
90017314:	4604      	mov	r4, r0
90017316:	460d      	mov	r5, r1
90017318:	b113      	cbz	r3, 90017320 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001731a:	790b      	ldrb	r3, [r1, #4]
9001731c:	2b00      	cmp	r3, #0
9001731e:	d044      	beq.n	900173aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90017320:	f104 0804 	add.w	r8, r4, #4
90017324:	a803      	add	r0, sp, #12
90017326:	4641      	mov	r1, r8
90017328:	f7ff fbd4 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001732c:	792b      	ldrb	r3, [r5, #4]
9001732e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90017332:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90017336:	b983      	cbnz	r3, 9001735a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90017338:	f104 0336 	add.w	r3, r4, #54	@ 0x36
9001733c:	892a      	ldrh	r2, [r5, #8]
9001733e:	88e9      	ldrh	r1, [r5, #6]
90017340:	4640      	mov	r0, r8
90017342:	1b92      	subs	r2, r2, r6
90017344:	9301      	str	r3, [sp, #4]
90017346:	1bc9      	subs	r1, r1, r7
90017348:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001734c:	b212      	sxth	r2, r2
9001734e:	9300      	str	r3, [sp, #0]
90017350:	b209      	sxth	r1, r1
90017352:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90017356:	f7f8 fd55 	bl	9000fe04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001735a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001735c:	b329      	cbz	r1, 900173aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001735e:	a805      	add	r0, sp, #20
90017360:	f7ff fbb8 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017364:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90017368:	792b      	ldrb	r3, [r5, #4]
9001736a:	a907      	add	r1, sp, #28
9001736c:	1abf      	subs	r7, r7, r2
9001736e:	88ea      	ldrh	r2, [r5, #6]
90017370:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90017372:	4417      	add	r7, r2
90017374:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90017376:	f88d 3020 	strb.w	r3, [sp, #32]
9001737a:	4417      	add	r7, r2
9001737c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90017380:	1ab6      	subs	r6, r6, r2
90017382:	892a      	ldrh	r2, [r5, #8]
90017384:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90017388:	4416      	add	r6, r2
9001738a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001738c:	4416      	add	r6, r2
9001738e:	4a08      	ldr	r2, [pc, #32]	@ (900173b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90017390:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
90017394:	2600      	movs	r6, #0
90017396:	9207      	str	r2, [sp, #28]
90017398:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
9001739c:	6803      	ldr	r3, [r0, #0]
9001739e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900173a0:	4798      	blx	r3
900173a2:	792b      	ldrb	r3, [r5, #4]
900173a4:	b10b      	cbz	r3, 900173aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900173a6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
900173aa:	b00a      	add	sp, #40	@ 0x28
900173ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900173b0:	9002da74 	.word	0x9002da74

900173b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900173b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900173b8:	460c      	mov	r4, r1
900173ba:	6b01      	ldr	r1, [r0, #48]	@ 0x30
900173bc:	b088      	sub	sp, #32
900173be:	4605      	mov	r5, r0
900173c0:	2900      	cmp	r1, #0
900173c2:	d06d      	beq.n	900174a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900173c4:	4668      	mov	r0, sp
900173c6:	f7ff fb85 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900173ca:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
900173cc:	88e3      	ldrh	r3, [r4, #6]
900173ce:	f9bd 8000 	ldrsh.w	r8, [sp]
900173d2:	440b      	add	r3, r1
900173d4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900173d8:	b21b      	sxth	r3, r3
900173da:	4543      	cmp	r3, r8
900173dc:	db31      	blt.n	90017442 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900173de:	f8bd c004 	ldrh.w	ip, [sp, #4]
900173e2:	44c4      	add	ip, r8
900173e4:	fa0f fc8c 	sxth.w	ip, ip
900173e8:	4563      	cmp	r3, ip
900173ea:	da2a      	bge.n	90017442 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900173ec:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
900173ee:	8926      	ldrh	r6, [r4, #8]
900173f0:	4416      	add	r6, r2
900173f2:	b236      	sxth	r6, r6
900173f4:	42be      	cmp	r6, r7
900173f6:	db24      	blt.n	90017442 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900173f8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
900173fc:	4438      	add	r0, r7
900173fe:	b200      	sxth	r0, r0
90017400:	4286      	cmp	r6, r0
90017402:	da1e      	bge.n	90017442 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017404:	8963      	ldrh	r3, [r4, #10]
90017406:	4419      	add	r1, r3
90017408:	b209      	sxth	r1, r1
9001740a:	4541      	cmp	r1, r8
9001740c:	db08      	blt.n	90017420 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001740e:	4561      	cmp	r1, ip
90017410:	da06      	bge.n	90017420 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017412:	89a3      	ldrh	r3, [r4, #12]
90017414:	441a      	add	r2, r3
90017416:	b212      	sxth	r2, r2
90017418:	42ba      	cmp	r2, r7
9001741a:	db01      	blt.n	90017420 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001741c:	4282      	cmp	r2, r0
9001741e:	db10      	blt.n	90017442 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017420:	4b21      	ldr	r3, [pc, #132]	@ (900174a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90017422:	a904      	add	r1, sp, #16
90017424:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90017426:	9304      	str	r3, [sp, #16]
90017428:	2302      	movs	r3, #2
9001742a:	f88d 3014 	strb.w	r3, [sp, #20]
9001742e:	2300      	movs	r3, #0
90017430:	f8ad 3016 	strh.w	r3, [sp, #22]
90017434:	f8ad 3018 	strh.w	r3, [sp, #24]
90017438:	f8ad 301a 	strh.w	r3, [sp, #26]
9001743c:	6803      	ldr	r3, [r0, #0]
9001743e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017440:	4798      	blx	r3
90017442:	1d29      	adds	r1, r5, #4
90017444:	a802      	add	r0, sp, #8
90017446:	f7ff fb45 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001744a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001744e:	88e0      	ldrh	r0, [r4, #6]
90017450:	eba3 0808 	sub.w	r8, r3, r8
90017454:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90017458:	7921      	ldrb	r1, [r4, #4]
9001745a:	fa1f f888 	uxth.w	r8, r8
9001745e:	1bdf      	subs	r7, r3, r7
90017460:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90017464:	b2bb      	uxth	r3, r7
90017466:	4440      	add	r0, r8
90017468:	8922      	ldrh	r2, [r4, #8]
9001746a:	8967      	ldrh	r7, [r4, #10]
9001746c:	4460      	add	r0, ip
9001746e:	89a4      	ldrh	r4, [r4, #12]
90017470:	441a      	add	r2, r3
90017472:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90017474:	44b8      	add	r8, r7
90017476:	4423      	add	r3, r4
90017478:	f8ad 0016 	strh.w	r0, [sp, #22]
9001747c:	4432      	add	r2, r6
9001747e:	44e0      	add	r8, ip
90017480:	4433      	add	r3, r6
90017482:	4c0a      	ldr	r4, [pc, #40]	@ (900174ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90017484:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90017486:	f88d 1014 	strb.w	r1, [sp, #20]
9001748a:	a904      	add	r1, sp, #16
9001748c:	9404      	str	r4, [sp, #16]
9001748e:	f8ad 2018 	strh.w	r2, [sp, #24]
90017492:	f8ad 801a 	strh.w	r8, [sp, #26]
90017496:	f8ad 301c 	strh.w	r3, [sp, #28]
9001749a:	6803      	ldr	r3, [r0, #0]
9001749c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001749e:	4798      	blx	r3
900174a0:	b008      	add	sp, #32
900174a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900174a6:	bf00      	nop
900174a8:	9002da74 	.word	0x9002da74
900174ac:	9002da88 	.word	0x9002da88

900174b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900174b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900174b2:	4604      	mov	r4, r0
900174b4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900174b8:	3201      	adds	r2, #1
900174ba:	d112      	bne.n	900174e2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900174bc:	2500      	movs	r5, #0
900174be:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900174c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900174c6:	6803      	ldr	r3, [r0, #0]
900174c8:	9500      	str	r5, [sp, #0]
900174ca:	466d      	mov	r5, sp
900174cc:	f8ad 1004 	strh.w	r1, [sp, #4]
900174d0:	f8ad 2006 	strh.w	r2, [sp, #6]
900174d4:	4629      	mov	r1, r5
900174d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900174d8:	4798      	blx	r3
900174da:	e895 0003 	ldmia.w	r5, {r0, r1}
900174de:	e884 0003 	stmia.w	r4, {r0, r1}
900174e2:	4620      	mov	r0, r4
900174e4:	b003      	add	sp, #12
900174e6:	bd30      	pop	{r4, r5, pc}

900174e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900174e8:	b513      	push	{r0, r1, r4, lr}
900174ea:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900174ee:	4604      	mov	r4, r0
900174f0:	3301      	adds	r3, #1
900174f2:	d109      	bne.n	90017508 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
900174f4:	4601      	mov	r1, r0
900174f6:	4668      	mov	r0, sp
900174f8:	f7ff faec 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900174fc:	f8bd 3000 	ldrh.w	r3, [sp]
90017500:	8423      	strh	r3, [r4, #32]
90017502:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017506:	8463      	strh	r3, [r4, #34]	@ 0x22
90017508:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001750c:	b002      	add	sp, #8
9001750e:	bd10      	pop	{r4, pc}

90017510 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90017510:	b513      	push	{r0, r1, r4, lr}
90017512:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
90017516:	4604      	mov	r4, r0
90017518:	3301      	adds	r3, #1
9001751a:	d109      	bne.n	90017530 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001751c:	4601      	mov	r1, r0
9001751e:	4668      	mov	r0, sp
90017520:	f7ff fad8 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017524:	f8bd 3000 	ldrh.w	r3, [sp]
90017528:	8423      	strh	r3, [r4, #32]
9001752a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001752e:	8463      	strh	r3, [r4, #34]	@ 0x22
90017530:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
90017534:	b002      	add	sp, #8
90017536:	bd10      	pop	{r4, pc}

90017538 <_ZN8touchgfx6ScreenC1Ev>:
90017538:	b570      	push	{r4, r5, r6, lr}
9001753a:	4b17      	ldr	r3, [pc, #92]	@ (90017598 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001753c:	4605      	mov	r5, r0
9001753e:	4a17      	ldr	r2, [pc, #92]	@ (9001759c <_ZN8touchgfx6ScreenC1Ev+0x64>)
90017540:	2101      	movs	r1, #1
90017542:	f845 3b04 	str.w	r3, [r5], #4
90017546:	2300      	movs	r3, #0
90017548:	6042      	str	r2, [r0, #4]
9001754a:	4604      	mov	r4, r0
9001754c:	8103      	strh	r3, [r0, #8]
9001754e:	8143      	strh	r3, [r0, #10]
90017550:	8183      	strh	r3, [r0, #12]
90017552:	81c3      	strh	r3, [r0, #14]
90017554:	8203      	strh	r3, [r0, #16]
90017556:	8243      	strh	r3, [r0, #18]
90017558:	8283      	strh	r3, [r0, #20]
9001755a:	82c3      	strh	r3, [r0, #22]
9001755c:	6203      	str	r3, [r0, #32]
9001755e:	8483      	strh	r3, [r0, #36]	@ 0x24
90017560:	84c3      	strh	r3, [r0, #38]	@ 0x26
90017562:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90017566:	6343      	str	r3, [r0, #52]	@ 0x34
90017568:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001756c:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
90017570:	e9c0 3306 	strd	r3, r3, [r0, #24]
90017574:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
90017578:	4b09      	ldr	r3, [pc, #36]	@ (900175a0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001757a:	4628      	mov	r0, r5
9001757c:	f9b3 6000 	ldrsh.w	r6, [r3]
90017580:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90017582:	4a08      	ldr	r2, [pc, #32]	@ (900175a4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90017584:	f9b2 1000 	ldrsh.w	r1, [r2]
90017588:	4798      	blx	r3
9001758a:	6863      	ldr	r3, [r4, #4]
9001758c:	4628      	mov	r0, r5
9001758e:	4631      	mov	r1, r6
90017590:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90017592:	4798      	blx	r3
90017594:	4620      	mov	r0, r4
90017596:	bd70      	pop	{r4, r5, r6, pc}
90017598:	9002dab0 	.word	0x9002dab0
9001759c:	9002d5e4 	.word	0x9002d5e4
900175a0:	24021bd2 	.word	0x24021bd2
900175a4:	24021bd0 	.word	0x24021bd0

900175a8 <_ZN8touchgfx6Screen4drawEv>:
900175a8:	4b09      	ldr	r3, [pc, #36]	@ (900175d0 <_ZN8touchgfx6Screen4drawEv+0x28>)
900175aa:	b507      	push	{r0, r1, r2, lr}
900175ac:	f9b3 2000 	ldrsh.w	r2, [r3]
900175b0:	2100      	movs	r1, #0
900175b2:	4b08      	ldr	r3, [pc, #32]	@ (900175d4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900175b4:	9100      	str	r1, [sp, #0]
900175b6:	4669      	mov	r1, sp
900175b8:	f9b3 3000 	ldrsh.w	r3, [r3]
900175bc:	f8ad 2004 	strh.w	r2, [sp, #4]
900175c0:	f8ad 3006 	strh.w	r3, [sp, #6]
900175c4:	6803      	ldr	r3, [r0, #0]
900175c6:	689b      	ldr	r3, [r3, #8]
900175c8:	4798      	blx	r3
900175ca:	b003      	add	sp, #12
900175cc:	f85d fb04 	ldr.w	pc, [sp], #4
900175d0:	24021bd0 	.word	0x24021bd0
900175d4:	24021bd2 	.word	0x24021bd2

900175d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900175d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900175dc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900175e0:	b089      	sub	sp, #36	@ 0x24
900175e2:	4680      	mov	r8, r0
900175e4:	460c      	mov	r4, r1
900175e6:	2b00      	cmp	r3, #0
900175e8:	4615      	mov	r5, r2
900175ea:	dd0e      	ble.n	9001760a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900175ec:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900175f0:	2b00      	cmp	r3, #0
900175f2:	dd0a      	ble.n	9001760a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900175f4:	4628      	mov	r0, r5
900175f6:	f7ff ff5b 	bl	900174b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900175fa:	4621      	mov	r1, r4
900175fc:	f7fe f877 	bl	900156ee <_ZNK8touchgfx4Rect9intersectERKS0_>
90017600:	69eb      	ldr	r3, [r5, #28]
90017602:	b928      	cbnz	r0, 90017610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90017604:	461d      	mov	r5, r3
90017606:	2b00      	cmp	r3, #0
90017608:	d1f4      	bne.n	900175f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001760a:	b009      	add	sp, #36	@ 0x24
9001760c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017610:	ae04      	add	r6, sp, #16
90017612:	2b00      	cmp	r3, #0
90017614:	f000 80b5 	beq.w	90017782 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017618:	682b      	ldr	r3, [r5, #0]
9001761a:	4629      	mov	r1, r5
9001761c:	a802      	add	r0, sp, #8
9001761e:	68db      	ldr	r3, [r3, #12]
90017620:	4798      	blx	r3
90017622:	4628      	mov	r0, r5
90017624:	f7ff ff60 	bl	900174e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90017628:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001762c:	4407      	add	r7, r0
9001762e:	4628      	mov	r0, r5
90017630:	f7ff ff6e 	bl	90017510 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90017634:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90017638:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001763c:	b23f      	sxth	r7, r7
9001763e:	4418      	add	r0, r3
90017640:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90017644:	4621      	mov	r1, r4
90017646:	f8ad 2014 	strh.w	r2, [sp, #20]
9001764a:	f8ad 0012 	strh.w	r0, [sp, #18]
9001764e:	4630      	mov	r0, r6
90017650:	f8ad 3016 	strh.w	r3, [sp, #22]
90017654:	f8ad 7010 	strh.w	r7, [sp, #16]
90017658:	f7f8 fcb6 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001765c:	4628      	mov	r0, r5
9001765e:	f7ff ff27 	bl	900174b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017662:	ab06      	add	r3, sp, #24
90017664:	4602      	mov	r2, r0
90017666:	e896 0003 	ldmia.w	r6, {r0, r1}
9001766a:	e883 0003 	stmia.w	r3, {r0, r1}
9001766e:	4611      	mov	r1, r2
90017670:	4618      	mov	r0, r3
90017672:	f7f8 fca9 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
90017676:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001767a:	f9b4 1000 	ldrsh.w	r1, [r4]
9001767e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90017682:	4299      	cmp	r1, r3
90017684:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90017688:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001768c:	d10b      	bne.n	900176a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001768e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90017692:	4552      	cmp	r2, sl
90017694:	d107      	bne.n	900176a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017696:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001769a:	455a      	cmp	r2, fp
9001769c:	d103      	bne.n	900176a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001769e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900176a2:	454a      	cmp	r2, r9
900176a4:	d06d      	beq.n	90017782 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900176a6:	f1bb 0f00 	cmp.w	fp, #0
900176aa:	dd65      	ble.n	90017778 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900176ac:	f1b9 0f00 	cmp.w	r9, #0
900176b0:	dd62      	ble.n	90017778 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900176b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900176b6:	fa1f f08a 	uxth.w	r0, sl
900176ba:	4552      	cmp	r2, sl
900176bc:	9000      	str	r0, [sp, #0]
900176be:	da12      	bge.n	900176e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900176c0:	9301      	str	r3, [sp, #4]
900176c2:	9b00      	ldr	r3, [sp, #0]
900176c4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900176c8:	f8ad 2012 	strh.w	r2, [sp, #18]
900176cc:	1a9a      	subs	r2, r3, r2
900176ce:	f8ad 1010 	strh.w	r1, [sp, #16]
900176d2:	4631      	mov	r1, r6
900176d4:	f8ad 0014 	strh.w	r0, [sp, #20]
900176d8:	4640      	mov	r0, r8
900176da:	f8ad 2016 	strh.w	r2, [sp, #22]
900176de:	69ea      	ldr	r2, [r5, #28]
900176e0:	f7ff ff7a 	bl	900175d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900176e4:	9b01      	ldr	r3, [sp, #4]
900176e6:	f9b4 2000 	ldrsh.w	r2, [r4]
900176ea:	b29f      	uxth	r7, r3
900176ec:	429a      	cmp	r2, r3
900176ee:	da0d      	bge.n	9001770c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900176f0:	f8ad 2010 	strh.w	r2, [sp, #16]
900176f4:	1aba      	subs	r2, r7, r2
900176f6:	f8ad a012 	strh.w	sl, [sp, #18]
900176fa:	4631      	mov	r1, r6
900176fc:	f8ad 2014 	strh.w	r2, [sp, #20]
90017700:	4640      	mov	r0, r8
90017702:	f8ad 9016 	strh.w	r9, [sp, #22]
90017706:	69ea      	ldr	r2, [r5, #28]
90017708:	f7ff ff66 	bl	900175d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001770c:	8822      	ldrh	r2, [r4, #0]
9001770e:	445f      	add	r7, fp
90017710:	88a3      	ldrh	r3, [r4, #4]
90017712:	b2bf      	uxth	r7, r7
90017714:	4413      	add	r3, r2
90017716:	b23a      	sxth	r2, r7
90017718:	b29b      	uxth	r3, r3
9001771a:	b219      	sxth	r1, r3
9001771c:	4291      	cmp	r1, r2
9001771e:	dd0d      	ble.n	9001773c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90017720:	1bdb      	subs	r3, r3, r7
90017722:	f8ad 2010 	strh.w	r2, [sp, #16]
90017726:	f8ad a012 	strh.w	sl, [sp, #18]
9001772a:	4631      	mov	r1, r6
9001772c:	f8ad 3014 	strh.w	r3, [sp, #20]
90017730:	4640      	mov	r0, r8
90017732:	f8ad 9016 	strh.w	r9, [sp, #22]
90017736:	69ea      	ldr	r2, [r5, #28]
90017738:	f7ff ff4e 	bl	900175d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001773c:	88e2      	ldrh	r2, [r4, #6]
9001773e:	8863      	ldrh	r3, [r4, #2]
90017740:	4413      	add	r3, r2
90017742:	9a00      	ldr	r2, [sp, #0]
90017744:	444a      	add	r2, r9
90017746:	b29b      	uxth	r3, r3
90017748:	fa1f f982 	uxth.w	r9, r2
9001774c:	b219      	sxth	r1, r3
9001774e:	fa0f f289 	sxth.w	r2, r9
90017752:	428a      	cmp	r2, r1
90017754:	da15      	bge.n	90017782 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017756:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001775a:	eba3 0309 	sub.w	r3, r3, r9
9001775e:	f9b4 0000 	ldrsh.w	r0, [r4]
90017762:	f8ad 1014 	strh.w	r1, [sp, #20]
90017766:	4631      	mov	r1, r6
90017768:	f8ad 0010 	strh.w	r0, [sp, #16]
9001776c:	f8ad 2012 	strh.w	r2, [sp, #18]
90017770:	f8ad 3016 	strh.w	r3, [sp, #22]
90017774:	69ea      	ldr	r2, [r5, #28]
90017776:	e001      	b.n	9001777c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90017778:	69ea      	ldr	r2, [r5, #28]
9001777a:	4621      	mov	r1, r4
9001777c:	4640      	mov	r0, r8
9001777e:	f7ff ff2b 	bl	900175d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017782:	4628      	mov	r0, r5
90017784:	f7ff fe94 	bl	900174b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017788:	6861      	ldr	r1, [r4, #4]
9001778a:	4602      	mov	r2, r0
9001778c:	4633      	mov	r3, r6
9001778e:	6820      	ldr	r0, [r4, #0]
90017790:	c303      	stmia	r3!, {r0, r1}
90017792:	4611      	mov	r1, r2
90017794:	4630      	mov	r0, r6
90017796:	f7f8 fc17 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001779a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001779e:	2b00      	cmp	r3, #0
900177a0:	f77f af33 	ble.w	9001760a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900177a4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900177a8:	2b00      	cmp	r3, #0
900177aa:	f77f af2e 	ble.w	9001760a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900177ae:	4628      	mov	r0, r5
900177b0:	f7ff fe9a 	bl	900174e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900177b4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900177b8:	1a18      	subs	r0, r3, r0
900177ba:	f8ad 0010 	strh.w	r0, [sp, #16]
900177be:	4628      	mov	r0, r5
900177c0:	f7ff fea6 	bl	90017510 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900177c4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900177c8:	4631      	mov	r1, r6
900177ca:	1a18      	subs	r0, r3, r0
900177cc:	f8ad 0012 	strh.w	r0, [sp, #18]
900177d0:	4628      	mov	r0, r5
900177d2:	682b      	ldr	r3, [r5, #0]
900177d4:	689b      	ldr	r3, [r3, #8]
900177d6:	4798      	blx	r3
900177d8:	e717      	b.n	9001760a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900177da <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900177da:	b570      	push	{r4, r5, r6, lr}
900177dc:	1d06      	adds	r6, r0, #4
900177de:	b086      	sub	sp, #24
900177e0:	460c      	mov	r4, r1
900177e2:	2300      	movs	r3, #0
900177e4:	4631      	mov	r1, r6
900177e6:	4605      	mov	r5, r0
900177e8:	a802      	add	r0, sp, #8
900177ea:	9301      	str	r3, [sp, #4]
900177ec:	f7ff f972 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900177f0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900177f4:	8822      	ldrh	r2, [r4, #0]
900177f6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900177fa:	1ad2      	subs	r2, r2, r3
900177fc:	8863      	ldrh	r3, [r4, #2]
900177fe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90017802:	1a5b      	subs	r3, r3, r1
90017804:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90017808:	f8ad 2010 	strh.w	r2, [sp, #16]
9001780c:	aa01      	add	r2, sp, #4
9001780e:	f8ad 0014 	strh.w	r0, [sp, #20]
90017812:	4630      	mov	r0, r6
90017814:	f8ad 1016 	strh.w	r1, [sp, #22]
90017818:	a904      	add	r1, sp, #16
9001781a:	f8ad 3012 	strh.w	r3, [sp, #18]
9001781e:	f7f8 fcab 	bl	90010178 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90017822:	9a01      	ldr	r2, [sp, #4]
90017824:	b11a      	cbz	r2, 9001782e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90017826:	4621      	mov	r1, r4
90017828:	4628      	mov	r0, r5
9001782a:	f7ff fed5 	bl	900175d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001782e:	b006      	add	sp, #24
90017830:	bd70      	pop	{r4, r5, r6, pc}

90017832 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90017832:	4602      	mov	r2, r0
90017834:	b530      	push	{r4, r5, lr}
90017836:	4604      	mov	r4, r0
90017838:	b085      	sub	sp, #20
9001783a:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001783e:	460d      	mov	r5, r1
90017840:	466b      	mov	r3, sp
90017842:	6851      	ldr	r1, [r2, #4]
90017844:	c303      	stmia	r3!, {r0, r1}
90017846:	4629      	mov	r1, r5
90017848:	4668      	mov	r0, sp
9001784a:	f7f8 fbbd 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001784e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90017852:	b12b      	cbz	r3, 90017860 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90017854:	4669      	mov	r1, sp
90017856:	4620      	mov	r0, r4
90017858:	f7ff ffbf 	bl	900177da <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001785c:	b005      	add	sp, #20
9001785e:	bd30      	pop	{r4, r5, pc}
90017860:	3404      	adds	r4, #4
90017862:	a802      	add	r0, sp, #8
90017864:	4621      	mov	r1, r4
90017866:	f7ff f935 	bl	90016ad4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001786a:	f8bd 3000 	ldrh.w	r3, [sp]
9001786e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90017872:	4669      	mov	r1, sp
90017874:	4620      	mov	r0, r4
90017876:	1a9b      	subs	r3, r3, r2
90017878:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001787c:	f8ad 3000 	strh.w	r3, [sp]
90017880:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017884:	1a9b      	subs	r3, r3, r2
90017886:	f8ad 3002 	strh.w	r3, [sp, #2]
9001788a:	f7f8 fc3c 	bl	90010106 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001788e:	e7e5      	b.n	9001785c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90017890 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90017890:	460b      	mov	r3, r1
90017892:	680a      	ldr	r2, [r1, #0]
90017894:	1d01      	adds	r1, r0, #4
90017896:	6992      	ldr	r2, [r2, #24]
90017898:	4618      	mov	r0, r3
9001789a:	4710      	bx	r2

9001789c <_ZN8touchgfx12TextProviderC1Ev>:
9001789c:	b538      	push	{r3, r4, r5, lr}
9001789e:	2500      	movs	r5, #0
900178a0:	2302      	movs	r3, #2
900178a2:	4604      	mov	r4, r0
900178a4:	220e      	movs	r2, #14
900178a6:	7403      	strb	r3, [r0, #16]
900178a8:	4629      	mov	r1, r5
900178aa:	6145      	str	r5, [r0, #20]
900178ac:	7605      	strb	r5, [r0, #24]
900178ae:	83c5      	strh	r5, [r0, #30]
900178b0:	8405      	strh	r5, [r0, #32]
900178b2:	86c5      	strh	r5, [r0, #54]	@ 0x36
900178b4:	8705      	strh	r5, [r0, #56]	@ 0x38
900178b6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
900178b8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
900178bc:	e9c0 5500 	strd	r5, r5, [r0]
900178c0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
900178c4:	304c      	adds	r0, #76	@ 0x4c
900178c6:	f011 f9c7 	bl	90028c58 <memset>
900178ca:	2301      	movs	r3, #1
900178cc:	4620      	mov	r0, r4
900178ce:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
900178d2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900178d6:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
900178da:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
900178de:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
900178e2:	f7ee fb2d 	bl	90005f40 <_ZN8touchgfx12TextProvider18initializeInternalEv>
900178e6:	4620      	mov	r0, r4
900178e8:	bd38      	pop	{r3, r4, r5, pc}

900178ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
900178ea:	b530      	push	{r4, r5, lr}
900178ec:	2500      	movs	r5, #0
900178ee:	2401      	movs	r4, #1
900178f0:	6843      	ldr	r3, [r0, #4]
900178f2:	b913      	cbnz	r3, 900178fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
900178f4:	6803      	ldr	r3, [r0, #0]
900178f6:	b313      	cbz	r3, 9001793e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
900178f8:	6043      	str	r3, [r0, #4]
900178fa:	7e03      	ldrb	r3, [r0, #24]
900178fc:	b143      	cbz	r3, 90017910 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
900178fe:	6943      	ldr	r3, [r0, #20]
90017900:	b12b      	cbz	r3, 9001790e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90017902:	881a      	ldrh	r2, [r3, #0]
90017904:	b11a      	cbz	r2, 9001790e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90017906:	1c9a      	adds	r2, r3, #2
90017908:	6142      	str	r2, [r0, #20]
9001790a:	8818      	ldrh	r0, [r3, #0]
9001790c:	bd30      	pop	{r4, r5, pc}
9001790e:	7605      	strb	r5, [r0, #24]
90017910:	6843      	ldr	r3, [r0, #4]
90017912:	8819      	ldrh	r1, [r3, #0]
90017914:	b199      	cbz	r1, 9001793e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017916:	1c9a      	adds	r2, r3, #2
90017918:	2902      	cmp	r1, #2
9001791a:	6042      	str	r2, [r0, #4]
9001791c:	d1f5      	bne.n	9001790a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001791e:	7c03      	ldrb	r3, [r0, #16]
90017920:	2b01      	cmp	r3, #1
90017922:	d8e5      	bhi.n	900178f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017924:	1c5a      	adds	r2, r3, #1
90017926:	3302      	adds	r3, #2
90017928:	7402      	strb	r2, [r0, #16]
9001792a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001792e:	6143      	str	r3, [r0, #20]
90017930:	2b00      	cmp	r3, #0
90017932:	d0dd      	beq.n	900178f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017934:	881b      	ldrh	r3, [r3, #0]
90017936:	2b00      	cmp	r3, #0
90017938:	d0da      	beq.n	900178f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001793a:	7604      	strb	r4, [r0, #24]
9001793c:	e7d8      	b.n	900178f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001793e:	2000      	movs	r0, #0
90017940:	e7e4      	b.n	9001790c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90017942 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90017942:	6001      	str	r1, [r0, #0]
90017944:	2100      	movs	r1, #0
90017946:	b430      	push	{r4, r5}
90017948:	6041      	str	r1, [r0, #4]
9001794a:	6815      	ldr	r5, [r2, #0]
9001794c:	6085      	str	r5, [r0, #8]
9001794e:	6852      	ldr	r2, [r2, #4]
90017950:	6443      	str	r3, [r0, #68]	@ 0x44
90017952:	9b02      	ldr	r3, [sp, #8]
90017954:	60c2      	str	r2, [r0, #12]
90017956:	7401      	strb	r1, [r0, #16]
90017958:	6141      	str	r1, [r0, #20]
9001795a:	7601      	strb	r1, [r0, #24]
9001795c:	8701      	strh	r1, [r0, #56]	@ 0x38
9001795e:	8401      	strh	r1, [r0, #32]
90017960:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
90017964:	6483      	str	r3, [r0, #72]	@ 0x48
90017966:	bc30      	pop	{r4, r5}
90017968:	f7ee baea 	b.w	90005f40 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001796c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001796c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001796e:	4605      	mov	r5, r0
90017970:	4608      	mov	r0, r1
90017972:	b1f1      	cbz	r1, 900179b2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90017974:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
90017978:	460b      	mov	r3, r1
9001797a:	f101 0708 	add.w	r7, r1, #8
9001797e:	4622      	mov	r2, r4
90017980:	6818      	ldr	r0, [r3, #0]
90017982:	3308      	adds	r3, #8
90017984:	f853 1c04 	ldr.w	r1, [r3, #-4]
90017988:	4626      	mov	r6, r4
9001798a:	42bb      	cmp	r3, r7
9001798c:	c603      	stmia	r6!, {r0, r1}
9001798e:	4634      	mov	r4, r6
90017990:	d1f6      	bne.n	90017980 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90017992:	6818      	ldr	r0, [r3, #0]
90017994:	6030      	str	r0, [r6, #0]
90017996:	4610      	mov	r0, r2
90017998:	889b      	ldrh	r3, [r3, #4]
9001799a:	80b3      	strh	r3, [r6, #4]
9001799c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900179a0:	015b      	lsls	r3, r3, #5
900179a2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900179a6:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
900179aa:	430b      	orrs	r3, r1
900179ac:	425b      	negs	r3, r3
900179ae:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
900179b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

900179b4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
900179b4:	b538      	push	{r3, r4, r5, lr}
900179b6:	460c      	mov	r4, r1
900179b8:	6811      	ldr	r1, [r2, #0]
900179ba:	4610      	mov	r0, r2
900179bc:	68cd      	ldr	r5, [r1, #12]
900179be:	4619      	mov	r1, r3
900179c0:	47a8      	blx	r5
900179c2:	2800      	cmp	r0, #0
900179c4:	bf08      	it	eq
900179c6:	4620      	moveq	r0, r4
900179c8:	bd38      	pop	{r3, r4, r5, pc}
	...

900179cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
900179cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900179d0:	468c      	mov	ip, r1
900179d2:	4604      	mov	r4, r0
900179d4:	4615      	mov	r5, r2
900179d6:	b942      	cbnz	r2, 900179ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
900179d8:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
900179dc:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
900179e0:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
900179e4:	4628      	mov	r0, r5
900179e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900179ea:	7b50      	ldrb	r0, [r2, #13]
900179ec:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
900179f0:	8893      	ldrh	r3, [r2, #4]
900179f2:	0106      	lsls	r6, r0, #4
900179f4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
900179f8:	79ee      	ldrb	r6, [r5, #7]
900179fa:	4316      	orrs	r6, r2
900179fc:	185a      	adds	r2, r3, r1
900179fe:	b291      	uxth	r1, r2
90017a00:	b2b7      	uxth	r7, r6
90017a02:	291d      	cmp	r1, #29
90017a04:	d87f      	bhi.n	90017b06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90017a06:	2201      	movs	r2, #1
90017a08:	10f6      	asrs	r6, r6, #3
90017a0a:	408a      	lsls	r2, r1
90017a0c:	4974      	ldr	r1, [pc, #464]	@ (90017be0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90017a0e:	420a      	tst	r2, r1
90017a10:	d12e      	bne.n	90017a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90017a12:	f412 7f60 	tst.w	r2, #896	@ 0x380
90017a16:	d076      	beq.n	90017b06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90017a18:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
90017a1c:	462b      	mov	r3, r5
90017a1e:	f105 0e08 	add.w	lr, r5, #8
90017a22:	4615      	mov	r5, r2
90017a24:	6818      	ldr	r0, [r3, #0]
90017a26:	3308      	adds	r3, #8
90017a28:	f853 1c04 	ldr.w	r1, [r3, #-4]
90017a2c:	4694      	mov	ip, r2
90017a2e:	4573      	cmp	r3, lr
90017a30:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90017a34:	4662      	mov	r2, ip
90017a36:	d1f5      	bne.n	90017a24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90017a38:	6818      	ldr	r0, [r3, #0]
90017a3a:	f8cc 0000 	str.w	r0, [ip]
90017a3e:	889b      	ldrh	r3, [r3, #4]
90017a40:	f8ac 3004 	strh.w	r3, [ip, #4]
90017a44:	b2b3      	uxth	r3, r6
90017a46:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
90017a4a:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
90017a4e:	1aca      	subs	r2, r1, r3
90017a50:	1bcf      	subs	r7, r1, r7
90017a52:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
90017a56:	b292      	uxth	r2, r2
90017a58:	1afb      	subs	r3, r7, r3
90017a5a:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
90017a5e:	10d2      	asrs	r2, r2, #3
90017a60:	f002 0260 	and.w	r2, r2, #96	@ 0x60
90017a64:	4302      	orrs	r2, r0
90017a66:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
90017a6a:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90017a6e:	e7b9      	b.n	900179e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90017a70:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
90017a74:	462b      	mov	r3, r5
90017a76:	f105 0808 	add.w	r8, r5, #8
90017a7a:	4615      	mov	r5, r2
90017a7c:	6818      	ldr	r0, [r3, #0]
90017a7e:	3308      	adds	r3, #8
90017a80:	f853 1c04 	ldr.w	r1, [r3, #-4]
90017a84:	4696      	mov	lr, r2
90017a86:	4543      	cmp	r3, r8
90017a88:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90017a8c:	4672      	mov	r2, lr
90017a8e:	d1f5      	bne.n	90017a7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
90017a90:	6818      	ldr	r0, [r3, #0]
90017a92:	f8ce 0000 	str.w	r0, [lr]
90017a96:	889b      	ldrh	r3, [r3, #4]
90017a98:	f8ae 3004 	strh.w	r3, [lr, #4]
90017a9c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90017a9e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017aa2:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
90017aa4:	f640 6333 	movw	r3, #3635	@ 0xe33
90017aa8:	4299      	cmp	r1, r3
90017aaa:	d111      	bne.n	90017ad0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
90017aac:	f8dc 3000 	ldr.w	r3, [ip]
90017ab0:	4660      	mov	r0, ip
90017ab2:	68db      	ldr	r3, [r3, #12]
90017ab4:	4798      	blx	r3
90017ab6:	7b41      	ldrb	r1, [r0, #13]
90017ab8:	00cb      	lsls	r3, r1, #3
90017aba:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017abe:	7a03      	ldrb	r3, [r0, #8]
90017ac0:	4313      	orrs	r3, r2
90017ac2:	064a      	lsls	r2, r1, #25
90017ac4:	bf44      	itt	mi
90017ac6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017aca:	b21b      	sxthmi	r3, r3
90017acc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017ad0:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
90017ad4:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017ad8:	443b      	add	r3, r7
90017ada:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017ade:	4433      	add	r3, r6
90017ae0:	b29b      	uxth	r3, r3
90017ae2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017ae6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017aea:	10db      	asrs	r3, r3, #3
90017aec:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017af0:	4313      	orrs	r3, r2
90017af2:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
90017af6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017afa:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
90017afe:	1a9b      	subs	r3, r3, r2
90017b00:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
90017b04:	e76e      	b.n	900179e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90017b06:	f023 0204 	bic.w	r2, r3, #4
90017b0a:	f640 611b 	movw	r1, #3611	@ 0xe1b
90017b0e:	428a      	cmp	r2, r1
90017b10:	d003      	beq.n	90017b1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
90017b12:	f640 621d 	movw	r2, #3613	@ 0xe1d
90017b16:	4293      	cmp	r3, r2
90017b18:	d120      	bne.n	90017b5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x190>
90017b1a:	3b01      	subs	r3, #1
90017b1c:	4662      	mov	r2, ip
90017b1e:	4629      	mov	r1, r5
90017b20:	4620      	mov	r0, r4
90017b22:	b29b      	uxth	r3, r3
90017b24:	f7ff ff46 	bl	900179b4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90017b28:	7b41      	ldrb	r1, [r0, #13]
90017b2a:	00cb      	lsls	r3, r1, #3
90017b2c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017b30:	7a03      	ldrb	r3, [r0, #8]
90017b32:	0648      	lsls	r0, r1, #25
90017b34:	ea43 0302 	orr.w	r3, r3, r2
90017b38:	bf44      	itt	mi
90017b3a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017b3e:	b21b      	sxthmi	r3, r3
90017b40:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017b44:	7b6b      	ldrb	r3, [r5, #13]
90017b46:	7aaa      	ldrb	r2, [r5, #10]
90017b48:	005b      	lsls	r3, r3, #1
90017b4a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017b4e:	4313      	orrs	r3, r2
90017b50:	115a      	asrs	r2, r3, #5
90017b52:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90017b56:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90017b5a:	e032      	b.n	90017bc2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
90017b5c:	00c2      	lsls	r2, r0, #3
90017b5e:	f402 7180 	and.w	r1, r2, #256	@ 0x100
90017b62:	7a2a      	ldrb	r2, [r5, #8]
90017b64:	430a      	orrs	r2, r1
90017b66:	0641      	lsls	r1, r0, #25
90017b68:	f640 6109 	movw	r1, #3593	@ 0xe09
90017b6c:	bf44      	itt	mi
90017b6e:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
90017b72:	b212      	sxthmi	r2, r2
90017b74:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
90017b78:	f023 0210 	bic.w	r2, r3, #16
90017b7c:	428a      	cmp	r2, r1
90017b7e:	d003      	beq.n	90017b88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
90017b80:	f640 6213 	movw	r2, #3603	@ 0xe13
90017b84:	4293      	cmp	r3, r2
90017b86:	d129      	bne.n	90017bdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>
90017b88:	7b6e      	ldrb	r6, [r5, #13]
90017b8a:	4629      	mov	r1, r5
90017b8c:	4620      	mov	r0, r4
90017b8e:	0076      	lsls	r6, r6, #1
90017b90:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90017b94:	7aae      	ldrb	r6, [r5, #10]
90017b96:	4316      	orrs	r6, r2
90017b98:	f640 6213 	movw	r2, #3603	@ 0xe13
90017b9c:	4293      	cmp	r3, r2
90017b9e:	4662      	mov	r2, ip
90017ba0:	bf16      	itet	ne
90017ba2:	f103 33ff 	addne.w	r3, r3, #4294967295
90017ba6:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90017baa:	b29b      	uxthne	r3, r3
90017bac:	f7ff ff02 	bl	900179b4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90017bb0:	7b43      	ldrb	r3, [r0, #13]
90017bb2:	7a82      	ldrb	r2, [r0, #10]
90017bb4:	005b      	lsls	r3, r3, #1
90017bb6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017bba:	4313      	orrs	r3, r2
90017bbc:	1af6      	subs	r6, r6, r3
90017bbe:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
90017bc2:	7b69      	ldrb	r1, [r5, #13]
90017bc4:	00cb      	lsls	r3, r1, #3
90017bc6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017bca:	7a2b      	ldrb	r3, [r5, #8]
90017bcc:	4313      	orrs	r3, r2
90017bce:	064a      	lsls	r2, r1, #25
90017bd0:	bf44      	itt	mi
90017bd2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017bd6:	b21b      	sxthmi	r3, r3
90017bd8:	1bdb      	subs	r3, r3, r7
90017bda:	e746      	b.n	90017a6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90017bdc:	2300      	movs	r3, #0
90017bde:	e7ba      	b.n	90017b56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18a>
90017be0:	3fc00079 	.word	0x3fc00079

90017be4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90017be4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017be8:	4604      	mov	r4, r0
90017bea:	b942      	cbnz	r2, 90017bfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90017bec:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90017bf0:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
90017bf4:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90017bf8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90017bfc:	e047      	b.n	90017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90017bfe:	7b51      	ldrb	r1, [r2, #13]
90017c00:	8893      	ldrh	r3, [r2, #4]
90017c02:	010d      	lsls	r5, r1, #4
90017c04:	f405 7080 	and.w	r0, r5, #256	@ 0x100
90017c08:	79d5      	ldrb	r5, [r2, #7]
90017c0a:	4305      	orrs	r5, r0
90017c0c:	2d04      	cmp	r5, #4
90017c0e:	bfcc      	ite	gt
90017c10:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90017c14:	f04f 0e01 	movle.w	lr, #1
90017c18:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
90017c1c:	f200 80ab 	bhi.w	90017d76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90017c20:	f240 60e7 	movw	r0, #1767	@ 0x6e7
90017c24:	4283      	cmp	r3, r0
90017c26:	d216      	bcs.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017c28:	f240 605b 	movw	r0, #1627	@ 0x65b
90017c2c:	4283      	cmp	r3, r0
90017c2e:	d859      	bhi.n	90017ce4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90017c30:	f240 6057 	movw	r0, #1623	@ 0x657
90017c34:	4283      	cmp	r3, r0
90017c36:	d20e      	bcs.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017c38:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90017c3c:	d24a      	bcs.n	90017cd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90017c3e:	f240 604e 	movw	r0, #1614	@ 0x64e
90017c42:	4283      	cmp	r3, r0
90017c44:	d207      	bcs.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017c46:	f240 601a 	movw	r0, #1562	@ 0x61a
90017c4a:	4283      	cmp	r3, r0
90017c4c:	d02a      	beq.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017c4e:	d821      	bhi.n	90017c94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90017c50:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
90017c54:	d35b      	bcc.n	90017d0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017c56:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
90017c5a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017c5e:	f040 80d0 	bne.w	90017e02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90017c62:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
90017c66:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017c6a:	f040 80ca 	bne.w	90017e02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90017c6e:	00cb      	lsls	r3, r1, #3
90017c70:	0649      	lsls	r1, r1, #25
90017c72:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90017c76:	7a13      	ldrb	r3, [r2, #8]
90017c78:	ea43 0300 	orr.w	r3, r3, r0
90017c7c:	bf44      	itt	mi
90017c7e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017c82:	b21b      	sxthmi	r3, r3
90017c84:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017c88:	1b5d      	subs	r5, r3, r5
90017c8a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017c8e:	4610      	mov	r0, r2
90017c90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90017c94:	f240 604b 	movw	r0, #1611	@ 0x64b
90017c98:	4283      	cmp	r3, r0
90017c9a:	d338      	bcc.n	90017d0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017c9c:	f240 604c 	movw	r0, #1612	@ 0x64c
90017ca0:	4283      	cmp	r3, r0
90017ca2:	d9d8      	bls.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017ca4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
90017ca8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
90017cac:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017cb0:	f040 80f3 	bne.w	90017e9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90017cb4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017cb8:	f040 80ef 	bne.w	90017e9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90017cbc:	00cb      	lsls	r3, r1, #3
90017cbe:	064e      	lsls	r6, r1, #25
90017cc0:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90017cc4:	7a13      	ldrb	r3, [r2, #8]
90017cc6:	ea43 0300 	orr.w	r3, r3, r0
90017cca:	bf44      	itt	mi
90017ccc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017cd0:	b21b      	sxthmi	r3, r3
90017cd2:	e7d9      	b.n	90017c88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90017cd4:	f240 6054 	movw	r0, #1620	@ 0x654
90017cd8:	4283      	cmp	r3, r0
90017cda:	d8e3      	bhi.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017cdc:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90017ce0:	d9e0      	bls.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017ce2:	e7b8      	b.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017ce4:	f240 6074 	movw	r0, #1652	@ 0x674
90017ce8:	4283      	cmp	r3, r0
90017cea:	d0b4      	beq.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017cec:	d82d      	bhi.n	90017d4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90017cee:	f240 605e 	movw	r0, #1630	@ 0x65e
90017cf2:	4283      	cmp	r3, r0
90017cf4:	d804      	bhi.n	90017d00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90017cf6:	f240 605d 	movw	r0, #1629	@ 0x65d
90017cfa:	4283      	cmp	r3, r0
90017cfc:	d3d2      	bcc.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017cfe:	e7aa      	b.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017d00:	f240 605f 	movw	r0, #1631	@ 0x65f
90017d04:	4283      	cmp	r3, r0
90017d06:	d0cd      	beq.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017d08:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90017d0c:	d0a3      	beq.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017d0e:	00cb      	lsls	r3, r1, #3
90017d10:	0649      	lsls	r1, r1, #25
90017d12:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90017d16:	7a13      	ldrb	r3, [r2, #8]
90017d18:	ea43 0300 	orr.w	r3, r3, r0
90017d1c:	bf44      	itt	mi
90017d1e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017d22:	b21b      	sxthmi	r3, r3
90017d24:	1b5d      	subs	r5, r3, r5
90017d26:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017d2a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017d2e:	7b53      	ldrb	r3, [r2, #13]
90017d30:	015b      	lsls	r3, r3, #5
90017d32:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90017d36:	7993      	ldrb	r3, [r2, #6]
90017d38:	430b      	orrs	r3, r1
90017d3a:	2105      	movs	r1, #5
90017d3c:	005b      	lsls	r3, r3, #1
90017d3e:	fb93 f3f1 	sdiv	r3, r3, r1
90017d42:	f992 1009 	ldrsb.w	r1, [r2, #9]
90017d46:	440b      	add	r3, r1
90017d48:	e756      	b.n	90017bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90017d4a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
90017d4e:	4283      	cmp	r3, r0
90017d50:	d809      	bhi.n	90017d66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90017d52:	f240 60df 	movw	r0, #1759	@ 0x6df
90017d56:	4283      	cmp	r3, r0
90017d58:	f4bf af7d 	bcs.w	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017d5c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
90017d60:	2b05      	cmp	r3, #5
90017d62:	d8d4      	bhi.n	90017d0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017d64:	e777      	b.n	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017d66:	f240 60e3 	movw	r0, #1763	@ 0x6e3
90017d6a:	4283      	cmp	r3, r0
90017d6c:	d09a      	beq.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017d6e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
90017d72:	4283      	cmp	r3, r0
90017d74:	e7ca      	b.n	90017d0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90017d76:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90017d7a:	d22b      	bcs.n	90017dd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90017d7c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
90017d80:	4283      	cmp	r3, r0
90017d82:	d28f      	bcs.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017d84:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90017d88:	4283      	cmp	r3, r0
90017d8a:	d816      	bhi.n	90017dba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90017d8c:	f640 00e4 	movw	r0, #2276	@ 0x8e4
90017d90:	4283      	cmp	r3, r0
90017d92:	f4bf af60 	bcs.w	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017d96:	f240 60ec 	movw	r0, #1772	@ 0x6ec
90017d9a:	4283      	cmp	r3, r0
90017d9c:	d80a      	bhi.n	90017db4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90017d9e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
90017da2:	4283      	cmp	r3, r0
90017da4:	f4bf af57 	bcs.w	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017da8:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90017dac:	4283      	cmp	r3, r0
90017dae:	f43f af79 	beq.w	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017db2:	e7ac      	b.n	90017d0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017db4:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90017db8:	e7f8      	b.n	90017dac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90017dba:	f640 00e8 	movw	r0, #2280	@ 0x8e8
90017dbe:	4283      	cmp	r3, r0
90017dc0:	d802      	bhi.n	90017dc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90017dc2:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90017dc6:	e798      	b.n	90017cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90017dc8:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90017dcc:	4283      	cmp	r3, r0
90017dce:	f47f af42 	bne.w	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017dd2:	e767      	b.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017dd4:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90017dd8:	4283      	cmp	r3, r0
90017dda:	f43f af63 	beq.w	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017dde:	d802      	bhi.n	90017de6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90017de0:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90017de4:	e7f2      	b.n	90017dcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90017de6:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90017dea:	4283      	cmp	r3, r0
90017dec:	d805      	bhi.n	90017dfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90017dee:	f640 00f9 	movw	r0, #2297	@ 0x8f9
90017df2:	4283      	cmp	r3, r0
90017df4:	f4ff af2f 	bcc.w	90017c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017df8:	e754      	b.n	90017ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017dfa:	f640 00fe 	movw	r0, #2302	@ 0x8fe
90017dfe:	4283      	cmp	r3, r0
90017e00:	e7af      	b.n	90017d62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90017e02:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90017e06:	4617      	mov	r7, r2
90017e08:	f102 0808 	add.w	r8, r2, #8
90017e0c:	4666      	mov	r6, ip
90017e0e:	6838      	ldr	r0, [r7, #0]
90017e10:	3708      	adds	r7, #8
90017e12:	f857 1c04 	ldr.w	r1, [r7, #-4]
90017e16:	46e6      	mov	lr, ip
90017e18:	4547      	cmp	r7, r8
90017e1a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90017e1e:	46f4      	mov	ip, lr
90017e20:	d1f5      	bne.n	90017e0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90017e22:	6838      	ldr	r0, [r7, #0]
90017e24:	f8ce 0000 	str.w	r0, [lr]
90017e28:	88b9      	ldrh	r1, [r7, #4]
90017e2a:	f8ae 1004 	strh.w	r1, [lr, #4]
90017e2e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90017e32:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017e36:	d009      	beq.n	90017e4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90017e38:	7b51      	ldrb	r1, [r2, #13]
90017e3a:	7992      	ldrb	r2, [r2, #6]
90017e3c:	0149      	lsls	r1, r1, #5
90017e3e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017e42:	4311      	orrs	r1, r2
90017e44:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90017e48:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90017e4c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017e50:	b2ad      	uxth	r5, r5
90017e52:	d00d      	beq.n	90017e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90017e54:	442b      	add	r3, r5
90017e56:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017e5a:	b29b      	uxth	r3, r3
90017e5c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017e60:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017e64:	10db      	asrs	r3, r3, #3
90017e66:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017e6a:	4313      	orrs	r3, r2
90017e6c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017e70:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90017e74:	00cb      	lsls	r3, r1, #3
90017e76:	064f      	lsls	r7, r1, #25
90017e78:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017e7c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90017e80:	ea43 0302 	orr.w	r3, r3, r2
90017e84:	bf44      	itt	mi
90017e86:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017e8a:	b21b      	sxthmi	r3, r3
90017e8c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017e90:	1b5b      	subs	r3, r3, r5
90017e92:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90017e96:	4632      	mov	r2, r6
90017e98:	e6f9      	b.n	90017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90017e9a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90017e9e:	4617      	mov	r7, r2
90017ea0:	f102 0908 	add.w	r9, r2, #8
90017ea4:	4666      	mov	r6, ip
90017ea6:	6838      	ldr	r0, [r7, #0]
90017ea8:	3708      	adds	r7, #8
90017eaa:	f857 1c04 	ldr.w	r1, [r7, #-4]
90017eae:	46e0      	mov	r8, ip
90017eb0:	454f      	cmp	r7, r9
90017eb2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90017eb6:	46c4      	mov	ip, r8
90017eb8:	d1f5      	bne.n	90017ea6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90017eba:	6838      	ldr	r0, [r7, #0]
90017ebc:	f8c8 0000 	str.w	r0, [r8]
90017ec0:	88b9      	ldrh	r1, [r7, #4]
90017ec2:	f8a8 1004 	strh.w	r1, [r8, #4]
90017ec6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90017eca:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017ece:	d009      	beq.n	90017ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90017ed0:	7b51      	ldrb	r1, [r2, #13]
90017ed2:	7992      	ldrb	r2, [r2, #6]
90017ed4:	0149      	lsls	r1, r1, #5
90017ed6:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017eda:	4311      	orrs	r1, r2
90017edc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90017ee0:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90017ee4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017ee8:	d00e      	beq.n	90017f08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90017eea:	eba3 030e 	sub.w	r3, r3, lr
90017eee:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017ef2:	b29b      	uxth	r3, r3
90017ef4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017ef8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017efc:	10db      	asrs	r3, r3, #3
90017efe:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017f02:	4313      	orrs	r3, r2
90017f04:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017f08:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90017f0c:	00cb      	lsls	r3, r1, #3
90017f0e:	0648      	lsls	r0, r1, #25
90017f10:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017f14:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90017f18:	ea43 0302 	orr.w	r3, r3, r2
90017f1c:	bf44      	itt	mi
90017f1e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017f22:	b21b      	sxthmi	r3, r3
90017f24:	1b5d      	subs	r5, r3, r5
90017f26:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017f2a:	e7b4      	b.n	90017e96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90017f2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90017f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017f30:	461e      	mov	r6, r3
90017f32:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017f34:	4604      	mov	r4, r0
90017f36:	4617      	mov	r7, r2
90017f38:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017f3c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017f40:	f7ed ffae 	bl	90005ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017f44:	4605      	mov	r5, r0
90017f46:	b918      	cbnz	r0, 90017f50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90017f48:	6030      	str	r0, [r6, #0]
90017f4a:	4628      	mov	r0, r5
90017f4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017f50:	683b      	ldr	r3, [r7, #0]
90017f52:	4601      	mov	r1, r0
90017f54:	4638      	mov	r0, r7
90017f56:	68db      	ldr	r3, [r3, #12]
90017f58:	4798      	blx	r3
90017f5a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90017f5e:	4602      	mov	r2, r0
90017f60:	6030      	str	r0, [r6, #0]
90017f62:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90017f66:	d213      	bcs.n	90017f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90017f68:	4643      	mov	r3, r8
90017f6a:	4639      	mov	r1, r7
90017f6c:	4620      	mov	r0, r4
90017f6e:	f7ff fe39 	bl	90017be4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017f72:	6030      	str	r0, [r6, #0]
90017f74:	6833      	ldr	r3, [r6, #0]
90017f76:	b143      	cbz	r3, 90017f8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90017f78:	7b5a      	ldrb	r2, [r3, #13]
90017f7a:	7a9b      	ldrb	r3, [r3, #10]
90017f7c:	0052      	lsls	r2, r2, #1
90017f7e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90017f82:	4313      	orrs	r3, r2
90017f84:	bf0c      	ite	eq
90017f86:	2301      	moveq	r3, #1
90017f88:	2300      	movne	r3, #0
90017f8a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90017f8e:	e7dc      	b.n	90017f4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90017f90:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90017f94:	b29b      	uxth	r3, r3
90017f96:	2b7f      	cmp	r3, #127	@ 0x7f
90017f98:	d804      	bhi.n	90017fa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90017f9a:	4639      	mov	r1, r7
90017f9c:	4620      	mov	r0, r4
90017f9e:	f7ff fd15 	bl	900179cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90017fa2:	e7e6      	b.n	90017f72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90017fa4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90017fa8:	2b00      	cmp	r3, #0
90017faa:	d0e3      	beq.n	90017f74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017fac:	f640 1302 	movw	r3, #2306	@ 0x902
90017fb0:	429d      	cmp	r5, r3
90017fb2:	d1df      	bne.n	90017f74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017fb4:	4601      	mov	r1, r0
90017fb6:	4620      	mov	r0, r4
90017fb8:	f7ff fcd8 	bl	9001796c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017fbc:	e7d9      	b.n	90017f72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90017fbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90017fbe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90017fc2:	461e      	mov	r6, r3
90017fc4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017fc6:	4604      	mov	r4, r0
90017fc8:	4617      	mov	r7, r2
90017fca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017fce:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017fd2:	f7ed ff65 	bl	90005ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017fd6:	4605      	mov	r5, r0
90017fd8:	b918      	cbnz	r0, 90017fe2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90017fda:	6030      	str	r0, [r6, #0]
90017fdc:	4628      	mov	r0, r5
90017fde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90017fe2:	683b      	ldr	r3, [r7, #0]
90017fe4:	4601      	mov	r1, r0
90017fe6:	4638      	mov	r0, r7
90017fe8:	f8d3 9008 	ldr.w	r9, [r3, #8]
90017fec:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90017ff0:	47c8      	blx	r9
90017ff2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90017ff6:	4602      	mov	r2, r0
90017ff8:	6030      	str	r0, [r6, #0]
90017ffa:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90017ffe:	d213      	bcs.n	90018028 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90018000:	4643      	mov	r3, r8
90018002:	4639      	mov	r1, r7
90018004:	4620      	mov	r0, r4
90018006:	f7ff fded 	bl	90017be4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001800a:	6030      	str	r0, [r6, #0]
9001800c:	6833      	ldr	r3, [r6, #0]
9001800e:	b143      	cbz	r3, 90018022 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90018010:	7b5a      	ldrb	r2, [r3, #13]
90018012:	7a9b      	ldrb	r3, [r3, #10]
90018014:	0052      	lsls	r2, r2, #1
90018016:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001801a:	4313      	orrs	r3, r2
9001801c:	bf0c      	ite	eq
9001801e:	2301      	moveq	r3, #1
90018020:	2300      	movne	r3, #0
90018022:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90018026:	e7d9      	b.n	90017fdc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90018028:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001802c:	b29b      	uxth	r3, r3
9001802e:	2b7f      	cmp	r3, #127	@ 0x7f
90018030:	d804      	bhi.n	9001803c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90018032:	4639      	mov	r1, r7
90018034:	4620      	mov	r0, r4
90018036:	f7ff fcc9 	bl	900179cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001803a:	e7e6      	b.n	9001800a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001803c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90018040:	2b00      	cmp	r3, #0
90018042:	d0e3      	beq.n	9001800c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018044:	f640 1302 	movw	r3, #2306	@ 0x902
90018048:	429d      	cmp	r5, r3
9001804a:	d1df      	bne.n	9001800c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001804c:	4601      	mov	r1, r0
9001804e:	4620      	mov	r0, r4
90018050:	f7ff fc8c 	bl	9001796c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018054:	e7d9      	b.n	9001800a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90018056 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90018056:	b510      	push	{r4, lr}
90018058:	4604      	mov	r4, r0
9001805a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001805e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90018060:	b1e1      	cbz	r1, 9001809c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018062:	2b0a      	cmp	r3, #10
90018064:	d02d      	beq.n	900180c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90018066:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90018068:	3901      	subs	r1, #1
9001806a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001806e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90018070:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90018074:	1c51      	adds	r1, r2, #1
90018076:	b289      	uxth	r1, r1
90018078:	2901      	cmp	r1, #1
9001807a:	bf8a      	itet	hi
9001807c:	f102 32ff 	addhi.w	r2, r2, #4294967295
90018080:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90018082:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90018084:	1c5a      	adds	r2, r3, #1
90018086:	8722      	strh	r2, [r4, #56]	@ 0x38
90018088:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001808a:	4413      	add	r3, r2
9001808c:	b29b      	uxth	r3, r3
9001808e:	2b09      	cmp	r3, #9
90018090:	bf88      	it	hi
90018092:	3b0a      	subhi	r3, #10
90018094:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018098:	8458      	strh	r0, [r3, #34]	@ 0x22
9001809a:	e7de      	b.n	9001805a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001809c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001809e:	2b0a      	cmp	r3, #10
900180a0:	d00f      	beq.n	900180c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
900180a2:	4620      	mov	r0, r4
900180a4:	f7ff fc21 	bl	900178ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
900180a8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
900180aa:	1c5a      	adds	r2, r3, #1
900180ac:	8722      	strh	r2, [r4, #56]	@ 0x38
900180ae:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
900180b0:	4413      	add	r3, r2
900180b2:	b29b      	uxth	r3, r3
900180b4:	2b09      	cmp	r3, #9
900180b6:	bf88      	it	hi
900180b8:	3b0a      	subhi	r3, #10
900180ba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900180be:	8458      	strh	r0, [r3, #34]	@ 0x22
900180c0:	e7ec      	b.n	9001809c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
900180c2:	bd10      	pop	{r4, pc}

900180c4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
900180c4:	b538      	push	{r3, r4, r5, lr}
900180c6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
900180c8:	4604      	mov	r4, r0
900180ca:	eb00 0243 	add.w	r2, r0, r3, lsl #1
900180ce:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
900180d0:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
900180d2:	3a01      	subs	r2, #1
900180d4:	8702      	strh	r2, [r0, #56]	@ 0x38
900180d6:	1c5a      	adds	r2, r3, #1
900180d8:	b292      	uxth	r2, r2
900180da:	2a09      	cmp	r2, #9
900180dc:	bf8a      	itet	hi
900180de:	3b09      	subhi	r3, #9
900180e0:	86c2      	strhls	r2, [r0, #54]	@ 0x36
900180e2:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
900180e4:	f7ff ffb7 	bl	90018056 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
900180e8:	8c23      	ldrh	r3, [r4, #32]
900180ea:	2b01      	cmp	r3, #1
900180ec:	bf9c      	itt	ls
900180ee:	3301      	addls	r3, #1
900180f0:	8423      	strhls	r3, [r4, #32]
900180f2:	8be3      	ldrh	r3, [r4, #30]
900180f4:	b90b      	cbnz	r3, 900180fa <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
900180f6:	2302      	movs	r3, #2
900180f8:	83e3      	strh	r3, [r4, #30]
900180fa:	8be3      	ldrh	r3, [r4, #30]
900180fc:	4628      	mov	r0, r5
900180fe:	3b01      	subs	r3, #1
90018100:	b29b      	uxth	r3, r3
90018102:	83e3      	strh	r3, [r4, #30]
90018104:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018108:	8365      	strh	r5, [r4, #26]
9001810a:	bd38      	pop	{r3, r4, r5, pc}

9001810c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001810c:	428a      	cmp	r2, r1
9001810e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018112:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90018114:	d932      	bls.n	9001817c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90018116:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90018118:	1a54      	subs	r4, r2, r1
9001811a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001811e:	19ee      	adds	r6, r5, r7
90018120:	fa1f fe84 	uxth.w	lr, r4
90018124:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90018128:	3e01      	subs	r6, #1
9001812a:	b2b4      	uxth	r4, r6
9001812c:	eba4 090e 	sub.w	r9, r4, lr
90018130:	fa1f f989 	uxth.w	r9, r9
90018134:	2c09      	cmp	r4, #9
90018136:	4626      	mov	r6, r4
90018138:	bf88      	it	hi
9001813a:	f1a4 060a 	subhi.w	r6, r4, #10
9001813e:	f1bc 0f00 	cmp.w	ip, #0
90018142:	f104 34ff 	add.w	r4, r4, #4294967295
90018146:	bf08      	it	eq
90018148:	f04f 0c02 	moveq.w	ip, #2
9001814c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90018150:	b2a4      	uxth	r4, r4
90018152:	f10c 3cff 	add.w	ip, ip, #4294967295
90018156:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
9001815a:	454c      	cmp	r4, r9
9001815c:	fa1f fc8c 	uxth.w	ip, ip
90018160:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90018164:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90018168:	d1e4      	bne.n	90018134 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001816a:	eba5 050e 	sub.w	r5, r5, lr
9001816e:	eb0e 0408 	add.w	r4, lr, r8
90018172:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90018176:	8705      	strh	r5, [r0, #56]	@ 0x38
90018178:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
9001817c:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
9001817e:	250a      	movs	r5, #10
90018180:	1a64      	subs	r4, r4, r1
90018182:	4439      	add	r1, r7
90018184:	b289      	uxth	r1, r1
90018186:	8704      	strh	r4, [r0, #56]	@ 0x38
90018188:	2909      	cmp	r1, #9
9001818a:	bf88      	it	hi
9001818c:	390a      	subhi	r1, #10
9001818e:	86c1      	strh	r1, [r0, #54]	@ 0x36
90018190:	b18a      	cbz	r2, 900181b6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90018192:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90018194:	3a01      	subs	r2, #1
90018196:	3101      	adds	r1, #1
90018198:	b292      	uxth	r2, r2
9001819a:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001819e:	8701      	strh	r1, [r0, #56]	@ 0x38
900181a0:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
900181a2:	b901      	cbnz	r1, 900181a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
900181a4:	86c5      	strh	r5, [r0, #54]	@ 0x36
900181a6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
900181a8:	3901      	subs	r1, #1
900181aa:	b289      	uxth	r1, r1
900181ac:	86c1      	strh	r1, [r0, #54]	@ 0x36
900181ae:	eb00 0141 	add.w	r1, r0, r1, lsl #1
900181b2:	844c      	strh	r4, [r1, #34]	@ 0x22
900181b4:	e7ec      	b.n	90018190 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
900181b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900181ba:	f7ff bf4c 	b.w	90018056 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900181be <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
900181be:	b570      	push	{r4, r5, r6, lr}
900181c0:	2500      	movs	r5, #0
900181c2:	4295      	cmp	r5, r2
900181c4:	d011      	beq.n	900181ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
900181c6:	8bc4      	ldrh	r4, [r0, #30]
900181c8:	f831 6b02 	ldrh.w	r6, [r1], #2
900181cc:	4414      	add	r4, r2
900181ce:	3c01      	subs	r4, #1
900181d0:	1b64      	subs	r4, r4, r5
900181d2:	b2a4      	uxth	r4, r4
900181d4:	2c01      	cmp	r4, #1
900181d6:	bf88      	it	hi
900181d8:	3c02      	subhi	r4, #2
900181da:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900181de:	8b64      	ldrh	r4, [r4, #26]
900181e0:	42b4      	cmp	r4, r6
900181e2:	d117      	bne.n	90018214 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
900181e4:	3501      	adds	r5, #1
900181e6:	b2ad      	uxth	r5, r5
900181e8:	e7eb      	b.n	900181c2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
900181ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900181ee:	2400      	movs	r4, #0
900181f0:	4413      	add	r3, r2
900181f2:	b2a2      	uxth	r2, r4
900181f4:	429a      	cmp	r2, r3
900181f6:	da0f      	bge.n	90018218 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
900181f8:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
900181fa:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
900181fe:	3401      	adds	r4, #1
90018200:	4432      	add	r2, r6
90018202:	b292      	uxth	r2, r2
90018204:	2a09      	cmp	r2, #9
90018206:	bf88      	it	hi
90018208:	3a0a      	subhi	r2, #10
9001820a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001820e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
90018210:	42aa      	cmp	r2, r5
90018212:	d0ee      	beq.n	900181f2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90018214:	2000      	movs	r0, #0
90018216:	bd70      	pop	{r4, r5, r6, pc}
90018218:	2001      	movs	r0, #1
9001821a:	e7fc      	b.n	90018216 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001821c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001821c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018220:	4605      	mov	r5, r0
90018222:	4616      	mov	r6, r2
90018224:	1c8c      	adds	r4, r1, #2
90018226:	8809      	ldrh	r1, [r1, #0]
90018228:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001822c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90018230:	42b3      	cmp	r3, r6
90018232:	d124      	bne.n	9001827e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90018234:	f3c1 2903 	ubfx	r9, r1, #8, #4
90018238:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001823c:	f001 070f 	and.w	r7, r1, #15
90018240:	4652      	mov	r2, sl
90018242:	f8cd 8000 	str.w	r8, [sp]
90018246:	464b      	mov	r3, r9
90018248:	4621      	mov	r1, r4
9001824a:	4628      	mov	r0, r5
9001824c:	f7ff ffb7 	bl	900181be <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90018250:	4683      	mov	fp, r0
90018252:	b168      	cbz	r0, 90018270 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90018254:	eb0a 0109 	add.w	r1, sl, r9
90018258:	463a      	mov	r2, r7
9001825a:	4628      	mov	r0, r5
9001825c:	4441      	add	r1, r8
9001825e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90018262:	4649      	mov	r1, r9
90018264:	f7ff ff52 	bl	9001810c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90018268:	4658      	mov	r0, fp
9001826a:	b003      	add	sp, #12
9001826c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018270:	eb07 010a 	add.w	r1, r7, sl
90018274:	4449      	add	r1, r9
90018276:	4441      	add	r1, r8
90018278:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001827c:	e7d2      	b.n	90018224 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001827e:	f04f 0b00 	mov.w	fp, #0
90018282:	e7f1      	b.n	90018268 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90018284 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90018284:	b570      	push	{r4, r5, r6, lr}
90018286:	8810      	ldrh	r0, [r2, #0]
90018288:	4298      	cmp	r0, r3
9001828a:	d817      	bhi.n	900182bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001828c:	1e48      	subs	r0, r1, #1
9001828e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90018292:	4298      	cmp	r0, r3
90018294:	d312      	bcc.n	900182bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018296:	2400      	movs	r4, #0
90018298:	428c      	cmp	r4, r1
9001829a:	d20f      	bcs.n	900182bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001829c:	1860      	adds	r0, r4, r1
9001829e:	1040      	asrs	r0, r0, #1
900182a0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
900182a4:	0085      	lsls	r5, r0, #2
900182a6:	42b3      	cmp	r3, r6
900182a8:	d902      	bls.n	900182b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
900182aa:	3001      	adds	r0, #1
900182ac:	b284      	uxth	r4, r0
900182ae:	e7f3      	b.n	90018298 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
900182b0:	d201      	bcs.n	900182b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
900182b2:	b281      	uxth	r1, r0
900182b4:	e7f0      	b.n	90018298 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
900182b6:	442a      	add	r2, r5
900182b8:	8850      	ldrh	r0, [r2, #2]
900182ba:	bd70      	pop	{r4, r5, r6, pc}
900182bc:	2000      	movs	r0, #0
900182be:	e7fc      	b.n	900182ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

900182c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
900182c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900182c4:	6c45      	ldr	r5, [r0, #68]	@ 0x44
900182c6:	4604      	mov	r4, r0
900182c8:	260b      	movs	r6, #11
900182ca:	886f      	ldrh	r7, [r5, #2]
900182cc:	087f      	lsrs	r7, r7, #1
900182ce:	3e01      	subs	r6, #1
900182d0:	d013      	beq.n	900182fa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
900182d2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
900182d4:	462a      	mov	r2, r5
900182d6:	4639      	mov	r1, r7
900182d8:	4620      	mov	r0, r4
900182da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900182de:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
900182e2:	4643      	mov	r3, r8
900182e4:	f7ff ffce 	bl	90018284 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
900182e8:	b138      	cbz	r0, 900182fa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
900182ea:	eb05 0140 	add.w	r1, r5, r0, lsl #1
900182ee:	4642      	mov	r2, r8
900182f0:	4620      	mov	r0, r4
900182f2:	f7ff ff93 	bl	9001821c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
900182f6:	2800      	cmp	r0, #0
900182f8:	d1e9      	bne.n	900182ce <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
900182fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90018300 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90018300:	b570      	push	{r4, r5, r6, lr}
90018302:	694a      	ldr	r2, [r1, #20]
90018304:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90018306:	684b      	ldr	r3, [r1, #4]
90018308:	1b54      	subs	r4, r2, r5
9001830a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001830c:	f000 8106 	beq.w	9001851c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90018310:	1b9b      	subs	r3, r3, r6
90018312:	d003      	beq.n	9001831c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018314:	4363      	muls	r3, r4
90018316:	2210      	movs	r2, #16
90018318:	fb93 f3f2 	sdiv	r3, r3, r2
9001831c:	680c      	ldr	r4, [r1, #0]
9001831e:	698a      	ldr	r2, [r1, #24]
90018320:	1b65      	subs	r5, r4, r5
90018322:	f000 80fd 	beq.w	90018520 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90018326:	1b92      	subs	r2, r2, r6
90018328:	d003      	beq.n	90018332 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001832a:	436a      	muls	r2, r5
9001832c:	2410      	movs	r4, #16
9001832e:	fb92 f2f4 	sdiv	r2, r2, r4
90018332:	1a9b      	subs	r3, r3, r2
90018334:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001855c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90018338:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001833c:	460a      	mov	r2, r1
9001833e:	ee07 3a90 	vmov	s15, r3
90018342:	f100 040c 	add.w	r4, r0, #12
90018346:	4603      	mov	r3, r0
90018348:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001834c:	ee67 7a84 	vmul.f32	s15, s15, s8
90018350:	ee87 3a27 	vdiv.f32	s6, s14, s15
90018354:	eeb1 6a43 	vneg.f32	s12, s6
90018358:	edd2 7a02 	vldr	s15, [r2, #8]
9001835c:	3214      	adds	r2, #20
9001835e:	eec7 6a27 	vdiv.f32	s13, s14, s15
90018362:	ece3 6a01 	vstmia	r3!, {s13}
90018366:	429c      	cmp	r4, r3
90018368:	ed52 7a02 	vldr	s15, [r2, #-8]
9001836c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018370:	edc3 7a02 	vstr	s15, [r3, #8]
90018374:	ed52 7a01 	vldr	s15, [r2, #-4]
90018378:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001837c:	edc3 7a05 	vstr	s15, [r3, #20]
90018380:	d1ea      	bne.n	90018358 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90018382:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90018384:	698b      	ldr	r3, [r1, #24]
90018386:	edd0 4a02 	vldr	s9, [r0, #8]
9001838a:	1a9b      	subs	r3, r3, r2
9001838c:	edd0 3a00 	vldr	s7, [r0]
90018390:	edd0 6a01 	vldr	s13, [r0, #4]
90018394:	ee07 3a90 	vmov	s15, r3
90018398:	684b      	ldr	r3, [r1, #4]
9001839a:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001839e:	ed90 5a05 	vldr	s10, [r0, #20]
900183a2:	1a9b      	subs	r3, r3, r2
900183a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900183a8:	ee73 4ae4 	vsub.f32	s9, s7, s9
900183ac:	ed90 2a03 	vldr	s4, [r0, #12]
900183b0:	ee07 3a10 	vmov	s14, r3
900183b4:	edd0 5a04 	vldr	s11, [r0, #16]
900183b8:	ee67 7a84 	vmul.f32	s15, s15, s8
900183bc:	ed90 1a07 	vldr	s2, [r0, #28]
900183c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900183c4:	edd0 2a06 	vldr	s5, [r0, #24]
900183c8:	ee75 5ac5 	vsub.f32	s11, s11, s10
900183cc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
900183d0:	ee27 7a04 	vmul.f32	s14, s14, s8
900183d4:	ee32 5a45 	vsub.f32	s10, s4, s10
900183d8:	eee6 7a87 	vfma.f32	s15, s13, s14
900183dc:	ee67 7a83 	vmul.f32	s15, s15, s6
900183e0:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
900183e4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
900183e6:	694a      	ldr	r2, [r1, #20]
900183e8:	1b13      	subs	r3, r2, r4
900183ea:	ee07 3a10 	vmov	s14, r3
900183ee:	680b      	ldr	r3, [r1, #0]
900183f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900183f4:	1b1b      	subs	r3, r3, r4
900183f6:	ee27 7a04 	vmul.f32	s14, s14, s8
900183fa:	ee64 4ac7 	vnmul.f32	s9, s9, s14
900183fe:	ee07 3a10 	vmov	s14, r3
90018402:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018406:	ee27 7a04 	vmul.f32	s14, s14, s8
9001840a:	eee6 4a87 	vfma.f32	s9, s13, s14
9001840e:	ee64 4a86 	vmul.f32	s9, s9, s12
90018412:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
90018416:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90018418:	698b      	ldr	r3, [r1, #24]
9001841a:	1a9b      	subs	r3, r3, r2
9001841c:	ee06 3a90 	vmov	s13, r3
90018420:	684b      	ldr	r3, [r1, #4]
90018422:	1a9b      	subs	r3, r3, r2
90018424:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90018428:	ee07 3a10 	vmov	s14, r3
9001842c:	ee66 6a84 	vmul.f32	s13, s13, s8
90018430:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018434:	ee65 6a66 	vnmul.f32	s13, s10, s13
90018438:	ee27 7a04 	vmul.f32	s14, s14, s8
9001843c:	eee5 6a87 	vfma.f32	s13, s11, s14
90018440:	ee66 6a83 	vmul.f32	s13, s13, s6
90018444:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
90018448:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001844a:	694a      	ldr	r2, [r1, #20]
9001844c:	1b13      	subs	r3, r2, r4
9001844e:	ee07 3a10 	vmov	s14, r3
90018452:	680b      	ldr	r3, [r1, #0]
90018454:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018458:	1b1b      	subs	r3, r3, r4
9001845a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001845e:	ee25 5a47 	vnmul.f32	s10, s10, s14
90018462:	ee07 3a10 	vmov	s14, r3
90018466:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001846a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001846e:	eea5 5a87 	vfma.f32	s10, s11, s14
90018472:	edd0 5a08 	vldr	s11, [r0, #32]
90018476:	ee31 1a65 	vsub.f32	s2, s2, s11
9001847a:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001847e:	ee25 5a06 	vmul.f32	s10, s10, s12
90018482:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
90018486:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90018488:	698b      	ldr	r3, [r1, #24]
9001848a:	1a9b      	subs	r3, r3, r2
9001848c:	ee07 3a10 	vmov	s14, r3
90018490:	684b      	ldr	r3, [r1, #4]
90018492:	1a9b      	subs	r3, r3, r2
90018494:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018498:	ee01 3a90 	vmov	s3, r3
9001849c:	ee27 7a04 	vmul.f32	s14, s14, s8
900184a0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
900184a4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
900184a8:	ee61 1a84 	vmul.f32	s3, s3, s8
900184ac:	eea1 7a21 	vfma.f32	s14, s2, s3
900184b0:	ee27 7a03 	vmul.f32	s14, s14, s6
900184b4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
900184b8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
900184ba:	694a      	ldr	r2, [r1, #20]
900184bc:	1b13      	subs	r3, r2, r4
900184be:	ee03 3a10 	vmov	s6, r3
900184c2:	680b      	ldr	r3, [r1, #0]
900184c4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
900184c8:	1b1b      	subs	r3, r3, r4
900184ca:	ee23 3a04 	vmul.f32	s6, s6, s8
900184ce:	ee65 5ac3 	vnmul.f32	s11, s11, s6
900184d2:	ee03 3a10 	vmov	s6, r3
900184d6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
900184da:	ee23 4a04 	vmul.f32	s8, s6, s8
900184de:	eee1 5a04 	vfma.f32	s11, s2, s8
900184e2:	ee25 6a86 	vmul.f32	s12, s11, s12
900184e6:	ee62 5a67 	vnmul.f32	s11, s4, s15
900184ea:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
900184ee:	eee3 5aa6 	vfma.f32	s11, s7, s13
900184f2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
900184f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900184fa:	dd13      	ble.n	90018524 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
900184fc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90018500:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90018504:	63c3      	str	r3, [r0, #60]	@ 0x3c
90018506:	eee3 7a87 	vfma.f32	s15, s7, s14
9001850a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001850e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018512:	dd15      	ble.n	90018540 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90018514:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90018518:	6403      	str	r3, [r0, #64]	@ 0x40
9001851a:	bd70      	pop	{r4, r5, r6, pc}
9001851c:	4623      	mov	r3, r4
9001851e:	e6fd      	b.n	9001831c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018520:	462a      	mov	r2, r5
90018522:	e706      	b.n	90018332 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90018524:	d502      	bpl.n	9001852c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
90018526:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001852a:	e7e9      	b.n	90018500 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001852c:	ee22 2a64 	vnmul.f32	s4, s4, s9
90018530:	eea3 2a85 	vfma.f32	s4, s7, s10
90018534:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
90018538:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001853c:	dade      	bge.n	900184fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001853e:	e7f2      	b.n	90018526 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90018540:	d502      	bpl.n	90018548 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
90018542:	f647 73ff 	movw	r3, #32767	@ 0x7fff
90018546:	e7e7      	b.n	90018518 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
90018548:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001854c:	eee3 4a86 	vfma.f32	s9, s7, s12
90018550:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90018554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018558:	dadc      	bge.n	90018514 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001855a:	e7f2      	b.n	90018542 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001855c:	3d800000 	.word	0x3d800000

90018560 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
90018560:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018564:	2714      	movs	r7, #20
90018566:	435f      	muls	r7, r3
90018568:	eb02 0c07 	add.w	ip, r2, r7
9001856c:	f8dc 5004 	ldr.w	r5, [ip, #4]
90018570:	f115 0e0f 	adds.w	lr, r5, #15
90018574:	f100 80a2 	bmi.w	900186bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
90018578:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001857c:	9c08      	ldr	r4, [sp, #32]
9001857e:	2614      	movs	r6, #20
90018580:	f8c0 e014 	str.w	lr, [r0, #20]
90018584:	4366      	muls	r6, r4
90018586:	eb02 0806 	add.w	r8, r2, r6
9001858a:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001858e:	f115 040f 	adds.w	r4, r5, #15
90018592:	f100 809f 	bmi.w	900186d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
90018596:	1124      	asrs	r4, r4, #4
90018598:	eba4 040e 	sub.w	r4, r4, lr
9001859c:	6184      	str	r4, [r0, #24]
9001859e:	2c00      	cmp	r4, #0
900185a0:	f000 808a 	beq.w	900186b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
900185a4:	f8dc 9004 	ldr.w	r9, [ip, #4]
900185a8:	f8d8 4004 	ldr.w	r4, [r8, #4]
900185ac:	5995      	ldr	r5, [r2, r6]
900185ae:	eba4 0809 	sub.w	r8, r4, r9
900185b2:	59d4      	ldr	r4, [r2, r7]
900185b4:	eba5 0a04 	sub.w	sl, r5, r4
900185b8:	ea4f 1608 	mov.w	r6, r8, lsl #4
900185bc:	ea4f 150a 	mov.w	r5, sl, lsl #4
900185c0:	fb0e fe05 	mul.w	lr, lr, r5
900185c4:	fb0a ee19 	mls	lr, sl, r9, lr
900185c8:	fb08 e404 	mla	r4, r8, r4, lr
900185cc:	3c01      	subs	r4, #1
900185ce:	19a4      	adds	r4, r4, r6
900185d0:	f100 808c 	bmi.w	900186ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
900185d4:	fb94 fef6 	sdiv	lr, r4, r6
900185d8:	fb06 441e 	mls	r4, r6, lr, r4
900185dc:	f8c0 e000 	str.w	lr, [r0]
900185e0:	6104      	str	r4, [r0, #16]
900185e2:	2d00      	cmp	r5, #0
900185e4:	f2c0 8095 	blt.w	90018712 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
900185e8:	fb95 f4f6 	sdiv	r4, r5, r6
900185ec:	fb06 5514 	mls	r5, r6, r4, r5
900185f0:	6044      	str	r4, [r0, #4]
900185f2:	6085      	str	r5, [r0, #8]
900185f4:	60c6      	str	r6, [r0, #12]
900185f6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900185fa:	f8dc 4004 	ldr.w	r4, [ip, #4]
900185fe:	6945      	ldr	r5, [r0, #20]
90018600:	59d2      	ldr	r2, [r2, r7]
90018602:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
90018606:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 90018734 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001860a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001860e:	ee07 4a10 	vmov	s14, r4
90018612:	6804      	ldr	r4, [r0, #0]
90018614:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
90018618:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001861c:	ee07 2a90 	vmov	s15, r2
90018620:	ee27 7a26 	vmul.f32	s14, s14, s13
90018624:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018628:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001862c:	edd3 6a00 	vldr	s13, [r3]
90018630:	eee6 6a07 	vfma.f32	s13, s12, s14
90018634:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
90018638:	eee6 6a27 	vfma.f32	s13, s12, s15
9001863c:	edc0 6a07 	vstr	s13, [r0, #28]
90018640:	edd0 6a01 	vldr	s13, [r0, #4]
90018644:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
90018648:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001864c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
90018650:	eea6 6aa5 	vfma.f32	s12, s13, s11
90018654:	ed80 6a08 	vstr	s12, [r0, #32]
90018658:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001865a:	6242      	str	r2, [r0, #36]	@ 0x24
9001865c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
90018660:	ed93 6a03 	vldr	s12, [r3, #12]
90018664:	eea5 6a87 	vfma.f32	s12, s11, s14
90018668:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001866c:	eea5 6aa7 	vfma.f32	s12, s11, s15
90018670:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
90018674:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
90018678:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001867c:	eea6 6aa5 	vfma.f32	s12, s13, s11
90018680:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
90018684:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90018686:	6302      	str	r2, [r0, #48]	@ 0x30
90018688:	ed93 6a06 	vldr	s12, [r3, #24]
9001868c:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
90018690:	eea5 6a87 	vfma.f32	s12, s11, s14
90018694:	eeb0 7a46 	vmov.f32	s14, s12
90018698:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001869c:	eea6 7a27 	vfma.f32	s14, s12, s15
900186a0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
900186a4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
900186a8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
900186ac:	eee6 7a87 	vfma.f32	s15, s13, s14
900186b0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
900186b4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
900186b6:	63c3      	str	r3, [r0, #60]	@ 0x3c
900186b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900186bc:	2410      	movs	r4, #16
900186be:	f1c5 0501 	rsb	r5, r5, #1
900186c2:	fb9e fef4 	sdiv	lr, lr, r4
900186c6:	f015 050f 	ands.w	r5, r5, #15
900186ca:	bf18      	it	ne
900186cc:	2501      	movne	r5, #1
900186ce:	ebae 0e05 	sub.w	lr, lr, r5
900186d2:	e753      	b.n	9001857c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
900186d4:	f04f 0910 	mov.w	r9, #16
900186d8:	f1c5 0501 	rsb	r5, r5, #1
900186dc:	fb94 f4f9 	sdiv	r4, r4, r9
900186e0:	f015 050f 	ands.w	r5, r5, #15
900186e4:	bf18      	it	ne
900186e6:	2501      	movne	r5, #1
900186e8:	1b64      	subs	r4, r4, r5
900186ea:	e755      	b.n	90018598 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
900186ec:	4264      	negs	r4, r4
900186ee:	fb94 fef6 	sdiv	lr, r4, r6
900186f2:	f1ce 0800 	rsb	r8, lr, #0
900186f6:	fb06 441e 	mls	r4, r6, lr, r4
900186fa:	f8c0 8000 	str.w	r8, [r0]
900186fe:	6104      	str	r4, [r0, #16]
90018700:	2c00      	cmp	r4, #0
90018702:	f43f af6e 	beq.w	900185e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
90018706:	ea6f 0e0e 	mvn.w	lr, lr
9001870a:	1b34      	subs	r4, r6, r4
9001870c:	f8c0 e000 	str.w	lr, [r0]
90018710:	e766      	b.n	900185e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
90018712:	426d      	negs	r5, r5
90018714:	fb95 f4f6 	sdiv	r4, r5, r6
90018718:	f1c4 0e00 	rsb	lr, r4, #0
9001871c:	fb06 5514 	mls	r5, r6, r4, r5
90018720:	f8c0 e004 	str.w	lr, [r0, #4]
90018724:	6085      	str	r5, [r0, #8]
90018726:	2d00      	cmp	r5, #0
90018728:	f43f af64 	beq.w	900185f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001872c:	43e4      	mvns	r4, r4
9001872e:	1b75      	subs	r5, r6, r5
90018730:	6044      	str	r4, [r0, #4]
90018732:	e75e      	b.n	900185f2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
90018734:	3d800000 	.word	0x3d800000

90018738 <_ZN8touchgfx7Unicode6strlenEPKt>:
90018738:	4602      	mov	r2, r0
9001873a:	b148      	cbz	r0, 90018750 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001873c:	2300      	movs	r3, #0
9001873e:	b298      	uxth	r0, r3
90018740:	3301      	adds	r3, #1
90018742:	eb02 0143 	add.w	r1, r2, r3, lsl #1
90018746:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001874a:	2900      	cmp	r1, #0
9001874c:	d1f7      	bne.n	9001873e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001874e:	4770      	bx	lr
90018750:	4770      	bx	lr

90018752 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
90018752:	b530      	push	{r4, r5, lr}
90018754:	4604      	mov	r4, r0
90018756:	b159      	cbz	r1, 90018770 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
90018758:	b148      	cbz	r0, 9001876e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001875a:	2300      	movs	r3, #0
9001875c:	b298      	uxth	r0, r3
9001875e:	4282      	cmp	r2, r0
90018760:	d905      	bls.n	9001876e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90018762:	5ccd      	ldrb	r5, [r1, r3]
90018764:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
90018768:	3301      	adds	r3, #1
9001876a:	2d00      	cmp	r5, #0
9001876c:	d1f6      	bne.n	9001875c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001876e:	bd30      	pop	{r4, r5, pc}
90018770:	4608      	mov	r0, r1
90018772:	e7fc      	b.n	9001876e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90018774 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
90018774:	b5f0      	push	{r4, r5, r6, r7, lr}
90018776:	b08b      	sub	sp, #44	@ 0x2c
90018778:	468c      	mov	ip, r1
9001877a:	4604      	mov	r4, r0
9001877c:	2100      	movs	r1, #0
9001877e:	261f      	movs	r6, #31
90018780:	af01      	add	r7, sp, #4
90018782:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
90018786:	1e71      	subs	r1, r6, #1
90018788:	fb94 fef3 	sdiv	lr, r4, r3
9001878c:	fb03 441e 	mls	r4, r3, lr, r4
90018790:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90018794:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90018798:	b2ec      	uxtb	r4, r5
9001879a:	2d09      	cmp	r5, #9
9001879c:	bfd4      	ite	le
9001879e:	3430      	addle	r4, #48	@ 0x30
900187a0:	3457      	addgt	r4, #87	@ 0x57
900187a2:	b2e4      	uxtb	r4, r4
900187a4:	55bc      	strb	r4, [r7, r6]
900187a6:	4674      	mov	r4, lr
900187a8:	b974      	cbnz	r4, 900187c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
900187aa:	2800      	cmp	r0, #0
900187ac:	da05      	bge.n	900187ba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
900187ae:	ab0a      	add	r3, sp, #40	@ 0x28
900187b0:	4419      	add	r1, r3
900187b2:	232d      	movs	r3, #45	@ 0x2d
900187b4:	f801 3c24 	strb.w	r3, [r1, #-36]
900187b8:	1eb1      	subs	r1, r6, #2
900187ba:	3101      	adds	r1, #1
900187bc:	4660      	mov	r0, ip
900187be:	4439      	add	r1, r7
900187c0:	f7ff ffc7 	bl	90018752 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
900187c4:	b00b      	add	sp, #44	@ 0x2c
900187c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900187c8:	460e      	mov	r6, r1
900187ca:	e7dc      	b.n	90018786 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

900187cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
900187cc:	b5f0      	push	{r4, r5, r6, r7, lr}
900187ce:	468c      	mov	ip, r1
900187d0:	b08b      	sub	sp, #44	@ 0x2c
900187d2:	2100      	movs	r1, #0
900187d4:	ae01      	add	r6, sp, #4
900187d6:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
900187da:	211f      	movs	r1, #31
900187dc:	fbb0 f7f3 	udiv	r7, r0, r3
900187e0:	fb03 0517 	mls	r5, r3, r7, r0
900187e4:	4638      	mov	r0, r7
900187e6:	b2ec      	uxtb	r4, r5
900187e8:	2d09      	cmp	r5, #9
900187ea:	bfd4      	ite	le
900187ec:	3430      	addle	r4, #48	@ 0x30
900187ee:	3457      	addgt	r4, #87	@ 0x57
900187f0:	b2e4      	uxtb	r4, r4
900187f2:	558c      	strb	r4, [r1, r6]
900187f4:	1e4c      	subs	r4, r1, #1
900187f6:	b92f      	cbnz	r7, 90018804 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
900187f8:	4431      	add	r1, r6
900187fa:	4660      	mov	r0, ip
900187fc:	f7ff ffa9 	bl	90018752 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90018800:	b00b      	add	sp, #44	@ 0x2c
90018802:	bdf0      	pop	{r4, r5, r6, r7, pc}
90018804:	4621      	mov	r1, r4
90018806:	e7e9      	b.n	900187dc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

90018808 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90018808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001880c:	b085      	sub	sp, #20
9001880e:	4691      	mov	r9, r2
90018810:	6802      	ldr	r2, [r0, #0]
90018812:	4688      	mov	r8, r1
90018814:	461c      	mov	r4, r3
90018816:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
9001881a:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001881e:	4683      	mov	fp, r0
90018820:	4610      	mov	r0, r2
90018822:	9103      	str	r1, [sp, #12]
90018824:	9302      	str	r3, [sp, #8]
90018826:	9201      	str	r2, [sp, #4]
90018828:	f7ff ff86 	bl	90018738 <_ZN8touchgfx7Unicode6strlenEPKt>
9001882c:	f1b8 0f00 	cmp.w	r8, #0
90018830:	bf0c      	ite	eq
90018832:	4684      	moveq	ip, r0
90018834:	f100 0c01 	addne.w	ip, r0, #1
90018838:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
9001883c:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
90018840:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90018842:	fa1f fc8c 	uxth.w	ip, ip
90018846:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90018848:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
9001884c:	9903      	ldr	r1, [sp, #12]
9001884e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
90018852:	d041      	beq.n	900188d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90018854:	d834      	bhi.n	900188c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
90018856:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
9001885a:	d059      	beq.n	90018910 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001885c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
90018860:	d03a      	beq.n	900188d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90018862:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
90018866:	d034      	beq.n	900188d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90018868:	2400      	movs	r4, #0
9001886a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001886e:	3a01      	subs	r2, #1
90018870:	b169      	cbz	r1, 9001888e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90018872:	9911      	ldr	r1, [sp, #68]	@ 0x44
90018874:	458c      	cmp	ip, r1
90018876:	da09      	bge.n	9001888c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90018878:	eba1 010c 	sub.w	r1, r1, ip
9001887c:	b289      	uxth	r1, r1
9001887e:	b933      	cbnz	r3, 9001888e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90018880:	2e00      	cmp	r6, #0
90018882:	d051      	beq.n	90018928 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90018884:	2800      	cmp	r0, #0
90018886:	d04f      	beq.n	90018928 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90018888:	440c      	add	r4, r1
9001888a:	b2a4      	uxth	r4, r4
9001888c:	2100      	movs	r1, #0
9001888e:	682b      	ldr	r3, [r5, #0]
90018890:	4293      	cmp	r3, r2
90018892:	da07      	bge.n	900188a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90018894:	f1b8 0f00 	cmp.w	r8, #0
90018898:	d004      	beq.n	900188a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001889a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001889e:	682b      	ldr	r3, [r5, #0]
900188a0:	3301      	adds	r3, #1
900188a2:	602b      	str	r3, [r5, #0]
900188a4:	2730      	movs	r7, #48	@ 0x30
900188a6:	2c00      	cmp	r4, #0
900188a8:	d04e      	beq.n	90018948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900188aa:	682e      	ldr	r6, [r5, #0]
900188ac:	3c01      	subs	r4, #1
900188ae:	42b2      	cmp	r2, r6
900188b0:	b2a4      	uxth	r4, r4
900188b2:	dd49      	ble.n	90018948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900188b4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
900188b8:	682b      	ldr	r3, [r5, #0]
900188ba:	3301      	adds	r3, #1
900188bc:	602b      	str	r3, [r5, #0]
900188be:	e7f2      	b.n	900188a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
900188c0:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
900188c4:	d01d      	beq.n	90018902 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
900188c6:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
900188ca:	d002      	beq.n	900188d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
900188cc:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
900188d0:	e7c9      	b.n	90018866 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
900188d2:	4684      	mov	ip, r0
900188d4:	f04f 0800 	mov.w	r8, #0
900188d8:	2c00      	cmp	r4, #0
900188da:	d0c6      	beq.n	9001886a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
900188dc:	b947      	cbnz	r7, 900188f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
900188de:	2801      	cmp	r0, #1
900188e0:	d106      	bne.n	900188f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
900188e2:	8814      	ldrh	r4, [r2, #0]
900188e4:	2c30      	cmp	r4, #48	@ 0x30
900188e6:	bf02      	ittt	eq
900188e8:	3202      	addeq	r2, #2
900188ea:	4638      	moveq	r0, r7
900188ec:	f8cb 2000 	streq.w	r2, [fp]
900188f0:	45bc      	cmp	ip, r7
900188f2:	da14      	bge.n	9001891e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
900188f4:	b2bf      	uxth	r7, r7
900188f6:	eba7 040c 	sub.w	r4, r7, ip
900188fa:	46bc      	mov	ip, r7
900188fc:	b2a4      	uxth	r4, r4
900188fe:	2600      	movs	r6, #0
90018900:	e7b3      	b.n	9001886a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018902:	4684      	mov	ip, r0
90018904:	b16c      	cbz	r4, 90018922 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
90018906:	42b8      	cmp	r0, r7
90018908:	dd00      	ble.n	9001890c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001890a:	b2b8      	uxth	r0, r7
9001890c:	2400      	movs	r4, #0
9001890e:	e003      	b.n	90018918 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90018910:	f04f 0c01 	mov.w	ip, #1
90018914:	2400      	movs	r4, #0
90018916:	4660      	mov	r0, ip
90018918:	4626      	mov	r6, r4
9001891a:	46a0      	mov	r8, r4
9001891c:	e7a5      	b.n	9001886a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001891e:	2400      	movs	r4, #0
90018920:	e7ed      	b.n	900188fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90018922:	4626      	mov	r6, r4
90018924:	46a0      	mov	r8, r4
90018926:	e7a0      	b.n	9001886a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018928:	2900      	cmp	r1, #0
9001892a:	d0b0      	beq.n	9001888e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001892c:	2720      	movs	r7, #32
9001892e:	682e      	ldr	r6, [r5, #0]
90018930:	2900      	cmp	r1, #0
90018932:	d0ac      	beq.n	9001888e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90018934:	3901      	subs	r1, #1
90018936:	4296      	cmp	r6, r2
90018938:	b289      	uxth	r1, r1
9001893a:	daa7      	bge.n	9001888c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001893c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90018940:	682b      	ldr	r3, [r5, #0]
90018942:	3301      	adds	r3, #1
90018944:	602b      	str	r3, [r5, #0]
90018946:	e7f2      	b.n	9001892e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
90018948:	b188      	cbz	r0, 9001896e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001894a:	682b      	ldr	r3, [r5, #0]
9001894c:	3801      	subs	r0, #1
9001894e:	429a      	cmp	r2, r3
90018950:	b280      	uxth	r0, r0
90018952:	dd0c      	ble.n	9001896e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90018954:	f8db 3000 	ldr.w	r3, [fp]
90018958:	1c9c      	adds	r4, r3, #2
9001895a:	f8cb 4000 	str.w	r4, [fp]
9001895e:	881c      	ldrh	r4, [r3, #0]
90018960:	682b      	ldr	r3, [r5, #0]
90018962:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90018966:	682b      	ldr	r3, [r5, #0]
90018968:	3301      	adds	r3, #1
9001896a:	602b      	str	r3, [r5, #0]
9001896c:	e7ec      	b.n	90018948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001896e:	2620      	movs	r6, #32
90018970:	b151      	cbz	r1, 90018988 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90018972:	6828      	ldr	r0, [r5, #0]
90018974:	3901      	subs	r1, #1
90018976:	4282      	cmp	r2, r0
90018978:	b289      	uxth	r1, r1
9001897a:	dd05      	ble.n	90018988 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001897c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90018980:	682b      	ldr	r3, [r5, #0]
90018982:	3301      	adds	r3, #1
90018984:	602b      	str	r3, [r5, #0]
90018986:	e7f3      	b.n	90018970 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90018988:	b005      	add	sp, #20
9001898a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001898e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001898e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90018992:	2400      	movs	r4, #0
90018994:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90018998:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
9001899c:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
900189a0:	8014      	strh	r4, [r2, #0]
900189a2:	701c      	strb	r4, [r3, #0]
900189a4:	f888 4000 	strb.w	r4, [r8]
900189a8:	f88c 4000 	strb.w	r4, [ip]
900189ac:	f88e 4000 	strb.w	r4, [lr]
900189b0:	703c      	strb	r4, [r7, #0]
900189b2:	6804      	ldr	r4, [r0, #0]
900189b4:	b1a4      	cbz	r4, 900189e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
900189b6:	8824      	ldrh	r4, [r4, #0]
900189b8:	f04f 0901 	mov.w	r9, #1
900189bc:	b314      	cbz	r4, 90018a04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
900189be:	2c2b      	cmp	r4, #43	@ 0x2b
900189c0:	d001      	beq.n	900189c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
900189c2:	2c20      	cmp	r4, #32
900189c4:	d110      	bne.n	900189e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
900189c6:	8014      	strh	r4, [r2, #0]
900189c8:	6804      	ldr	r4, [r0, #0]
900189ca:	b10c      	cbz	r4, 900189d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
900189cc:	3402      	adds	r4, #2
900189ce:	6004      	str	r4, [r0, #0]
900189d0:	680c      	ldr	r4, [r1, #0]
900189d2:	b10c      	cbz	r4, 900189d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
900189d4:	3401      	adds	r4, #1
900189d6:	600c      	str	r4, [r1, #0]
900189d8:	6804      	ldr	r4, [r0, #0]
900189da:	b17c      	cbz	r4, 900189fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
900189dc:	8824      	ldrh	r4, [r4, #0]
900189de:	e7ed      	b.n	900189bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
900189e0:	680c      	ldr	r4, [r1, #0]
900189e2:	b17c      	cbz	r4, 90018a04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
900189e4:	7824      	ldrb	r4, [r4, #0]
900189e6:	e7e7      	b.n	900189b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
900189e8:	2c2d      	cmp	r4, #45	@ 0x2d
900189ea:	d102      	bne.n	900189f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
900189ec:	f883 9000 	strb.w	r9, [r3]
900189f0:	e7ea      	b.n	900189c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
900189f2:	2c23      	cmp	r4, #35	@ 0x23
900189f4:	d107      	bne.n	90018a06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
900189f6:	f888 9000 	strb.w	r9, [r8]
900189fa:	e7e5      	b.n	900189c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
900189fc:	680c      	ldr	r4, [r1, #0]
900189fe:	b10c      	cbz	r4, 90018a04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90018a00:	7824      	ldrb	r4, [r4, #0]
90018a02:	e7db      	b.n	900189bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90018a04:	2400      	movs	r4, #0
90018a06:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
90018a0a:	2b09      	cmp	r3, #9
90018a0c:	d901      	bls.n	90018a12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90018a0e:	2c2a      	cmp	r4, #42	@ 0x2a
90018a10:	d122      	bne.n	90018a58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90018a12:	2301      	movs	r3, #1
90018a14:	2c30      	cmp	r4, #48	@ 0x30
90018a16:	f88e 3000 	strb.w	r3, [lr]
90018a1a:	d10d      	bne.n	90018a38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90018a1c:	f88c 3000 	strb.w	r3, [ip]
90018a20:	6803      	ldr	r3, [r0, #0]
90018a22:	b10b      	cbz	r3, 90018a28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90018a24:	3302      	adds	r3, #2
90018a26:	6003      	str	r3, [r0, #0]
90018a28:	680b      	ldr	r3, [r1, #0]
90018a2a:	b10b      	cbz	r3, 90018a30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90018a2c:	3301      	adds	r3, #1
90018a2e:	600b      	str	r3, [r1, #0]
90018a30:	6803      	ldr	r3, [r0, #0]
90018a32:	2b00      	cmp	r3, #0
90018a34:	d02f      	beq.n	90018a96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
90018a36:	881c      	ldrh	r4, [r3, #0]
90018a38:	2c2a      	cmp	r4, #42	@ 0x2a
90018a3a:	d135      	bne.n	90018aa8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90018a3c:	f04f 33ff 	mov.w	r3, #4294967295
90018a40:	6033      	str	r3, [r6, #0]
90018a42:	6803      	ldr	r3, [r0, #0]
90018a44:	b10b      	cbz	r3, 90018a4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
90018a46:	3302      	adds	r3, #2
90018a48:	6003      	str	r3, [r0, #0]
90018a4a:	680b      	ldr	r3, [r1, #0]
90018a4c:	b10b      	cbz	r3, 90018a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
90018a4e:	3301      	adds	r3, #1
90018a50:	600b      	str	r3, [r1, #0]
90018a52:	6803      	ldr	r3, [r0, #0]
90018a54:	b31b      	cbz	r3, 90018a9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
90018a56:	881c      	ldrh	r4, [r3, #0]
90018a58:	2c2e      	cmp	r4, #46	@ 0x2e
90018a5a:	d11a      	bne.n	90018a92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90018a5c:	2301      	movs	r3, #1
90018a5e:	703b      	strb	r3, [r7, #0]
90018a60:	6803      	ldr	r3, [r0, #0]
90018a62:	b10b      	cbz	r3, 90018a68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
90018a64:	3302      	adds	r3, #2
90018a66:	6003      	str	r3, [r0, #0]
90018a68:	680b      	ldr	r3, [r1, #0]
90018a6a:	b10b      	cbz	r3, 90018a70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
90018a6c:	3301      	adds	r3, #1
90018a6e:	600b      	str	r3, [r1, #0]
90018a70:	6803      	ldr	r3, [r0, #0]
90018a72:	2b00      	cmp	r3, #0
90018a74:	d036      	beq.n	90018ae4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
90018a76:	881b      	ldrh	r3, [r3, #0]
90018a78:	2b2a      	cmp	r3, #42	@ 0x2a
90018a7a:	d137      	bne.n	90018aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90018a7c:	f04f 33ff 	mov.w	r3, #4294967295
90018a80:	602b      	str	r3, [r5, #0]
90018a82:	6803      	ldr	r3, [r0, #0]
90018a84:	b10b      	cbz	r3, 90018a8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90018a86:	3302      	adds	r3, #2
90018a88:	6003      	str	r3, [r0, #0]
90018a8a:	680b      	ldr	r3, [r1, #0]
90018a8c:	b10b      	cbz	r3, 90018a92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90018a8e:	3301      	adds	r3, #1
90018a90:	600b      	str	r3, [r1, #0]
90018a92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018a96:	680c      	ldr	r4, [r1, #0]
90018a98:	b134      	cbz	r4, 90018aa8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90018a9a:	7824      	ldrb	r4, [r4, #0]
90018a9c:	e7cc      	b.n	90018a38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90018a9e:	680b      	ldr	r3, [r1, #0]
90018aa0:	2b00      	cmp	r3, #0
90018aa2:	d0f6      	beq.n	90018a92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90018aa4:	781c      	ldrb	r4, [r3, #0]
90018aa6:	e7d7      	b.n	90018a58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90018aa8:	2300      	movs	r3, #0
90018aaa:	220a      	movs	r2, #10
90018aac:	6033      	str	r3, [r6, #0]
90018aae:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
90018ab2:	fa1f f38c 	uxth.w	r3, ip
90018ab6:	2b09      	cmp	r3, #9
90018ab8:	d8ce      	bhi.n	90018a58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90018aba:	6833      	ldr	r3, [r6, #0]
90018abc:	fb02 c303 	mla	r3, r2, r3, ip
90018ac0:	6033      	str	r3, [r6, #0]
90018ac2:	6803      	ldr	r3, [r0, #0]
90018ac4:	b10b      	cbz	r3, 90018aca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90018ac6:	3302      	adds	r3, #2
90018ac8:	6003      	str	r3, [r0, #0]
90018aca:	680b      	ldr	r3, [r1, #0]
90018acc:	b10b      	cbz	r3, 90018ad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90018ace:	3301      	adds	r3, #1
90018ad0:	600b      	str	r3, [r1, #0]
90018ad2:	6803      	ldr	r3, [r0, #0]
90018ad4:	b10b      	cbz	r3, 90018ada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90018ad6:	881c      	ldrh	r4, [r3, #0]
90018ad8:	e7e9      	b.n	90018aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90018ada:	680c      	ldr	r4, [r1, #0]
90018adc:	2c00      	cmp	r4, #0
90018ade:	d0e6      	beq.n	90018aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90018ae0:	7824      	ldrb	r4, [r4, #0]
90018ae2:	e7e4      	b.n	90018aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90018ae4:	680b      	ldr	r3, [r1, #0]
90018ae6:	b10b      	cbz	r3, 90018aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90018ae8:	781b      	ldrb	r3, [r3, #0]
90018aea:	e7c5      	b.n	90018a78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90018aec:	2200      	movs	r2, #0
90018aee:	240a      	movs	r4, #10
90018af0:	602a      	str	r2, [r5, #0]
90018af2:	3b30      	subs	r3, #48	@ 0x30
90018af4:	682a      	ldr	r2, [r5, #0]
90018af6:	b29e      	uxth	r6, r3
90018af8:	2e09      	cmp	r6, #9
90018afa:	d813      	bhi.n	90018b24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90018afc:	fb04 3302 	mla	r3, r4, r2, r3
90018b00:	602b      	str	r3, [r5, #0]
90018b02:	6803      	ldr	r3, [r0, #0]
90018b04:	b10b      	cbz	r3, 90018b0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90018b06:	3302      	adds	r3, #2
90018b08:	6003      	str	r3, [r0, #0]
90018b0a:	680b      	ldr	r3, [r1, #0]
90018b0c:	b10b      	cbz	r3, 90018b12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90018b0e:	3301      	adds	r3, #1
90018b10:	600b      	str	r3, [r1, #0]
90018b12:	6803      	ldr	r3, [r0, #0]
90018b14:	b10b      	cbz	r3, 90018b1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90018b16:	881b      	ldrh	r3, [r3, #0]
90018b18:	e7eb      	b.n	90018af2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90018b1a:	680b      	ldr	r3, [r1, #0]
90018b1c:	2b00      	cmp	r3, #0
90018b1e:	d0e8      	beq.n	90018af2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90018b20:	781b      	ldrb	r3, [r3, #0]
90018b22:	e7e6      	b.n	90018af2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90018b24:	2a06      	cmp	r2, #6
90018b26:	bfa8      	it	ge
90018b28:	2206      	movge	r2, #6
90018b2a:	602a      	str	r2, [r5, #0]
90018b2c:	e7b1      	b.n	90018a92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90018b2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90018b2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018b32:	b0a3      	sub	sp, #140	@ 0x8c
90018b34:	2600      	movs	r6, #0
90018b36:	4607      	mov	r7, r0
90018b38:	4688      	mov	r8, r1
90018b3a:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
90018b3e:	4631      	mov	r1, r6
90018b40:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
90018b42:	4648      	mov	r0, r9
90018b44:	960d      	str	r6, [sp, #52]	@ 0x34
90018b46:	e9cd 3208 	strd	r3, r2, [sp, #32]
90018b4a:	2242      	movs	r2, #66	@ 0x42
90018b4c:	f010 f884 	bl	90028c58 <memset>
90018b50:	b15f      	cbz	r7, 90018b6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
90018b52:	f108 3aff 	add.w	sl, r8, #4294967295
90018b56:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90018b58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90018b5a:	b152      	cbz	r2, 90018b72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
90018b5c:	8812      	ldrh	r2, [r2, #0]
90018b5e:	b10a      	cbz	r2, 90018b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90018b60:	459a      	cmp	sl, r3
90018b62:	dc2e      	bgt.n	90018bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90018b64:	2200      	movs	r2, #0
90018b66:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90018b6a:	4638      	mov	r0, r7
90018b6c:	b023      	add	sp, #140	@ 0x8c
90018b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018b72:	9a08      	ldr	r2, [sp, #32]
90018b74:	2a00      	cmp	r2, #0
90018b76:	d0f5      	beq.n	90018b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90018b78:	7812      	ldrb	r2, [r2, #0]
90018b7a:	e7f0      	b.n	90018b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90018b7c:	2d00      	cmp	r5, #0
90018b7e:	d0ea      	beq.n	90018b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018b80:	782a      	ldrb	r2, [r5, #0]
90018b82:	b142      	cbz	r2, 90018b96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90018b84:	2a25      	cmp	r2, #37	@ 0x25
90018b86:	d001      	beq.n	90018b8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90018b88:	459a      	cmp	sl, r3
90018b8a:	dc08      	bgt.n	90018b9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90018b8c:	f1bb 0f00 	cmp.w	fp, #0
90018b90:	d121      	bne.n	90018bd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90018b92:	2d00      	cmp	r5, #0
90018b94:	d0df      	beq.n	90018b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018b96:	782a      	ldrb	r2, [r5, #0]
90018b98:	f04f 0b00 	mov.w	fp, #0
90018b9c:	e01d      	b.n	90018bda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90018b9e:	f1bb 0f00 	cmp.w	fp, #0
90018ba2:	d077      	beq.n	90018c94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90018ba4:	f8bb 2000 	ldrh.w	r2, [fp]
90018ba8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90018bac:	f1bb 0f00 	cmp.w	fp, #0
90018bb0:	d002      	beq.n	90018bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90018bb2:	f10b 0202 	add.w	r2, fp, #2
90018bb6:	9209      	str	r2, [sp, #36]	@ 0x24
90018bb8:	b10d      	cbz	r5, 90018bbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90018bba:	3501      	adds	r5, #1
90018bbc:	9508      	str	r5, [sp, #32]
90018bbe:	3301      	adds	r3, #1
90018bc0:	930d      	str	r3, [sp, #52]	@ 0x34
90018bc2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90018bc4:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90018bc8:	f1bb 0f00 	cmp.w	fp, #0
90018bcc:	d0d6      	beq.n	90018b7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90018bce:	f8bb 2000 	ldrh.w	r2, [fp]
90018bd2:	2a00      	cmp	r2, #0
90018bd4:	d1d6      	bne.n	90018b84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90018bd6:	f8bb 2000 	ldrh.w	r2, [fp]
90018bda:	2a00      	cmp	r2, #0
90018bdc:	d0bb      	beq.n	90018b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018bde:	459a      	cmp	sl, r3
90018be0:	ddb9      	ble.n	90018b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018be2:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
90018be6:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
90018bea:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
90018bee:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
90018bf2:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
90018bf6:	960e      	str	r6, [sp, #56]	@ 0x38
90018bf8:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
90018bfc:	960f      	str	r6, [sp, #60]	@ 0x3c
90018bfe:	f1bb 0f00 	cmp.w	fp, #0
90018c02:	d002      	beq.n	90018c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90018c04:	f10b 0302 	add.w	r3, fp, #2
90018c08:	9309      	str	r3, [sp, #36]	@ 0x24
90018c0a:	b10d      	cbz	r5, 90018c10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90018c0c:	1c6b      	adds	r3, r5, #1
90018c0e:	9308      	str	r3, [sp, #32]
90018c10:	ab0f      	add	r3, sp, #60	@ 0x3c
90018c12:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
90018c16:	a908      	add	r1, sp, #32
90018c18:	a809      	add	r0, sp, #36	@ 0x24
90018c1a:	9305      	str	r3, [sp, #20]
90018c1c:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
90018c20:	9304      	str	r3, [sp, #16]
90018c22:	ab0e      	add	r3, sp, #56	@ 0x38
90018c24:	9303      	str	r3, [sp, #12]
90018c26:	ab0c      	add	r3, sp, #48	@ 0x30
90018c28:	9302      	str	r3, [sp, #8]
90018c2a:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
90018c2e:	9301      	str	r3, [sp, #4]
90018c30:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
90018c34:	9300      	str	r3, [sp, #0]
90018c36:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
90018c3a:	f7ff fea8 	bl	9001898e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90018c3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018c40:	2b00      	cmp	r3, #0
90018c42:	bfbf      	itttt	lt
90018c44:	6823      	ldrlt	r3, [r4, #0]
90018c46:	3404      	addlt	r4, #4
90018c48:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90018c4c:	930e      	strlt	r3, [sp, #56]	@ 0x38
90018c4e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90018c50:	2b00      	cmp	r3, #0
90018c52:	bfbe      	ittt	lt
90018c54:	6823      	ldrlt	r3, [r4, #0]
90018c56:	3404      	addlt	r4, #4
90018c58:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90018c5c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90018c60:	bfb8      	it	lt
90018c62:	930f      	strlt	r3, [sp, #60]	@ 0x3c
90018c64:	b1d9      	cbz	r1, 90018c9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
90018c66:	880b      	ldrh	r3, [r1, #0]
90018c68:	2b69      	cmp	r3, #105	@ 0x69
90018c6a:	d01f      	beq.n	90018cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90018c6c:	d82f      	bhi.n	90018cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90018c6e:	2b58      	cmp	r3, #88	@ 0x58
90018c70:	d01c      	beq.n	90018cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90018c72:	d818      	bhi.n	90018ca6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90018c74:	2b25      	cmp	r3, #37	@ 0x25
90018c76:	d034      	beq.n	90018ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
90018c78:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90018c7a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90018c7e:	f1bb 0f00 	cmp.w	fp, #0
90018c82:	f000 80b7 	beq.w	90018df4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90018c86:	f8bb 5000 	ldrh.w	r5, [fp]
90018c8a:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90018c8e:	3301      	adds	r3, #1
90018c90:	930d      	str	r3, [sp, #52]	@ 0x34
90018c92:	e029      	b.n	90018ce8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90018c94:	b10d      	cbz	r5, 90018c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90018c96:	782a      	ldrb	r2, [r5, #0]
90018c98:	e786      	b.n	90018ba8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90018c9a:	462a      	mov	r2, r5
90018c9c:	e784      	b.n	90018ba8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90018c9e:	2a00      	cmp	r2, #0
90018ca0:	d0ea      	beq.n	90018c78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90018ca2:	7813      	ldrb	r3, [r2, #0]
90018ca4:	e7e0      	b.n	90018c68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90018ca6:	3b63      	subs	r3, #99	@ 0x63
90018ca8:	2b01      	cmp	r3, #1
90018caa:	d8e5      	bhi.n	90018c78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90018cac:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
90018cb0:	b329      	cbz	r1, 90018cfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90018cb2:	880b      	ldrh	r3, [r1, #0]
90018cb4:	2b69      	cmp	r3, #105	@ 0x69
90018cb6:	d063      	beq.n	90018d80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90018cb8:	d825      	bhi.n	90018d06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90018cba:	2b63      	cmp	r3, #99	@ 0x63
90018cbc:	d038      	beq.n	90018d30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90018cbe:	2b64      	cmp	r3, #100	@ 0x64
90018cc0:	d05e      	beq.n	90018d80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90018cc2:	2b58      	cmp	r3, #88	@ 0x58
90018cc4:	d07a      	beq.n	90018dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90018cc6:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
90018cca:	4625      	mov	r5, r4
90018ccc:	e036      	b.n	90018d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018cce:	2b73      	cmp	r3, #115	@ 0x73
90018cd0:	d0ec      	beq.n	90018cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90018cd2:	d802      	bhi.n	90018cda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90018cd4:	2b6f      	cmp	r3, #111	@ 0x6f
90018cd6:	d1cf      	bne.n	90018c78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90018cd8:	e7e8      	b.n	90018cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90018cda:	2b75      	cmp	r3, #117	@ 0x75
90018cdc:	d0e6      	beq.n	90018cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90018cde:	2b78      	cmp	r3, #120	@ 0x78
90018ce0:	e7f9      	b.n	90018cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90018ce2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90018ce4:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90018ce8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018cea:	b10b      	cbz	r3, 90018cf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90018cec:	3302      	adds	r3, #2
90018cee:	9309      	str	r3, [sp, #36]	@ 0x24
90018cf0:	9b08      	ldr	r3, [sp, #32]
90018cf2:	2b00      	cmp	r3, #0
90018cf4:	f43f af2f 	beq.w	90018b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018cf8:	3301      	adds	r3, #1
90018cfa:	9308      	str	r3, [sp, #32]
90018cfc:	e72b      	b.n	90018b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018cfe:	2a00      	cmp	r2, #0
90018d00:	d0e1      	beq.n	90018cc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90018d02:	7813      	ldrb	r3, [r2, #0]
90018d04:	e7d6      	b.n	90018cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90018d06:	2b73      	cmp	r3, #115	@ 0x73
90018d08:	d036      	beq.n	90018d78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90018d0a:	d807      	bhi.n	90018d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90018d0c:	2b6f      	cmp	r3, #111	@ 0x6f
90018d0e:	d1da      	bne.n	90018cc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90018d10:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90018d12:	1d25      	adds	r5, r4, #4
90018d14:	2308      	movs	r3, #8
90018d16:	eba8 0202 	sub.w	r2, r8, r2
90018d1a:	e049      	b.n	90018db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90018d1c:	2b75      	cmp	r3, #117	@ 0x75
90018d1e:	d042      	beq.n	90018da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90018d20:	2b78      	cmp	r3, #120	@ 0x78
90018d22:	d1d0      	bne.n	90018cc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90018d24:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90018d26:	1d25      	adds	r5, r4, #4
90018d28:	2310      	movs	r3, #16
90018d2a:	eba8 0202 	sub.w	r2, r8, r2
90018d2e:	e03f      	b.n	90018db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90018d30:	6823      	ldr	r3, [r4, #0]
90018d32:	1d25      	adds	r5, r4, #4
90018d34:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
90018d38:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
90018d3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018d3e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
90018d42:	2b00      	cmp	r3, #0
90018d44:	d051      	beq.n	90018dea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
90018d46:	881a      	ldrh	r2, [r3, #0]
90018d48:	a80d      	add	r0, sp, #52	@ 0x34
90018d4a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
90018d4e:	462c      	mov	r4, r5
90018d50:	9005      	str	r0, [sp, #20]
90018d52:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
90018d56:	9004      	str	r0, [sp, #16]
90018d58:	980e      	ldr	r0, [sp, #56]	@ 0x38
90018d5a:	9003      	str	r0, [sp, #12]
90018d5c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
90018d60:	9002      	str	r0, [sp, #8]
90018d62:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90018d64:	9001      	str	r0, [sp, #4]
90018d66:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
90018d6a:	e9cd 8706 	strd	r8, r7, [sp, #24]
90018d6e:	9000      	str	r0, [sp, #0]
90018d70:	a810      	add	r0, sp, #64	@ 0x40
90018d72:	f7ff fd49 	bl	90018808 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
90018d76:	e7b7      	b.n	90018ce8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90018d78:	1d25      	adds	r5, r4, #4
90018d7a:	6823      	ldr	r3, [r4, #0]
90018d7c:	9310      	str	r3, [sp, #64]	@ 0x40
90018d7e:	e7dd      	b.n	90018d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018d80:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90018d82:	230a      	movs	r3, #10
90018d84:	4649      	mov	r1, r9
90018d86:	6820      	ldr	r0, [r4, #0]
90018d88:	eba8 0202 	sub.w	r2, r8, r2
90018d8c:	1d25      	adds	r5, r4, #4
90018d8e:	b292      	uxth	r2, r2
90018d90:	f7ff fcf0 	bl	90018774 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90018d94:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90018d98:	2b2d      	cmp	r3, #45	@ 0x2d
90018d9a:	d1cf      	bne.n	90018d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018d9c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90018da0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018da2:	3302      	adds	r3, #2
90018da4:	e7ea      	b.n	90018d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90018da6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90018da8:	1d25      	adds	r5, r4, #4
90018daa:	230a      	movs	r3, #10
90018dac:	eba8 0202 	sub.w	r2, r8, r2
90018db0:	b292      	uxth	r2, r2
90018db2:	4649      	mov	r1, r9
90018db4:	6820      	ldr	r0, [r4, #0]
90018db6:	f7ff fd09 	bl	900187cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90018dba:	e7bf      	b.n	90018d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018dbc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90018dbe:	2310      	movs	r3, #16
90018dc0:	4649      	mov	r1, r9
90018dc2:	6820      	ldr	r0, [r4, #0]
90018dc4:	eba8 0202 	sub.w	r2, r8, r2
90018dc8:	1d25      	adds	r5, r4, #4
90018dca:	b292      	uxth	r2, r2
90018dcc:	f7ff fcfe 	bl	900187cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90018dd0:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
90018dd4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90018dd8:	2b00      	cmp	r3, #0
90018dda:	d0af      	beq.n	90018d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018ddc:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
90018de0:	2919      	cmp	r1, #25
90018de2:	d8f7      	bhi.n	90018dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90018de4:	3b20      	subs	r3, #32
90018de6:	8013      	strh	r3, [r2, #0]
90018de8:	e7f4      	b.n	90018dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90018dea:	9a08      	ldr	r2, [sp, #32]
90018dec:	2a00      	cmp	r2, #0
90018dee:	d0ab      	beq.n	90018d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90018df0:	7812      	ldrb	r2, [r2, #0]
90018df2:	e7a9      	b.n	90018d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90018df4:	2d00      	cmp	r5, #0
90018df6:	f43f af48 	beq.w	90018c8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
90018dfa:	782d      	ldrb	r5, [r5, #0]
90018dfc:	e745      	b.n	90018c8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90018dfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90018dfe:	b507      	push	{r0, r1, r2, lr}
90018e00:	9300      	str	r3, [sp, #0]
90018e02:	4613      	mov	r3, r2
90018e04:	2200      	movs	r2, #0
90018e06:	f7ff fe92 	bl	90018b2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
90018e0a:	b003      	add	sp, #12
90018e0c:	f85d fb04 	ldr.w	pc, [sp], #4

90018e10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90018e10:	b40c      	push	{r2, r3}
90018e12:	b507      	push	{r0, r1, r2, lr}
90018e14:	ab04      	add	r3, sp, #16
90018e16:	f853 2b04 	ldr.w	r2, [r3], #4
90018e1a:	9301      	str	r3, [sp, #4]
90018e1c:	f7ff ffef 	bl	90018dfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90018e20:	b003      	add	sp, #12
90018e22:	f85d eb04 	ldr.w	lr, [sp], #4
90018e26:	b002      	add	sp, #8
90018e28:	4770      	bx	lr
	...

90018e2c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90018e2c:	4b01      	ldr	r3, [pc, #4]	@ (90018e34 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90018e2e:	6018      	str	r0, [r3, #0]
90018e30:	4770      	bx	lr
90018e32:	bf00      	nop
90018e34:	24021c44 	.word	0x24021c44

90018e38 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90018e38:	4b06      	ldr	r3, [pc, #24]	@ (90018e54 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90018e3a:	881a      	ldrh	r2, [r3, #0]
90018e3c:	4282      	cmp	r2, r0
90018e3e:	d807      	bhi.n	90018e50 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90018e40:	4b05      	ldr	r3, [pc, #20]	@ (90018e58 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90018e42:	881b      	ldrh	r3, [r3, #0]
90018e44:	4413      	add	r3, r2
90018e46:	4298      	cmp	r0, r3
90018e48:	bfac      	ite	ge
90018e4a:	2000      	movge	r0, #0
90018e4c:	2001      	movlt	r0, #1
90018e4e:	4770      	bx	lr
90018e50:	2000      	movs	r0, #0
90018e52:	4770      	bx	lr
90018e54:	24021c64 	.word	0x24021c64
90018e58:	24021c68 	.word	0x24021c68

90018e5c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90018e5c:	b508      	push	{r3, lr}
90018e5e:	4601      	mov	r1, r0
90018e60:	f7ff ffea 	bl	90018e38 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90018e64:	b118      	cbz	r0, 90018e6e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
90018e66:	4b02      	ldr	r3, [pc, #8]	@ (90018e70 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90018e68:	681b      	ldr	r3, [r3, #0]
90018e6a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90018e6e:	bd08      	pop	{r3, pc}
90018e70:	24021c48 	.word	0x24021c48

90018e74 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90018e74:	b5f0      	push	{r4, r5, r6, r7, lr}
90018e76:	4c24      	ldr	r4, [pc, #144]	@ (90018f08 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
90018e78:	6823      	ldr	r3, [r4, #0]
90018e7a:	2b00      	cmp	r3, #0
90018e7c:	d042      	beq.n	90018f04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90018e7e:	4a23      	ldr	r2, [pc, #140]	@ (90018f0c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90018e80:	4d23      	ldr	r5, [pc, #140]	@ (90018f10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90018e82:	8811      	ldrh	r1, [r2, #0]
90018e84:	f8b5 c000 	ldrh.w	ip, [r5]
90018e88:	4822      	ldr	r0, [pc, #136]	@ (90018f14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
90018e8a:	4461      	add	r1, ip
90018e8c:	1c4a      	adds	r2, r1, #1
90018e8e:	008f      	lsls	r7, r1, #2
90018e90:	f022 0201 	bic.w	r2, r2, #1
90018e94:	19de      	adds	r6, r3, r7
90018e96:	0412      	lsls	r2, r2, #16
90018e98:	6006      	str	r6, [r0, #0]
90018e9a:	4e1f      	ldr	r6, [pc, #124]	@ (90018f18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90018e9c:	0c12      	lsrs	r2, r2, #16
90018e9e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90018ea2:	19da      	adds	r2, r3, r7
90018ea4:	6032      	str	r2, [r6, #0]
90018ea6:	220e      	movs	r2, #14
90018ea8:	fb02 f20c 	mul.w	r2, r2, ip
90018eac:	3203      	adds	r2, #3
90018eae:	f022 0203 	bic.w	r2, r2, #3
90018eb2:	443a      	add	r2, r7
90018eb4:	4f19      	ldr	r7, [pc, #100]	@ (90018f1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
90018eb6:	4413      	add	r3, r2
90018eb8:	603b      	str	r3, [r7, #0]
90018eba:	2300      	movs	r3, #0
90018ebc:	4f18      	ldr	r7, [pc, #96]	@ (90018f20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90018ebe:	469c      	mov	ip, r3
90018ec0:	803b      	strh	r3, [r7, #0]
90018ec2:	4f18      	ldr	r7, [pc, #96]	@ (90018f24 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90018ec4:	683f      	ldr	r7, [r7, #0]
90018ec6:	1aba      	subs	r2, r7, r2
90018ec8:	4f17      	ldr	r7, [pc, #92]	@ (90018f28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
90018eca:	603a      	str	r2, [r7, #0]
90018ecc:	f64f 77ff 	movw	r7, #65535	@ 0xffff
90018ed0:	4a16      	ldr	r2, [pc, #88]	@ (90018f2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90018ed2:	8013      	strh	r3, [r2, #0]
90018ed4:	428b      	cmp	r3, r1
90018ed6:	d10d      	bne.n	90018ef4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
90018ed8:	882d      	ldrh	r5, [r5, #0]
90018eda:	2300      	movs	r3, #0
90018edc:	6830      	ldr	r0, [r6, #0]
90018ede:	240e      	movs	r4, #14
90018ee0:	429d      	cmp	r5, r3
90018ee2:	d90f      	bls.n	90018f04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90018ee4:	fb04 0203 	mla	r2, r4, r3, r0
90018ee8:	3301      	adds	r3, #1
90018eea:	7b11      	ldrb	r1, [r2, #12]
90018eec:	f36f 1145 	bfc	r1, #5, #1
90018ef0:	7311      	strb	r1, [r2, #12]
90018ef2:	e7f5      	b.n	90018ee0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90018ef4:	6822      	ldr	r2, [r4, #0]
90018ef6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90018efa:	6802      	ldr	r2, [r0, #0]
90018efc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90018f00:	3301      	adds	r3, #1
90018f02:	e7e7      	b.n	90018ed4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90018f04:	bdf0      	pop	{r4, r5, r6, r7, pc}
90018f06:	bf00      	nop
90018f08:	24021c48 	.word	0x24021c48
90018f0c:	24021c64 	.word	0x24021c64
90018f10:	24021c68 	.word	0x24021c68
90018f14:	24021c5c 	.word	0x24021c5c
90018f18:	24021c4c 	.word	0x24021c4c
90018f1c:	24021c54 	.word	0x24021c54
90018f20:	24021c66 	.word	0x24021c66
90018f24:	24021c50 	.word	0x24021c50
90018f28:	24021c60 	.word	0x24021c60
90018f2c:	24021c58 	.word	0x24021c58

90018f30 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90018f30:	4b06      	ldr	r3, [pc, #24]	@ (90018f4c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90018f32:	681b      	ldr	r3, [r3, #0]
90018f34:	b943      	cbnz	r3, 90018f48 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90018f36:	b139      	cbz	r1, 90018f48 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90018f38:	4b05      	ldr	r3, [pc, #20]	@ (90018f50 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90018f3a:	801a      	strh	r2, [r3, #0]
90018f3c:	4b05      	ldr	r3, [pc, #20]	@ (90018f54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90018f3e:	6019      	str	r1, [r3, #0]
90018f40:	4b05      	ldr	r3, [pc, #20]	@ (90018f58 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90018f42:	6018      	str	r0, [r3, #0]
90018f44:	f7ff bf96 	b.w	90018e74 <_ZN8touchgfx6Bitmap10clearCacheEv>
90018f48:	4770      	bx	lr
90018f4a:	bf00      	nop
90018f4c:	24021c54 	.word	0x24021c54
90018f50:	24021c68 	.word	0x24021c68
90018f54:	24021c50 	.word	0x24021c50
90018f58:	24021c48 	.word	0x24021c48

90018f5c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90018f5c:	b470      	push	{r4, r5, r6}
90018f5e:	4c07      	ldr	r4, [pc, #28]	@ (90018f7c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90018f60:	4605      	mov	r5, r0
90018f62:	4610      	mov	r0, r2
90018f64:	9a03      	ldr	r2, [sp, #12]
90018f66:	6826      	ldr	r6, [r4, #0]
90018f68:	b936      	cbnz	r6, 90018f78 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
90018f6a:	6025      	str	r5, [r4, #0]
90018f6c:	4c04      	ldr	r4, [pc, #16]	@ (90018f80 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90018f6e:	8021      	strh	r1, [r4, #0]
90018f70:	4619      	mov	r1, r3
90018f72:	bc70      	pop	{r4, r5, r6}
90018f74:	f7ff bfdc 	b.w	90018f30 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
90018f78:	bc70      	pop	{r4, r5, r6}
90018f7a:	4770      	bx	lr
90018f7c:	24021c6c 	.word	0x24021c6c
90018f80:	24021c64 	.word	0x24021c64

90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90018f84:	4a12      	ldr	r2, [pc, #72]	@ (90018fd0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
90018f86:	8803      	ldrh	r3, [r0, #0]
90018f88:	8812      	ldrh	r2, [r2, #0]
90018f8a:	4293      	cmp	r3, r2
90018f8c:	d207      	bcs.n	90018f9e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90018f8e:	4a11      	ldr	r2, [pc, #68]	@ (90018fd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90018f90:	2114      	movs	r1, #20
90018f92:	6812      	ldr	r2, [r2, #0]
90018f94:	fb01 2303 	mla	r3, r1, r3, r2
90018f98:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90018f9c:	4770      	bx	lr
90018f9e:	490e      	ldr	r1, [pc, #56]	@ (90018fd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90018fa0:	8809      	ldrh	r1, [r1, #0]
90018fa2:	4411      	add	r1, r2
90018fa4:	428b      	cmp	r3, r1
90018fa6:	da04      	bge.n	90018fb2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
90018fa8:	1a9b      	subs	r3, r3, r2
90018faa:	4a0c      	ldr	r2, [pc, #48]	@ (90018fdc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90018fac:	210e      	movs	r1, #14
90018fae:	6812      	ldr	r2, [r2, #0]
90018fb0:	e7f0      	b.n	90018f94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90018fb2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90018fb6:	4293      	cmp	r3, r2
90018fb8:	d108      	bne.n	90018fcc <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
90018fba:	4b09      	ldr	r3, [pc, #36]	@ (90018fe0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90018fbc:	781b      	ldrb	r3, [r3, #0]
90018fbe:	b91b      	cbnz	r3, 90018fc8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90018fc0:	4b08      	ldr	r3, [pc, #32]	@ (90018fe4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90018fc2:	f9b3 0000 	ldrsh.w	r0, [r3]
90018fc6:	4770      	bx	lr
90018fc8:	4b07      	ldr	r3, [pc, #28]	@ (90018fe8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
90018fca:	e7fa      	b.n	90018fc2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90018fcc:	2000      	movs	r0, #0
90018fce:	4770      	bx	lr
90018fd0:	24021c64 	.word	0x24021c64
90018fd4:	24021c6c 	.word	0x24021c6c
90018fd8:	24021c68 	.word	0x24021c68
90018fdc:	24021c4c 	.word	0x24021c4c
90018fe0:	24021bd4 	.word	0x24021bd4
90018fe4:	24021bd6 	.word	0x24021bd6
90018fe8:	24021bd8 	.word	0x24021bd8

90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>:
90018fec:	4a12      	ldr	r2, [pc, #72]	@ (90019038 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90018fee:	8803      	ldrh	r3, [r0, #0]
90018ff0:	8812      	ldrh	r2, [r2, #0]
90018ff2:	4293      	cmp	r3, r2
90018ff4:	d207      	bcs.n	90019006 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
90018ff6:	4a11      	ldr	r2, [pc, #68]	@ (9001903c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
90018ff8:	2114      	movs	r1, #20
90018ffa:	6812      	ldr	r2, [r2, #0]
90018ffc:	fb01 2303 	mla	r3, r1, r3, r2
90019000:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90019004:	4770      	bx	lr
90019006:	490e      	ldr	r1, [pc, #56]	@ (90019040 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
90019008:	8809      	ldrh	r1, [r1, #0]
9001900a:	4411      	add	r1, r2
9001900c:	428b      	cmp	r3, r1
9001900e:	da04      	bge.n	9001901a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90019010:	1a9b      	subs	r3, r3, r2
90019012:	4a0c      	ldr	r2, [pc, #48]	@ (90019044 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90019014:	210e      	movs	r1, #14
90019016:	6812      	ldr	r2, [r2, #0]
90019018:	e7f0      	b.n	90018ffc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001901a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001901e:	4293      	cmp	r3, r2
90019020:	d108      	bne.n	90019034 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90019022:	4b09      	ldr	r3, [pc, #36]	@ (90019048 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90019024:	781b      	ldrb	r3, [r3, #0]
90019026:	b91b      	cbnz	r3, 90019030 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
90019028:	4b08      	ldr	r3, [pc, #32]	@ (9001904c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001902a:	f9b3 0000 	ldrsh.w	r0, [r3]
9001902e:	4770      	bx	lr
90019030:	4b07      	ldr	r3, [pc, #28]	@ (90019050 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
90019032:	e7fa      	b.n	9001902a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90019034:	2000      	movs	r0, #0
90019036:	4770      	bx	lr
90019038:	24021c64 	.word	0x24021c64
9001903c:	24021c6c 	.word	0x24021c6c
90019040:	24021c68 	.word	0x24021c68
90019044:	24021c4c 	.word	0x24021c4c
90019048:	24021bd4 	.word	0x24021bd4
9001904c:	24021bd8 	.word	0x24021bd8
90019050:	24021bd6 	.word	0x24021bd6

90019054 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90019054:	4a22      	ldr	r2, [pc, #136]	@ (900190e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
90019056:	b530      	push	{r4, r5, lr}
90019058:	880b      	ldrh	r3, [r1, #0]
9001905a:	8812      	ldrh	r2, [r2, #0]
9001905c:	4293      	cmp	r3, r2
9001905e:	d213      	bcs.n	90019088 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90019060:	4a20      	ldr	r2, [pc, #128]	@ (900190e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90019062:	2114      	movs	r1, #20
90019064:	6812      	ldr	r2, [r2, #0]
90019066:	fb01 2303 	mla	r3, r1, r3, r2
9001906a:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001906e:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90019072:	8a1a      	ldrh	r2, [r3, #16]
90019074:	8a5b      	ldrh	r3, [r3, #18]
90019076:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001907a:	8004      	strh	r4, [r0, #0]
9001907c:	f3c3 030c 	ubfx	r3, r3, #0, #13
90019080:	8041      	strh	r1, [r0, #2]
90019082:	8082      	strh	r2, [r0, #4]
90019084:	80c3      	strh	r3, [r0, #6]
90019086:	e024      	b.n	900190d2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
90019088:	4917      	ldr	r1, [pc, #92]	@ (900190e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001908a:	8809      	ldrh	r1, [r1, #0]
9001908c:	4411      	add	r1, r2
9001908e:	428b      	cmp	r3, r1
90019090:	da10      	bge.n	900190b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
90019092:	1a9b      	subs	r3, r3, r2
90019094:	220e      	movs	r2, #14
90019096:	4353      	muls	r3, r2
90019098:	4a14      	ldr	r2, [pc, #80]	@ (900190ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001909a:	6811      	ldr	r1, [r2, #0]
9001909c:	18ca      	adds	r2, r1, r3
9001909e:	5ecd      	ldrsh	r5, [r1, r3]
900190a0:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
900190a4:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
900190a8:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
900190ac:	8005      	strh	r5, [r0, #0]
900190ae:	8044      	strh	r4, [r0, #2]
900190b0:	8081      	strh	r1, [r0, #4]
900190b2:	e7e7      	b.n	90019084 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
900190b4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900190b8:	4293      	cmp	r3, r2
900190ba:	d10b      	bne.n	900190d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
900190bc:	4b0c      	ldr	r3, [pc, #48]	@ (900190f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
900190be:	f9b3 1000 	ldrsh.w	r1, [r3]
900190c2:	4b0c      	ldr	r3, [pc, #48]	@ (900190f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
900190c4:	8081      	strh	r1, [r0, #4]
900190c6:	f9b3 2000 	ldrsh.w	r2, [r3]
900190ca:	2300      	movs	r3, #0
900190cc:	80c2      	strh	r2, [r0, #6]
900190ce:	8003      	strh	r3, [r0, #0]
900190d0:	8043      	strh	r3, [r0, #2]
900190d2:	bd30      	pop	{r4, r5, pc}
900190d4:	2300      	movs	r3, #0
900190d6:	8003      	strh	r3, [r0, #0]
900190d8:	8043      	strh	r3, [r0, #2]
900190da:	8083      	strh	r3, [r0, #4]
900190dc:	e7d2      	b.n	90019084 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
900190de:	bf00      	nop
900190e0:	24021c64 	.word	0x24021c64
900190e4:	24021c6c 	.word	0x24021c6c
900190e8:	24021c68 	.word	0x24021c68
900190ec:	24021c4c 	.word	0x24021c4c
900190f0:	24021bd0 	.word	0x24021bd0
900190f4:	24021bd2 	.word	0x24021bd2

900190f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
900190f8:	4a17      	ldr	r2, [pc, #92]	@ (90019158 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
900190fa:	8803      	ldrh	r3, [r0, #0]
900190fc:	8812      	ldrh	r2, [r2, #0]
900190fe:	4293      	cmp	r3, r2
90019100:	d213      	bcs.n	9001912a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
90019102:	4a16      	ldr	r2, [pc, #88]	@ (9001915c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
90019104:	2114      	movs	r1, #20
90019106:	6812      	ldr	r2, [r2, #0]
90019108:	fb01 2303 	mla	r3, r1, r3, r2
9001910c:	8a1a      	ldrh	r2, [r3, #16]
9001910e:	8919      	ldrh	r1, [r3, #8]
90019110:	f3c2 020c 	ubfx	r2, r2, #0, #13
90019114:	428a      	cmp	r2, r1
90019116:	db1d      	blt.n	90019154 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019118:	8a58      	ldrh	r0, [r3, #18]
9001911a:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001911e:	895b      	ldrh	r3, [r3, #10]
90019120:	4298      	cmp	r0, r3
90019122:	bfac      	ite	ge
90019124:	2000      	movge	r0, #0
90019126:	2001      	movlt	r0, #1
90019128:	4770      	bx	lr
9001912a:	490d      	ldr	r1, [pc, #52]	@ (90019160 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001912c:	8809      	ldrh	r1, [r1, #0]
9001912e:	4411      	add	r1, r2
90019130:	428b      	cmp	r3, r1
90019132:	da0d      	bge.n	90019150 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
90019134:	1a9b      	subs	r3, r3, r2
90019136:	4a0b      	ldr	r2, [pc, #44]	@ (90019164 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90019138:	210e      	movs	r1, #14
9001913a:	6812      	ldr	r2, [r2, #0]
9001913c:	fb01 2303 	mla	r3, r1, r3, r2
90019140:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
90019144:	891a      	ldrh	r2, [r3, #8]
90019146:	4291      	cmp	r1, r2
90019148:	db04      	blt.n	90019154 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001914a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001914e:	e7e6      	b.n	9001911e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90019150:	2000      	movs	r0, #0
90019152:	4770      	bx	lr
90019154:	2001      	movs	r0, #1
90019156:	4770      	bx	lr
90019158:	24021c64 	.word	0x24021c64
9001915c:	24021c6c 	.word	0x24021c6c
90019160:	24021c68 	.word	0x24021c68
90019164:	24021c4c 	.word	0x24021c4c

90019168 <_ZNK8touchgfx6Bitmap7getDataEv>:
90019168:	4a12      	ldr	r2, [pc, #72]	@ (900191b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001916a:	8803      	ldrh	r3, [r0, #0]
9001916c:	8811      	ldrh	r1, [r2, #0]
9001916e:	428b      	cmp	r3, r1
90019170:	d20b      	bcs.n	9001918a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
90019172:	4a11      	ldr	r2, [pc, #68]	@ (900191b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90019174:	6812      	ldr	r2, [r2, #0]
90019176:	b112      	cbz	r2, 9001917e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90019178:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001917c:	b9c0      	cbnz	r0, 900191b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001917e:	4a0f      	ldr	r2, [pc, #60]	@ (900191bc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90019180:	6811      	ldr	r1, [r2, #0]
90019182:	2214      	movs	r2, #20
90019184:	4353      	muls	r3, r2
90019186:	58c8      	ldr	r0, [r1, r3]
90019188:	4770      	bx	lr
9001918a:	4a0d      	ldr	r2, [pc, #52]	@ (900191c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001918c:	8812      	ldrh	r2, [r2, #0]
9001918e:	440a      	add	r2, r1
90019190:	4293      	cmp	r3, r2
90019192:	da04      	bge.n	9001919e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
90019194:	4a08      	ldr	r2, [pc, #32]	@ (900191b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90019196:	6812      	ldr	r2, [r2, #0]
90019198:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001919c:	4770      	bx	lr
9001919e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900191a2:	4293      	cmp	r3, r2
900191a4:	d103      	bne.n	900191ae <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
900191a6:	4b07      	ldr	r3, [pc, #28]	@ (900191c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
900191a8:	681b      	ldr	r3, [r3, #0]
900191aa:	6c58      	ldr	r0, [r3, #68]	@ 0x44
900191ac:	4770      	bx	lr
900191ae:	2000      	movs	r0, #0
900191b0:	4770      	bx	lr
900191b2:	bf00      	nop
900191b4:	24021c64 	.word	0x24021c64
900191b8:	24021c48 	.word	0x24021c48
900191bc:	24021c6c 	.word	0x24021c6c
900191c0:	24021c68 	.word	0x24021c68
900191c4:	24021bdc 	.word	0x24021bdc

900191c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
900191c8:	4b24      	ldr	r3, [pc, #144]	@ (9001925c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
900191ca:	8802      	ldrh	r2, [r0, #0]
900191cc:	8818      	ldrh	r0, [r3, #0]
900191ce:	4282      	cmp	r2, r0
900191d0:	d221      	bcs.n	90019216 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
900191d2:	4b23      	ldr	r3, [pc, #140]	@ (90019260 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
900191d4:	6819      	ldr	r1, [r3, #0]
900191d6:	2314      	movs	r3, #20
900191d8:	fb03 1302 	mla	r3, r3, r2, r1
900191dc:	6858      	ldr	r0, [r3, #4]
900191de:	2800      	cmp	r0, #0
900191e0:	d03a      	beq.n	90019258 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900191e2:	4920      	ldr	r1, [pc, #128]	@ (90019264 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
900191e4:	6809      	ldr	r1, [r1, #0]
900191e6:	2900      	cmp	r1, #0
900191e8:	d036      	beq.n	90019258 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900191ea:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
900191ee:	2900      	cmp	r1, #0
900191f0:	d032      	beq.n	90019258 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900191f2:	891a      	ldrh	r2, [r3, #8]
900191f4:	8958      	ldrh	r0, [r3, #10]
900191f6:	4350      	muls	r0, r2
900191f8:	7c5a      	ldrb	r2, [r3, #17]
900191fa:	7cdb      	ldrb	r3, [r3, #19]
900191fc:	0952      	lsrs	r2, r2, #5
900191fe:	f3c3 1342 	ubfx	r3, r3, #5, #3
90019202:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90019206:	2b0b      	cmp	r3, #11
90019208:	bf18      	it	ne
9001920a:	0040      	lslne	r0, r0, #1
9001920c:	3003      	adds	r0, #3
9001920e:	f020 0003 	bic.w	r0, r0, #3
90019212:	4408      	add	r0, r1
90019214:	4770      	bx	lr
90019216:	4b14      	ldr	r3, [pc, #80]	@ (90019268 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90019218:	881b      	ldrh	r3, [r3, #0]
9001921a:	4403      	add	r3, r0
9001921c:	429a      	cmp	r2, r3
9001921e:	da1a      	bge.n	90019256 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019220:	4b12      	ldr	r3, [pc, #72]	@ (9001926c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
90019222:	1a10      	subs	r0, r2, r0
90019224:	210e      	movs	r1, #14
90019226:	681b      	ldr	r3, [r3, #0]
90019228:	fb01 3000 	mla	r0, r1, r0, r3
9001922c:	7b03      	ldrb	r3, [r0, #12]
9001922e:	f003 031f 	and.w	r3, r3, #31
90019232:	2b0b      	cmp	r3, #11
90019234:	d10b      	bne.n	9001924e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
90019236:	8903      	ldrh	r3, [r0, #8]
90019238:	8940      	ldrh	r0, [r0, #10]
9001923a:	4358      	muls	r0, r3
9001923c:	4b09      	ldr	r3, [pc, #36]	@ (90019264 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001923e:	3003      	adds	r0, #3
90019240:	6819      	ldr	r1, [r3, #0]
90019242:	f020 0303 	bic.w	r3, r0, #3
90019246:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001924a:	4418      	add	r0, r3
9001924c:	4770      	bx	lr
9001924e:	2b0d      	cmp	r3, #13
90019250:	d101      	bne.n	90019256 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019252:	300d      	adds	r0, #13
90019254:	4770      	bx	lr
90019256:	2000      	movs	r0, #0
90019258:	4770      	bx	lr
9001925a:	bf00      	nop
9001925c:	24021c64 	.word	0x24021c64
90019260:	24021c6c 	.word	0x24021c6c
90019264:	24021c48 	.word	0x24021c48
90019268:	24021c68 	.word	0x24021c68
9001926c:	24021c4c 	.word	0x24021c4c

90019270 <_ZNK8touchgfx6Bitmap9getFormatEv>:
90019270:	4b1f      	ldr	r3, [pc, #124]	@ (900192f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
90019272:	b510      	push	{r4, lr}
90019274:	8802      	ldrh	r2, [r0, #0]
90019276:	881b      	ldrh	r3, [r3, #0]
90019278:	429a      	cmp	r2, r3
9001927a:	d21a      	bcs.n	900192b2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001927c:	4b1d      	ldr	r3, [pc, #116]	@ (900192f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001927e:	2114      	movs	r1, #20
90019280:	681b      	ldr	r3, [r3, #0]
90019282:	fb01 3102 	mla	r1, r1, r2, r3
90019286:	7c4b      	ldrb	r3, [r1, #17]
90019288:	0958      	lsrs	r0, r3, #5
9001928a:	7ccb      	ldrb	r3, [r1, #19]
9001928c:	491a      	ldr	r1, [pc, #104]	@ (900192f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001928e:	f3c3 1342 	ubfx	r3, r3, #5, #3
90019292:	6809      	ldr	r1, [r1, #0]
90019294:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
90019298:	b2d8      	uxtb	r0, r3
9001929a:	b149      	cbz	r1, 900192b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001929c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
900192a0:	b132      	cbz	r2, 900192b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
900192a2:	2b0e      	cmp	r3, #14
900192a4:	d021      	beq.n	900192ea <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
900192a6:	280f      	cmp	r0, #15
900192a8:	d01d      	beq.n	900192e6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
900192aa:	2810      	cmp	r0, #16
900192ac:	bf08      	it	eq
900192ae:	2002      	moveq	r0, #2
900192b0:	bd10      	pop	{r4, pc}
900192b2:	4912      	ldr	r1, [pc, #72]	@ (900192fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
900192b4:	8809      	ldrh	r1, [r1, #0]
900192b6:	4419      	add	r1, r3
900192b8:	428a      	cmp	r2, r1
900192ba:	da09      	bge.n	900192d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
900192bc:	1ad3      	subs	r3, r2, r3
900192be:	4a10      	ldr	r2, [pc, #64]	@ (90019300 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
900192c0:	210e      	movs	r1, #14
900192c2:	6812      	ldr	r2, [r2, #0]
900192c4:	fb01 2303 	mla	r3, r1, r3, r2
900192c8:	7b18      	ldrb	r0, [r3, #12]
900192ca:	f000 001f 	and.w	r0, r0, #31
900192ce:	e7ef      	b.n	900192b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
900192d0:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
900192d4:	429a      	cmp	r2, r3
900192d6:	d108      	bne.n	900192ea <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
900192d8:	f7f7 f95a 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
900192dc:	6803      	ldr	r3, [r0, #0]
900192de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900192e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900192e4:	4718      	bx	r3
900192e6:	2001      	movs	r0, #1
900192e8:	e7e2      	b.n	900192b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
900192ea:	2000      	movs	r0, #0
900192ec:	e7e0      	b.n	900192b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
900192ee:	bf00      	nop
900192f0:	24021c64 	.word	0x24021c64
900192f4:	24021c6c 	.word	0x24021c6c
900192f8:	24021c48 	.word	0x24021c48
900192fc:	24021c68 	.word	0x24021c68
90019300:	24021c4c 	.word	0x24021c4c

90019304 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90019304:	2010      	movs	r0, #16
90019306:	4770      	bx	lr

90019308 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
90019308:	4b02      	ldr	r3, [pc, #8]	@ (90019314 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001930a:	8818      	ldrh	r0, [r3, #0]
9001930c:	0040      	lsls	r0, r0, #1
9001930e:	b280      	uxth	r0, r0
90019310:	4770      	bx	lr
90019312:	bf00      	nop
90019314:	24021bd6 	.word	0x24021bd6

90019318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
90019318:	2bff      	cmp	r3, #255	@ 0xff
9001931a:	d05e      	beq.n	900193da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001931c:	2a0b      	cmp	r2, #11
9001931e:	d058      	beq.n	900193d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
90019320:	d80e      	bhi.n	90019340 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90019322:	2a03      	cmp	r2, #3
90019324:	d04d      	beq.n	900193c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
90019326:	d804      	bhi.n	90019332 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
90019328:	2a01      	cmp	r2, #1
9001932a:	d04c      	beq.n	900193c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001932c:	d94d      	bls.n	900193ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001932e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
90019330:	e031      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019332:	2a09      	cmp	r2, #9
90019334:	d04d      	beq.n	900193d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
90019336:	d84a      	bhi.n	900193ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
90019338:	2a08      	cmp	r2, #8
9001933a:	d048      	beq.n	900193ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001933c:	2300      	movs	r3, #0
9001933e:	e02a      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019340:	2a2f      	cmp	r2, #47	@ 0x2f
90019342:	d02c      	beq.n	9001939e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
90019344:	d811      	bhi.n	9001936a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
90019346:	2a2d      	cmp	r2, #45	@ 0x2d
90019348:	d018      	beq.n	9001937c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001934a:	d831      	bhi.n	900193b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001934c:	2a2c      	cmp	r2, #44	@ 0x2c
9001934e:	d1f5      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019350:	684a      	ldr	r2, [r1, #4]
90019352:	7813      	ldrb	r3, [r2, #0]
90019354:	7852      	ldrb	r2, [r2, #1]
90019356:	2a00      	cmp	r2, #0
90019358:	d1f0      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001935a:	2b01      	cmp	r3, #1
9001935c:	d01d      	beq.n	9001939a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001935e:	2b00      	cmp	r3, #0
90019360:	d02d      	beq.n	900193be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90019362:	2b02      	cmp	r3, #2
90019364:	d1ea      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019366:	68c3      	ldr	r3, [r0, #12]
90019368:	e015      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001936a:	2a31      	cmp	r2, #49	@ 0x31
9001936c:	d004      	beq.n	90019378 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001936e:	d332      	bcc.n	900193d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
90019370:	2a32      	cmp	r2, #50	@ 0x32
90019372:	d030      	beq.n	900193d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
90019374:	2a33      	cmp	r2, #51	@ 0x33
90019376:	d1e1      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019378:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001937a:	e00c      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001937c:	684a      	ldr	r2, [r1, #4]
9001937e:	7813      	ldrb	r3, [r2, #0]
90019380:	7852      	ldrb	r2, [r2, #1]
90019382:	2a00      	cmp	r2, #0
90019384:	d1da      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019386:	2b01      	cmp	r3, #1
90019388:	d004      	beq.n	90019394 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001938a:	d30f      	bcc.n	900193ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001938c:	2b02      	cmp	r3, #2
9001938e:	d1d5      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019390:	6943      	ldr	r3, [r0, #20]
90019392:	e000      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019394:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90019396:	4618      	mov	r0, r3
90019398:	4770      	bx	lr
9001939a:	69c3      	ldr	r3, [r0, #28]
9001939c:	e7fb      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001939e:	684b      	ldr	r3, [r1, #4]
900193a0:	781a      	ldrb	r2, [r3, #0]
900193a2:	785b      	ldrb	r3, [r3, #1]
900193a4:	2b00      	cmp	r3, #0
900193a6:	d1c9      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900193a8:	2a00      	cmp	r2, #0
900193aa:	d1f4      	bne.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193ac:	6b43      	ldr	r3, [r0, #52]	@ 0x34
900193ae:	e7f2      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193b0:	684b      	ldr	r3, [r1, #4]
900193b2:	781a      	ldrb	r2, [r3, #0]
900193b4:	785b      	ldrb	r3, [r3, #1]
900193b6:	2b00      	cmp	r3, #0
900193b8:	d1c0      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900193ba:	2a00      	cmp	r2, #0
900193bc:	d1eb      	bne.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193be:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900193c0:	e7e9      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193c2:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
900193c4:	e7e7      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193c6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900193c8:	e7e5      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193ca:	6c43      	ldr	r3, [r0, #68]	@ 0x44
900193cc:	e7e3      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193ce:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
900193d0:	e7e1      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193d2:	6e43      	ldr	r3, [r0, #100]	@ 0x64
900193d4:	e7df      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193d6:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
900193d8:	e7dd      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193da:	2a0b      	cmp	r2, #11
900193dc:	d059      	beq.n	90019492 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
900193de:	d80e      	bhi.n	900193fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
900193e0:	2a03      	cmp	r2, #3
900193e2:	d050      	beq.n	90019486 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
900193e4:	d804      	bhi.n	900193f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
900193e6:	2a01      	cmp	r2, #1
900193e8:	d04f      	beq.n	9001948a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
900193ea:	d950      	bls.n	9001948e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
900193ec:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900193ee:	e7d2      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193f0:	2a09      	cmp	r2, #9
900193f2:	d04e      	beq.n	90019492 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
900193f4:	d801      	bhi.n	900193fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
900193f6:	2a08      	cmp	r2, #8
900193f8:	d1a0      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900193fa:	6e03      	ldr	r3, [r0, #96]	@ 0x60
900193fc:	e7cb      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900193fe:	2a2f      	cmp	r2, #47	@ 0x2f
90019400:	d02d      	beq.n	9001945e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
90019402:	d811      	bhi.n	90019428 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90019404:	2a2d      	cmp	r2, #45	@ 0x2d
90019406:	d018      	beq.n	9001943a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
90019408:	d833      	bhi.n	90019472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001940a:	2a2c      	cmp	r2, #44	@ 0x2c
9001940c:	d196      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001940e:	684a      	ldr	r2, [r1, #4]
90019410:	7813      	ldrb	r3, [r2, #0]
90019412:	7852      	ldrb	r2, [r2, #1]
90019414:	2a00      	cmp	r2, #0
90019416:	d191      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019418:	2b01      	cmp	r3, #1
9001941a:	d01e      	beq.n	9001945a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001941c:	2b00      	cmp	r3, #0
9001941e:	d030      	beq.n	90019482 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
90019420:	2b02      	cmp	r3, #2
90019422:	d18b      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019424:	6903      	ldr	r3, [r0, #16]
90019426:	e7b6      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019428:	2a31      	cmp	r2, #49	@ 0x31
9001942a:	d004      	beq.n	90019436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001942c:	d333      	bcc.n	90019496 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001942e:	2a32      	cmp	r2, #50	@ 0x32
90019430:	d031      	beq.n	90019496 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
90019432:	2a33      	cmp	r2, #51	@ 0x33
90019434:	d182      	bne.n	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019436:	6f83      	ldr	r3, [r0, #120]	@ 0x78
90019438:	e7ad      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001943a:	684a      	ldr	r2, [r1, #4]
9001943c:	7813      	ldrb	r3, [r2, #0]
9001943e:	7852      	ldrb	r2, [r2, #1]
90019440:	2a00      	cmp	r2, #0
90019442:	f47f af7b 	bne.w	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019446:	2b01      	cmp	r3, #1
90019448:	d005      	beq.n	90019456 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001944a:	d310      	bcc.n	9001946e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001944c:	2b02      	cmp	r3, #2
9001944e:	f47f af75 	bne.w	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019452:	6983      	ldr	r3, [r0, #24]
90019454:	e79f      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019456:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90019458:	e79d      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001945a:	6a03      	ldr	r3, [r0, #32]
9001945c:	e79b      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001945e:	684b      	ldr	r3, [r1, #4]
90019460:	781a      	ldrb	r2, [r3, #0]
90019462:	785b      	ldrb	r3, [r3, #1]
90019464:	2b00      	cmp	r3, #0
90019466:	f47f af69 	bne.w	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001946a:	2a00      	cmp	r2, #0
9001946c:	d193      	bne.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001946e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90019470:	e791      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019472:	684b      	ldr	r3, [r1, #4]
90019474:	781a      	ldrb	r2, [r3, #0]
90019476:	785b      	ldrb	r3, [r3, #1]
90019478:	2b00      	cmp	r3, #0
9001947a:	f47f af5f 	bne.w	9001933c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001947e:	2a00      	cmp	r2, #0
90019480:	d189      	bne.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019482:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90019484:	e787      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019486:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90019488:	e785      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001948a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001948c:	e783      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001948e:	6c83      	ldr	r3, [r0, #72]	@ 0x48
90019490:	e781      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019492:	6e83      	ldr	r3, [r0, #104]	@ 0x68
90019494:	e77f      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019496:	6f03      	ldr	r3, [r0, #112]	@ 0x70
90019498:	e77d      	b.n	90019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001949a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001949a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001949e:	b087      	sub	sp, #28
900194a0:	9815      	ldr	r0, [sp, #84]	@ 0x54
900194a2:	9205      	str	r2, [sp, #20]
900194a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900194a8:	9101      	str	r1, [sp, #4]
900194aa:	9202      	str	r2, [sp, #8]
900194ac:	6841      	ldr	r1, [r0, #4]
900194ae:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
900194b2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
900194b6:	fb01 2404 	mla	r4, r1, r4, r2
900194ba:	6802      	ldr	r2, [r0, #0]
900194bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900194c0:	f8de 2000 	ldr.w	r2, [lr]
900194c4:	9203      	str	r2, [sp, #12]
900194c6:	f8de 2004 	ldr.w	r2, [lr, #4]
900194ca:	3204      	adds	r2, #4
900194cc:	9204      	str	r2, [sp, #16]
900194ce:	9a02      	ldr	r2, [sp, #8]
900194d0:	43d6      	mvns	r6, r2
900194d2:	b2f6      	uxtb	r6, r6
900194d4:	9a01      	ldr	r2, [sp, #4]
900194d6:	2a00      	cmp	r2, #0
900194d8:	dc03      	bgt.n	900194e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900194da:	9a05      	ldr	r2, [sp, #20]
900194dc:	2a00      	cmp	r2, #0
900194de:	f340 8129 	ble.w	90019734 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900194e2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900194e4:	f9be c008 	ldrsh.w	ip, [lr, #8]
900194e8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900194ec:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900194ee:	f9be 700c 	ldrsh.w	r7, [lr, #12]
900194f2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
900194f6:	2b00      	cmp	r3, #0
900194f8:	dd0e      	ble.n	90019518 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900194fa:	1408      	asrs	r0, r1, #16
900194fc:	d405      	bmi.n	9001950a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900194fe:	4560      	cmp	r0, ip
90019500:	da03      	bge.n	9001950a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019502:	1410      	asrs	r0, r2, #16
90019504:	d401      	bmi.n	9001950a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019506:	42b8      	cmp	r0, r7
90019508:	db07      	blt.n	9001951a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001950a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001950c:	3b01      	subs	r3, #1
9001950e:	3402      	adds	r4, #2
90019510:	4401      	add	r1, r0
90019512:	9814      	ldr	r0, [sp, #80]	@ 0x50
90019514:	4402      	add	r2, r0
90019516:	e7ee      	b.n	900194f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90019518:	d071      	beq.n	900195fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001951a:	1e58      	subs	r0, r3, #1
9001951c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001951e:	fb05 1500 	mla	r5, r5, r0, r1
90019522:	142d      	asrs	r5, r5, #16
90019524:	d45f      	bmi.n	900195e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019526:	4565      	cmp	r5, ip
90019528:	da5d      	bge.n	900195e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001952a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001952c:	fb05 2000 	mla	r0, r5, r0, r2
90019530:	1400      	asrs	r0, r0, #16
90019532:	d458      	bmi.n	900195e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019534:	42b8      	cmp	r0, r7
90019536:	da56      	bge.n	900195e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019538:	4699      	mov	r9, r3
9001953a:	46a2      	mov	sl, r4
9001953c:	f8bd b008 	ldrh.w	fp, [sp, #8]
90019540:	f1b9 0f00 	cmp.w	r9, #0
90019544:	dd57      	ble.n	900195f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
90019546:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001954a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001954e:	9803      	ldr	r0, [sp, #12]
90019550:	140d      	asrs	r5, r1, #16
90019552:	f109 39ff 	add.w	r9, r9, #4294967295
90019556:	fb07 000c 	mla	r0, r7, ip, r0
9001955a:	5d40      	ldrb	r0, [r0, r5]
9001955c:	9d04      	ldr	r5, [sp, #16]
9001955e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019562:	f8ba 5000 	ldrh.w	r5, [sl]
90019566:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001956a:	122f      	asrs	r7, r5, #8
9001956c:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019570:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019574:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019578:	00ed      	lsls	r5, r5, #3
9001957a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001957e:	fb17 f706 	smulbb	r7, r7, r6
90019582:	b2ed      	uxtb	r5, r5
90019584:	fb18 f806 	smulbb	r8, r8, r6
90019588:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001958c:	10c7      	asrs	r7, r0, #3
9001958e:	fb15 f506 	smulbb	r5, r5, r6
90019592:	00c0      	lsls	r0, r0, #3
90019594:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019598:	fa1f fc8c 	uxth.w	ip, ip
9001959c:	b2c0      	uxtb	r0, r0
9001959e:	fb07 870b 	mla	r7, r7, fp, r8
900195a2:	fb00 500b 	mla	r0, r0, fp, r5
900195a6:	f10c 0501 	add.w	r5, ip, #1
900195aa:	b2bf      	uxth	r7, r7
900195ac:	b280      	uxth	r0, r0
900195ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900195b2:	f107 0801 	add.w	r8, r7, #1
900195b6:	1c45      	adds	r5, r0, #1
900195b8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
900195bc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
900195c0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900195c4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900195c6:	ea4f 1858 	mov.w	r8, r8, lsr #5
900195ca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900195ce:	4401      	add	r1, r0
900195d0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900195d4:	9814      	ldr	r0, [sp, #80]	@ 0x50
900195d6:	ea45 0c0c 	orr.w	ip, r5, ip
900195da:	4402      	add	r2, r0
900195dc:	ea4c 0c08 	orr.w	ip, ip, r8
900195e0:	f82a cb02 	strh.w	ip, [sl], #2
900195e4:	e7ac      	b.n	90019540 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
900195e6:	f04f 0800 	mov.w	r8, #0
900195ea:	f8bd a008 	ldrh.w	sl, [sp, #8]
900195ee:	eb03 0008 	add.w	r0, r3, r8
900195f2:	2800      	cmp	r0, #0
900195f4:	dc41      	bgt.n	9001967a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900195f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900195fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900195fe:	9b01      	ldr	r3, [sp, #4]
90019600:	2b00      	cmp	r3, #0
90019602:	f340 8097 	ble.w	90019734 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90019606:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001960a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001960c:	ee30 0a04 	vadd.f32	s0, s0, s8
90019610:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019614:	eef0 6a62 	vmov.f32	s13, s5
90019618:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001961c:	ee31 1a05 	vadd.f32	s2, s2, s10
90019620:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019624:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
90019628:	eef0 6a43 	vmov.f32	s13, s6
9001962c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019630:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
90019634:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019638:	ee61 7a27 	vmul.f32	s15, s2, s15
9001963c:	ee77 2a62 	vsub.f32	s5, s14, s5
90019640:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019644:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019648:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001964c:	ee12 2a90 	vmov	r2, s5
90019650:	eef0 2a47 	vmov.f32	s5, s14
90019654:	fb92 f3f3 	sdiv	r3, r2, r3
90019658:	ee13 2a10 	vmov	r2, s6
9001965c:	9313      	str	r3, [sp, #76]	@ 0x4c
9001965e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019660:	eeb0 3a67 	vmov.f32	s6, s15
90019664:	fb92 f3f3 	sdiv	r3, r2, r3
90019668:	9314      	str	r3, [sp, #80]	@ 0x50
9001966a:	9b01      	ldr	r3, [sp, #4]
9001966c:	9a05      	ldr	r2, [sp, #20]
9001966e:	3b01      	subs	r3, #1
90019670:	9301      	str	r3, [sp, #4]
90019672:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019674:	bf08      	it	eq
90019676:	4613      	moveq	r3, r2
90019678:	e72c      	b.n	900194d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001967a:	140f      	asrs	r7, r1, #16
9001967c:	d453      	bmi.n	90019726 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001967e:	f8de 5008 	ldr.w	r5, [lr, #8]
90019682:	42bd      	cmp	r5, r7
90019684:	dd4f      	ble.n	90019726 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019686:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001968a:	d44c      	bmi.n	90019726 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001968c:	f8de 000c 	ldr.w	r0, [lr, #12]
90019690:	4560      	cmp	r0, ip
90019692:	dd48      	ble.n	90019726 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019694:	9803      	ldr	r0, [sp, #12]
90019696:	b22d      	sxth	r5, r5
90019698:	fb0c 0505 	mla	r5, ip, r5, r0
9001969c:	5de8      	ldrb	r0, [r5, r7]
9001969e:	9d04      	ldr	r5, [sp, #16]
900196a0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
900196a4:	f06f 0501 	mvn.w	r5, #1
900196a8:	fb05 fb08 	mul.w	fp, r5, r8
900196ac:	ea4f 2c20 	mov.w	ip, r0, asr #8
900196b0:	f834 500b 	ldrh.w	r5, [r4, fp]
900196b4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900196b8:	122f      	asrs	r7, r5, #8
900196ba:	ea4f 09e5 	mov.w	r9, r5, asr #3
900196be:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900196c2:	00ed      	lsls	r5, r5, #3
900196c4:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
900196c8:	fb17 f706 	smulbb	r7, r7, r6
900196cc:	b2ed      	uxtb	r5, r5
900196ce:	fb19 f906 	smulbb	r9, r9, r6
900196d2:	fb0c 7c0a 	mla	ip, ip, sl, r7
900196d6:	10c7      	asrs	r7, r0, #3
900196d8:	fb15 f506 	smulbb	r5, r5, r6
900196dc:	00c0      	lsls	r0, r0, #3
900196de:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900196e2:	fa1f fc8c 	uxth.w	ip, ip
900196e6:	b2c0      	uxtb	r0, r0
900196e8:	fb07 970a 	mla	r7, r7, sl, r9
900196ec:	fb00 500a 	mla	r0, r0, sl, r5
900196f0:	f10c 0501 	add.w	r5, ip, #1
900196f4:	b2bf      	uxth	r7, r7
900196f6:	b280      	uxth	r0, r0
900196f8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900196fc:	f107 0901 	add.w	r9, r7, #1
90019700:	1c45      	adds	r5, r0, #1
90019702:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90019706:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001970a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001970e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90019712:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019716:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001971a:	ea45 0c0c 	orr.w	ip, r5, ip
9001971e:	ea4c 0c09 	orr.w	ip, ip, r9
90019722:	f824 c00b 	strh.w	ip, [r4, fp]
90019726:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90019728:	f108 38ff 	add.w	r8, r8, #4294967295
9001972c:	4401      	add	r1, r0
9001972e:	9814      	ldr	r0, [sp, #80]	@ 0x50
90019730:	4402      	add	r2, r0
90019732:	e75c      	b.n	900195ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90019734:	b007      	add	sp, #28
90019736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001973a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001973a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001973e:	b085      	sub	sp, #20
90019740:	4693      	mov	fp, r2
90019742:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019746:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90019748:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001974a:	6870      	ldr	r0, [r6, #4]
9001974c:	9100      	str	r1, [sp, #0]
9001974e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90019752:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
90019756:	fb00 2404 	mla	r4, r0, r4, r2
9001975a:	6832      	ldr	r2, [r6, #0]
9001975c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019760:	682a      	ldr	r2, [r5, #0]
90019762:	9201      	str	r2, [sp, #4]
90019764:	686a      	ldr	r2, [r5, #4]
90019766:	3204      	adds	r2, #4
90019768:	9202      	str	r2, [sp, #8]
9001976a:	9a00      	ldr	r2, [sp, #0]
9001976c:	2a00      	cmp	r2, #0
9001976e:	dc03      	bgt.n	90019778 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019770:	f1bb 0f00 	cmp.w	fp, #0
90019774:	f340 80a0 	ble.w	900198b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90019778:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001977a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001977e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90019782:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019784:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019788:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001978c:	2b00      	cmp	r3, #0
9001978e:	dd0c      	ble.n	900197aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019790:	1406      	asrs	r6, r0, #16
90019792:	d405      	bmi.n	900197a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019794:	454e      	cmp	r6, r9
90019796:	da03      	bge.n	900197a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019798:	1416      	asrs	r6, r2, #16
9001979a:	d401      	bmi.n	900197a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001979c:	4546      	cmp	r6, r8
9001979e:	db05      	blt.n	900197ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900197a0:	4470      	add	r0, lr
900197a2:	4462      	add	r2, ip
900197a4:	3b01      	subs	r3, #1
900197a6:	3402      	adds	r4, #2
900197a8:	e7f0      	b.n	9001978c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900197aa:	d00f      	beq.n	900197cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900197ac:	1e5e      	subs	r6, r3, #1
900197ae:	fb0e 0706 	mla	r7, lr, r6, r0
900197b2:	143f      	asrs	r7, r7, #16
900197b4:	d541      	bpl.n	9001983a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
900197b6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
900197ba:	4698      	mov	r8, r3
900197bc:	9603      	str	r6, [sp, #12]
900197be:	f1b8 0f00 	cmp.w	r8, #0
900197c2:	dc59      	bgt.n	90019878 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
900197c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900197c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900197cc:	9b00      	ldr	r3, [sp, #0]
900197ce:	2b00      	cmp	r3, #0
900197d0:	dd72      	ble.n	900198b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
900197d2:	ee30 0a04 	vadd.f32	s0, s0, s8
900197d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900197d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900197dc:	eeb0 6a62 	vmov.f32	s12, s5
900197e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
900197e4:	ee31 1a05 	vadd.f32	s2, s2, s10
900197e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900197ec:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
900197f0:	eeb0 6a43 	vmov.f32	s12, s6
900197f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900197f8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
900197fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019800:	ee61 7a27 	vmul.f32	s15, s2, s15
90019804:	ee77 2a62 	vsub.f32	s5, s14, s5
90019808:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001980c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019810:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019814:	ee12 2a90 	vmov	r2, s5
90019818:	eef0 2a47 	vmov.f32	s5, s14
9001981c:	fb92 fef3 	sdiv	lr, r2, r3
90019820:	ee13 2a10 	vmov	r2, s6
90019824:	eeb0 3a67 	vmov.f32	s6, s15
90019828:	fb92 fcf3 	sdiv	ip, r2, r3
9001982c:	9b00      	ldr	r3, [sp, #0]
9001982e:	3b01      	subs	r3, #1
90019830:	9300      	str	r3, [sp, #0]
90019832:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019834:	bf08      	it	eq
90019836:	465b      	moveq	r3, fp
90019838:	e797      	b.n	9001976a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001983a:	454f      	cmp	r7, r9
9001983c:	dabb      	bge.n	900197b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001983e:	fb0c 2606 	mla	r6, ip, r6, r2
90019842:	1436      	asrs	r6, r6, #16
90019844:	d4b7      	bmi.n	900197b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019846:	4546      	cmp	r6, r8
90019848:	dab5      	bge.n	900197b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001984a:	461e      	mov	r6, r3
9001984c:	46a0      	mov	r8, r4
9001984e:	2e00      	cmp	r6, #0
90019850:	ddb8      	ble.n	900197c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90019852:	1417      	asrs	r7, r2, #16
90019854:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90019858:	9901      	ldr	r1, [sp, #4]
9001985a:	ea4f 4920 	mov.w	r9, r0, asr #16
9001985e:	4462      	add	r2, ip
90019860:	4470      	add	r0, lr
90019862:	fb0a 1707 	mla	r7, sl, r7, r1
90019866:	9902      	ldr	r1, [sp, #8]
90019868:	3e01      	subs	r6, #1
9001986a:	f817 7009 	ldrb.w	r7, [r7, r9]
9001986e:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90019872:	f828 7b02 	strh.w	r7, [r8], #2
90019876:	e7ea      	b.n	9001984e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
90019878:	ea5f 4920 	movs.w	r9, r0, asr #16
9001987c:	d417      	bmi.n	900198ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001987e:	68ae      	ldr	r6, [r5, #8]
90019880:	454e      	cmp	r6, r9
90019882:	dd14      	ble.n	900198ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90019884:	ea5f 4a22 	movs.w	sl, r2, asr #16
90019888:	d411      	bmi.n	900198ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001988a:	68ef      	ldr	r7, [r5, #12]
9001988c:	4557      	cmp	r7, sl
9001988e:	dd0e      	ble.n	900198ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90019890:	9f01      	ldr	r7, [sp, #4]
90019892:	b236      	sxth	r6, r6
90019894:	f06f 0101 	mvn.w	r1, #1
90019898:	fb0a 7606 	mla	r6, sl, r6, r7
9001989c:	9f02      	ldr	r7, [sp, #8]
9001989e:	f816 6009 	ldrb.w	r6, [r6, r9]
900198a2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
900198a6:	fb01 f608 	mul.w	r6, r1, r8
900198aa:	9903      	ldr	r1, [sp, #12]
900198ac:	538f      	strh	r7, [r1, r6]
900198ae:	4470      	add	r0, lr
900198b0:	4462      	add	r2, ip
900198b2:	f108 38ff 	add.w	r8, r8, #4294967295
900198b6:	e782      	b.n	900197be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900198b8:	b005      	add	sp, #20
900198ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900198be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900198be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900198c2:	b087      	sub	sp, #28
900198c4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900198c6:	9205      	str	r2, [sp, #20]
900198c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900198cc:	9102      	str	r1, [sp, #8]
900198ce:	9203      	str	r2, [sp, #12]
900198d0:	6861      	ldr	r1, [r4, #4]
900198d2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
900198d6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
900198da:	fb01 2000 	mla	r0, r1, r0, r2
900198de:	6822      	ldr	r2, [r4, #0]
900198e0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
900198e4:	9200      	str	r2, [sp, #0]
900198e6:	f8dc 2000 	ldr.w	r2, [ip]
900198ea:	9204      	str	r2, [sp, #16]
900198ec:	f8dc 2004 	ldr.w	r2, [ip, #4]
900198f0:	3204      	adds	r2, #4
900198f2:	9201      	str	r2, [sp, #4]
900198f4:	9a03      	ldr	r2, [sp, #12]
900198f6:	43d5      	mvns	r5, r2
900198f8:	b2ed      	uxtb	r5, r5
900198fa:	9a02      	ldr	r2, [sp, #8]
900198fc:	2a00      	cmp	r2, #0
900198fe:	dc03      	bgt.n	90019908 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90019900:	9a05      	ldr	r2, [sp, #20]
90019902:	2a00      	cmp	r2, #0
90019904:	f340 812c 	ble.w	90019b60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90019908:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001990a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001990e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019912:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90019914:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90019918:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001991c:	2b00      	cmp	r3, #0
9001991e:	dd10      	ble.n	90019942 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019920:	140c      	asrs	r4, r1, #16
90019922:	d405      	bmi.n	90019930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019924:	4574      	cmp	r4, lr
90019926:	da03      	bge.n	90019930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019928:	1414      	asrs	r4, r2, #16
9001992a:	d401      	bmi.n	90019930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001992c:	42bc      	cmp	r4, r7
9001992e:	db09      	blt.n	90019944 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90019930:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90019932:	3b01      	subs	r3, #1
90019934:	9800      	ldr	r0, [sp, #0]
90019936:	4421      	add	r1, r4
90019938:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001993a:	3002      	adds	r0, #2
9001993c:	4422      	add	r2, r4
9001993e:	9000      	str	r0, [sp, #0]
90019940:	e7ec      	b.n	9001991c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
90019942:	d071      	beq.n	90019a28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
90019944:	1e5c      	subs	r4, r3, #1
90019946:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90019948:	fb06 1604 	mla	r6, r6, r4, r1
9001994c:	1436      	asrs	r6, r6, #16
9001994e:	d45d      	bmi.n	90019a0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019950:	4576      	cmp	r6, lr
90019952:	da5b      	bge.n	90019a0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019954:	9e14      	ldr	r6, [sp, #80]	@ 0x50
90019956:	fb06 2404 	mla	r4, r6, r4, r2
9001995a:	1424      	asrs	r4, r4, #16
9001995c:	d456      	bmi.n	90019a0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001995e:	42bc      	cmp	r4, r7
90019960:	da54      	bge.n	90019a0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019962:	4698      	mov	r8, r3
90019964:	f8dd 9000 	ldr.w	r9, [sp]
90019968:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001996c:	f1b8 0f00 	cmp.w	r8, #0
90019970:	dd54      	ble.n	90019a1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90019972:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90019976:	1414      	asrs	r4, r2, #16
90019978:	9804      	ldr	r0, [sp, #16]
9001997a:	140e      	asrs	r6, r1, #16
9001997c:	f108 38ff 	add.w	r8, r8, #4294967295
90019980:	fb07 0404 	mla	r4, r7, r4, r0
90019984:	9801      	ldr	r0, [sp, #4]
90019986:	f814 e006 	ldrb.w	lr, [r4, r6]
9001998a:	f8b9 4000 	ldrh.w	r4, [r9]
9001998e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90019992:	1227      	asrs	r7, r4, #8
90019994:	eb00 0b0e 	add.w	fp, r0, lr
90019998:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001999c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900199a0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900199a2:	f89b 6002 	ldrb.w	r6, [fp, #2]
900199a6:	f89b b001 	ldrb.w	fp, [fp, #1]
900199aa:	4401      	add	r1, r0
900199ac:	fb16 f60a 	smulbb	r6, r6, sl
900199b0:	9814      	ldr	r0, [sp, #80]	@ 0x50
900199b2:	fb1b fb0a 	smulbb	fp, fp, sl
900199b6:	fb07 6705 	mla	r7, r7, r5, r6
900199ba:	10e6      	asrs	r6, r4, #3
900199bc:	00e4      	lsls	r4, r4, #3
900199be:	4402      	add	r2, r0
900199c0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900199c4:	b2bf      	uxth	r7, r7
900199c6:	b2e4      	uxtb	r4, r4
900199c8:	fb06 b605 	mla	r6, r6, r5, fp
900199cc:	fb14 f405 	smulbb	r4, r4, r5
900199d0:	b2b6      	uxth	r6, r6
900199d2:	fb0e 4e0a 	mla	lr, lr, sl, r4
900199d6:	1c7c      	adds	r4, r7, #1
900199d8:	f106 0b01 	add.w	fp, r6, #1
900199dc:	fa1f fe8e 	uxth.w	lr, lr
900199e0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
900199e4:	f10e 0401 	add.w	r4, lr, #1
900199e8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
900199ec:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
900199f0:	eb04 241e 	add.w	r4, r4, lr, lsr #8
900199f4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
900199f8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
900199fc:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90019a00:	4327      	orrs	r7, r4
90019a02:	ea47 070b 	orr.w	r7, r7, fp
90019a06:	f829 7b02 	strh.w	r7, [r9], #2
90019a0a:	e7af      	b.n	9001996c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
90019a0c:	f04f 0e00 	mov.w	lr, #0
90019a10:	f8bd 900c 	ldrh.w	r9, [sp, #12]
90019a14:	eb03 040e 	add.w	r4, r3, lr
90019a18:	2c00      	cmp	r4, #0
90019a1a:	dc43      	bgt.n	90019aa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90019a1c:	9a00      	ldr	r2, [sp, #0]
90019a1e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019a22:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90019a26:	9300      	str	r3, [sp, #0]
90019a28:	9b02      	ldr	r3, [sp, #8]
90019a2a:	2b00      	cmp	r3, #0
90019a2c:	f340 8098 	ble.w	90019b60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90019a30:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90019a34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019a36:	ee30 0a04 	vadd.f32	s0, s0, s8
90019a3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019a3e:	eef0 6a62 	vmov.f32	s13, s5
90019a42:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019a46:	ee31 1a05 	vadd.f32	s2, s2, s10
90019a4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019a4e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
90019a52:	eef0 6a43 	vmov.f32	s13, s6
90019a56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019a5a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
90019a5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019a62:	ee61 7a27 	vmul.f32	s15, s2, s15
90019a66:	ee77 2a62 	vsub.f32	s5, s14, s5
90019a6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019a6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019a72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019a76:	ee12 2a90 	vmov	r2, s5
90019a7a:	eef0 2a47 	vmov.f32	s5, s14
90019a7e:	fb92 f3f3 	sdiv	r3, r2, r3
90019a82:	ee13 2a10 	vmov	r2, s6
90019a86:	9313      	str	r3, [sp, #76]	@ 0x4c
90019a88:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019a8a:	eeb0 3a67 	vmov.f32	s6, s15
90019a8e:	fb92 f3f3 	sdiv	r3, r2, r3
90019a92:	9314      	str	r3, [sp, #80]	@ 0x50
90019a94:	9b02      	ldr	r3, [sp, #8]
90019a96:	9a05      	ldr	r2, [sp, #20]
90019a98:	3b01      	subs	r3, #1
90019a9a:	9302      	str	r3, [sp, #8]
90019a9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019a9e:	bf08      	it	eq
90019aa0:	4613      	moveq	r3, r2
90019aa2:	e72a      	b.n	900198fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90019aa4:	140f      	asrs	r7, r1, #16
90019aa6:	d454      	bmi.n	90019b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90019aa8:	f8dc 6008 	ldr.w	r6, [ip, #8]
90019aac:	42be      	cmp	r6, r7
90019aae:	dd50      	ble.n	90019b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90019ab0:	ea5f 4822 	movs.w	r8, r2, asr #16
90019ab4:	d44d      	bmi.n	90019b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90019ab6:	f8dc 400c 	ldr.w	r4, [ip, #12]
90019aba:	4544      	cmp	r4, r8
90019abc:	dd49      	ble.n	90019b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90019abe:	9c04      	ldr	r4, [sp, #16]
90019ac0:	b236      	sxth	r6, r6
90019ac2:	f06f 0001 	mvn.w	r0, #1
90019ac6:	fb08 4606 	mla	r6, r8, r6, r4
90019aca:	9c01      	ldr	r4, [sp, #4]
90019acc:	fb00 fa0e 	mul.w	sl, r0, lr
90019ad0:	9800      	ldr	r0, [sp, #0]
90019ad2:	f816 8007 	ldrb.w	r8, [r6, r7]
90019ad6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90019ada:	eb04 0b08 	add.w	fp, r4, r8
90019ade:	f830 400a 	ldrh.w	r4, [r0, sl]
90019ae2:	9801      	ldr	r0, [sp, #4]
90019ae4:	f89b 6002 	ldrb.w	r6, [fp, #2]
90019ae8:	1227      	asrs	r7, r4, #8
90019aea:	f89b b001 	ldrb.w	fp, [fp, #1]
90019aee:	fb16 f609 	smulbb	r6, r6, r9
90019af2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019af6:	f810 8008 	ldrb.w	r8, [r0, r8]
90019afa:	fb1b fb09 	smulbb	fp, fp, r9
90019afe:	fb07 6705 	mla	r7, r7, r5, r6
90019b02:	10e6      	asrs	r6, r4, #3
90019b04:	00e4      	lsls	r4, r4, #3
90019b06:	9800      	ldr	r0, [sp, #0]
90019b08:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019b0c:	b2bf      	uxth	r7, r7
90019b0e:	b2e4      	uxtb	r4, r4
90019b10:	fb06 b605 	mla	r6, r6, r5, fp
90019b14:	fb14 f405 	smulbb	r4, r4, r5
90019b18:	b2b6      	uxth	r6, r6
90019b1a:	fb08 4809 	mla	r8, r8, r9, r4
90019b1e:	1c7c      	adds	r4, r7, #1
90019b20:	f106 0b01 	add.w	fp, r6, #1
90019b24:	fa1f f888 	uxth.w	r8, r8
90019b28:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90019b2c:	f108 0401 	add.w	r4, r8, #1
90019b30:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90019b34:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019b38:	eb04 2418 	add.w	r4, r4, r8, lsr #8
90019b3c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90019b40:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90019b44:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90019b48:	4327      	orrs	r7, r4
90019b4a:	ea47 070b 	orr.w	r7, r7, fp
90019b4e:	f820 700a 	strh.w	r7, [r0, sl]
90019b52:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90019b54:	f10e 3eff 	add.w	lr, lr, #4294967295
90019b58:	4401      	add	r1, r0
90019b5a:	9814      	ldr	r0, [sp, #80]	@ 0x50
90019b5c:	4402      	add	r2, r0
90019b5e:	e759      	b.n	90019a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90019b60:	b007      	add	sp, #28
90019b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90019b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019b6c:	b085      	sub	sp, #20
90019b6e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019b72:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90019b74:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90019b76:	9203      	str	r2, [sp, #12]
90019b78:	6870      	ldr	r0, [r6, #4]
90019b7a:	686f      	ldr	r7, [r5, #4]
90019b7c:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
90019b80:	3704      	adds	r7, #4
90019b82:	9101      	str	r1, [sp, #4]
90019b84:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90019b88:	fb00 2404 	mla	r4, r0, r4, r2
90019b8c:	6832      	ldr	r2, [r6, #0]
90019b8e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019b92:	682a      	ldr	r2, [r5, #0]
90019b94:	9202      	str	r2, [sp, #8]
90019b96:	9a01      	ldr	r2, [sp, #4]
90019b98:	2a00      	cmp	r2, #0
90019b9a:	dc03      	bgt.n	90019ba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90019b9c:	9a03      	ldr	r2, [sp, #12]
90019b9e:	2a00      	cmp	r2, #0
90019ba0:	f340 80cc 	ble.w	90019d3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90019ba4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90019ba6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019baa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90019bae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019bb0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019bb4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019bb8:	2b00      	cmp	r3, #0
90019bba:	dd0d      	ble.n	90019bd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019bbc:	1406      	asrs	r6, r0, #16
90019bbe:	d405      	bmi.n	90019bcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019bc0:	454e      	cmp	r6, r9
90019bc2:	da03      	bge.n	90019bcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019bc4:	1416      	asrs	r6, r2, #16
90019bc6:	d401      	bmi.n	90019bcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019bc8:	4546      	cmp	r6, r8
90019bca:	db06      	blt.n	90019bda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019bcc:	9e12      	ldr	r6, [sp, #72]	@ 0x48
90019bce:	4460      	add	r0, ip
90019bd0:	3b01      	subs	r3, #1
90019bd2:	3402      	adds	r4, #2
90019bd4:	4432      	add	r2, r6
90019bd6:	e7ef      	b.n	90019bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
90019bd8:	d00f      	beq.n	90019bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90019bda:	1e5e      	subs	r6, r3, #1
90019bdc:	fb0c 0e06 	mla	lr, ip, r6, r0
90019be0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
90019be4:	d543      	bpl.n	90019c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
90019be6:	4698      	mov	r8, r3
90019be8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
90019bec:	f1b8 0f00 	cmp.w	r8, #0
90019bf0:	dc71      	bgt.n	90019cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
90019bf2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019bf6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019bfa:	9b01      	ldr	r3, [sp, #4]
90019bfc:	2b00      	cmp	r3, #0
90019bfe:	f340 809d 	ble.w	90019d3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90019c02:	ee30 0a04 	vadd.f32	s0, s0, s8
90019c06:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019c08:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019c0c:	eeb0 6a62 	vmov.f32	s12, s5
90019c10:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019c14:	ee31 1a05 	vadd.f32	s2, s2, s10
90019c18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019c1c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019c20:	eeb0 6a43 	vmov.f32	s12, s6
90019c24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019c28:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90019c2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019c30:	ee61 7a27 	vmul.f32	s15, s2, s15
90019c34:	ee77 2a62 	vsub.f32	s5, s14, s5
90019c38:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019c3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019c40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019c44:	ee12 2a90 	vmov	r2, s5
90019c48:	eef0 2a47 	vmov.f32	s5, s14
90019c4c:	fb92 fcf3 	sdiv	ip, r2, r3
90019c50:	ee13 2a10 	vmov	r2, s6
90019c54:	eeb0 3a67 	vmov.f32	s6, s15
90019c58:	fb92 f3f3 	sdiv	r3, r2, r3
90019c5c:	9312      	str	r3, [sp, #72]	@ 0x48
90019c5e:	9b01      	ldr	r3, [sp, #4]
90019c60:	9a03      	ldr	r2, [sp, #12]
90019c62:	3b01      	subs	r3, #1
90019c64:	9301      	str	r3, [sp, #4]
90019c66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019c68:	bf08      	it	eq
90019c6a:	4613      	moveq	r3, r2
90019c6c:	e793      	b.n	90019b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90019c6e:	45ce      	cmp	lr, r9
90019c70:	dab9      	bge.n	90019be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019c72:	9912      	ldr	r1, [sp, #72]	@ 0x48
90019c74:	fb01 2606 	mla	r6, r1, r6, r2
90019c78:	1436      	asrs	r6, r6, #16
90019c7a:	d4b4      	bmi.n	90019be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019c7c:	4546      	cmp	r6, r8
90019c7e:	dab2      	bge.n	90019be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019c80:	4698      	mov	r8, r3
90019c82:	46a2      	mov	sl, r4
90019c84:	f1b8 0f00 	cmp.w	r8, #0
90019c88:	ddb3      	ble.n	90019bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90019c8a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019c8e:	1416      	asrs	r6, r2, #16
90019c90:	9902      	ldr	r1, [sp, #8]
90019c92:	ea4f 4e20 	mov.w	lr, r0, asr #16
90019c96:	f108 38ff 	add.w	r8, r8, #4294967295
90019c9a:	4460      	add	r0, ip
90019c9c:	fb09 1606 	mla	r6, r9, r6, r1
90019ca0:	4928      	ldr	r1, [pc, #160]	@ (90019d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
90019ca2:	f816 e00e 	ldrb.w	lr, [r6, lr]
90019ca6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90019caa:	eb07 0b0e 	add.w	fp, r7, lr
90019cae:	f89b 6001 	ldrb.w	r6, [fp, #1]
90019cb2:	f89b 9002 	ldrb.w	r9, [fp, #2]
90019cb6:	00f6      	lsls	r6, r6, #3
90019cb8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
90019cbc:	9912      	ldr	r1, [sp, #72]	@ 0x48
90019cbe:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90019cc2:	440a      	add	r2, r1
90019cc4:	ea49 0606 	orr.w	r6, r9, r6
90019cc8:	f817 900e 	ldrb.w	r9, [r7, lr]
90019ccc:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
90019cd0:	f82a 6b02 	strh.w	r6, [sl], #2
90019cd4:	e7d6      	b.n	90019c84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019cd6:	ea5f 4920 	movs.w	r9, r0, asr #16
90019cda:	d429      	bmi.n	90019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019cdc:	68ae      	ldr	r6, [r5, #8]
90019cde:	454e      	cmp	r6, r9
90019ce0:	dd26      	ble.n	90019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019ce2:	ea5f 4b22 	movs.w	fp, r2, asr #16
90019ce6:	d423      	bmi.n	90019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019ce8:	68e9      	ldr	r1, [r5, #12]
90019cea:	4559      	cmp	r1, fp
90019cec:	dd20      	ble.n	90019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019cee:	fa0f fe86 	sxth.w	lr, r6
90019cf2:	9902      	ldr	r1, [sp, #8]
90019cf4:	fb0b 1e0e 	mla	lr, fp, lr, r1
90019cf8:	f06f 0101 	mvn.w	r1, #1
90019cfc:	f81e e009 	ldrb.w	lr, [lr, r9]
90019d00:	fb01 f908 	mul.w	r9, r1, r8
90019d04:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
90019d08:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90019d0c:	eb07 060e 	add.w	r6, r7, lr
90019d10:	f896 b002 	ldrb.w	fp, [r6, #2]
90019d14:	7876      	ldrb	r6, [r6, #1]
90019d16:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
90019d1a:	00f6      	lsls	r6, r6, #3
90019d1c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90019d20:	ea4b 0606 	orr.w	r6, fp, r6
90019d24:	f817 b00e 	ldrb.w	fp, [r7, lr]
90019d28:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
90019d2c:	f82a 6009 	strh.w	r6, [sl, r9]
90019d30:	9912      	ldr	r1, [sp, #72]	@ 0x48
90019d32:	4460      	add	r0, ip
90019d34:	f108 38ff 	add.w	r8, r8, #4294967295
90019d38:	440a      	add	r2, r1
90019d3a:	e757      	b.n	90019bec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019d3c:	b005      	add	sp, #20
90019d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019d42:	bf00      	nop
90019d44:	fffff800 	.word	0xfffff800

90019d48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019d4c:	b087      	sub	sp, #28
90019d4e:	468b      	mov	fp, r1
90019d50:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019d54:	9815      	ldr	r0, [sp, #84]	@ 0x54
90019d56:	9204      	str	r2, [sp, #16]
90019d58:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90019d5c:	6841      	ldr	r1, [r0, #4]
90019d5e:	9205      	str	r2, [sp, #20]
90019d60:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
90019d64:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
90019d68:	fb01 2404 	mla	r4, r1, r4, r2
90019d6c:	6802      	ldr	r2, [r0, #0]
90019d6e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019d72:	f8dc 2000 	ldr.w	r2, [ip]
90019d76:	9201      	str	r2, [sp, #4]
90019d78:	f8dc 2004 	ldr.w	r2, [ip, #4]
90019d7c:	3204      	adds	r2, #4
90019d7e:	9202      	str	r2, [sp, #8]
90019d80:	f1bb 0f00 	cmp.w	fp, #0
90019d84:	dc03      	bgt.n	90019d8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90019d86:	9a04      	ldr	r2, [sp, #16]
90019d88:	2a00      	cmp	r2, #0
90019d8a:	f340 8138 	ble.w	90019ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90019d8e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90019d90:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90019d94:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90019d98:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90019d9a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
90019d9e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019da2:	2b00      	cmp	r3, #0
90019da4:	dd0e      	ble.n	90019dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019da6:	1402      	asrs	r2, r0, #16
90019da8:	d405      	bmi.n	90019db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019daa:	42ba      	cmp	r2, r7
90019dac:	da03      	bge.n	90019db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019dae:	140a      	asrs	r2, r1, #16
90019db0:	d401      	bmi.n	90019db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019db2:	42b2      	cmp	r2, r6
90019db4:	db07      	blt.n	90019dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019db6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019db8:	3b01      	subs	r3, #1
90019dba:	3402      	adds	r4, #2
90019dbc:	4410      	add	r0, r2
90019dbe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90019dc0:	4411      	add	r1, r2
90019dc2:	e7ee      	b.n	90019da2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90019dc4:	d019      	beq.n	90019dfa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
90019dc6:	1e5a      	subs	r2, r3, #1
90019dc8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90019dca:	fb05 0502 	mla	r5, r5, r2, r0
90019dce:	142d      	asrs	r5, r5, #16
90019dd0:	d409      	bmi.n	90019de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019dd2:	42bd      	cmp	r5, r7
90019dd4:	da07      	bge.n	90019de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019dd6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90019dd8:	fb05 1202 	mla	r2, r5, r2, r1
90019ddc:	1412      	asrs	r2, r2, #16
90019dde:	d402      	bmi.n	90019de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019de0:	42b2      	cmp	r2, r6
90019de2:	f2c0 80ac 	blt.w	90019f3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90019de6:	f04f 0e00 	mov.w	lr, #0
90019dea:	eb03 020e 	add.w	r2, r3, lr
90019dee:	2a00      	cmp	r2, #0
90019df0:	dc3e      	bgt.n	90019e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
90019df2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019df6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019dfa:	f1bb 0f00 	cmp.w	fp, #0
90019dfe:	f340 80fe 	ble.w	90019ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90019e02:	ee30 0a04 	vadd.f32	s0, s0, s8
90019e06:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019e08:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019e0c:	f1bb 0b01 	subs.w	fp, fp, #1
90019e10:	eeb0 6a62 	vmov.f32	s12, s5
90019e14:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019e18:	ee31 1a05 	vadd.f32	s2, s2, s10
90019e1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019e20:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
90019e24:	eeb0 6a43 	vmov.f32	s12, s6
90019e28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019e2c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
90019e30:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019e34:	ee61 7a27 	vmul.f32	s15, s2, s15
90019e38:	ee77 2a62 	vsub.f32	s5, s14, s5
90019e3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019e40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019e44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019e48:	ee12 2a90 	vmov	r2, s5
90019e4c:	eef0 2a47 	vmov.f32	s5, s14
90019e50:	fb92 f3f3 	sdiv	r3, r2, r3
90019e54:	ee13 2a10 	vmov	r2, s6
90019e58:	9313      	str	r3, [sp, #76]	@ 0x4c
90019e5a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019e5c:	eeb0 3a67 	vmov.f32	s6, s15
90019e60:	fb92 f3f3 	sdiv	r3, r2, r3
90019e64:	9a04      	ldr	r2, [sp, #16]
90019e66:	9314      	str	r3, [sp, #80]	@ 0x50
90019e68:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019e6a:	bf08      	it	eq
90019e6c:	4613      	moveq	r3, r2
90019e6e:	e787      	b.n	90019d80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019e70:	1406      	asrs	r6, r0, #16
90019e72:	d45d      	bmi.n	90019f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019e74:	f8dc 5008 	ldr.w	r5, [ip, #8]
90019e78:	42b5      	cmp	r5, r6
90019e7a:	dd59      	ble.n	90019f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019e7c:	140f      	asrs	r7, r1, #16
90019e7e:	d457      	bmi.n	90019f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019e80:	f8dc 200c 	ldr.w	r2, [ip, #12]
90019e84:	42ba      	cmp	r2, r7
90019e86:	dd53      	ble.n	90019f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019e88:	9a01      	ldr	r2, [sp, #4]
90019e8a:	b22d      	sxth	r5, r5
90019e8c:	fb07 2505 	mla	r5, r7, r5, r2
90019e90:	5daa      	ldrb	r2, [r5, r6]
90019e92:	9d02      	ldr	r5, [sp, #8]
90019e94:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90019e98:	0e2e      	lsrs	r6, r5, #24
90019e9a:	d049      	beq.n	90019f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019e9c:	f06f 0201 	mvn.w	r2, #1
90019ea0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019ea4:	fb02 f20e 	mul.w	r2, r2, lr
90019ea8:	f834 8002 	ldrh.w	r8, [r4, r2]
90019eac:	9203      	str	r2, [sp, #12]
90019eae:	9a05      	ldr	r2, [sp, #20]
90019eb0:	ea4f 2728 	mov.w	r7, r8, asr #8
90019eb4:	4356      	muls	r6, r2
90019eb6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019eba:	1c72      	adds	r2, r6, #1
90019ebc:	eb02 2226 	add.w	r2, r2, r6, asr #8
90019ec0:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019ec4:	b2ed      	uxtb	r5, r5
90019ec6:	1212      	asrs	r2, r2, #8
90019ec8:	fa1f f982 	uxth.w	r9, r2
90019ecc:	43d2      	mvns	r2, r2
90019ece:	fb16 f609 	smulbb	r6, r6, r9
90019ed2:	b2d2      	uxtb	r2, r2
90019ed4:	fb15 f509 	smulbb	r5, r5, r9
90019ed8:	fb07 6702 	mla	r7, r7, r2, r6
90019edc:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019ee0:	fb1a fa09 	smulbb	sl, sl, r9
90019ee4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019ee8:	b2bf      	uxth	r7, r7
90019eea:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019eee:	fa5f f888 	uxtb.w	r8, r8
90019ef2:	fb06 a602 	mla	r6, r6, r2, sl
90019ef6:	fb08 5502 	mla	r5, r8, r2, r5
90019efa:	1c7a      	adds	r2, r7, #1
90019efc:	b2b6      	uxth	r6, r6
90019efe:	b2ad      	uxth	r5, r5
90019f00:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90019f04:	9a03      	ldr	r2, [sp, #12]
90019f06:	f105 0a01 	add.w	sl, r5, #1
90019f0a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019f0e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019f12:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019f16:	ea4a 0707 	orr.w	r7, sl, r7
90019f1a:	f106 0a01 	add.w	sl, r6, #1
90019f1e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019f22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019f26:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019f2a:	ea47 070a 	orr.w	r7, r7, sl
90019f2e:	52a7      	strh	r7, [r4, r2]
90019f30:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019f32:	f10e 3eff 	add.w	lr, lr, #4294967295
90019f36:	4410      	add	r0, r2
90019f38:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90019f3a:	4411      	add	r1, r2
90019f3c:	e755      	b.n	90019dea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
90019f3e:	f04f 0800 	mov.w	r8, #0
90019f42:	eba3 0208 	sub.w	r2, r3, r8
90019f46:	2a00      	cmp	r2, #0
90019f48:	f77f af53 	ble.w	90019df2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
90019f4c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
90019f50:	140a      	asrs	r2, r1, #16
90019f52:	9f01      	ldr	r7, [sp, #4]
90019f54:	1405      	asrs	r5, r0, #16
90019f56:	fb06 7202 	mla	r2, r6, r2, r7
90019f5a:	5d52      	ldrb	r2, [r2, r5]
90019f5c:	9d02      	ldr	r5, [sp, #8]
90019f5e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90019f62:	0e2e      	lsrs	r6, r5, #24
90019f64:	d044      	beq.n	90019ff0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
90019f66:	9a05      	ldr	r2, [sp, #20]
90019f68:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019f6c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
90019f70:	4356      	muls	r6, r2
90019f72:	ea4f 272e 	mov.w	r7, lr, asr #8
90019f76:	1c72      	adds	r2, r6, #1
90019f78:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019f7c:	eb02 2226 	add.w	r2, r2, r6, asr #8
90019f80:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019f84:	b2ed      	uxtb	r5, r5
90019f86:	1212      	asrs	r2, r2, #8
90019f88:	fa1f f982 	uxth.w	r9, r2
90019f8c:	43d2      	mvns	r2, r2
90019f8e:	fb16 f609 	smulbb	r6, r6, r9
90019f92:	b2d2      	uxtb	r2, r2
90019f94:	fb15 f509 	smulbb	r5, r5, r9
90019f98:	fb07 6702 	mla	r7, r7, r2, r6
90019f9c:	ea4f 06ee 	mov.w	r6, lr, asr #3
90019fa0:	fb1a fa09 	smulbb	sl, sl, r9
90019fa4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019fa8:	b2bf      	uxth	r7, r7
90019faa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019fae:	fa5f fe8e 	uxtb.w	lr, lr
90019fb2:	fb06 a602 	mla	r6, r6, r2, sl
90019fb6:	fb0e 5502 	mla	r5, lr, r2, r5
90019fba:	1c7a      	adds	r2, r7, #1
90019fbc:	b2b6      	uxth	r6, r6
90019fbe:	b2ad      	uxth	r5, r5
90019fc0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90019fc4:	f105 0a01 	add.w	sl, r5, #1
90019fc8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019fcc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019fd0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019fd4:	ea4a 0707 	orr.w	r7, sl, r7
90019fd8:	f106 0a01 	add.w	sl, r6, #1
90019fdc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019fe0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019fe4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019fe8:	ea47 070a 	orr.w	r7, r7, sl
90019fec:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019ff0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019ff2:	f108 0801 	add.w	r8, r8, #1
90019ff6:	4410      	add	r0, r2
90019ff8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90019ffa:	4411      	add	r1, r2
90019ffc:	e7a1      	b.n	90019f42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
90019ffe:	b007      	add	sp, #28
9001a000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a004 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a008:	b085      	sub	sp, #20
9001a00a:	468b      	mov	fp, r1
9001a00c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a010:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a012:	9203      	str	r2, [sp, #12]
9001a014:	6841      	ldr	r1, [r0, #4]
9001a016:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001a01a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a01e:	fb01 2404 	mla	r4, r1, r4, r2
9001a022:	6802      	ldr	r2, [r0, #0]
9001a024:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a028:	f8de 2000 	ldr.w	r2, [lr]
9001a02c:	9200      	str	r2, [sp, #0]
9001a02e:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a032:	3204      	adds	r2, #4
9001a034:	9201      	str	r2, [sp, #4]
9001a036:	f1bb 0f00 	cmp.w	fp, #0
9001a03a:	dc03      	bgt.n	9001a044 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001a03c:	9a03      	ldr	r2, [sp, #12]
9001a03e:	2a00      	cmp	r2, #0
9001a040:	f340 8153 	ble.w	9001a2ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001a044:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a046:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a04a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a04e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a050:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001a054:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a058:	2b00      	cmp	r3, #0
9001a05a:	dd0e      	ble.n	9001a07a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a05c:	1408      	asrs	r0, r1, #16
9001a05e:	d405      	bmi.n	9001a06c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a060:	42b8      	cmp	r0, r7
9001a062:	da03      	bge.n	9001a06c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a064:	1410      	asrs	r0, r2, #16
9001a066:	d401      	bmi.n	9001a06c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a068:	42b0      	cmp	r0, r6
9001a06a:	db07      	blt.n	9001a07c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001a06c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a06e:	3b01      	subs	r3, #1
9001a070:	3402      	adds	r4, #2
9001a072:	4401      	add	r1, r0
9001a074:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a076:	4402      	add	r2, r0
9001a078:	e7ee      	b.n	9001a058 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001a07a:	d017      	beq.n	9001a0ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001a07c:	1e58      	subs	r0, r3, #1
9001a07e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001a080:	fb05 1500 	mla	r5, r5, r0, r1
9001a084:	142d      	asrs	r5, r5, #16
9001a086:	d409      	bmi.n	9001a09c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a088:	42bd      	cmp	r5, r7
9001a08a:	da07      	bge.n	9001a09c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a08c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001a08e:	fb05 2000 	mla	r0, r5, r0, r2
9001a092:	1400      	asrs	r0, r0, #16
9001a094:	d402      	bmi.n	9001a09c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a096:	42b0      	cmp	r0, r6
9001a098:	f2c0 80bc 	blt.w	9001a214 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001a09c:	2600      	movs	r6, #0
9001a09e:	1998      	adds	r0, r3, r6
9001a0a0:	2800      	cmp	r0, #0
9001a0a2:	dc3e      	bgt.n	9001a122 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001a0a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a0a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a0ac:	f1bb 0f00 	cmp.w	fp, #0
9001a0b0:	f340 811b 	ble.w	9001a2ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001a0b4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a0b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a0ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a0be:	f1bb 0b01 	subs.w	fp, fp, #1
9001a0c2:	eeb0 6a62 	vmov.f32	s12, s5
9001a0c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a0ca:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a0ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a0d2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a0d6:	eeb0 6a43 	vmov.f32	s12, s6
9001a0da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a0de:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a0e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a0e6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a0ea:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a0ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a0f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a0f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a0fa:	ee12 2a90 	vmov	r2, s5
9001a0fe:	eef0 2a47 	vmov.f32	s5, s14
9001a102:	fb92 f3f3 	sdiv	r3, r2, r3
9001a106:	ee13 2a10 	vmov	r2, s6
9001a10a:	9311      	str	r3, [sp, #68]	@ 0x44
9001a10c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a10e:	eeb0 3a67 	vmov.f32	s6, s15
9001a112:	fb92 f3f3 	sdiv	r3, r2, r3
9001a116:	9a03      	ldr	r2, [sp, #12]
9001a118:	9312      	str	r3, [sp, #72]	@ 0x48
9001a11a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a11c:	bf08      	it	eq
9001a11e:	4613      	moveq	r3, r2
9001a120:	e789      	b.n	9001a036 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001a122:	140f      	asrs	r7, r1, #16
9001a124:	d426      	bmi.n	9001a174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a126:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a12a:	42bd      	cmp	r5, r7
9001a12c:	dd22      	ble.n	9001a174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a12e:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a132:	d41f      	bmi.n	9001a174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a134:	f8de 000c 	ldr.w	r0, [lr, #12]
9001a138:	4560      	cmp	r0, ip
9001a13a:	dd1b      	ble.n	9001a174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a13c:	9800      	ldr	r0, [sp, #0]
9001a13e:	b22d      	sxth	r5, r5
9001a140:	fb0c 0505 	mla	r5, ip, r5, r0
9001a144:	5de8      	ldrb	r0, [r5, r7]
9001a146:	9d01      	ldr	r5, [sp, #4]
9001a148:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001a14c:	0e07      	lsrs	r7, r0, #24
9001a14e:	2fff      	cmp	r7, #255	@ 0xff
9001a150:	d116      	bne.n	9001a180 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a152:	f06f 0501 	mvn.w	r5, #1
9001a156:	fb05 f706 	mul.w	r7, r5, r6
9001a15a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001a15e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001a162:	0945      	lsrs	r5, r0, #5
9001a164:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001a168:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001a16c:	ea4c 0505 	orr.w	r5, ip, r5
9001a170:	4305      	orrs	r5, r0
9001a172:	53e5      	strh	r5, [r4, r7]
9001a174:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a176:	3e01      	subs	r6, #1
9001a178:	4401      	add	r1, r0
9001a17a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a17c:	4402      	add	r2, r0
9001a17e:	e78e      	b.n	9001a09e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001a180:	b2fd      	uxtb	r5, r7
9001a182:	2f00      	cmp	r7, #0
9001a184:	d0f6      	beq.n	9001a174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a186:	f06f 0701 	mvn.w	r7, #1
9001a18a:	fa1f f985 	uxth.w	r9, r5
9001a18e:	43ed      	mvns	r5, r5
9001a190:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001a194:	4377      	muls	r7, r6
9001a196:	fb1a fa09 	smulbb	sl, sl, r9
9001a19a:	b2ed      	uxtb	r5, r5
9001a19c:	f834 8007 	ldrh.w	r8, [r4, r7]
9001a1a0:	9702      	str	r7, [sp, #8]
9001a1a2:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a1a6:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001a1aa:	fb17 f709 	smulbb	r7, r7, r9
9001a1ae:	b2c0      	uxtb	r0, r0
9001a1b0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a1b4:	fb10 f009 	smulbb	r0, r0, r9
9001a1b8:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a1bc:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001a1c0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a1c4:	fa1f fc8c 	uxth.w	ip, ip
9001a1c8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a1cc:	fa5f f888 	uxtb.w	r8, r8
9001a1d0:	fb07 a705 	mla	r7, r7, r5, sl
9001a1d4:	fb08 0005 	mla	r0, r8, r5, r0
9001a1d8:	f10c 0501 	add.w	r5, ip, #1
9001a1dc:	b2bf      	uxth	r7, r7
9001a1de:	b280      	uxth	r0, r0
9001a1e0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a1e4:	f100 0a01 	add.w	sl, r0, #1
9001a1e8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a1ec:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a1f0:	9802      	ldr	r0, [sp, #8]
9001a1f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a1f6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a1fa:	f107 0a01 	add.w	sl, r7, #1
9001a1fe:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a202:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a206:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a20a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a20e:	f824 c000 	strh.w	ip, [r4, r0]
9001a212:	e7af      	b.n	9001a174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a214:	f04f 0800 	mov.w	r8, #0
9001a218:	eba3 0008 	sub.w	r0, r3, r8
9001a21c:	2800      	cmp	r0, #0
9001a21e:	f77f af41 	ble.w	9001a0a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a222:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001a226:	1410      	asrs	r0, r2, #16
9001a228:	9f00      	ldr	r7, [sp, #0]
9001a22a:	140d      	asrs	r5, r1, #16
9001a22c:	fb06 7000 	mla	r0, r6, r0, r7
9001a230:	5d40      	ldrb	r0, [r0, r5]
9001a232:	9d01      	ldr	r5, [sp, #4]
9001a234:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a238:	0e2e      	lsrs	r6, r5, #24
9001a23a:	2eff      	cmp	r6, #255	@ 0xff
9001a23c:	d112      	bne.n	9001a264 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001a23e:	482c      	ldr	r0, [pc, #176]	@ (9001a2f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001a240:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a244:	0968      	lsrs	r0, r5, #5
9001a246:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a24a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001a24e:	4330      	orrs	r0, r6
9001a250:	4328      	orrs	r0, r5
9001a252:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001a256:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a258:	f108 0801 	add.w	r8, r8, #1
9001a25c:	4401      	add	r1, r0
9001a25e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a260:	4402      	add	r2, r0
9001a262:	e7d9      	b.n	9001a218 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001a264:	b2f0      	uxtb	r0, r6
9001a266:	2e00      	cmp	r6, #0
9001a268:	d0f5      	beq.n	9001a256 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001a26a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001a26e:	fa1f f980 	uxth.w	r9, r0
9001a272:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a276:	43c0      	mvns	r0, r0
9001a278:	ea4f 272c 	mov.w	r7, ip, asr #8
9001a27c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a280:	fb16 f609 	smulbb	r6, r6, r9
9001a284:	b2c0      	uxtb	r0, r0
9001a286:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a28a:	b2ed      	uxtb	r5, r5
9001a28c:	fb1a fa09 	smulbb	sl, sl, r9
9001a290:	fb07 6700 	mla	r7, r7, r0, r6
9001a294:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001a298:	fb15 f509 	smulbb	r5, r5, r9
9001a29c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a2a0:	b2bf      	uxth	r7, r7
9001a2a2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a2a6:	fa5f fc8c 	uxtb.w	ip, ip
9001a2aa:	fb06 a600 	mla	r6, r6, r0, sl
9001a2ae:	fb0c 5500 	mla	r5, ip, r0, r5
9001a2b2:	1c78      	adds	r0, r7, #1
9001a2b4:	b2b6      	uxth	r6, r6
9001a2b6:	b2ad      	uxth	r5, r5
9001a2b8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001a2bc:	f105 0a01 	add.w	sl, r5, #1
9001a2c0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001a2c4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a2c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a2cc:	ea4a 0707 	orr.w	r7, sl, r7
9001a2d0:	f106 0a01 	add.w	sl, r6, #1
9001a2d4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a2d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a2dc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a2e0:	ea47 070a 	orr.w	r7, r7, sl
9001a2e4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001a2e8:	e7b5      	b.n	9001a256 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001a2ea:	b005      	add	sp, #20
9001a2ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a2f0:	fffff800 	.word	0xfffff800

9001a2f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a2f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a2f8:	b087      	sub	sp, #28
9001a2fa:	468b      	mov	fp, r1
9001a2fc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a300:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001a302:	9204      	str	r2, [sp, #16]
9001a304:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a308:	6861      	ldr	r1, [r4, #4]
9001a30a:	9205      	str	r2, [sp, #20]
9001a30c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001a310:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001a314:	fb01 2000 	mla	r0, r1, r0, r2
9001a318:	6822      	ldr	r2, [r4, #0]
9001a31a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001a31e:	f8de 2000 	ldr.w	r2, [lr]
9001a322:	9201      	str	r2, [sp, #4]
9001a324:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a328:	9202      	str	r2, [sp, #8]
9001a32a:	f1bb 0f00 	cmp.w	fp, #0
9001a32e:	dc03      	bgt.n	9001a338 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001a330:	9a04      	ldr	r2, [sp, #16]
9001a332:	2a00      	cmp	r2, #0
9001a334:	f340 8142 	ble.w	9001a5bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001a338:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a33a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a33e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a342:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a344:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001a348:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a34c:	2b00      	cmp	r3, #0
9001a34e:	dd0e      	ble.n	9001a36e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001a350:	140c      	asrs	r4, r1, #16
9001a352:	d405      	bmi.n	9001a360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001a354:	42bc      	cmp	r4, r7
9001a356:	da03      	bge.n	9001a360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001a358:	1414      	asrs	r4, r2, #16
9001a35a:	d401      	bmi.n	9001a360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001a35c:	42b4      	cmp	r4, r6
9001a35e:	db07      	blt.n	9001a370 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a360:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a362:	3b01      	subs	r3, #1
9001a364:	3002      	adds	r0, #2
9001a366:	4421      	add	r1, r4
9001a368:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a36a:	4422      	add	r2, r4
9001a36c:	e7ee      	b.n	9001a34c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001a36e:	d019      	beq.n	9001a3a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001a370:	1e5c      	subs	r4, r3, #1
9001a372:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a374:	fb05 1504 	mla	r5, r5, r4, r1
9001a378:	142d      	asrs	r5, r5, #16
9001a37a:	d409      	bmi.n	9001a390 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001a37c:	42bd      	cmp	r5, r7
9001a37e:	da07      	bge.n	9001a390 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001a380:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001a382:	fb05 2404 	mla	r4, r5, r4, r2
9001a386:	1424      	asrs	r4, r4, #16
9001a388:	d402      	bmi.n	9001a390 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001a38a:	42b4      	cmp	r4, r6
9001a38c:	f2c0 80b1 	blt.w	9001a4f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001a390:	f04f 0800 	mov.w	r8, #0
9001a394:	eb03 0408 	add.w	r4, r3, r8
9001a398:	2c00      	cmp	r4, #0
9001a39a:	dc3e      	bgt.n	9001a41a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001a39c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a3a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001a3a4:	f1bb 0f00 	cmp.w	fp, #0
9001a3a8:	f340 8108 	ble.w	9001a5bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001a3ac:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a3b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a3b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a3b6:	f1bb 0b01 	subs.w	fp, fp, #1
9001a3ba:	eeb0 6a62 	vmov.f32	s12, s5
9001a3be:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a3c2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a3c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a3ca:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001a3ce:	eeb0 6a43 	vmov.f32	s12, s6
9001a3d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a3d6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001a3da:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a3de:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a3e2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a3e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a3ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a3ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a3f2:	ee12 2a90 	vmov	r2, s5
9001a3f6:	eef0 2a47 	vmov.f32	s5, s14
9001a3fa:	fb92 f3f3 	sdiv	r3, r2, r3
9001a3fe:	ee13 2a10 	vmov	r2, s6
9001a402:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a404:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a406:	eeb0 3a67 	vmov.f32	s6, s15
9001a40a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a40e:	9a04      	ldr	r2, [sp, #16]
9001a410:	9314      	str	r3, [sp, #80]	@ 0x50
9001a412:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a414:	bf08      	it	eq
9001a416:	4613      	moveq	r3, r2
9001a418:	e787      	b.n	9001a32a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001a41a:	140e      	asrs	r6, r1, #16
9001a41c:	d462      	bmi.n	9001a4e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a41e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a422:	42b5      	cmp	r5, r6
9001a424:	dd5e      	ble.n	9001a4e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a426:	1417      	asrs	r7, r2, #16
9001a428:	d45c      	bmi.n	9001a4e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a42a:	f8de 400c 	ldr.w	r4, [lr, #12]
9001a42e:	42bc      	cmp	r4, r7
9001a430:	dd58      	ble.n	9001a4e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a432:	b22d      	sxth	r5, r5
9001a434:	9c02      	ldr	r4, [sp, #8]
9001a436:	fb07 6505 	mla	r5, r7, r5, r6
9001a43a:	5d66      	ldrb	r6, [r4, r5]
9001a43c:	2e00      	cmp	r6, #0
9001a43e:	d051      	beq.n	9001a4e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a440:	9c01      	ldr	r4, [sp, #4]
9001a442:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001a446:	f06f 0401 	mvn.w	r4, #1
9001a44a:	fb04 f408 	mul.w	r4, r4, r8
9001a44e:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001a452:	5b05      	ldrh	r5, [r0, r4]
9001a454:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a458:	9403      	str	r4, [sp, #12]
9001a45a:	9c05      	ldr	r4, [sp, #20]
9001a45c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001a460:	4366      	muls	r6, r4
9001a462:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001a466:	1c74      	adds	r4, r6, #1
9001a468:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001a46c:	122e      	asrs	r6, r5, #8
9001a46e:	1224      	asrs	r4, r4, #8
9001a470:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001a474:	00ed      	lsls	r5, r5, #3
9001a476:	b2a7      	uxth	r7, r4
9001a478:	43e4      	mvns	r4, r4
9001a47a:	b2ed      	uxtb	r5, r5
9001a47c:	b2e4      	uxtb	r4, r4
9001a47e:	fb16 f604 	smulbb	r6, r6, r4
9001a482:	fb15 f504 	smulbb	r5, r5, r4
9001a486:	fb0c 6c07 	mla	ip, ip, r7, r6
9001a48a:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001a48e:	fb1a fa04 	smulbb	sl, sl, r4
9001a492:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001a496:	fa1f fc8c 	uxth.w	ip, ip
9001a49a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a49e:	fa5f f989 	uxtb.w	r9, r9
9001a4a2:	fb06 a607 	mla	r6, r6, r7, sl
9001a4a6:	f10c 0401 	add.w	r4, ip, #1
9001a4aa:	fb09 5507 	mla	r5, r9, r7, r5
9001a4ae:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001a4b2:	9c03      	ldr	r4, [sp, #12]
9001a4b4:	b2ad      	uxth	r5, r5
9001a4b6:	b2b6      	uxth	r6, r6
9001a4b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a4bc:	f105 0a01 	add.w	sl, r5, #1
9001a4c0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a4c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a4c8:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a4cc:	f106 0a01 	add.w	sl, r6, #1
9001a4d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a4d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a4d8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a4dc:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a4e0:	f820 c004 	strh.w	ip, [r0, r4]
9001a4e4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a4e6:	f108 38ff 	add.w	r8, r8, #4294967295
9001a4ea:	4421      	add	r1, r4
9001a4ec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a4ee:	4422      	add	r2, r4
9001a4f0:	e750      	b.n	9001a394 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a4f2:	f04f 0900 	mov.w	r9, #0
9001a4f6:	eba3 0409 	sub.w	r4, r3, r9
9001a4fa:	2c00      	cmp	r4, #0
9001a4fc:	f77f af4e 	ble.w	9001a39c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001a500:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001a504:	140d      	asrs	r5, r1, #16
9001a506:	1414      	asrs	r4, r2, #16
9001a508:	fb06 5404 	mla	r4, r6, r4, r5
9001a50c:	9d02      	ldr	r5, [sp, #8]
9001a50e:	5d2e      	ldrb	r6, [r5, r4]
9001a510:	2e00      	cmp	r6, #0
9001a512:	d04c      	beq.n	9001a5ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001a514:	9d01      	ldr	r5, [sp, #4]
9001a516:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001a51a:	9c05      	ldr	r4, [sp, #20]
9001a51c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001a520:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001a524:	4366      	muls	r6, r4
9001a526:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001a52a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a52e:	1c74      	adds	r4, r6, #1
9001a530:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001a534:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001a538:	122e      	asrs	r6, r5, #8
9001a53a:	1224      	asrs	r4, r4, #8
9001a53c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001a540:	00ed      	lsls	r5, r5, #3
9001a542:	b2a7      	uxth	r7, r4
9001a544:	43e4      	mvns	r4, r4
9001a546:	b2ed      	uxtb	r5, r5
9001a548:	b2e4      	uxtb	r4, r4
9001a54a:	fb16 f604 	smulbb	r6, r6, r4
9001a54e:	fb15 f504 	smulbb	r5, r5, r4
9001a552:	fb0c 6c07 	mla	ip, ip, r7, r6
9001a556:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001a55a:	fb1a fa04 	smulbb	sl, sl, r4
9001a55e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a562:	fa1f fc8c 	uxth.w	ip, ip
9001a566:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a56a:	fa5f f888 	uxtb.w	r8, r8
9001a56e:	fb06 a607 	mla	r6, r6, r7, sl
9001a572:	f10c 0401 	add.w	r4, ip, #1
9001a576:	fb08 5507 	mla	r5, r8, r7, r5
9001a57a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001a57e:	b2ad      	uxth	r5, r5
9001a580:	b2b6      	uxth	r6, r6
9001a582:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a586:	f105 0a01 	add.w	sl, r5, #1
9001a58a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a58e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a592:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a596:	f106 0a01 	add.w	sl, r6, #1
9001a59a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a59e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a5a2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a5a6:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a5aa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001a5ae:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a5b0:	f109 0901 	add.w	r9, r9, #1
9001a5b4:	4421      	add	r1, r4
9001a5b6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a5b8:	4422      	add	r2, r4
9001a5ba:	e79c      	b.n	9001a4f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001a5bc:	b007      	add	sp, #28
9001a5be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a5c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a5c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a5c6:	b085      	sub	sp, #20
9001a5c8:	468b      	mov	fp, r1
9001a5ca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a5ce:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a5d0:	9203      	str	r2, [sp, #12]
9001a5d2:	6861      	ldr	r1, [r4, #4]
9001a5d4:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001a5d8:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001a5dc:	fb01 2000 	mla	r0, r1, r0, r2
9001a5e0:	6822      	ldr	r2, [r4, #0]
9001a5e2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001a5e6:	f8d8 2000 	ldr.w	r2, [r8]
9001a5ea:	9200      	str	r2, [sp, #0]
9001a5ec:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001a5f0:	9201      	str	r2, [sp, #4]
9001a5f2:	f1bb 0f00 	cmp.w	fp, #0
9001a5f6:	dc03      	bgt.n	9001a600 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a5f8:	9a03      	ldr	r2, [sp, #12]
9001a5fa:	2a00      	cmp	r2, #0
9001a5fc:	f340 8146 	ble.w	9001a88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001a600:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a602:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001a606:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a60a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a60c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001a610:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a614:	2b00      	cmp	r3, #0
9001a616:	dd0e      	ble.n	9001a636 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001a618:	140c      	asrs	r4, r1, #16
9001a61a:	d405      	bmi.n	9001a628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a61c:	42bc      	cmp	r4, r7
9001a61e:	da03      	bge.n	9001a628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a620:	1414      	asrs	r4, r2, #16
9001a622:	d401      	bmi.n	9001a628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a624:	42b4      	cmp	r4, r6
9001a626:	db07      	blt.n	9001a638 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a628:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001a62a:	3b01      	subs	r3, #1
9001a62c:	3002      	adds	r0, #2
9001a62e:	4421      	add	r1, r4
9001a630:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001a632:	4422      	add	r2, r4
9001a634:	e7ee      	b.n	9001a614 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a636:	d017      	beq.n	9001a668 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a638:	1e5c      	subs	r4, r3, #1
9001a63a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001a63c:	fb05 1504 	mla	r5, r5, r4, r1
9001a640:	142d      	asrs	r5, r5, #16
9001a642:	d409      	bmi.n	9001a658 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a644:	42bd      	cmp	r5, r7
9001a646:	da07      	bge.n	9001a658 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a648:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001a64a:	fb05 2404 	mla	r4, r5, r4, r2
9001a64e:	1424      	asrs	r4, r4, #16
9001a650:	d402      	bmi.n	9001a658 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a652:	42b4      	cmp	r4, r6
9001a654:	f2c0 80b3 	blt.w	9001a7be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001a658:	2600      	movs	r6, #0
9001a65a:	199c      	adds	r4, r3, r6
9001a65c:	2c00      	cmp	r4, #0
9001a65e:	dc3e      	bgt.n	9001a6de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001a660:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a664:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001a668:	f1bb 0f00 	cmp.w	fp, #0
9001a66c:	f340 810e 	ble.w	9001a88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001a670:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a674:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a676:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a67a:	f1bb 0b01 	subs.w	fp, fp, #1
9001a67e:	eeb0 6a62 	vmov.f32	s12, s5
9001a682:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a686:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a68a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a68e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a692:	eeb0 6a43 	vmov.f32	s12, s6
9001a696:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a69a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a69e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a6a2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a6a6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a6aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a6ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a6b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a6b6:	ee12 2a90 	vmov	r2, s5
9001a6ba:	eef0 2a47 	vmov.f32	s5, s14
9001a6be:	fb92 f3f3 	sdiv	r3, r2, r3
9001a6c2:	ee13 2a10 	vmov	r2, s6
9001a6c6:	9311      	str	r3, [sp, #68]	@ 0x44
9001a6c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a6ca:	eeb0 3a67 	vmov.f32	s6, s15
9001a6ce:	fb92 f3f3 	sdiv	r3, r2, r3
9001a6d2:	9a03      	ldr	r2, [sp, #12]
9001a6d4:	9312      	str	r3, [sp, #72]	@ 0x48
9001a6d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a6d8:	bf08      	it	eq
9001a6da:	4613      	moveq	r3, r2
9001a6dc:	e789      	b.n	9001a5f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a6de:	140f      	asrs	r7, r1, #16
9001a6e0:	d418      	bmi.n	9001a714 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a6e2:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001a6e6:	42bd      	cmp	r5, r7
9001a6e8:	dd14      	ble.n	9001a714 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a6ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a6ee:	d411      	bmi.n	9001a714 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a6f0:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001a6f4:	4564      	cmp	r4, ip
9001a6f6:	dd0d      	ble.n	9001a714 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a6f8:	b22d      	sxth	r5, r5
9001a6fa:	9c01      	ldr	r4, [sp, #4]
9001a6fc:	fb0c 7505 	mla	r5, ip, r5, r7
9001a700:	5d64      	ldrb	r4, [r4, r5]
9001a702:	2cff      	cmp	r4, #255	@ 0xff
9001a704:	d10c      	bne.n	9001a720 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001a706:	9c00      	ldr	r4, [sp, #0]
9001a708:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001a70c:	f06f 0401 	mvn.w	r4, #1
9001a710:	4374      	muls	r4, r6
9001a712:	5305      	strh	r5, [r0, r4]
9001a714:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001a716:	3e01      	subs	r6, #1
9001a718:	4421      	add	r1, r4
9001a71a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001a71c:	4422      	add	r2, r4
9001a71e:	e79c      	b.n	9001a65a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a720:	2c00      	cmp	r4, #0
9001a722:	d0f7      	beq.n	9001a714 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a724:	9f00      	ldr	r7, [sp, #0]
9001a726:	fa1f fc84 	uxth.w	ip, r4
9001a72a:	43e4      	mvns	r4, r4
9001a72c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001a730:	f06f 0501 	mvn.w	r5, #1
9001a734:	b2e4      	uxtb	r4, r4
9001a736:	4375      	muls	r5, r6
9001a738:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001a73c:	9502      	str	r5, [sp, #8]
9001a73e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001a742:	5b45      	ldrh	r5, [r0, r5]
9001a744:	122f      	asrs	r7, r5, #8
9001a746:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001a74a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a74e:	00ed      	lsls	r5, r5, #3
9001a750:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001a754:	fb17 f704 	smulbb	r7, r7, r4
9001a758:	b2ed      	uxtb	r5, r5
9001a75a:	fb1a fa04 	smulbb	sl, sl, r4
9001a75e:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001a762:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001a766:	fb15 f504 	smulbb	r5, r5, r4
9001a76a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001a76e:	fa1f fe8e 	uxth.w	lr, lr
9001a772:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a776:	fa5f f989 	uxtb.w	r9, r9
9001a77a:	fb07 a70c 	mla	r7, r7, ip, sl
9001a77e:	f10e 0401 	add.w	r4, lr, #1
9001a782:	fb09 550c 	mla	r5, r9, ip, r5
9001a786:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001a78a:	9c02      	ldr	r4, [sp, #8]
9001a78c:	b2ad      	uxth	r5, r5
9001a78e:	b2bf      	uxth	r7, r7
9001a790:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001a794:	f105 0a01 	add.w	sl, r5, #1
9001a798:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a79c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a7a0:	ea4a 0e0e 	orr.w	lr, sl, lr
9001a7a4:	f107 0a01 	add.w	sl, r7, #1
9001a7a8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a7ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a7b0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a7b4:	ea4e 0e0a 	orr.w	lr, lr, sl
9001a7b8:	f820 e004 	strh.w	lr, [r0, r4]
9001a7bc:	e7aa      	b.n	9001a714 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a7be:	f04f 0900 	mov.w	r9, #0
9001a7c2:	eba3 0409 	sub.w	r4, r3, r9
9001a7c6:	2c00      	cmp	r4, #0
9001a7c8:	f77f af4a 	ble.w	9001a660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a7cc:	1414      	asrs	r4, r2, #16
9001a7ce:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001a7d2:	140d      	asrs	r5, r1, #16
9001a7d4:	fb06 5504 	mla	r5, r6, r4, r5
9001a7d8:	9c01      	ldr	r4, [sp, #4]
9001a7da:	5d64      	ldrb	r4, [r4, r5]
9001a7dc:	2cff      	cmp	r4, #255	@ 0xff
9001a7de:	d10b      	bne.n	9001a7f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001a7e0:	9c00      	ldr	r4, [sp, #0]
9001a7e2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001a7e6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001a7ea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001a7ec:	f109 0901 	add.w	r9, r9, #1
9001a7f0:	4421      	add	r1, r4
9001a7f2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001a7f4:	4422      	add	r2, r4
9001a7f6:	e7e4      	b.n	9001a7c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001a7f8:	2c00      	cmp	r4, #0
9001a7fa:	d0f6      	beq.n	9001a7ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001a7fc:	9e00      	ldr	r6, [sp, #0]
9001a7fe:	b2a7      	uxth	r7, r4
9001a800:	43e4      	mvns	r4, r4
9001a802:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001a806:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001a80a:	b2e4      	uxtb	r4, r4
9001a80c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a810:	122e      	asrs	r6, r5, #8
9001a812:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001a816:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a81a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001a81e:	00ed      	lsls	r5, r5, #3
9001a820:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001a824:	fb16 f604 	smulbb	r6, r6, r4
9001a828:	b2ed      	uxtb	r5, r5
9001a82a:	fb1a fa04 	smulbb	sl, sl, r4
9001a82e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001a832:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001a836:	fb15 f504 	smulbb	r5, r5, r4
9001a83a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a83e:	fa1f fc8c 	uxth.w	ip, ip
9001a842:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a846:	fa5f fe8e 	uxtb.w	lr, lr
9001a84a:	fb06 a607 	mla	r6, r6, r7, sl
9001a84e:	f10c 0401 	add.w	r4, ip, #1
9001a852:	fb0e 5507 	mla	r5, lr, r7, r5
9001a856:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001a85a:	b2ad      	uxth	r5, r5
9001a85c:	b2b6      	uxth	r6, r6
9001a85e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a862:	f105 0a01 	add.w	sl, r5, #1
9001a866:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a86a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a86e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a872:	f106 0a01 	add.w	sl, r6, #1
9001a876:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a87a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a87e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a882:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a886:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001a88a:	e7ae      	b.n	9001a7ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001a88c:	b005      	add	sp, #20
9001a88e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a892 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a892:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a896:	b085      	sub	sp, #20
9001a898:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a89a:	9203      	str	r2, [sp, #12]
9001a89c:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001a8a0:	9100      	str	r1, [sp, #0]
9001a8a2:	9201      	str	r2, [sp, #4]
9001a8a4:	6841      	ldr	r1, [r0, #4]
9001a8a6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001a8aa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a8ae:	fb01 2404 	mla	r4, r1, r4, r2
9001a8b2:	6802      	ldr	r2, [r0, #0]
9001a8b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a8b8:	f8de 2000 	ldr.w	r2, [lr]
9001a8bc:	9202      	str	r2, [sp, #8]
9001a8be:	9a01      	ldr	r2, [sp, #4]
9001a8c0:	43d6      	mvns	r6, r2
9001a8c2:	b2f6      	uxtb	r6, r6
9001a8c4:	9a00      	ldr	r2, [sp, #0]
9001a8c6:	2a00      	cmp	r2, #0
9001a8c8:	dc03      	bgt.n	9001a8d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001a8ca:	9a03      	ldr	r2, [sp, #12]
9001a8cc:	2a00      	cmp	r2, #0
9001a8ce:	f340 8124 	ble.w	9001ab1a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001a8d2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a8d4:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001a8d8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a8dc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a8de:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001a8e2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a8e6:	2b00      	cmp	r3, #0
9001a8e8:	dd0e      	ble.n	9001a908 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a8ea:	1408      	asrs	r0, r1, #16
9001a8ec:	d405      	bmi.n	9001a8fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a8ee:	4560      	cmp	r0, ip
9001a8f0:	da03      	bge.n	9001a8fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a8f2:	1410      	asrs	r0, r2, #16
9001a8f4:	d401      	bmi.n	9001a8fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a8f6:	42b8      	cmp	r0, r7
9001a8f8:	db07      	blt.n	9001a90a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001a8fa:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a8fc:	3b01      	subs	r3, #1
9001a8fe:	3402      	adds	r4, #2
9001a900:	4401      	add	r1, r0
9001a902:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a904:	4402      	add	r2, r0
9001a906:	e7ee      	b.n	9001a8e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001a908:	d06e      	beq.n	9001a9e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001a90a:	1e58      	subs	r0, r3, #1
9001a90c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001a90e:	fb05 1500 	mla	r5, r5, r0, r1
9001a912:	142d      	asrs	r5, r5, #16
9001a914:	d45c      	bmi.n	9001a9d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a916:	4565      	cmp	r5, ip
9001a918:	da5a      	bge.n	9001a9d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a91a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001a91c:	fb05 2000 	mla	r0, r5, r0, r2
9001a920:	1400      	asrs	r0, r0, #16
9001a922:	d455      	bmi.n	9001a9d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a924:	42b8      	cmp	r0, r7
9001a926:	da53      	bge.n	9001a9d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a928:	4699      	mov	r9, r3
9001a92a:	46a2      	mov	sl, r4
9001a92c:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001a930:	f1b9 0f00 	cmp.w	r9, #0
9001a934:	dd54      	ble.n	9001a9e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a936:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a93a:	140d      	asrs	r5, r1, #16
9001a93c:	1410      	asrs	r0, r2, #16
9001a93e:	f109 39ff 	add.w	r9, r9, #4294967295
9001a942:	fb07 5000 	mla	r0, r7, r0, r5
9001a946:	9d02      	ldr	r5, [sp, #8]
9001a948:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a94c:	f8ba 5000 	ldrh.w	r5, [sl]
9001a950:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a954:	122f      	asrs	r7, r5, #8
9001a956:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001a95a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a95e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a962:	00ed      	lsls	r5, r5, #3
9001a964:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001a968:	fb17 f706 	smulbb	r7, r7, r6
9001a96c:	b2ed      	uxtb	r5, r5
9001a96e:	fb18 f806 	smulbb	r8, r8, r6
9001a972:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001a976:	10c7      	asrs	r7, r0, #3
9001a978:	fb15 f506 	smulbb	r5, r5, r6
9001a97c:	00c0      	lsls	r0, r0, #3
9001a97e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a982:	fa1f fc8c 	uxth.w	ip, ip
9001a986:	b2c0      	uxtb	r0, r0
9001a988:	fb07 870b 	mla	r7, r7, fp, r8
9001a98c:	fb00 500b 	mla	r0, r0, fp, r5
9001a990:	f10c 0501 	add.w	r5, ip, #1
9001a994:	b2bf      	uxth	r7, r7
9001a996:	b280      	uxth	r0, r0
9001a998:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a99c:	f107 0801 	add.w	r8, r7, #1
9001a9a0:	1c45      	adds	r5, r0, #1
9001a9a2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001a9a6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a9aa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a9ae:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a9b0:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001a9b4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a9b8:	4401      	add	r1, r0
9001a9ba:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001a9be:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a9c0:	ea45 0c0c 	orr.w	ip, r5, ip
9001a9c4:	4402      	add	r2, r0
9001a9c6:	ea4c 0c08 	orr.w	ip, ip, r8
9001a9ca:	f82a cb02 	strh.w	ip, [sl], #2
9001a9ce:	e7af      	b.n	9001a930 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a9d0:	f04f 0800 	mov.w	r8, #0
9001a9d4:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001a9d8:	eb03 0008 	add.w	r0, r3, r8
9001a9dc:	2800      	cmp	r0, #0
9001a9de:	dc41      	bgt.n	9001aa64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001a9e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a9e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a9e8:	9b00      	ldr	r3, [sp, #0]
9001a9ea:	2b00      	cmp	r3, #0
9001a9ec:	f340 8095 	ble.w	9001ab1a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001a9f0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001a9f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a9f6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a9fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a9fe:	eef0 6a62 	vmov.f32	s13, s5
9001aa02:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001aa06:	ee31 1a05 	vadd.f32	s2, s2, s10
9001aa0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001aa0e:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001aa12:	eef0 6a43 	vmov.f32	s13, s6
9001aa16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001aa1a:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001aa1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001aa22:	ee61 7a27 	vmul.f32	s15, s2, s15
9001aa26:	ee77 2a62 	vsub.f32	s5, s14, s5
9001aa2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001aa2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001aa32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001aa36:	ee12 2a90 	vmov	r2, s5
9001aa3a:	eef0 2a47 	vmov.f32	s5, s14
9001aa3e:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa42:	ee13 2a10 	vmov	r2, s6
9001aa46:	9311      	str	r3, [sp, #68]	@ 0x44
9001aa48:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001aa4a:	eeb0 3a67 	vmov.f32	s6, s15
9001aa4e:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa52:	9312      	str	r3, [sp, #72]	@ 0x48
9001aa54:	9b00      	ldr	r3, [sp, #0]
9001aa56:	9a03      	ldr	r2, [sp, #12]
9001aa58:	3b01      	subs	r3, #1
9001aa5a:	9300      	str	r3, [sp, #0]
9001aa5c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001aa5e:	bf08      	it	eq
9001aa60:	4613      	moveq	r3, r2
9001aa62:	e72f      	b.n	9001a8c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001aa64:	140f      	asrs	r7, r1, #16
9001aa66:	d451      	bmi.n	9001ab0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001aa68:	f8de 5008 	ldr.w	r5, [lr, #8]
9001aa6c:	42bd      	cmp	r5, r7
9001aa6e:	dd4d      	ble.n	9001ab0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001aa70:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001aa74:	d44a      	bmi.n	9001ab0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001aa76:	f8de 000c 	ldr.w	r0, [lr, #12]
9001aa7a:	4560      	cmp	r0, ip
9001aa7c:	dd46      	ble.n	9001ab0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001aa7e:	b22d      	sxth	r5, r5
9001aa80:	9802      	ldr	r0, [sp, #8]
9001aa82:	fb0c 7505 	mla	r5, ip, r5, r7
9001aa86:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001aa8a:	f06f 0501 	mvn.w	r5, #1
9001aa8e:	fb05 fb08 	mul.w	fp, r5, r8
9001aa92:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001aa96:	f834 500b 	ldrh.w	r5, [r4, fp]
9001aa9a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001aa9e:	122f      	asrs	r7, r5, #8
9001aaa0:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001aaa4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001aaa8:	00ed      	lsls	r5, r5, #3
9001aaaa:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001aaae:	fb17 f706 	smulbb	r7, r7, r6
9001aab2:	b2ed      	uxtb	r5, r5
9001aab4:	fb19 f906 	smulbb	r9, r9, r6
9001aab8:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001aabc:	10c7      	asrs	r7, r0, #3
9001aabe:	fb15 f506 	smulbb	r5, r5, r6
9001aac2:	00c0      	lsls	r0, r0, #3
9001aac4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001aac8:	fa1f fc8c 	uxth.w	ip, ip
9001aacc:	b2c0      	uxtb	r0, r0
9001aace:	fb07 970a 	mla	r7, r7, sl, r9
9001aad2:	fb00 500a 	mla	r0, r0, sl, r5
9001aad6:	f10c 0501 	add.w	r5, ip, #1
9001aada:	b2bf      	uxth	r7, r7
9001aadc:	b280      	uxth	r0, r0
9001aade:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001aae2:	f107 0901 	add.w	r9, r7, #1
9001aae6:	1c45      	adds	r5, r0, #1
9001aae8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001aaec:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001aaf0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001aaf4:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001aaf8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001aafc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001ab00:	ea45 0c0c 	orr.w	ip, r5, ip
9001ab04:	ea4c 0c09 	orr.w	ip, ip, r9
9001ab08:	f824 c00b 	strh.w	ip, [r4, fp]
9001ab0c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ab0e:	f108 38ff 	add.w	r8, r8, #4294967295
9001ab12:	4401      	add	r1, r0
9001ab14:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ab16:	4402      	add	r2, r0
9001ab18:	e75e      	b.n	9001a9d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001ab1a:	b005      	add	sp, #20
9001ab1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ab20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ab20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ab24:	b085      	sub	sp, #20
9001ab26:	4693      	mov	fp, r2
9001ab28:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ab2c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ab2e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001ab30:	6870      	ldr	r0, [r6, #4]
9001ab32:	9101      	str	r1, [sp, #4]
9001ab34:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001ab38:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001ab3c:	fb00 2404 	mla	r4, r0, r4, r2
9001ab40:	6832      	ldr	r2, [r6, #0]
9001ab42:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ab46:	682a      	ldr	r2, [r5, #0]
9001ab48:	9202      	str	r2, [sp, #8]
9001ab4a:	9a01      	ldr	r2, [sp, #4]
9001ab4c:	2a00      	cmp	r2, #0
9001ab4e:	dc03      	bgt.n	9001ab58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001ab50:	f1bb 0f00 	cmp.w	fp, #0
9001ab54:	f340 809a 	ble.w	9001ac8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001ab58:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ab5a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001ab5e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ab62:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ab64:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001ab68:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ab6c:	2b00      	cmp	r3, #0
9001ab6e:	dd0c      	ble.n	9001ab8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001ab70:	1406      	asrs	r6, r0, #16
9001ab72:	d405      	bmi.n	9001ab80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ab74:	454e      	cmp	r6, r9
9001ab76:	da03      	bge.n	9001ab80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ab78:	1416      	asrs	r6, r2, #16
9001ab7a:	d401      	bmi.n	9001ab80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ab7c:	4546      	cmp	r6, r8
9001ab7e:	db05      	blt.n	9001ab8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001ab80:	4470      	add	r0, lr
9001ab82:	4462      	add	r2, ip
9001ab84:	3b01      	subs	r3, #1
9001ab86:	3402      	adds	r4, #2
9001ab88:	e7f0      	b.n	9001ab6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001ab8a:	d00f      	beq.n	9001abac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ab8c:	1e5e      	subs	r6, r3, #1
9001ab8e:	fb0e 0706 	mla	r7, lr, r6, r0
9001ab92:	143f      	asrs	r7, r7, #16
9001ab94:	d541      	bpl.n	9001ac1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001ab96:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001ab9a:	4698      	mov	r8, r3
9001ab9c:	9603      	str	r6, [sp, #12]
9001ab9e:	f1b8 0f00 	cmp.w	r8, #0
9001aba2:	dc56      	bgt.n	9001ac52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001aba4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001aba8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001abac:	9b01      	ldr	r3, [sp, #4]
9001abae:	2b00      	cmp	r3, #0
9001abb0:	dd6c      	ble.n	9001ac8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001abb2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001abb6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001abb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001abbc:	eeb0 6a62 	vmov.f32	s12, s5
9001abc0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001abc4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001abc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001abcc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001abd0:	eeb0 6a43 	vmov.f32	s12, s6
9001abd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001abd8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001abdc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001abe0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001abe4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001abe8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001abec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001abf0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001abf4:	ee12 2a90 	vmov	r2, s5
9001abf8:	eef0 2a47 	vmov.f32	s5, s14
9001abfc:	fb92 fef3 	sdiv	lr, r2, r3
9001ac00:	ee13 2a10 	vmov	r2, s6
9001ac04:	eeb0 3a67 	vmov.f32	s6, s15
9001ac08:	fb92 fcf3 	sdiv	ip, r2, r3
9001ac0c:	9b01      	ldr	r3, [sp, #4]
9001ac0e:	3b01      	subs	r3, #1
9001ac10:	9301      	str	r3, [sp, #4]
9001ac12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ac14:	bf08      	it	eq
9001ac16:	465b      	moveq	r3, fp
9001ac18:	e797      	b.n	9001ab4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001ac1a:	454f      	cmp	r7, r9
9001ac1c:	dabb      	bge.n	9001ab96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ac1e:	fb0c 2606 	mla	r6, ip, r6, r2
9001ac22:	1436      	asrs	r6, r6, #16
9001ac24:	d4b7      	bmi.n	9001ab96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ac26:	4546      	cmp	r6, r8
9001ac28:	dab5      	bge.n	9001ab96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ac2a:	461e      	mov	r6, r3
9001ac2c:	46a0      	mov	r8, r4
9001ac2e:	2e00      	cmp	r6, #0
9001ac30:	ddb8      	ble.n	9001aba4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001ac32:	1417      	asrs	r7, r2, #16
9001ac34:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001ac38:	ea4f 4920 	mov.w	r9, r0, asr #16
9001ac3c:	9902      	ldr	r1, [sp, #8]
9001ac3e:	4470      	add	r0, lr
9001ac40:	4462      	add	r2, ip
9001ac42:	fb0a 9707 	mla	r7, sl, r7, r9
9001ac46:	3e01      	subs	r6, #1
9001ac48:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001ac4c:	f828 7b02 	strh.w	r7, [r8], #2
9001ac50:	e7ed      	b.n	9001ac2e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001ac52:	ea5f 4920 	movs.w	r9, r0, asr #16
9001ac56:	d414      	bmi.n	9001ac82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ac58:	68ae      	ldr	r6, [r5, #8]
9001ac5a:	454e      	cmp	r6, r9
9001ac5c:	dd11      	ble.n	9001ac82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ac5e:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001ac62:	d40e      	bmi.n	9001ac82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ac64:	68ef      	ldr	r7, [r5, #12]
9001ac66:	4557      	cmp	r7, sl
9001ac68:	dd0b      	ble.n	9001ac82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ac6a:	b236      	sxth	r6, r6
9001ac6c:	f06f 0101 	mvn.w	r1, #1
9001ac70:	9f02      	ldr	r7, [sp, #8]
9001ac72:	fb0a 9606 	mla	r6, sl, r6, r9
9001ac76:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001ac7a:	fb01 f608 	mul.w	r6, r1, r8
9001ac7e:	9903      	ldr	r1, [sp, #12]
9001ac80:	538f      	strh	r7, [r1, r6]
9001ac82:	4470      	add	r0, lr
9001ac84:	4462      	add	r2, ip
9001ac86:	f108 38ff 	add.w	r8, r8, #4294967295
9001ac8a:	e788      	b.n	9001ab9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ac8c:	b005      	add	sp, #20
9001ac8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ac92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ac92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ac96:	b087      	sub	sp, #28
9001ac98:	468b      	mov	fp, r1
9001ac9a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ac9e:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001aca0:	9203      	str	r2, [sp, #12]
9001aca2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001aca6:	6841      	ldr	r1, [r0, #4]
9001aca8:	9204      	str	r2, [sp, #16]
9001acaa:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001acae:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001acb2:	fb01 2505 	mla	r5, r1, r5, r2
9001acb6:	6802      	ldr	r2, [r0, #0]
9001acb8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001acbc:	f8d9 2000 	ldr.w	r2, [r9]
9001acc0:	9201      	str	r2, [sp, #4]
9001acc2:	f1bb 0f00 	cmp.w	fp, #0
9001acc6:	dc03      	bgt.n	9001acd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001acc8:	9a03      	ldr	r2, [sp, #12]
9001acca:	2a00      	cmp	r2, #0
9001accc:	f340 8158 	ble.w	9001af80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001acd0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001acd2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001acd6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001acda:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001acdc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001ace0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ace4:	2b00      	cmp	r3, #0
9001ace6:	dd0e      	ble.n	9001ad06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001ace8:	1402      	asrs	r2, r0, #16
9001acea:	d405      	bmi.n	9001acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001acec:	42ba      	cmp	r2, r7
9001acee:	da03      	bge.n	9001acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001acf0:	140a      	asrs	r2, r1, #16
9001acf2:	d401      	bmi.n	9001acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001acf4:	42b2      	cmp	r2, r6
9001acf6:	db07      	blt.n	9001ad08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001acf8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001acfa:	3b01      	subs	r3, #1
9001acfc:	3502      	adds	r5, #2
9001acfe:	4410      	add	r0, r2
9001ad00:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ad02:	4411      	add	r1, r2
9001ad04:	e7ee      	b.n	9001ace4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ad06:	d017      	beq.n	9001ad38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ad08:	1e5a      	subs	r2, r3, #1
9001ad0a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001ad0c:	fb04 0402 	mla	r4, r4, r2, r0
9001ad10:	1424      	asrs	r4, r4, #16
9001ad12:	d409      	bmi.n	9001ad28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ad14:	42bc      	cmp	r4, r7
9001ad16:	da07      	bge.n	9001ad28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ad18:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001ad1a:	fb04 1202 	mla	r2, r4, r2, r1
9001ad1e:	1412      	asrs	r2, r2, #16
9001ad20:	d402      	bmi.n	9001ad28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ad22:	42b2      	cmp	r2, r6
9001ad24:	f2c0 80bf 	blt.w	9001aea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001ad28:	2700      	movs	r7, #0
9001ad2a:	19da      	adds	r2, r3, r7
9001ad2c:	2a00      	cmp	r2, #0
9001ad2e:	dc3e      	bgt.n	9001adae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001ad30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ad34:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001ad38:	f1bb 0f00 	cmp.w	fp, #0
9001ad3c:	f340 8120 	ble.w	9001af80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001ad40:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ad44:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ad46:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ad4a:	f1bb 0b01 	subs.w	fp, fp, #1
9001ad4e:	eeb0 6a62 	vmov.f32	s12, s5
9001ad52:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ad56:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ad5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ad5e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001ad62:	eeb0 6a43 	vmov.f32	s12, s6
9001ad66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ad6a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001ad6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ad72:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ad76:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ad7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ad7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ad82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ad86:	ee12 2a90 	vmov	r2, s5
9001ad8a:	eef0 2a47 	vmov.f32	s5, s14
9001ad8e:	fb92 f3f3 	sdiv	r3, r2, r3
9001ad92:	ee13 2a10 	vmov	r2, s6
9001ad96:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ad98:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ad9a:	eeb0 3a67 	vmov.f32	s6, s15
9001ad9e:	fb92 f3f3 	sdiv	r3, r2, r3
9001ada2:	9a03      	ldr	r2, [sp, #12]
9001ada4:	9314      	str	r3, [sp, #80]	@ 0x50
9001ada6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ada8:	bf08      	it	eq
9001adaa:	4613      	moveq	r3, r2
9001adac:	e789      	b.n	9001acc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001adae:	1406      	asrs	r6, r0, #16
9001adb0:	d42d      	bmi.n	9001ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001adb2:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001adb6:	42b4      	cmp	r4, r6
9001adb8:	dd29      	ble.n	9001ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001adba:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001adbe:	d426      	bmi.n	9001ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001adc0:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001adc4:	4562      	cmp	r2, ip
9001adc6:	dd22      	ble.n	9001ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001adc8:	b224      	sxth	r4, r4
9001adca:	9a01      	ldr	r2, [sp, #4]
9001adcc:	fb0c 6404 	mla	r4, ip, r4, r6
9001add0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001add4:	0e22      	lsrs	r2, r4, #24
9001add6:	d01a      	beq.n	9001ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001add8:	9e04      	ldr	r6, [sp, #16]
9001adda:	4372      	muls	r2, r6
9001addc:	1c56      	adds	r6, r2, #1
9001adde:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001ade2:	0a26      	lsrs	r6, r4, #8
9001ade4:	1212      	asrs	r2, r2, #8
9001ade6:	9605      	str	r6, [sp, #20]
9001ade8:	2aff      	cmp	r2, #255	@ 0xff
9001adea:	d116      	bne.n	9001ae1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001adec:	f06f 0201 	mvn.w	r2, #1
9001adf0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001adf4:	fb02 fc07 	mul.w	ip, r2, r7
9001adf8:	0962      	lsrs	r2, r4, #5
9001adfa:	f026 0607 	bic.w	r6, r6, #7
9001adfe:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001ae02:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ae06:	4316      	orrs	r6, r2
9001ae08:	4326      	orrs	r6, r4
9001ae0a:	f825 600c 	strh.w	r6, [r5, ip]
9001ae0e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ae10:	3f01      	subs	r7, #1
9001ae12:	4410      	add	r0, r2
9001ae14:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ae16:	4411      	add	r1, r2
9001ae18:	e787      	b.n	9001ad2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ae1a:	f06f 0601 	mvn.w	r6, #1
9001ae1e:	fa1f fa82 	uxth.w	sl, r2
9001ae22:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001ae26:	43d2      	mvns	r2, r2
9001ae28:	437e      	muls	r6, r7
9001ae2a:	b2e4      	uxtb	r4, r4
9001ae2c:	fb1c fc0a 	smulbb	ip, ip, sl
9001ae30:	b2d2      	uxtb	r2, r2
9001ae32:	f835 8006 	ldrh.w	r8, [r5, r6]
9001ae36:	fb14 f40a 	smulbb	r4, r4, sl
9001ae3a:	9602      	str	r6, [sp, #8]
9001ae3c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001ae40:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001ae44:	fb16 f60a 	smulbb	r6, r6, sl
9001ae48:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001ae4c:	fb0e ce02 	mla	lr, lr, r2, ip
9001ae50:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001ae54:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ae58:	fa1f fe8e 	uxth.w	lr, lr
9001ae5c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001ae60:	fa5f f888 	uxtb.w	r8, r8
9001ae64:	fb0c 6c02 	mla	ip, ip, r2, r6
9001ae68:	fb08 4402 	mla	r4, r8, r2, r4
9001ae6c:	f10e 0201 	add.w	r2, lr, #1
9001ae70:	fa1f fc8c 	uxth.w	ip, ip
9001ae74:	b2a4      	uxth	r4, r4
9001ae76:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ae7a:	9a02      	ldr	r2, [sp, #8]
9001ae7c:	1c66      	adds	r6, r4, #1
9001ae7e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001ae82:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001ae86:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ae8a:	ea46 0e0e 	orr.w	lr, r6, lr
9001ae8e:	f10c 0601 	add.w	r6, ip, #1
9001ae92:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ae96:	0976      	lsrs	r6, r6, #5
9001ae98:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ae9c:	ea4e 0e06 	orr.w	lr, lr, r6
9001aea0:	f825 e002 	strh.w	lr, [r5, r2]
9001aea4:	e7b3      	b.n	9001ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001aea6:	f04f 0800 	mov.w	r8, #0
9001aeaa:	eba3 0208 	sub.w	r2, r3, r8
9001aeae:	2a00      	cmp	r2, #0
9001aeb0:	f77f af3e 	ble.w	9001ad30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001aeb4:	1404      	asrs	r4, r0, #16
9001aeb6:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001aeba:	140a      	asrs	r2, r1, #16
9001aebc:	fb06 4202 	mla	r2, r6, r2, r4
9001aec0:	9c01      	ldr	r4, [sp, #4]
9001aec2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001aec6:	0e22      	lsrs	r2, r4, #24
9001aec8:	d015      	beq.n	9001aef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001aeca:	9e04      	ldr	r6, [sp, #16]
9001aecc:	4372      	muls	r2, r6
9001aece:	1c56      	adds	r6, r2, #1
9001aed0:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001aed4:	0a26      	lsrs	r6, r4, #8
9001aed6:	1212      	asrs	r2, r2, #8
9001aed8:	2aff      	cmp	r2, #255	@ 0xff
9001aeda:	d113      	bne.n	9001af04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001aedc:	0962      	lsrs	r2, r4, #5
9001aede:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001aee2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001aee6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001aeea:	f026 0607 	bic.w	r6, r6, #7
9001aeee:	4316      	orrs	r6, r2
9001aef0:	4326      	orrs	r6, r4
9001aef2:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001aef6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001aef8:	f108 0801 	add.w	r8, r8, #1
9001aefc:	4410      	add	r0, r2
9001aefe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001af00:	4411      	add	r1, r2
9001af02:	e7d2      	b.n	9001aeaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001af04:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001af08:	fa1f fa82 	uxth.w	sl, r2
9001af0c:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001af10:	43d2      	mvns	r2, r2
9001af12:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001af16:	fb17 f70a 	smulbb	r7, r7, sl
9001af1a:	b2d2      	uxtb	r2, r2
9001af1c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001af20:	b2e4      	uxtb	r4, r4
9001af22:	b2f6      	uxtb	r6, r6
9001af24:	fb0c 7c02 	mla	ip, ip, r2, r7
9001af28:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001af2c:	fb14 f40a 	smulbb	r4, r4, sl
9001af30:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001af34:	fa1f fc8c 	uxth.w	ip, ip
9001af38:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001af3c:	fb16 f60a 	smulbb	r6, r6, sl
9001af40:	fa5f fe8e 	uxtb.w	lr, lr
9001af44:	fb0e 4402 	mla	r4, lr, r2, r4
9001af48:	fb07 6702 	mla	r7, r7, r2, r6
9001af4c:	f10c 0201 	add.w	r2, ip, #1
9001af50:	b2a4      	uxth	r4, r4
9001af52:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001af56:	1c66      	adds	r6, r4, #1
9001af58:	b2bf      	uxth	r7, r7
9001af5a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001af5e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001af62:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001af66:	ea46 0c0c 	orr.w	ip, r6, ip
9001af6a:	1c7e      	adds	r6, r7, #1
9001af6c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001af70:	0976      	lsrs	r6, r6, #5
9001af72:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001af76:	ea4c 0c06 	orr.w	ip, ip, r6
9001af7a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001af7e:	e7ba      	b.n	9001aef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001af80:	b007      	add	sp, #28
9001af82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001af88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001af88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001af8c:	b085      	sub	sp, #20
9001af8e:	468b      	mov	fp, r1
9001af90:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001af94:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001af96:	9203      	str	r2, [sp, #12]
9001af98:	6841      	ldr	r1, [r0, #4]
9001af9a:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001af9e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001afa2:	fb01 2404 	mla	r4, r1, r4, r2
9001afa6:	6802      	ldr	r2, [r0, #0]
9001afa8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001afac:	f8d8 2000 	ldr.w	r2, [r8]
9001afb0:	9201      	str	r2, [sp, #4]
9001afb2:	f1bb 0f00 	cmp.w	fp, #0
9001afb6:	dc03      	bgt.n	9001afc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001afb8:	9a03      	ldr	r2, [sp, #12]
9001afba:	2a00      	cmp	r2, #0
9001afbc:	f340 814f 	ble.w	9001b25e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001afc0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001afc2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001afc6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001afca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001afcc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001afd0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001afd4:	2b00      	cmp	r3, #0
9001afd6:	dd0e      	ble.n	9001aff6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001afd8:	1408      	asrs	r0, r1, #16
9001afda:	d405      	bmi.n	9001afe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001afdc:	42b8      	cmp	r0, r7
9001afde:	da03      	bge.n	9001afe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001afe0:	1410      	asrs	r0, r2, #16
9001afe2:	d401      	bmi.n	9001afe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001afe4:	42b0      	cmp	r0, r6
9001afe6:	db07      	blt.n	9001aff8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001afe8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001afea:	3b01      	subs	r3, #1
9001afec:	3402      	adds	r4, #2
9001afee:	4401      	add	r1, r0
9001aff0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001aff2:	4402      	add	r2, r0
9001aff4:	e7ee      	b.n	9001afd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001aff6:	d017      	beq.n	9001b028 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001aff8:	1e58      	subs	r0, r3, #1
9001affa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001affc:	fb05 1500 	mla	r5, r5, r0, r1
9001b000:	142d      	asrs	r5, r5, #16
9001b002:	d409      	bmi.n	9001b018 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b004:	42bd      	cmp	r5, r7
9001b006:	da07      	bge.n	9001b018 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b008:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001b00a:	fb05 2000 	mla	r0, r5, r0, r2
9001b00e:	1400      	asrs	r0, r0, #16
9001b010:	d402      	bmi.n	9001b018 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b012:	42b0      	cmp	r0, r6
9001b014:	f2c0 80ba 	blt.w	9001b18c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001b018:	2600      	movs	r6, #0
9001b01a:	1998      	adds	r0, r3, r6
9001b01c:	2800      	cmp	r0, #0
9001b01e:	dc3e      	bgt.n	9001b09e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001b020:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b024:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b028:	f1bb 0f00 	cmp.w	fp, #0
9001b02c:	f340 8117 	ble.w	9001b25e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001b030:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b034:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b036:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b03a:	f1bb 0b01 	subs.w	fp, fp, #1
9001b03e:	eeb0 6a62 	vmov.f32	s12, s5
9001b042:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b046:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b04a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b04e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b052:	eeb0 6a43 	vmov.f32	s12, s6
9001b056:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b05a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b05e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b062:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b066:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b06a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b06e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b072:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b076:	ee12 2a90 	vmov	r2, s5
9001b07a:	eef0 2a47 	vmov.f32	s5, s14
9001b07e:	fb92 f3f3 	sdiv	r3, r2, r3
9001b082:	ee13 2a10 	vmov	r2, s6
9001b086:	9311      	str	r3, [sp, #68]	@ 0x44
9001b088:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b08a:	eeb0 3a67 	vmov.f32	s6, s15
9001b08e:	fb92 f3f3 	sdiv	r3, r2, r3
9001b092:	9a03      	ldr	r2, [sp, #12]
9001b094:	9312      	str	r3, [sp, #72]	@ 0x48
9001b096:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b098:	bf08      	it	eq
9001b09a:	4613      	moveq	r3, r2
9001b09c:	e789      	b.n	9001afb2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001b09e:	140f      	asrs	r7, r1, #16
9001b0a0:	d424      	bmi.n	9001b0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b0a2:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001b0a6:	42bd      	cmp	r5, r7
9001b0a8:	dd20      	ble.n	9001b0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b0aa:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b0ae:	d41d      	bmi.n	9001b0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b0b0:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001b0b4:	4560      	cmp	r0, ip
9001b0b6:	dd19      	ble.n	9001b0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b0b8:	b22d      	sxth	r5, r5
9001b0ba:	9801      	ldr	r0, [sp, #4]
9001b0bc:	fb0c 7505 	mla	r5, ip, r5, r7
9001b0c0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001b0c4:	0e07      	lsrs	r7, r0, #24
9001b0c6:	2fff      	cmp	r7, #255	@ 0xff
9001b0c8:	d116      	bne.n	9001b0f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b0ca:	f06f 0501 	mvn.w	r5, #1
9001b0ce:	fb05 f706 	mul.w	r7, r5, r6
9001b0d2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001b0d6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001b0da:	0945      	lsrs	r5, r0, #5
9001b0dc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001b0e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001b0e4:	ea4c 0505 	orr.w	r5, ip, r5
9001b0e8:	4305      	orrs	r5, r0
9001b0ea:	53e5      	strh	r5, [r4, r7]
9001b0ec:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b0ee:	3e01      	subs	r6, #1
9001b0f0:	4401      	add	r1, r0
9001b0f2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b0f4:	4402      	add	r2, r0
9001b0f6:	e790      	b.n	9001b01a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b0f8:	b2fd      	uxtb	r5, r7
9001b0fa:	2f00      	cmp	r7, #0
9001b0fc:	d0f6      	beq.n	9001b0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b0fe:	f06f 0701 	mvn.w	r7, #1
9001b102:	fa1f f985 	uxth.w	r9, r5
9001b106:	43ed      	mvns	r5, r5
9001b108:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001b10c:	4377      	muls	r7, r6
9001b10e:	fb1a fa09 	smulbb	sl, sl, r9
9001b112:	b2ed      	uxtb	r5, r5
9001b114:	f834 e007 	ldrh.w	lr, [r4, r7]
9001b118:	9702      	str	r7, [sp, #8]
9001b11a:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001b11e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b122:	fb17 f709 	smulbb	r7, r7, r9
9001b126:	b2c0      	uxtb	r0, r0
9001b128:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b12c:	fb10 f009 	smulbb	r0, r0, r9
9001b130:	fb0c 7c05 	mla	ip, ip, r5, r7
9001b134:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001b138:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b13c:	fa1f fc8c 	uxth.w	ip, ip
9001b140:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b144:	fa5f fe8e 	uxtb.w	lr, lr
9001b148:	fb07 a705 	mla	r7, r7, r5, sl
9001b14c:	fb0e 0005 	mla	r0, lr, r5, r0
9001b150:	f10c 0501 	add.w	r5, ip, #1
9001b154:	b2bf      	uxth	r7, r7
9001b156:	b280      	uxth	r0, r0
9001b158:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b15c:	f100 0a01 	add.w	sl, r0, #1
9001b160:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b164:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001b168:	9802      	ldr	r0, [sp, #8]
9001b16a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b16e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b172:	f107 0a01 	add.w	sl, r7, #1
9001b176:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b17a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b17e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b182:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b186:	f824 c000 	strh.w	ip, [r4, r0]
9001b18a:	e7af      	b.n	9001b0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b18c:	f04f 0e00 	mov.w	lr, #0
9001b190:	eba3 000e 	sub.w	r0, r3, lr
9001b194:	2800      	cmp	r0, #0
9001b196:	f77f af43 	ble.w	9001b020 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b19a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001b19e:	140d      	asrs	r5, r1, #16
9001b1a0:	1410      	asrs	r0, r2, #16
9001b1a2:	fb06 5000 	mla	r0, r6, r0, r5
9001b1a6:	9d01      	ldr	r5, [sp, #4]
9001b1a8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001b1ac:	0e2e      	lsrs	r6, r5, #24
9001b1ae:	2eff      	cmp	r6, #255	@ 0xff
9001b1b0:	d112      	bne.n	9001b1d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001b1b2:	482c      	ldr	r0, [pc, #176]	@ (9001b264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001b1b4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001b1b8:	0968      	lsrs	r0, r5, #5
9001b1ba:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b1be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001b1c2:	4330      	orrs	r0, r6
9001b1c4:	4328      	orrs	r0, r5
9001b1c6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001b1ca:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b1cc:	f10e 0e01 	add.w	lr, lr, #1
9001b1d0:	4401      	add	r1, r0
9001b1d2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b1d4:	4402      	add	r2, r0
9001b1d6:	e7db      	b.n	9001b190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001b1d8:	b2f0      	uxtb	r0, r6
9001b1da:	2e00      	cmp	r6, #0
9001b1dc:	d0f5      	beq.n	9001b1ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001b1de:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001b1e2:	fa1f f980 	uxth.w	r9, r0
9001b1e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b1ea:	43c0      	mvns	r0, r0
9001b1ec:	ea4f 272c 	mov.w	r7, ip, asr #8
9001b1f0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b1f4:	fb16 f609 	smulbb	r6, r6, r9
9001b1f8:	b2c0      	uxtb	r0, r0
9001b1fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b1fe:	b2ed      	uxtb	r5, r5
9001b200:	fb1a fa09 	smulbb	sl, sl, r9
9001b204:	fb07 6700 	mla	r7, r7, r0, r6
9001b208:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001b20c:	fb15 f509 	smulbb	r5, r5, r9
9001b210:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b214:	b2bf      	uxth	r7, r7
9001b216:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b21a:	fa5f fc8c 	uxtb.w	ip, ip
9001b21e:	fb06 a600 	mla	r6, r6, r0, sl
9001b222:	fb0c 5500 	mla	r5, ip, r0, r5
9001b226:	1c78      	adds	r0, r7, #1
9001b228:	b2b6      	uxth	r6, r6
9001b22a:	b2ad      	uxth	r5, r5
9001b22c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001b230:	f105 0a01 	add.w	sl, r5, #1
9001b234:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b238:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b23c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b240:	ea4a 0707 	orr.w	r7, sl, r7
9001b244:	f106 0a01 	add.w	sl, r6, #1
9001b248:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b24c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b250:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b254:	ea47 070a 	orr.w	r7, r7, sl
9001b258:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001b25c:	e7b5      	b.n	9001b1ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001b25e:	b005      	add	sp, #20
9001b260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b264:	fffff800 	.word	0xfffff800

9001b268 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b26c:	b087      	sub	sp, #28
9001b26e:	468b      	mov	fp, r1
9001b270:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b274:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b276:	9203      	str	r2, [sp, #12]
9001b278:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b27c:	6841      	ldr	r1, [r0, #4]
9001b27e:	9204      	str	r2, [sp, #16]
9001b280:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001b284:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b288:	fb01 2404 	mla	r4, r1, r4, r2
9001b28c:	6802      	ldr	r2, [r0, #0]
9001b28e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b292:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001b296:	3201      	adds	r2, #1
9001b298:	f022 0201 	bic.w	r2, r2, #1
9001b29c:	9200      	str	r2, [sp, #0]
9001b29e:	f8d9 2000 	ldr.w	r2, [r9]
9001b2a2:	9201      	str	r2, [sp, #4]
9001b2a4:	f1bb 0f00 	cmp.w	fp, #0
9001b2a8:	dc03      	bgt.n	9001b2b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001b2aa:	9a03      	ldr	r2, [sp, #12]
9001b2ac:	2a00      	cmp	r2, #0
9001b2ae:	f340 816a 	ble.w	9001b586 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001b2b2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b2b4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001b2b8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b2bc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b2be:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001b2c2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b2c6:	2b00      	cmp	r3, #0
9001b2c8:	dd0e      	ble.n	9001b2e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001b2ca:	1402      	asrs	r2, r0, #16
9001b2cc:	d405      	bmi.n	9001b2da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b2ce:	42ba      	cmp	r2, r7
9001b2d0:	da03      	bge.n	9001b2da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b2d2:	140a      	asrs	r2, r1, #16
9001b2d4:	d401      	bmi.n	9001b2da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b2d6:	42b2      	cmp	r2, r6
9001b2d8:	db07      	blt.n	9001b2ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001b2da:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b2dc:	3b01      	subs	r3, #1
9001b2de:	3402      	adds	r4, #2
9001b2e0:	4410      	add	r0, r2
9001b2e2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b2e4:	4411      	add	r1, r2
9001b2e6:	e7ee      	b.n	9001b2c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001b2e8:	d017      	beq.n	9001b31a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001b2ea:	1e5a      	subs	r2, r3, #1
9001b2ec:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b2ee:	fb05 0502 	mla	r5, r5, r2, r0
9001b2f2:	142d      	asrs	r5, r5, #16
9001b2f4:	d409      	bmi.n	9001b30a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b2f6:	42bd      	cmp	r5, r7
9001b2f8:	da07      	bge.n	9001b30a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b2fa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b2fc:	fb05 1202 	mla	r2, r5, r2, r1
9001b300:	1412      	asrs	r2, r2, #16
9001b302:	d402      	bmi.n	9001b30a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b304:	42b2      	cmp	r2, r6
9001b306:	f2c0 80c8 	blt.w	9001b49a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001b30a:	2700      	movs	r7, #0
9001b30c:	19da      	adds	r2, r3, r7
9001b30e:	2a00      	cmp	r2, #0
9001b310:	dc3e      	bgt.n	9001b390 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001b312:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b316:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b31a:	f1bb 0f00 	cmp.w	fp, #0
9001b31e:	f340 8132 	ble.w	9001b586 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001b322:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b326:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b328:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b32c:	f1bb 0b01 	subs.w	fp, fp, #1
9001b330:	eeb0 6a62 	vmov.f32	s12, s5
9001b334:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b338:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b33c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b340:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b344:	eeb0 6a43 	vmov.f32	s12, s6
9001b348:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b34c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b350:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b354:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b358:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b35c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b360:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b364:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b368:	ee12 2a90 	vmov	r2, s5
9001b36c:	eef0 2a47 	vmov.f32	s5, s14
9001b370:	fb92 f3f3 	sdiv	r3, r2, r3
9001b374:	ee13 2a10 	vmov	r2, s6
9001b378:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b37a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b37c:	eeb0 3a67 	vmov.f32	s6, s15
9001b380:	fb92 f3f3 	sdiv	r3, r2, r3
9001b384:	9a03      	ldr	r2, [sp, #12]
9001b386:	9314      	str	r3, [sp, #80]	@ 0x50
9001b388:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b38a:	bf08      	it	eq
9001b38c:	4613      	moveq	r3, r2
9001b38e:	e789      	b.n	9001b2a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001b390:	1405      	asrs	r5, r0, #16
9001b392:	d436      	bmi.n	9001b402 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b394:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001b398:	42aa      	cmp	r2, r5
9001b39a:	dd32      	ble.n	9001b402 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b39c:	140e      	asrs	r6, r1, #16
9001b39e:	d430      	bmi.n	9001b402 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b3a0:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001b3a4:	42b2      	cmp	r2, r6
9001b3a6:	dd2c      	ble.n	9001b402 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b3a8:	9a00      	ldr	r2, [sp, #0]
9001b3aa:	fb06 5502 	mla	r5, r6, r2, r5
9001b3ae:	9e01      	ldr	r6, [sp, #4]
9001b3b0:	086a      	lsrs	r2, r5, #1
9001b3b2:	5cb2      	ldrb	r2, [r6, r2]
9001b3b4:	07ee      	lsls	r6, r5, #31
9001b3b6:	bf54      	ite	pl
9001b3b8:	f002 020f 	andpl.w	r2, r2, #15
9001b3bc:	1112      	asrmi	r2, r2, #4
9001b3be:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b3c2:	b2d2      	uxtb	r2, r2
9001b3c4:	b1ea      	cbz	r2, 9001b402 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b3c6:	9d04      	ldr	r5, [sp, #16]
9001b3c8:	436a      	muls	r2, r5
9001b3ca:	1c55      	adds	r5, r2, #1
9001b3cc:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001b3d0:	4d6e      	ldr	r5, [pc, #440]	@ (9001b58c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001b3d2:	1212      	asrs	r2, r2, #8
9001b3d4:	682d      	ldr	r5, [r5, #0]
9001b3d6:	2aff      	cmp	r2, #255	@ 0xff
9001b3d8:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001b3dc:	9605      	str	r6, [sp, #20]
9001b3de:	d116      	bne.n	9001b40e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001b3e0:	f06f 0201 	mvn.w	r2, #1
9001b3e4:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001b3e8:	fb02 fc07 	mul.w	ip, r2, r7
9001b3ec:	096a      	lsrs	r2, r5, #5
9001b3ee:	f026 0607 	bic.w	r6, r6, #7
9001b3f2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b3f6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001b3fa:	4316      	orrs	r6, r2
9001b3fc:	432e      	orrs	r6, r5
9001b3fe:	f824 600c 	strh.w	r6, [r4, ip]
9001b402:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b404:	3f01      	subs	r7, #1
9001b406:	4410      	add	r0, r2
9001b408:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b40a:	4411      	add	r1, r2
9001b40c:	e77e      	b.n	9001b30c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001b40e:	f06f 0601 	mvn.w	r6, #1
9001b412:	fa1f fa82 	uxth.w	sl, r2
9001b416:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001b41a:	43d2      	mvns	r2, r2
9001b41c:	437e      	muls	r6, r7
9001b41e:	b2ed      	uxtb	r5, r5
9001b420:	fb1c fc0a 	smulbb	ip, ip, sl
9001b424:	b2d2      	uxtb	r2, r2
9001b426:	f834 8006 	ldrh.w	r8, [r4, r6]
9001b42a:	fb15 f50a 	smulbb	r5, r5, sl
9001b42e:	9602      	str	r6, [sp, #8]
9001b430:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001b434:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001b438:	fb16 f60a 	smulbb	r6, r6, sl
9001b43c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001b440:	fb0e ce02 	mla	lr, lr, r2, ip
9001b444:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001b448:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b44c:	fa1f fe8e 	uxth.w	lr, lr
9001b450:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001b454:	fa5f f888 	uxtb.w	r8, r8
9001b458:	fb0c 6c02 	mla	ip, ip, r2, r6
9001b45c:	fb08 5502 	mla	r5, r8, r2, r5
9001b460:	f10e 0201 	add.w	r2, lr, #1
9001b464:	fa1f fc8c 	uxth.w	ip, ip
9001b468:	b2ad      	uxth	r5, r5
9001b46a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001b46e:	9a02      	ldr	r2, [sp, #8]
9001b470:	1c6e      	adds	r6, r5, #1
9001b472:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001b476:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001b47a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001b47e:	ea46 0e0e 	orr.w	lr, r6, lr
9001b482:	f10c 0601 	add.w	r6, ip, #1
9001b486:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001b48a:	0976      	lsrs	r6, r6, #5
9001b48c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b490:	ea4e 0e06 	orr.w	lr, lr, r6
9001b494:	f824 e002 	strh.w	lr, [r4, r2]
9001b498:	e7b3      	b.n	9001b402 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b49a:	f04f 0800 	mov.w	r8, #0
9001b49e:	eba3 0208 	sub.w	r2, r3, r8
9001b4a2:	2a00      	cmp	r2, #0
9001b4a4:	f77f af35 	ble.w	9001b312 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001b4a8:	1402      	asrs	r2, r0, #16
9001b4aa:	9e00      	ldr	r6, [sp, #0]
9001b4ac:	140d      	asrs	r5, r1, #16
9001b4ae:	fb06 2505 	mla	r5, r6, r5, r2
9001b4b2:	9e01      	ldr	r6, [sp, #4]
9001b4b4:	086a      	lsrs	r2, r5, #1
9001b4b6:	07ed      	lsls	r5, r5, #31
9001b4b8:	5cb2      	ldrb	r2, [r6, r2]
9001b4ba:	bf54      	ite	pl
9001b4bc:	f002 020f 	andpl.w	r2, r2, #15
9001b4c0:	1112      	asrmi	r2, r2, #4
9001b4c2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b4c6:	b2d2      	uxtb	r2, r2
9001b4c8:	b1c2      	cbz	r2, 9001b4fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b4ca:	9d04      	ldr	r5, [sp, #16]
9001b4cc:	436a      	muls	r2, r5
9001b4ce:	1c55      	adds	r5, r2, #1
9001b4d0:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001b4d4:	4d2d      	ldr	r5, [pc, #180]	@ (9001b58c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001b4d6:	1212      	asrs	r2, r2, #8
9001b4d8:	682e      	ldr	r6, [r5, #0]
9001b4da:	2aff      	cmp	r2, #255	@ 0xff
9001b4dc:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001b4e0:	d113      	bne.n	9001b50a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001b4e2:	0972      	lsrs	r2, r6, #5
9001b4e4:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001b4e8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001b4ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001b4f0:	f025 0507 	bic.w	r5, r5, #7
9001b4f4:	4315      	orrs	r5, r2
9001b4f6:	4335      	orrs	r5, r6
9001b4f8:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001b4fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b4fe:	f108 0801 	add.w	r8, r8, #1
9001b502:	4410      	add	r0, r2
9001b504:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b506:	4411      	add	r1, r2
9001b508:	e7c9      	b.n	9001b49e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001b50a:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001b50e:	fa1f fa82 	uxth.w	sl, r2
9001b512:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001b516:	43d2      	mvns	r2, r2
9001b518:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b51c:	fb17 f70a 	smulbb	r7, r7, sl
9001b520:	b2d2      	uxtb	r2, r2
9001b522:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b526:	b2f6      	uxtb	r6, r6
9001b528:	b2ed      	uxtb	r5, r5
9001b52a:	fb0c 7c02 	mla	ip, ip, r2, r7
9001b52e:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001b532:	fb16 f60a 	smulbb	r6, r6, sl
9001b536:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b53a:	fa1f fc8c 	uxth.w	ip, ip
9001b53e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b542:	fb15 f50a 	smulbb	r5, r5, sl
9001b546:	fa5f fe8e 	uxtb.w	lr, lr
9001b54a:	fb0e 6602 	mla	r6, lr, r2, r6
9001b54e:	fb07 5702 	mla	r7, r7, r2, r5
9001b552:	f10c 0201 	add.w	r2, ip, #1
9001b556:	b2b6      	uxth	r6, r6
9001b558:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001b55c:	1c75      	adds	r5, r6, #1
9001b55e:	b2bf      	uxth	r7, r7
9001b560:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b564:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001b568:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b56c:	ea45 0c0c 	orr.w	ip, r5, ip
9001b570:	1c7d      	adds	r5, r7, #1
9001b572:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001b576:	096d      	lsrs	r5, r5, #5
9001b578:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001b57c:	ea4c 0c05 	orr.w	ip, ip, r5
9001b580:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001b584:	e7ba      	b.n	9001b4fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b586:	b007      	add	sp, #28
9001b588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b58c:	24021bec 	.word	0x24021bec

9001b590 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b594:	b087      	sub	sp, #28
9001b596:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b59a:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001b8a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001b59e:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b5a0:	9101      	str	r1, [sp, #4]
9001b5a2:	9205      	str	r2, [sp, #20]
9001b5a4:	6841      	ldr	r1, [r0, #4]
9001b5a6:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001b5aa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b5ae:	fb01 2404 	mla	r4, r1, r4, r2
9001b5b2:	6802      	ldr	r2, [r0, #0]
9001b5b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b5b8:	f8db 2008 	ldr.w	r2, [fp, #8]
9001b5bc:	3201      	adds	r2, #1
9001b5be:	f022 0201 	bic.w	r2, r2, #1
9001b5c2:	9202      	str	r2, [sp, #8]
9001b5c4:	f8db 2000 	ldr.w	r2, [fp]
9001b5c8:	9203      	str	r2, [sp, #12]
9001b5ca:	9a01      	ldr	r2, [sp, #4]
9001b5cc:	2a00      	cmp	r2, #0
9001b5ce:	dc03      	bgt.n	9001b5d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001b5d0:	9a05      	ldr	r2, [sp, #20]
9001b5d2:	2a00      	cmp	r2, #0
9001b5d4:	f340 8162 	ble.w	9001b89c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001b5d8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b5da:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001b5de:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b5e2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b5e4:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001b5e8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b5ec:	2b00      	cmp	r3, #0
9001b5ee:	dd0e      	ble.n	9001b60e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b5f0:	1402      	asrs	r2, r0, #16
9001b5f2:	d405      	bmi.n	9001b600 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b5f4:	42ba      	cmp	r2, r7
9001b5f6:	da03      	bge.n	9001b600 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b5f8:	140a      	asrs	r2, r1, #16
9001b5fa:	d401      	bmi.n	9001b600 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b5fc:	42b2      	cmp	r2, r6
9001b5fe:	db07      	blt.n	9001b610 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001b600:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b602:	3b01      	subs	r3, #1
9001b604:	3402      	adds	r4, #2
9001b606:	4410      	add	r0, r2
9001b608:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b60a:	4411      	add	r1, r2
9001b60c:	e7ee      	b.n	9001b5ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001b60e:	d017      	beq.n	9001b640 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001b610:	1e5a      	subs	r2, r3, #1
9001b612:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b614:	fb05 0502 	mla	r5, r5, r2, r0
9001b618:	142d      	asrs	r5, r5, #16
9001b61a:	d409      	bmi.n	9001b630 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b61c:	42bd      	cmp	r5, r7
9001b61e:	da07      	bge.n	9001b630 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b620:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b622:	fb05 1202 	mla	r2, r5, r2, r1
9001b626:	1412      	asrs	r2, r2, #16
9001b628:	d402      	bmi.n	9001b630 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b62a:	42b2      	cmp	r2, r6
9001b62c:	f2c0 80c3 	blt.w	9001b7b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001b630:	2500      	movs	r5, #0
9001b632:	195a      	adds	r2, r3, r5
9001b634:	2a00      	cmp	r2, #0
9001b636:	dc3f      	bgt.n	9001b6b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001b638:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b63c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b640:	9b01      	ldr	r3, [sp, #4]
9001b642:	2b00      	cmp	r3, #0
9001b644:	f340 812a 	ble.w	9001b89c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001b648:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b64c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b64e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b652:	eeb0 6a62 	vmov.f32	s12, s5
9001b656:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b65a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b65e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b662:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b666:	eeb0 6a43 	vmov.f32	s12, s6
9001b66a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b66e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b672:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b676:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b67a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b67e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b682:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b686:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b68a:	ee12 2a90 	vmov	r2, s5
9001b68e:	eef0 2a47 	vmov.f32	s5, s14
9001b692:	fb92 f3f3 	sdiv	r3, r2, r3
9001b696:	ee13 2a10 	vmov	r2, s6
9001b69a:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b69c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b69e:	eeb0 3a67 	vmov.f32	s6, s15
9001b6a2:	fb92 f3f3 	sdiv	r3, r2, r3
9001b6a6:	9314      	str	r3, [sp, #80]	@ 0x50
9001b6a8:	9b01      	ldr	r3, [sp, #4]
9001b6aa:	9a05      	ldr	r2, [sp, #20]
9001b6ac:	3b01      	subs	r3, #1
9001b6ae:	9301      	str	r3, [sp, #4]
9001b6b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b6b2:	bf08      	it	eq
9001b6b4:	4613      	moveq	r3, r2
9001b6b6:	e788      	b.n	9001b5ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001b6b8:	1406      	asrs	r6, r0, #16
9001b6ba:	d42c      	bmi.n	9001b716 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b6bc:	f8db 2008 	ldr.w	r2, [fp, #8]
9001b6c0:	42b2      	cmp	r2, r6
9001b6c2:	dd28      	ble.n	9001b716 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b6c4:	140f      	asrs	r7, r1, #16
9001b6c6:	d426      	bmi.n	9001b716 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b6c8:	f8db 200c 	ldr.w	r2, [fp, #12]
9001b6cc:	42ba      	cmp	r2, r7
9001b6ce:	dd22      	ble.n	9001b716 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b6d0:	9a02      	ldr	r2, [sp, #8]
9001b6d2:	fb07 6602 	mla	r6, r7, r2, r6
9001b6d6:	9f03      	ldr	r7, [sp, #12]
9001b6d8:	0872      	lsrs	r2, r6, #1
9001b6da:	07f6      	lsls	r6, r6, #31
9001b6dc:	5cba      	ldrb	r2, [r7, r2]
9001b6de:	bf54      	ite	pl
9001b6e0:	f002 020f 	andpl.w	r2, r2, #15
9001b6e4:	1112      	asrmi	r2, r2, #4
9001b6e6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b6ea:	b2d2      	uxtb	r2, r2
9001b6ec:	2aff      	cmp	r2, #255	@ 0xff
9001b6ee:	d118      	bne.n	9001b722 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001b6f0:	f06f 0601 	mvn.w	r6, #1
9001b6f4:	f8d8 2000 	ldr.w	r2, [r8]
9001b6f8:	fb06 f705 	mul.w	r7, r6, r5
9001b6fc:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001b700:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001b704:	0956      	lsrs	r6, r2, #5
9001b706:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001b70a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b70e:	ea4c 0606 	orr.w	r6, ip, r6
9001b712:	4316      	orrs	r6, r2
9001b714:	53e6      	strh	r6, [r4, r7]
9001b716:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b718:	3d01      	subs	r5, #1
9001b71a:	4410      	add	r0, r2
9001b71c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b71e:	4411      	add	r1, r2
9001b720:	e787      	b.n	9001b632 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b722:	2a00      	cmp	r2, #0
9001b724:	d0f7      	beq.n	9001b716 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b726:	f06f 0601 	mvn.w	r6, #1
9001b72a:	f8d8 c000 	ldr.w	ip, [r8]
9001b72e:	fa1f f982 	uxth.w	r9, r2
9001b732:	43d2      	mvns	r2, r2
9001b734:	436e      	muls	r6, r5
9001b736:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001b73a:	b2d2      	uxtb	r2, r2
9001b73c:	f834 e006 	ldrh.w	lr, [r4, r6]
9001b740:	fb1a fa09 	smulbb	sl, sl, r9
9001b744:	9604      	str	r6, [sp, #16]
9001b746:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001b74a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001b74e:	fb16 f609 	smulbb	r6, r6, r9
9001b752:	fa5f fc8c 	uxtb.w	ip, ip
9001b756:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b75a:	fb1c fc09 	smulbb	ip, ip, r9
9001b75e:	fb07 6702 	mla	r7, r7, r2, r6
9001b762:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b766:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b76a:	b2bf      	uxth	r7, r7
9001b76c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b770:	fa5f fe8e 	uxtb.w	lr, lr
9001b774:	fb06 a602 	mla	r6, r6, r2, sl
9001b778:	fb0e cc02 	mla	ip, lr, r2, ip
9001b77c:	1c7a      	adds	r2, r7, #1
9001b77e:	b2b6      	uxth	r6, r6
9001b780:	fa1f fc8c 	uxth.w	ip, ip
9001b784:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001b788:	9a04      	ldr	r2, [sp, #16]
9001b78a:	f10c 0a01 	add.w	sl, ip, #1
9001b78e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b792:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001b796:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b79a:	ea4a 0707 	orr.w	r7, sl, r7
9001b79e:	f106 0a01 	add.w	sl, r6, #1
9001b7a2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b7a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b7aa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b7ae:	ea47 070a 	orr.w	r7, r7, sl
9001b7b2:	52a7      	strh	r7, [r4, r2]
9001b7b4:	e7af      	b.n	9001b716 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b7b6:	f04f 0e00 	mov.w	lr, #0
9001b7ba:	eba3 020e 	sub.w	r2, r3, lr
9001b7be:	2a00      	cmp	r2, #0
9001b7c0:	f77f af3a 	ble.w	9001b638 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b7c4:	1402      	asrs	r2, r0, #16
9001b7c6:	9e02      	ldr	r6, [sp, #8]
9001b7c8:	140d      	asrs	r5, r1, #16
9001b7ca:	fb06 2505 	mla	r5, r6, r5, r2
9001b7ce:	9e03      	ldr	r6, [sp, #12]
9001b7d0:	086a      	lsrs	r2, r5, #1
9001b7d2:	07ed      	lsls	r5, r5, #31
9001b7d4:	5cb2      	ldrb	r2, [r6, r2]
9001b7d6:	bf54      	ite	pl
9001b7d8:	f002 020f 	andpl.w	r2, r2, #15
9001b7dc:	1112      	asrmi	r2, r2, #4
9001b7de:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b7e2:	b2d2      	uxtb	r2, r2
9001b7e4:	2aff      	cmp	r2, #255	@ 0xff
9001b7e6:	d115      	bne.n	9001b814 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001b7e8:	f8d8 5000 	ldr.w	r5, [r8]
9001b7ec:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001b7f0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001b7f4:	096a      	lsrs	r2, r5, #5
9001b7f6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b7fa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001b7fe:	4332      	orrs	r2, r6
9001b800:	432a      	orrs	r2, r5
9001b802:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001b806:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b808:	f10e 0e01 	add.w	lr, lr, #1
9001b80c:	4410      	add	r0, r2
9001b80e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b810:	4411      	add	r1, r2
9001b812:	e7d2      	b.n	9001b7ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001b814:	2a00      	cmp	r2, #0
9001b816:	d0f6      	beq.n	9001b806 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001b818:	f8d8 7000 	ldr.w	r7, [r8]
9001b81c:	fa1f f982 	uxth.w	r9, r2
9001b820:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001b824:	43d2      	mvns	r2, r2
9001b826:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001b82a:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001b82e:	ea4f 262c 	mov.w	r6, ip, asr #8
9001b832:	fb15 f509 	smulbb	r5, r5, r9
9001b836:	b2d2      	uxtb	r2, r2
9001b838:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b83c:	b2ff      	uxtb	r7, r7
9001b83e:	fb1a fa09 	smulbb	sl, sl, r9
9001b842:	fb06 5602 	mla	r6, r6, r2, r5
9001b846:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001b84a:	fb17 f709 	smulbb	r7, r7, r9
9001b84e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b852:	b2b6      	uxth	r6, r6
9001b854:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001b858:	fa5f fc8c 	uxtb.w	ip, ip
9001b85c:	fb05 a502 	mla	r5, r5, r2, sl
9001b860:	fb0c 7702 	mla	r7, ip, r2, r7
9001b864:	1c72      	adds	r2, r6, #1
9001b866:	b2ad      	uxth	r5, r5
9001b868:	b2bf      	uxth	r7, r7
9001b86a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001b86e:	f107 0a01 	add.w	sl, r7, #1
9001b872:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001b876:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b87a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b87e:	ea4a 0606 	orr.w	r6, sl, r6
9001b882:	f105 0a01 	add.w	sl, r5, #1
9001b886:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b88a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b88e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b892:	ea46 060a 	orr.w	r6, r6, sl
9001b896:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001b89a:	e7b4      	b.n	9001b806 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001b89c:	b007      	add	sp, #28
9001b89e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b8a2:	bf00      	nop
9001b8a4:	24021bec 	.word	0x24021bec

9001b8a8 <_ZN8touchgfx8LCD16bppD1Ev>:
9001b8a8:	4770      	bx	lr

9001b8aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001b8aa:	4770      	bx	lr

9001b8ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001b8ac:	4770      	bx	lr

9001b8ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001b8ae:	4770      	bx	lr

9001b8b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001b8b0:	4770      	bx	lr

9001b8b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001b8b2:	4770      	bx	lr

9001b8b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001b8b4:	4770      	bx	lr

9001b8b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001b8b6:	4770      	bx	lr

9001b8b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001b8b8:	4770      	bx	lr

9001b8ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001b8ba:	4770      	bx	lr

9001b8bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001b8bc:	4770      	bx	lr

9001b8be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001b8be:	4770      	bx	lr

9001b8c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001b8c0:	4770      	bx	lr

9001b8c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001b8c2:	4770      	bx	lr

9001b8c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001b8c4:	4770      	bx	lr

9001b8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001b8c6:	4770      	bx	lr

9001b8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001b8c8:	4770      	bx	lr

9001b8ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001b8ca:	4770      	bx	lr

9001b8cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001b8cc:	4770      	bx	lr

9001b8ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001b8ce:	4770      	bx	lr

9001b8d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001b8d0:	4770      	bx	lr

9001b8d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001b8d2:	4770      	bx	lr

9001b8d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001b8d4:	4770      	bx	lr

9001b8d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001b8d6:	4770      	bx	lr

9001b8d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001b8d8:	4770      	bx	lr

9001b8da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001b8da:	4770      	bx	lr

9001b8dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001b8dc:	4770      	bx	lr

9001b8de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001b8de:	4770      	bx	lr

9001b8e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001b8e0:	4770      	bx	lr

9001b8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001b8e2:	4770      	bx	lr

9001b8e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001b8e4:	4770      	bx	lr

9001b8e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001b8e6:	4770      	bx	lr

9001b8e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001b8e8:	4770      	bx	lr

9001b8ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001b8ea:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001b8ee:	b088      	sub	sp, #32
9001b8f0:	4606      	mov	r6, r0
9001b8f2:	4688      	mov	r8, r1
9001b8f4:	4691      	mov	r9, r2
9001b8f6:	ac08      	add	r4, sp, #32
9001b8f8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001b8fc:	4620      	mov	r0, r4
9001b8fe:	f7fd fc33 	bl	90019168 <_ZNK8touchgfx6Bitmap7getDataEv>
9001b902:	6833      	ldr	r3, [r6, #0]
9001b904:	4605      	mov	r5, r0
9001b906:	4620      	mov	r0, r4
9001b908:	699f      	ldr	r7, [r3, #24]
9001b90a:	f7fd fb3b 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001b90e:	4682      	mov	sl, r0
9001b910:	4620      	mov	r0, r4
9001b912:	f7fd fb6b 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
9001b916:	9500      	str	r5, [sp, #0]
9001b918:	464b      	mov	r3, r9
9001b91a:	4642      	mov	r2, r8
9001b91c:	4631      	mov	r1, r6
9001b91e:	e9cd a001 	strd	sl, r0, [sp, #4]
9001b922:	a806      	add	r0, sp, #24
9001b924:	47b8      	blx	r7
9001b926:	4628      	mov	r0, r5
9001b928:	b008      	add	sp, #32
9001b92a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001b930 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001b930:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001b934:	2300      	movs	r3, #0
9001b936:	9300      	str	r3, [sp, #0]
9001b938:	4b3d      	ldr	r3, [pc, #244]	@ (9001ba30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001b93a:	781b      	ldrb	r3, [r3, #0]
9001b93c:	2b00      	cmp	r3, #0
9001b93e:	d137      	bne.n	9001b9b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001b940:	4a3c      	ldr	r2, [pc, #240]	@ (9001ba34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001b942:	f9b2 2000 	ldrsh.w	r2, [r2]
9001b946:	f8ad 2004 	strh.w	r2, [sp, #4]
9001b94a:	2b00      	cmp	r3, #0
9001b94c:	d132      	bne.n	9001b9b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001b94e:	4b3a      	ldr	r3, [pc, #232]	@ (9001ba38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001b950:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b954:	ac02      	add	r4, sp, #8
9001b956:	6808      	ldr	r0, [r1, #0]
9001b958:	f8ad 3006 	strh.w	r3, [sp, #6]
9001b95c:	ab02      	add	r3, sp, #8
9001b95e:	6849      	ldr	r1, [r1, #4]
9001b960:	4d36      	ldr	r5, [pc, #216]	@ (9001ba3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001b962:	c303      	stmia	r3!, {r0, r1}
9001b964:	4669      	mov	r1, sp
9001b966:	4620      	mov	r0, r4
9001b968:	f7f9 fe2e 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b96c:	4668      	mov	r0, sp
9001b96e:	f7f9 fe03 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b972:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001b976:	f8bd 2000 	ldrh.w	r2, [sp]
9001b97a:	462f      	mov	r7, r5
9001b97c:	6828      	ldr	r0, [r5, #0]
9001b97e:	4413      	add	r3, r2
9001b980:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001b984:	f8ad 3008 	strh.w	r3, [sp, #8]
9001b988:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001b98c:	4413      	add	r3, r2
9001b98e:	f8ad 300a 	strh.w	r3, [sp, #10]
9001b992:	6803      	ldr	r3, [r0, #0]
9001b994:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001b996:	4798      	blx	r3
9001b998:	f010 0f01 	tst.w	r0, #1
9001b99c:	d00c      	beq.n	9001b9b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001b99e:	6828      	ldr	r0, [r5, #0]
9001b9a0:	6803      	ldr	r3, [r0, #0]
9001b9a2:	e894 0006 	ldmia.w	r4, {r1, r2}
9001b9a6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001b9a8:	4798      	blx	r3
9001b9aa:	b004      	add	sp, #16
9001b9ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001b9b0:	4a21      	ldr	r2, [pc, #132]	@ (9001ba38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001b9b2:	e7c6      	b.n	9001b942 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001b9b4:	4b1f      	ldr	r3, [pc, #124]	@ (9001ba34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001b9b6:	e7cb      	b.n	9001b950 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001b9b8:	6838      	ldr	r0, [r7, #0]
9001b9ba:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001b9be:	6803      	ldr	r3, [r0, #0]
9001b9c0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001b9c4:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001b9c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001b9ca:	4798      	blx	r3
9001b9cc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001b9d0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001b9d4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001b9d8:	fb16 3602 	smlabb	r6, r6, r2, r3
9001b9dc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001b9e0:	6838      	ldr	r0, [r7, #0]
9001b9e2:	6803      	ldr	r3, [r0, #0]
9001b9e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b9e6:	4798      	blx	r3
9001b9e8:	4a12      	ldr	r2, [pc, #72]	@ (9001ba34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001b9ea:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001b9ee:	8813      	ldrh	r3, [r2, #0]
9001b9f0:	4691      	mov	r9, r2
9001b9f2:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001b9f6:	435d      	muls	r5, r3
9001b9f8:	fb03 1404 	mla	r4, r3, r4, r1
9001b9fc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001ba00:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ba04:	6838      	ldr	r0, [r7, #0]
9001ba06:	42ac      	cmp	r4, r5
9001ba08:	6803      	ldr	r3, [r0, #0]
9001ba0a:	d20e      	bcs.n	9001ba2a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001ba0c:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
9001ba10:	4632      	mov	r2, r6
9001ba12:	4643      	mov	r3, r8
9001ba14:	4621      	mov	r1, r4
9001ba16:	47d0      	blx	sl
9001ba18:	f8b9 3000 	ldrh.w	r3, [r9]
9001ba1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ba20:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001ba24:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ba28:	e7ec      	b.n	9001ba04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001ba2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ba2c:	4798      	blx	r3
9001ba2e:	e7bc      	b.n	9001b9aa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001ba30:	24021bd4 	.word	0x24021bd4
9001ba34:	24021bd6 	.word	0x24021bd6
9001ba38:	24021bd8 	.word	0x24021bd8
9001ba3c:	24021bdc 	.word	0x24021bdc

9001ba40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001ba40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ba44:	b08b      	sub	sp, #44	@ 0x2c
9001ba46:	460f      	mov	r7, r1
9001ba48:	4616      	mov	r6, r2
9001ba4a:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001ba4e:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001ba52:	f1bb 0f00 	cmp.w	fp, #0
9001ba56:	d04a      	beq.n	9001baee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001ba58:	6810      	ldr	r0, [r2, #0]
9001ba5a:	ad06      	add	r5, sp, #24
9001ba5c:	6851      	ldr	r1, [r2, #4]
9001ba5e:	c503      	stmia	r5!, {r0, r1}
9001ba60:	6818      	ldr	r0, [r3, #0]
9001ba62:	ad08      	add	r5, sp, #32
9001ba64:	6859      	ldr	r1, [r3, #4]
9001ba66:	c503      	stmia	r5!, {r0, r1}
9001ba68:	a806      	add	r0, sp, #24
9001ba6a:	f7f9 fd85 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ba6e:	4631      	mov	r1, r6
9001ba70:	a808      	add	r0, sp, #32
9001ba72:	f7f9 fda9 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ba76:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001ba7a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001ba7e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001ba82:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001ba86:	fb16 2103 	smlabb	r1, r6, r3, r2
9001ba8a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001ba8e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001ba92:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001ba96:	4f5f      	ldr	r7, [pc, #380]	@ (9001bc14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001ba98:	440a      	add	r2, r1
9001ba9a:	6838      	ldr	r0, [r7, #0]
9001ba9c:	46b9      	mov	r9, r7
9001ba9e:	f8ad 2020 	strh.w	r2, [sp, #32]
9001baa2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001baa6:	4413      	add	r3, r2
9001baa8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001baac:	6803      	ldr	r3, [r0, #0]
9001baae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001bab0:	4798      	blx	r3
9001bab2:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001bab6:	d11d      	bne.n	9001baf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001bab8:	b9fc      	cbnz	r4, 9001bafa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001baba:	f010 0f01 	tst.w	r0, #1
9001babe:	d01c      	beq.n	9001bafa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001bac0:	f8d9 0000 	ldr.w	r0, [r9]
9001bac4:	2700      	movs	r7, #0
9001bac6:	b2ad      	uxth	r5, r5
9001bac8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001bacc:	6801      	ldr	r1, [r0, #0]
9001bace:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001bad2:	f8cd b00c 	str.w	fp, [sp, #12]
9001bad6:	9501      	str	r5, [sp, #4]
9001bad8:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001badc:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001bae0:	9402      	str	r4, [sp, #8]
9001bae2:	fa1f f488 	uxth.w	r4, r8
9001bae6:	9400      	str	r4, [sp, #0]
9001bae8:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
9001baea:	4631      	mov	r1, r6
9001baec:	47a0      	blx	r4
9001baee:	b00b      	add	sp, #44	@ 0x2c
9001baf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001baf4:	f010 0f04 	tst.w	r0, #4
9001baf8:	e7e1      	b.n	9001babe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001bafa:	f8d9 0000 	ldr.w	r0, [r9]
9001bafe:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001bb02:	6803      	ldr	r3, [r0, #0]
9001bb04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001bb06:	4798      	blx	r3
9001bb08:	4b43      	ldr	r3, [pc, #268]	@ (9001bc18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001bb0a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001bb0e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001bb12:	881a      	ldrh	r2, [r3, #0]
9001bb14:	469a      	mov	sl, r3
9001bb16:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001bb1a:	fb05 f502 	mul.w	r5, r5, r2
9001bb1e:	fb02 1404 	mla	r4, r2, r4, r1
9001bb22:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001bb26:	d059      	beq.n	9001bbdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001bb28:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001bb2c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001bb30:	fa1f f28b 	uxth.w	r2, fp
9001bb34:	469e      	mov	lr, r3
9001bb36:	fa1f f989 	uxth.w	r9, r9
9001bb3a:	42ac      	cmp	r4, r5
9001bb3c:	d264      	bcs.n	9001bc08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001bb3e:	eb04 0a07 	add.w	sl, r4, r7
9001bb42:	4554      	cmp	r4, sl
9001bb44:	d23d      	bcs.n	9001bbc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001bb46:	8821      	ldrh	r1, [r4, #0]
9001bb48:	f836 3b02 	ldrh.w	r3, [r6], #2
9001bb4c:	1208      	asrs	r0, r1, #8
9001bb4e:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001bb52:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001bb56:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001bb5a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bb5e:	00c9      	lsls	r1, r1, #3
9001bb60:	fb10 f009 	smulbb	r0, r0, r9
9001bb64:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001bb68:	b2c9      	uxtb	r1, r1
9001bb6a:	fb0c 0c02 	mla	ip, ip, r2, r0
9001bb6e:	10d8      	asrs	r0, r3, #3
9001bb70:	fb1b fb09 	smulbb	fp, fp, r9
9001bb74:	00db      	lsls	r3, r3, #3
9001bb76:	fa1f fc8c 	uxth.w	ip, ip
9001bb7a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001bb7e:	fb11 f109 	smulbb	r1, r1, r9
9001bb82:	b2db      	uxtb	r3, r3
9001bb84:	fb00 b002 	mla	r0, r0, r2, fp
9001bb88:	f10c 0b01 	add.w	fp, ip, #1
9001bb8c:	fb03 1302 	mla	r3, r3, r2, r1
9001bb90:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001bb94:	b29b      	uxth	r3, r3
9001bb96:	b280      	uxth	r0, r0
9001bb98:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001bb9c:	f103 0c01 	add.w	ip, r3, #1
9001bba0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001bba4:	1c43      	adds	r3, r0, #1
9001bba6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001bbaa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001bbae:	0940      	lsrs	r0, r0, #5
9001bbb0:	ea4c 0c0b 	orr.w	ip, ip, fp
9001bbb4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001bbb8:	ea4c 0c00 	orr.w	ip, ip, r0
9001bbbc:	f824 cb02 	strh.w	ip, [r4], #2
9001bbc0:	e7bf      	b.n	9001bb42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001bbc2:	f8be 3000 	ldrh.w	r3, [lr]
9001bbc6:	eba3 0308 	sub.w	r3, r3, r8
9001bbca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bbce:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001bbd2:	eba3 0308 	sub.w	r3, r3, r8
9001bbd6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001bbda:	e7ae      	b.n	9001bb3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001bbdc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001bbe0:	f8d9 0000 	ldr.w	r0, [r9]
9001bbe4:	42ac      	cmp	r4, r5
9001bbe6:	6803      	ldr	r3, [r0, #0]
9001bbe8:	d20e      	bcs.n	9001bc08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001bbea:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
9001bbee:	4632      	mov	r2, r6
9001bbf0:	463b      	mov	r3, r7
9001bbf2:	4621      	mov	r1, r4
9001bbf4:	47c0      	blx	r8
9001bbf6:	f8ba 3000 	ldrh.w	r3, [sl]
9001bbfa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bbfe:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001bc02:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001bc06:	e7eb      	b.n	9001bbe0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001bc08:	4b02      	ldr	r3, [pc, #8]	@ (9001bc14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001bc0a:	6818      	ldr	r0, [r3, #0]
9001bc0c:	6803      	ldr	r3, [r0, #0]
9001bc0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bc10:	4798      	blx	r3
9001bc12:	e76c      	b.n	9001baee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001bc14:	24021bdc 	.word	0x24021bdc
9001bc18:	24021bd6 	.word	0x24021bd6

9001bc1c <_ZN8touchgfx8LCD16bppD0Ev>:
9001bc1c:	b510      	push	{r4, lr}
9001bc1e:	4604      	mov	r4, r0
9001bc20:	218c      	movs	r1, #140	@ 0x8c
9001bc22:	f00c fa05 	bl	90028030 <_ZdlPvj>
9001bc26:	4620      	mov	r0, r4
9001bc28:	bd10      	pop	{r4, pc}

9001bc2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001bc2a:	b510      	push	{r4, lr}
9001bc2c:	4604      	mov	r4, r0
9001bc2e:	2104      	movs	r1, #4
9001bc30:	f00c f9fe 	bl	90028030 <_ZdlPvj>
9001bc34:	4620      	mov	r0, r4
9001bc36:	bd10      	pop	{r4, pc}

9001bc38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001bc38:	b510      	push	{r4, lr}
9001bc3a:	4604      	mov	r4, r0
9001bc3c:	2104      	movs	r1, #4
9001bc3e:	f00c f9f7 	bl	90028030 <_ZdlPvj>
9001bc42:	4620      	mov	r0, r4
9001bc44:	bd10      	pop	{r4, pc}

9001bc46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001bc46:	b510      	push	{r4, lr}
9001bc48:	4604      	mov	r4, r0
9001bc4a:	f640 0144 	movw	r1, #2116	@ 0x844
9001bc4e:	f00c f9ef 	bl	90028030 <_ZdlPvj>
9001bc52:	4620      	mov	r0, r4
9001bc54:	bd10      	pop	{r4, pc}

9001bc56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001bc56:	b510      	push	{r4, lr}
9001bc58:	4604      	mov	r4, r0
9001bc5a:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001bc5e:	f00c f9e7 	bl	90028030 <_ZdlPvj>
9001bc62:	4620      	mov	r0, r4
9001bc64:	bd10      	pop	{r4, pc}

9001bc66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001bc66:	b510      	push	{r4, lr}
9001bc68:	4604      	mov	r4, r0
9001bc6a:	2104      	movs	r1, #4
9001bc6c:	f00c f9e0 	bl	90028030 <_ZdlPvj>
9001bc70:	4620      	mov	r0, r4
9001bc72:	bd10      	pop	{r4, pc}

9001bc74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001bc74:	b510      	push	{r4, lr}
9001bc76:	4604      	mov	r4, r0
9001bc78:	2104      	movs	r1, #4
9001bc7a:	f00c f9d9 	bl	90028030 <_ZdlPvj>
9001bc7e:	4620      	mov	r0, r4
9001bc80:	bd10      	pop	{r4, pc}

9001bc82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001bc82:	b510      	push	{r4, lr}
9001bc84:	4604      	mov	r4, r0
9001bc86:	2104      	movs	r1, #4
9001bc88:	f00c f9d2 	bl	90028030 <_ZdlPvj>
9001bc8c:	4620      	mov	r0, r4
9001bc8e:	bd10      	pop	{r4, pc}

9001bc90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001bc90:	b510      	push	{r4, lr}
9001bc92:	4604      	mov	r4, r0
9001bc94:	2104      	movs	r1, #4
9001bc96:	f00c f9cb 	bl	90028030 <_ZdlPvj>
9001bc9a:	4620      	mov	r0, r4
9001bc9c:	bd10      	pop	{r4, pc}

9001bc9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001bc9e:	b510      	push	{r4, lr}
9001bca0:	4604      	mov	r4, r0
9001bca2:	2104      	movs	r1, #4
9001bca4:	f00c f9c4 	bl	90028030 <_ZdlPvj>
9001bca8:	4620      	mov	r0, r4
9001bcaa:	bd10      	pop	{r4, pc}

9001bcac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001bcac:	b510      	push	{r4, lr}
9001bcae:	4604      	mov	r4, r0
9001bcb0:	2104      	movs	r1, #4
9001bcb2:	f00c f9bd 	bl	90028030 <_ZdlPvj>
9001bcb6:	4620      	mov	r0, r4
9001bcb8:	bd10      	pop	{r4, pc}

9001bcba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001bcba:	b510      	push	{r4, lr}
9001bcbc:	4604      	mov	r4, r0
9001bcbe:	2104      	movs	r1, #4
9001bcc0:	f00c f9b6 	bl	90028030 <_ZdlPvj>
9001bcc4:	4620      	mov	r0, r4
9001bcc6:	bd10      	pop	{r4, pc}

9001bcc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001bcc8:	b510      	push	{r4, lr}
9001bcca:	4604      	mov	r4, r0
9001bccc:	2104      	movs	r1, #4
9001bcce:	f00c f9af 	bl	90028030 <_ZdlPvj>
9001bcd2:	4620      	mov	r0, r4
9001bcd4:	bd10      	pop	{r4, pc}

9001bcd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001bcd6:	b510      	push	{r4, lr}
9001bcd8:	4604      	mov	r4, r0
9001bcda:	2104      	movs	r1, #4
9001bcdc:	f00c f9a8 	bl	90028030 <_ZdlPvj>
9001bce0:	4620      	mov	r0, r4
9001bce2:	bd10      	pop	{r4, pc}

9001bce4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001bce4:	b510      	push	{r4, lr}
9001bce6:	4604      	mov	r4, r0
9001bce8:	2104      	movs	r1, #4
9001bcea:	f00c f9a1 	bl	90028030 <_ZdlPvj>
9001bcee:	4620      	mov	r0, r4
9001bcf0:	bd10      	pop	{r4, pc}

9001bcf2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001bcf2:	b510      	push	{r4, lr}
9001bcf4:	4604      	mov	r4, r0
9001bcf6:	2104      	movs	r1, #4
9001bcf8:	f00c f99a 	bl	90028030 <_ZdlPvj>
9001bcfc:	4620      	mov	r0, r4
9001bcfe:	bd10      	pop	{r4, pc}

9001bd00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001bd00:	b510      	push	{r4, lr}
9001bd02:	4604      	mov	r4, r0
9001bd04:	2104      	movs	r1, #4
9001bd06:	f00c f993 	bl	90028030 <_ZdlPvj>
9001bd0a:	4620      	mov	r0, r4
9001bd0c:	bd10      	pop	{r4, pc}

9001bd0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001bd0e:	b510      	push	{r4, lr}
9001bd10:	4604      	mov	r4, r0
9001bd12:	2104      	movs	r1, #4
9001bd14:	f00c f98c 	bl	90028030 <_ZdlPvj>
9001bd18:	4620      	mov	r0, r4
9001bd1a:	bd10      	pop	{r4, pc}

9001bd1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001bd1c:	b510      	push	{r4, lr}
9001bd1e:	4604      	mov	r4, r0
9001bd20:	2104      	movs	r1, #4
9001bd22:	f00c f985 	bl	90028030 <_ZdlPvj>
9001bd26:	4620      	mov	r0, r4
9001bd28:	bd10      	pop	{r4, pc}

9001bd2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001bd2a:	b510      	push	{r4, lr}
9001bd2c:	4604      	mov	r4, r0
9001bd2e:	2104      	movs	r1, #4
9001bd30:	f00c f97e 	bl	90028030 <_ZdlPvj>
9001bd34:	4620      	mov	r0, r4
9001bd36:	bd10      	pop	{r4, pc}

9001bd38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001bd38:	b510      	push	{r4, lr}
9001bd3a:	4604      	mov	r4, r0
9001bd3c:	2104      	movs	r1, #4
9001bd3e:	f00c f977 	bl	90028030 <_ZdlPvj>
9001bd42:	4620      	mov	r0, r4
9001bd44:	bd10      	pop	{r4, pc}

9001bd46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001bd46:	b510      	push	{r4, lr}
9001bd48:	4604      	mov	r4, r0
9001bd4a:	2104      	movs	r1, #4
9001bd4c:	f00c f970 	bl	90028030 <_ZdlPvj>
9001bd50:	4620      	mov	r0, r4
9001bd52:	bd10      	pop	{r4, pc}

9001bd54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001bd54:	b510      	push	{r4, lr}
9001bd56:	4604      	mov	r4, r0
9001bd58:	2104      	movs	r1, #4
9001bd5a:	f00c f969 	bl	90028030 <_ZdlPvj>
9001bd5e:	4620      	mov	r0, r4
9001bd60:	bd10      	pop	{r4, pc}

9001bd62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001bd62:	b510      	push	{r4, lr}
9001bd64:	4604      	mov	r4, r0
9001bd66:	2104      	movs	r1, #4
9001bd68:	f00c f962 	bl	90028030 <_ZdlPvj>
9001bd6c:	4620      	mov	r0, r4
9001bd6e:	bd10      	pop	{r4, pc}

9001bd70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001bd70:	b510      	push	{r4, lr}
9001bd72:	4604      	mov	r4, r0
9001bd74:	2104      	movs	r1, #4
9001bd76:	f00c f95b 	bl	90028030 <_ZdlPvj>
9001bd7a:	4620      	mov	r0, r4
9001bd7c:	bd10      	pop	{r4, pc}

9001bd7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001bd7e:	b510      	push	{r4, lr}
9001bd80:	4604      	mov	r4, r0
9001bd82:	2104      	movs	r1, #4
9001bd84:	f00c f954 	bl	90028030 <_ZdlPvj>
9001bd88:	4620      	mov	r0, r4
9001bd8a:	bd10      	pop	{r4, pc}

9001bd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001bd8c:	b510      	push	{r4, lr}
9001bd8e:	4604      	mov	r4, r0
9001bd90:	2104      	movs	r1, #4
9001bd92:	f00c f94d 	bl	90028030 <_ZdlPvj>
9001bd96:	4620      	mov	r0, r4
9001bd98:	bd10      	pop	{r4, pc}

9001bd9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001bd9a:	b510      	push	{r4, lr}
9001bd9c:	4604      	mov	r4, r0
9001bd9e:	2104      	movs	r1, #4
9001bda0:	f00c f946 	bl	90028030 <_ZdlPvj>
9001bda4:	4620      	mov	r0, r4
9001bda6:	bd10      	pop	{r4, pc}

9001bda8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001bda8:	b510      	push	{r4, lr}
9001bdaa:	4604      	mov	r4, r0
9001bdac:	2104      	movs	r1, #4
9001bdae:	f00c f93f 	bl	90028030 <_ZdlPvj>
9001bdb2:	4620      	mov	r0, r4
9001bdb4:	bd10      	pop	{r4, pc}

9001bdb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001bdb6:	b510      	push	{r4, lr}
9001bdb8:	4604      	mov	r4, r0
9001bdba:	2104      	movs	r1, #4
9001bdbc:	f00c f938 	bl	90028030 <_ZdlPvj>
9001bdc0:	4620      	mov	r0, r4
9001bdc2:	bd10      	pop	{r4, pc}

9001bdc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001bdc4:	b510      	push	{r4, lr}
9001bdc6:	4604      	mov	r4, r0
9001bdc8:	2104      	movs	r1, #4
9001bdca:	f00c f931 	bl	90028030 <_ZdlPvj>
9001bdce:	4620      	mov	r0, r4
9001bdd0:	bd10      	pop	{r4, pc}

9001bdd2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001bdd2:	b510      	push	{r4, lr}
9001bdd4:	4604      	mov	r4, r0
9001bdd6:	2104      	movs	r1, #4
9001bdd8:	f00c f92a 	bl	90028030 <_ZdlPvj>
9001bddc:	4620      	mov	r0, r4
9001bdde:	bd10      	pop	{r4, pc}

9001bde0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001bde0:	b510      	push	{r4, lr}
9001bde2:	4604      	mov	r4, r0
9001bde4:	2104      	movs	r1, #4
9001bde6:	f00c f923 	bl	90028030 <_ZdlPvj>
9001bdea:	4620      	mov	r0, r4
9001bdec:	bd10      	pop	{r4, pc}
	...

9001bdf0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001bdf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bdf4:	b08f      	sub	sp, #60	@ 0x3c
9001bdf6:	4616      	mov	r6, r2
9001bdf8:	4682      	mov	sl, r0
9001bdfa:	460d      	mov	r5, r1
9001bdfc:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001be00:	9205      	str	r2, [sp, #20]
9001be02:	2a00      	cmp	r2, #0
9001be04:	f000 82b7 	beq.w	9001c376 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001be08:	6830      	ldr	r0, [r6, #0]
9001be0a:	ac0a      	add	r4, sp, #40	@ 0x28
9001be0c:	6871      	ldr	r1, [r6, #4]
9001be0e:	c403      	stmia	r4!, {r0, r1}
9001be10:	6818      	ldr	r0, [r3, #0]
9001be12:	ac0c      	add	r4, sp, #48	@ 0x30
9001be14:	6859      	ldr	r1, [r3, #4]
9001be16:	c403      	stmia	r4!, {r0, r1}
9001be18:	a80a      	add	r0, sp, #40	@ 0x28
9001be1a:	f7f9 fbad 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001be1e:	4631      	mov	r1, r6
9001be20:	a80c      	add	r0, sp, #48	@ 0x30
9001be22:	f7f9 fbd1 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001be26:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001be2a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001be2e:	bfdb      	ittet	le
9001be30:	b293      	uxthle	r3, r2
9001be32:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001be36:	2301      	movgt	r3, #1
9001be38:	fb91 f3f3 	sdivle	r3, r1, r3
9001be3c:	9300      	str	r3, [sp, #0]
9001be3e:	f105 0308 	add.w	r3, r5, #8
9001be42:	9900      	ldr	r1, [sp, #0]
9001be44:	9306      	str	r3, [sp, #24]
9001be46:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001be4a:	440b      	add	r3, r1
9001be4c:	3b01      	subs	r3, #1
9001be4e:	fb93 f3f1 	sdiv	r3, r3, r1
9001be52:	3b01      	subs	r3, #1
9001be54:	9906      	ldr	r1, [sp, #24]
9001be56:	b29b      	uxth	r3, r3
9001be58:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001be5c:	9900      	ldr	r1, [sp, #0]
9001be5e:	9307      	str	r3, [sp, #28]
9001be60:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001be64:	fb93 f0f1 	sdiv	r0, r3, r1
9001be68:	b284      	uxth	r4, r0
9001be6a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001be6e:	9402      	str	r4, [sp, #8]
9001be70:	9d02      	ldr	r5, [sp, #8]
9001be72:	9c00      	ldr	r4, [sp, #0]
9001be74:	fb05 3414 	mls	r4, r5, r4, r3
9001be78:	fb14 f402 	smulbb	r4, r4, r2
9001be7c:	440c      	add	r4, r1
9001be7e:	b2a4      	uxth	r4, r4
9001be80:	2d00      	cmp	r5, #0
9001be82:	d06c      	beq.n	9001bf5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001be84:	1e6a      	subs	r2, r5, #1
9001be86:	9806      	ldr	r0, [sp, #24]
9001be88:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001be8c:	9a07      	ldr	r2, [sp, #28]
9001be8e:	ba36      	rev	r6, r6
9001be90:	4416      	add	r6, r2
9001be92:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001be96:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001be9a:	4411      	add	r1, r2
9001be9c:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001bea0:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001c1d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001bea4:	4413      	add	r3, r2
9001bea6:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001beaa:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001beae:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001beb2:	9301      	str	r3, [sp, #4]
9001beb4:	4bc4      	ldr	r3, [pc, #784]	@ (9001c1c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001beb6:	6818      	ldr	r0, [r3, #0]
9001beb8:	6803      	ldr	r3, [r0, #0]
9001beba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001bebc:	4798      	blx	r3
9001bebe:	4bc3      	ldr	r3, [pc, #780]	@ (9001c1cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001bec0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001bec4:	881b      	ldrh	r3, [r3, #0]
9001bec6:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001beca:	fb03 2808 	mla	r8, r3, r8, r2
9001bece:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001bed2:	436b      	muls	r3, r5
9001bed4:	2500      	movs	r5, #0
9001bed6:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001beda:	4629      	mov	r1, r5
9001bedc:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001bee0:	9309      	str	r3, [sp, #36]	@ 0x24
9001bee2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001bee6:	fb94 f3f3 	sdiv	r3, r4, r3
9001beea:	9304      	str	r3, [sp, #16]
9001beec:	f10a 0304 	add.w	r3, sl, #4
9001bef0:	4618      	mov	r0, r3
9001bef2:	9308      	str	r3, [sp, #32]
9001bef4:	f00c feb0 	bl	90028c58 <memset>
9001bef8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001befa:	4543      	cmp	r3, r8
9001befc:	f240 8236 	bls.w	9001c36c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001bf00:	2203      	movs	r2, #3
9001bf02:	2107      	movs	r1, #7
9001bf04:	200b      	movs	r0, #11
9001bf06:	2c00      	cmp	r4, #0
9001bf08:	f000 8131 	beq.w	9001c16e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001bf0c:	7833      	ldrb	r3, [r6, #0]
9001bf0e:	b2db      	uxtb	r3, r3
9001bf10:	2bfe      	cmp	r3, #254	@ 0xfe
9001bf12:	d126      	bne.n	9001bf62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001bf14:	f896 e001 	ldrb.w	lr, [r6, #1]
9001bf18:	3c01      	subs	r4, #1
9001bf1a:	f896 c002 	ldrb.w	ip, [r6, #2]
9001bf1e:	1d37      	adds	r7, r6, #4
9001bf20:	fa5f fe8e 	uxtb.w	lr, lr
9001bf24:	f896 b003 	ldrb.w	fp, [r6, #3]
9001bf28:	fa5f fc8c 	uxtb.w	ip, ip
9001bf2c:	f36e 0507 	bfi	r5, lr, #0, #8
9001bf30:	fa5f fb8b 	uxtb.w	fp, fp
9001bf34:	b2a4      	uxth	r4, r4
9001bf36:	f36c 250f 	bfi	r5, ip, #8, #8
9001bf3a:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001bf3e:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001bf42:	f36b 4517 	bfi	r5, fp, #16, #8
9001bf46:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001bf4a:	0e2b      	lsrs	r3, r5, #24
9001bf4c:	fb10 c303 	smlabb	r3, r0, r3, ip
9001bf50:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001bf54:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001bf58:	605d      	str	r5, [r3, #4]
9001bf5a:	463e      	mov	r6, r7
9001bf5c:	e7d3      	b.n	9001bf06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001bf5e:	9e07      	ldr	r6, [sp, #28]
9001bf60:	e797      	b.n	9001be92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001bf62:	2bff      	cmp	r3, #255	@ 0xff
9001bf64:	d127      	bne.n	9001bfb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001bf66:	f896 c001 	ldrb.w	ip, [r6, #1]
9001bf6a:	3c01      	subs	r4, #1
9001bf6c:	78b3      	ldrb	r3, [r6, #2]
9001bf6e:	1d77      	adds	r7, r6, #5
9001bf70:	fa5f fc8c 	uxtb.w	ip, ip
9001bf74:	f896 e003 	ldrb.w	lr, [r6, #3]
9001bf78:	b2db      	uxtb	r3, r3
9001bf7a:	f896 b004 	ldrb.w	fp, [r6, #4]
9001bf7e:	f36c 0507 	bfi	r5, ip, #0, #8
9001bf82:	fa5f fe8e 	uxtb.w	lr, lr
9001bf86:	fa5f fb8b 	uxtb.w	fp, fp
9001bf8a:	f363 250f 	bfi	r5, r3, #8, #8
9001bf8e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001bf92:	b2a4      	uxth	r4, r4
9001bf94:	fb12 330e 	smlabb	r3, r2, lr, r3
9001bf98:	f36e 4517 	bfi	r5, lr, #16, #8
9001bf9c:	fb11 330c 	smlabb	r3, r1, ip, r3
9001bfa0:	f36b 651f 	bfi	r5, fp, #24, #8
9001bfa4:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001bfa8:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001bfac:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001bfb0:	f8cb 5004 	str.w	r5, [fp, #4]
9001bfb4:	e7d1      	b.n	9001bf5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001bfb6:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001bfba:	f106 0701 	add.w	r7, r6, #1
9001bfbe:	d107      	bne.n	9001bfd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001bfc0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001bfc4:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001bfc8:	685d      	ldr	r5, [r3, #4]
9001bfca:	3c01      	subs	r4, #1
9001bfcc:	b2a4      	uxth	r4, r4
9001bfce:	e7c4      	b.n	9001bf5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001bfd0:	f1bc 0f01 	cmp.w	ip, #1
9001bfd4:	d12c      	bne.n	9001c030 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001bfd6:	f003 0e03 	and.w	lr, r3, #3
9001bfda:	f003 0c0c 	and.w	ip, r3, #12
9001bfde:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001bfe2:	f1ae 0e02 	sub.w	lr, lr, #2
9001bfe6:	f1ac 0c08 	sub.w	ip, ip, #8
9001bfea:	3b02      	subs	r3, #2
9001bfec:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001bff0:	fa5f fe8e 	uxtb.w	lr, lr
9001bff4:	f36e 0507 	bfi	r5, lr, #0, #8
9001bff8:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001bffc:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001c000:	f36c 250f 	bfi	r5, ip, #8, #8
9001c004:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001c008:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c00c:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001c010:	b2db      	uxtb	r3, r3
9001c012:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001c016:	f363 4517 	bfi	r5, r3, #16, #8
9001c01a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001c01e:	0e2e      	lsrs	r6, r5, #24
9001c020:	fb10 c606 	smlabb	r6, r0, r6, ip
9001c024:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001c028:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001c02c:	6075      	str	r5, [r6, #4]
9001c02e:	e7cc      	b.n	9001bfca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001c030:	f1bc 0f02 	cmp.w	ip, #2
9001c034:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001c038:	d12a      	bne.n	9001c090 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001c03a:	1cb7      	adds	r7, r6, #2
9001c03c:	7876      	ldrb	r6, [r6, #1]
9001c03e:	3b20      	subs	r3, #32
9001c040:	b2f6      	uxtb	r6, r6
9001c042:	f006 0c0f 	and.w	ip, r6, #15
9001c046:	1136      	asrs	r6, r6, #4
9001c048:	f1ac 0c08 	sub.w	ip, ip, #8
9001c04c:	3e08      	subs	r6, #8
9001c04e:	449c      	add	ip, r3
9001c050:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001c054:	fa5f fc8c 	uxtb.w	ip, ip
9001c058:	f36c 0507 	bfi	r5, ip, #0, #8
9001c05c:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001c060:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001c064:	4433      	add	r3, r6
9001c066:	fa5f fe8e 	uxtb.w	lr, lr
9001c06a:	f36e 250f 	bfi	r5, lr, #8, #8
9001c06e:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001c072:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c076:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001c07a:	b2db      	uxtb	r3, r3
9001c07c:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001c080:	f363 4517 	bfi	r5, r3, #16, #8
9001c084:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001c088:	0e2e      	lsrs	r6, r5, #24
9001c08a:	fb10 e606 	smlabb	r6, r0, r6, lr
9001c08e:	e7c9      	b.n	9001c024 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001c090:	1c5e      	adds	r6, r3, #1
9001c092:	42a6      	cmp	r6, r4
9001c094:	dd4e      	ble.n	9001c134 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001c096:	1b36      	subs	r6, r6, r4
9001c098:	2e00      	cmp	r6, #0
9001c09a:	dc4e      	bgt.n	9001c13a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001c09c:	f8dd b004 	ldr.w	fp, [sp, #4]
9001c0a0:	2400      	movs	r4, #0
9001c0a2:	f1bb 0f00 	cmp.w	fp, #0
9001c0a6:	f340 8122 	ble.w	9001c2ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001c0aa:	1c7b      	adds	r3, r7, #1
9001c0ac:	9303      	str	r3, [sp, #12]
9001c0ae:	783b      	ldrb	r3, [r7, #0]
9001c0b0:	b2db      	uxtb	r3, r3
9001c0b2:	2bfe      	cmp	r3, #254	@ 0xfe
9001c0b4:	d160      	bne.n	9001c178 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001c0b6:	7879      	ldrb	r1, [r7, #1]
9001c0b8:	1d3b      	adds	r3, r7, #4
9001c0ba:	78ba      	ldrb	r2, [r7, #2]
9001c0bc:	b2c9      	uxtb	r1, r1
9001c0be:	78f8      	ldrb	r0, [r7, #3]
9001c0c0:	b2d2      	uxtb	r2, r2
9001c0c2:	9303      	str	r3, [sp, #12]
9001c0c4:	f361 0507 	bfi	r5, r1, #0, #8
9001c0c8:	b2c0      	uxtb	r0, r0
9001c0ca:	2303      	movs	r3, #3
9001c0cc:	f362 250f 	bfi	r5, r2, #8, #8
9001c0d0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001c0d4:	fb13 2200 	smlabb	r2, r3, r0, r2
9001c0d8:	f360 4517 	bfi	r5, r0, #16, #8
9001c0dc:	2307      	movs	r3, #7
9001c0de:	0e2e      	lsrs	r6, r5, #24
9001c0e0:	fb13 2101 	smlabb	r1, r3, r1, r2
9001c0e4:	230b      	movs	r3, #11
9001c0e6:	fb13 1306 	smlabb	r3, r3, r6, r1
9001c0ea:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001c0ee:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001c0f2:	605d      	str	r5, [r3, #4]
9001c0f4:	2601      	movs	r6, #1
9001c0f6:	4637      	mov	r7, r6
9001c0f8:	0e2b      	lsrs	r3, r5, #24
9001c0fa:	ebab 0b07 	sub.w	fp, fp, r7
9001c0fe:	eba6 0607 	sub.w	r6, r6, r7
9001c102:	f040 80d3 	bne.w	9001c2ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001c106:	b18c      	cbz	r4, 9001c12c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001c108:	4648      	mov	r0, r9
9001c10a:	00a1      	lsls	r1, r4, #2
9001c10c:	f7e6 fc18 	bl	90002940 <_ZN8touchgfx5paint9flushLineEPmi>
9001c110:	9b05      	ldr	r3, [sp, #20]
9001c112:	4622      	mov	r2, r4
9001c114:	4649      	mov	r1, r9
9001c116:	4640      	mov	r0, r8
9001c118:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001c11c:	f7e6 fc7e 	bl	90002a1c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001c120:	4b2b      	ldr	r3, [pc, #172]	@ (9001c1d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001c122:	4a2c      	ldr	r2, [pc, #176]	@ (9001c1d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001c124:	4599      	cmp	r9, r3
9001c126:	bf08      	it	eq
9001c128:	4613      	moveq	r3, r2
9001c12a:	4699      	mov	r9, r3
9001c12c:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001c130:	2400      	movs	r4, #0
9001c132:	e0da      	b.n	9001c2ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001c134:	1ba6      	subs	r6, r4, r6
9001c136:	b2b4      	uxth	r4, r6
9001c138:	e70f      	b.n	9001bf5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001c13a:	9b01      	ldr	r3, [sp, #4]
9001c13c:	9a01      	ldr	r2, [sp, #4]
9001c13e:	42b3      	cmp	r3, r6
9001c140:	bfa8      	it	ge
9001c142:	4633      	movge	r3, r6
9001c144:	0e2c      	lsrs	r4, r5, #24
9001c146:	eba2 0b03 	sub.w	fp, r2, r3
9001c14a:	eba6 0603 	sub.w	r6, r6, r3
9001c14e:	d00b      	beq.n	9001c168 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001c150:	f1a9 0104 	sub.w	r1, r9, #4
9001c154:	461a      	mov	r2, r3
9001c156:	2a00      	cmp	r2, #0
9001c158:	dc02      	bgt.n	9001c160 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001c15a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001c15e:	e7a0      	b.n	9001c0a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001c160:	f841 5f04 	str.w	r5, [r1, #4]!
9001c164:	3a01      	subs	r2, #1
9001c166:	e7f6      	b.n	9001c156 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001c168:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001c16c:	e799      	b.n	9001c0a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001c16e:	4637      	mov	r7, r6
9001c170:	f8dd b004 	ldr.w	fp, [sp, #4]
9001c174:	4626      	mov	r6, r4
9001c176:	e794      	b.n	9001c0a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001c178:	2bff      	cmp	r3, #255	@ 0xff
9001c17a:	d11d      	bne.n	9001c1b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001c17c:	7878      	ldrb	r0, [r7, #1]
9001c17e:	1d7b      	adds	r3, r7, #5
9001c180:	78ba      	ldrb	r2, [r7, #2]
9001c182:	b2c0      	uxtb	r0, r0
9001c184:	78fe      	ldrb	r6, [r7, #3]
9001c186:	b2d2      	uxtb	r2, r2
9001c188:	9303      	str	r3, [sp, #12]
9001c18a:	f360 0507 	bfi	r5, r0, #0, #8
9001c18e:	793b      	ldrb	r3, [r7, #4]
9001c190:	b2f6      	uxtb	r6, r6
9001c192:	b2d9      	uxtb	r1, r3
9001c194:	f362 250f 	bfi	r5, r2, #8, #8
9001c198:	2303      	movs	r3, #3
9001c19a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001c19e:	f366 4517 	bfi	r5, r6, #16, #8
9001c1a2:	fb13 2206 	smlabb	r2, r3, r6, r2
9001c1a6:	2307      	movs	r3, #7
9001c1a8:	f361 651f 	bfi	r5, r1, #24, #8
9001c1ac:	fb13 2000 	smlabb	r0, r3, r0, r2
9001c1b0:	230b      	movs	r3, #11
9001c1b2:	fb13 0301 	smlabb	r3, r3, r1, r0
9001c1b6:	e798      	b.n	9001c0ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001c1b8:	119e      	asrs	r6, r3, #6
9001c1ba:	d10d      	bne.n	9001c1d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001c1bc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001c1c0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001c1c4:	685d      	ldr	r5, [r3, #4]
9001c1c6:	e795      	b.n	9001c0f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001c1c8:	24021bdc 	.word	0x24021bdc
9001c1cc:	24021bd6 	.word	0x24021bd6
9001c1d0:	24000180 	.word	0x24000180
9001c1d4:	24000280 	.word	0x24000280
9001c1d8:	2e01      	cmp	r6, #1
9001c1da:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001c1de:	d12b      	bne.n	9001c238 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001c1e0:	f003 0003 	and.w	r0, r3, #3
9001c1e4:	f003 020c 	and.w	r2, r3, #12
9001c1e8:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001c1ec:	3802      	subs	r0, #2
9001c1ee:	3a08      	subs	r2, #8
9001c1f0:	1e9f      	subs	r7, r3, #2
9001c1f2:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001c1f6:	b2c0      	uxtb	r0, r0
9001c1f8:	f360 0507 	bfi	r5, r0, #0, #8
9001c1fc:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001c200:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001c204:	f362 250f 	bfi	r5, r2, #8, #8
9001c208:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001c20c:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001c210:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001c214:	2703      	movs	r7, #3
9001c216:	b2db      	uxtb	r3, r3
9001c218:	fb17 2203 	smlabb	r2, r7, r3, r2
9001c21c:	2707      	movs	r7, #7
9001c21e:	f363 4517 	bfi	r5, r3, #16, #8
9001c222:	230b      	movs	r3, #11
9001c224:	fb17 2000 	smlabb	r0, r7, r0, r2
9001c228:	fb13 0101 	smlabb	r1, r3, r1, r0
9001c22c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001c230:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001c234:	604d      	str	r5, [r1, #4]
9001c236:	e75e      	b.n	9001c0f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001c238:	2e02      	cmp	r6, #2
9001c23a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001c23e:	d12f      	bne.n	9001c2a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001c240:	7878      	ldrb	r0, [r7, #1]
9001c242:	1cba      	adds	r2, r7, #2
9001c244:	3b20      	subs	r3, #32
9001c246:	b2c0      	uxtb	r0, r0
9001c248:	9203      	str	r2, [sp, #12]
9001c24a:	f000 020f 	and.w	r2, r0, #15
9001c24e:	1100      	asrs	r0, r0, #4
9001c250:	3a08      	subs	r2, #8
9001c252:	3808      	subs	r0, #8
9001c254:	441a      	add	r2, r3
9001c256:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001c25a:	b2d2      	uxtb	r2, r2
9001c25c:	f362 0507 	bfi	r5, r2, #0, #8
9001c260:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001c264:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001c268:	4403      	add	r3, r0
9001c26a:	b2f6      	uxtb	r6, r6
9001c26c:	f366 250f 	bfi	r5, r6, #8, #8
9001c270:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001c274:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001c278:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001c27c:	2003      	movs	r0, #3
9001c27e:	b2db      	uxtb	r3, r3
9001c280:	fb10 6603 	smlabb	r6, r0, r3, r6
9001c284:	2007      	movs	r0, #7
9001c286:	f363 4517 	bfi	r5, r3, #16, #8
9001c28a:	230b      	movs	r3, #11
9001c28c:	fb10 6202 	smlabb	r2, r0, r2, r6
9001c290:	fb13 2101 	smlabb	r1, r3, r1, r2
9001c294:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001c298:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001c29c:	604d      	str	r5, [r1, #4]
9001c29e:	e729      	b.n	9001c0f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001c2a0:	1c5e      	adds	r6, r3, #1
9001c2a2:	465f      	mov	r7, fp
9001c2a4:	45b3      	cmp	fp, r6
9001c2a6:	bfa8      	it	ge
9001c2a8:	4637      	movge	r7, r6
9001c2aa:	e725      	b.n	9001c0f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001c2ac:	193b      	adds	r3, r7, r4
9001c2ae:	2b40      	cmp	r3, #64	@ 0x40
9001c2b0:	dd13      	ble.n	9001c2da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001c2b2:	4648      	mov	r0, r9
9001c2b4:	00a1      	lsls	r1, r4, #2
9001c2b6:	f7e6 fb43 	bl	90002940 <_ZN8touchgfx5paint9flushLineEPmi>
9001c2ba:	4649      	mov	r1, r9
9001c2bc:	9b05      	ldr	r3, [sp, #20]
9001c2be:	4622      	mov	r2, r4
9001c2c0:	4640      	mov	r0, r8
9001c2c2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001c2c6:	f7e6 fba9 	bl	90002a1c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001c2ca:	4b2c      	ldr	r3, [pc, #176]	@ (9001c37c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001c2cc:	2400      	movs	r4, #0
9001c2ce:	4599      	cmp	r9, r3
9001c2d0:	bf0c      	ite	eq
9001c2d2:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001c388 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001c2d6:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001c37c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001c2da:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001c2de:	463b      	mov	r3, r7
9001c2e0:	3b01      	subs	r3, #1
9001c2e2:	f842 5b04 	str.w	r5, [r2], #4
9001c2e6:	d1fb      	bne.n	9001c2e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001c2e8:	443c      	add	r4, r7
9001c2ea:	9f03      	ldr	r7, [sp, #12]
9001c2ec:	e6d9      	b.n	9001c0a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001c2ee:	b15c      	cbz	r4, 9001c308 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001c2f0:	00a1      	lsls	r1, r4, #2
9001c2f2:	4648      	mov	r0, r9
9001c2f4:	f7e6 fb24 	bl	90002940 <_ZN8touchgfx5paint9flushLineEPmi>
9001c2f8:	4640      	mov	r0, r8
9001c2fa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001c2fe:	9b05      	ldr	r3, [sp, #20]
9001c300:	4622      	mov	r2, r4
9001c302:	4649      	mov	r1, r9
9001c304:	f7e6 fb8a 	bl	90002a1c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001c308:	4b1d      	ldr	r3, [pc, #116]	@ (9001c380 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001c30a:	9a01      	ldr	r2, [sp, #4]
9001c30c:	881b      	ldrh	r3, [r3, #0]
9001c30e:	1a9b      	subs	r3, r3, r2
9001c310:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001c314:	9b04      	ldr	r3, [sp, #16]
9001c316:	3301      	adds	r3, #1
9001c318:	9304      	str	r3, [sp, #16]
9001c31a:	9a04      	ldr	r2, [sp, #16]
9001c31c:	9b00      	ldr	r3, [sp, #0]
9001c31e:	4293      	cmp	r3, r2
9001c320:	d11d      	bne.n	9001c35e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001c322:	9b02      	ldr	r3, [sp, #8]
9001c324:	2500      	movs	r5, #0
9001c326:	9a02      	ldr	r2, [sp, #8]
9001c328:	f103 0b01 	add.w	fp, r3, #1
9001c32c:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001c330:	9b06      	ldr	r3, [sp, #24]
9001c332:	4629      	mov	r1, r5
9001c334:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001c338:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001c33c:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001c340:	1ba4      	subs	r4, r4, r6
9001c342:	9b07      	ldr	r3, [sp, #28]
9001c344:	ba3f      	rev	r7, r7
9001c346:	9808      	ldr	r0, [sp, #32]
9001c348:	b2a4      	uxth	r4, r4
9001c34a:	441f      	add	r7, r3
9001c34c:	f00c fc84 	bl	90028c58 <memset>
9001c350:	f8cd b008 	str.w	fp, [sp, #8]
9001c354:	9504      	str	r5, [sp, #16]
9001c356:	f7e6 fae9 	bl	9000292c <_ZN8touchgfx5paint8tearDownEv>
9001c35a:	463e      	mov	r6, r7
9001c35c:	e5cc      	b.n	9001bef8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001c35e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001c362:	9b01      	ldr	r3, [sp, #4]
9001c364:	1ae4      	subs	r4, r4, r3
9001c366:	1ba4      	subs	r4, r4, r6
9001c368:	b2a4      	uxth	r4, r4
9001c36a:	e7f4      	b.n	9001c356 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001c36c:	4b05      	ldr	r3, [pc, #20]	@ (9001c384 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001c36e:	6818      	ldr	r0, [r3, #0]
9001c370:	6803      	ldr	r3, [r0, #0]
9001c372:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c374:	4798      	blx	r3
9001c376:	b00f      	add	sp, #60	@ 0x3c
9001c378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c37c:	24000180 	.word	0x24000180
9001c380:	24021bd6 	.word	0x24021bd6
9001c384:	24021bdc 	.word	0x24021bdc
9001c388:	24000280 	.word	0x24000280

9001c38c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001c38c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c390:	b08f      	sub	sp, #60	@ 0x3c
9001c392:	461c      	mov	r4, r3
9001c394:	9205      	str	r2, [sp, #20]
9001c396:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c39a:	9100      	str	r1, [sp, #0]
9001c39c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001c39e:	9201      	str	r2, [sp, #4]
9001c3a0:	2a00      	cmp	r2, #0
9001c3a2:	f000 8116 	beq.w	9001c5d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001c3a6:	6820      	ldr	r0, [r4, #0]
9001c3a8:	aa0a      	add	r2, sp, #40	@ 0x28
9001c3aa:	6861      	ldr	r1, [r4, #4]
9001c3ac:	c203      	stmia	r2!, {r0, r1}
9001c3ae:	6818      	ldr	r0, [r3, #0]
9001c3b0:	aa0c      	add	r2, sp, #48	@ 0x30
9001c3b2:	6859      	ldr	r1, [r3, #4]
9001c3b4:	c203      	stmia	r2!, {r0, r1}
9001c3b6:	a80a      	add	r0, sp, #40	@ 0x28
9001c3b8:	f7f9 f8de 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c3bc:	4621      	mov	r1, r4
9001c3be:	a80c      	add	r0, sp, #48	@ 0x30
9001c3c0:	f7f9 f902 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c3c4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001c3c8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001c3cc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001c3d0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001c3d4:	bfdb      	ittet	le
9001c3d6:	b2b3      	uxthle	r3, r6
9001c3d8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001c3dc:	2301      	movgt	r3, #1
9001c3de:	fb92 f3f3 	sdivle	r3, r2, r3
9001c3e2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001c3e6:	441d      	add	r5, r3
9001c3e8:	fb92 f1f3 	sdiv	r1, r2, r3
9001c3ec:	fa1f fc81 	uxth.w	ip, r1
9001c3f0:	3d01      	subs	r5, #1
9001c3f2:	fb0c 2413 	mls	r4, ip, r3, r2
9001c3f6:	4661      	mov	r1, ip
9001c3f8:	fb14 f406 	smulbb	r4, r4, r6
9001c3fc:	4404      	add	r4, r0
9001c3fe:	fb95 f5f3 	sdiv	r5, r5, r3
9001c402:	b2a4      	uxth	r4, r4
9001c404:	b131      	cbz	r1, 9001c414 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001c406:	9b05      	ldr	r3, [sp, #20]
9001c408:	9900      	ldr	r1, [sp, #0]
9001c40a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001c40e:	ba1b      	rev	r3, r3
9001c410:	4419      	add	r1, r3
9001c412:	9100      	str	r1, [sp, #0]
9001c414:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001c418:	b2ad      	uxth	r5, r5
9001c41a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001c41e:	4418      	add	r0, r3
9001c420:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001c424:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001c428:	00ad      	lsls	r5, r5, #2
9001c42a:	441a      	add	r2, r3
9001c42c:	4b6a      	ldr	r3, [pc, #424]	@ (9001c5d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001c42e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001c432:	6818      	ldr	r0, [r3, #0]
9001c434:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001c438:	6803      	ldr	r3, [r0, #0]
9001c43a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001c43c:	4798      	blx	r3
9001c43e:	4967      	ldr	r1, [pc, #412]	@ (9001c5dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001c440:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001c444:	2c00      	cmp	r4, #0
9001c446:	880b      	ldrh	r3, [r1, #0]
9001c448:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001c44c:	bf0c      	ite	eq
9001c44e:	46c6      	moveq	lr, r8
9001c450:	f04f 0e00 	movne.w	lr, #0
9001c454:	9109      	str	r1, [sp, #36]	@ 0x24
9001c456:	fb03 c202 	mla	r2, r3, r2, ip
9001c45a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c45e:	4373      	muls	r3, r6
9001c460:	fa1f fe8e 	uxth.w	lr, lr
9001c464:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c468:	9103      	str	r1, [sp, #12]
9001c46a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c46e:	9306      	str	r3, [sp, #24]
9001c470:	1d2b      	adds	r3, r5, #4
9001c472:	9307      	str	r3, [sp, #28]
9001c474:	9b01      	ldr	r3, [sp, #4]
9001c476:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001c47a:	2300      	movs	r3, #0
9001c47c:	b292      	uxth	r2, r2
9001c47e:	9302      	str	r3, [sp, #8]
9001c480:	9204      	str	r2, [sp, #16]
9001c482:	9a06      	ldr	r2, [sp, #24]
9001c484:	4282      	cmp	r2, r0
9001c486:	f240 809f 	bls.w	9001c5c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001c48a:	b963      	cbnz	r3, 9001c4a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001c48c:	9b00      	ldr	r3, [sp, #0]
9001c48e:	781a      	ldrb	r2, [r3, #0]
9001c490:	0993      	lsrs	r3, r2, #6
9001c492:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001c496:	9202      	str	r2, [sp, #8]
9001c498:	1e5a      	subs	r2, r3, #1
9001c49a:	2a02      	cmp	r2, #2
9001c49c:	d815      	bhi.n	9001c4ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001c49e:	9a00      	ldr	r2, [sp, #0]
9001c4a0:	b29b      	uxth	r3, r3
9001c4a2:	3201      	adds	r2, #1
9001c4a4:	9200      	str	r2, [sp, #0]
9001c4a6:	b1b4      	cbz	r4, 9001c4d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001c4a8:	429c      	cmp	r4, r3
9001c4aa:	bf91      	iteee	ls
9001c4ac:	1b1c      	subls	r4, r3, r4
9001c4ae:	1ae4      	subhi	r4, r4, r3
9001c4b0:	4671      	movhi	r1, lr
9001c4b2:	f04f 0a00 	movhi.w	sl, #0
9001c4b6:	bf9b      	ittet	ls
9001c4b8:	fa1f fa84 	uxthls.w	sl, r4
9001c4bc:	2400      	movls	r4, #0
9001c4be:	b2a4      	uxthhi	r4, r4
9001c4c0:	fa1f f188 	uxthls.w	r1, r8
9001c4c4:	4653      	mov	r3, sl
9001c4c6:	468e      	mov	lr, r1
9001c4c8:	e7db      	b.n	9001c482 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001c4ca:	9a00      	ldr	r2, [sp, #0]
9001c4cc:	9b00      	ldr	r3, [sp, #0]
9001c4ce:	3202      	adds	r2, #2
9001c4d0:	785b      	ldrb	r3, [r3, #1]
9001c4d2:	9200      	str	r2, [sp, #0]
9001c4d4:	e7e7      	b.n	9001c4a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001c4d6:	2202      	movs	r2, #2
9001c4d8:	9907      	ldr	r1, [sp, #28]
9001c4da:	4573      	cmp	r3, lr
9001c4dc:	4615      	mov	r5, r2
9001c4de:	9a02      	ldr	r2, [sp, #8]
9001c4e0:	bf24      	itt	cs
9001c4e2:	eba3 0a0e 	subcs.w	sl, r3, lr
9001c4e6:	46f1      	movcs	r9, lr
9001c4e8:	fb15 1202 	smlabb	r2, r5, r2, r1
9001c4ec:	9905      	ldr	r1, [sp, #20]
9001c4ee:	bf34      	ite	cc
9001c4f0:	4699      	movcc	r9, r3
9001c4f2:	fa1f fa8a 	uxthcs.w	sl, sl
9001c4f6:	f831 c002 	ldrh.w	ip, [r1, r2]
9001c4fa:	bf38      	it	cc
9001c4fc:	ebae 0103 	subcc.w	r1, lr, r3
9001c500:	9a01      	ldr	r2, [sp, #4]
9001c502:	bf2e      	itee	cs
9001c504:	4621      	movcs	r1, r4
9001c506:	b289      	uxthcc	r1, r1
9001c508:	46a2      	movcc	sl, r4
9001c50a:	2aff      	cmp	r2, #255	@ 0xff
9001c50c:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001c510:	d105      	bne.n	9001c51e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001c512:	4481      	add	r9, r0
9001c514:	4581      	cmp	r9, r0
9001c516:	d045      	beq.n	9001c5a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001c518:	f820 cb02 	strh.w	ip, [r0], #2
9001c51c:	e7fa      	b.n	9001c514 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001c51e:	ea4f 222c 	mov.w	r2, ip, asr #8
9001c522:	9d03      	ldr	r5, [sp, #12]
9001c524:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001c528:	4481      	add	r9, r0
9001c52a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c52e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001c532:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001c536:	fa5f fc8c 	uxtb.w	ip, ip
9001c53a:	436a      	muls	r2, r5
9001c53c:	fb0b fb05 	mul.w	fp, fp, r5
9001c540:	fb0c fc05 	mul.w	ip, ip, r5
9001c544:	9208      	str	r2, [sp, #32]
9001c546:	4581      	cmp	r9, r0
9001c548:	d02c      	beq.n	9001c5a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001c54a:	8802      	ldrh	r2, [r0, #0]
9001c54c:	9d04      	ldr	r5, [sp, #16]
9001c54e:	1216      	asrs	r6, r2, #8
9001c550:	9f04      	ldr	r7, [sp, #16]
9001c552:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c556:	fb16 f605 	smulbb	r6, r6, r5
9001c55a:	9d08      	ldr	r5, [sp, #32]
9001c55c:	442e      	add	r6, r5
9001c55e:	10d5      	asrs	r5, r2, #3
9001c560:	00d2      	lsls	r2, r2, #3
9001c562:	b2b6      	uxth	r6, r6
9001c564:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001c568:	b2d2      	uxtb	r2, r2
9001c56a:	fb15 f507 	smulbb	r5, r5, r7
9001c56e:	fb12 f207 	smulbb	r2, r2, r7
9001c572:	1c77      	adds	r7, r6, #1
9001c574:	445d      	add	r5, fp
9001c576:	4462      	add	r2, ip
9001c578:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001c57c:	b2ad      	uxth	r5, r5
9001c57e:	b292      	uxth	r2, r2
9001c580:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001c584:	1c57      	adds	r7, r2, #1
9001c586:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001c58a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c58e:	4316      	orrs	r6, r2
9001c590:	1c6a      	adds	r2, r5, #1
9001c592:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001c596:	096d      	lsrs	r5, r5, #5
9001c598:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c59c:	432e      	orrs	r6, r5
9001c59e:	f820 6b02 	strh.w	r6, [r0], #2
9001c5a2:	e7d0      	b.n	9001c546 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001c5a4:	4573      	cmp	r3, lr
9001c5a6:	d38d      	bcc.n	9001c4c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001c5a8:	fa1f f188 	uxth.w	r1, r8
9001c5ac:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001c5b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001c5b2:	1a64      	subs	r4, r4, r1
9001c5b4:	881b      	ldrh	r3, [r3, #0]
9001c5b6:	b2a4      	uxth	r4, r4
9001c5b8:	eba3 0308 	sub.w	r3, r3, r8
9001c5bc:	2c00      	cmp	r4, #0
9001c5be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c5c2:	bf18      	it	ne
9001c5c4:	2100      	movne	r1, #0
9001c5c6:	e77d      	b.n	9001c4c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001c5c8:	4b03      	ldr	r3, [pc, #12]	@ (9001c5d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001c5ca:	6818      	ldr	r0, [r3, #0]
9001c5cc:	6803      	ldr	r3, [r0, #0]
9001c5ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c5d0:	4798      	blx	r3
9001c5d2:	b00f      	add	sp, #60	@ 0x3c
9001c5d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c5d8:	24021bdc 	.word	0x24021bdc
9001c5dc:	24021bd6 	.word	0x24021bd6

9001c5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001c5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c5e4:	b09f      	sub	sp, #124	@ 0x7c
9001c5e6:	461d      	mov	r5, r3
9001c5e8:	4604      	mov	r4, r0
9001c5ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001c5ec:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001c5f0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001c5f4:	9209      	str	r2, [sp, #36]	@ 0x24
9001c5f6:	2a00      	cmp	r2, #0
9001c5f8:	f000 81ed 	beq.w	9001c9d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001c5fc:	6828      	ldr	r0, [r5, #0]
9001c5fe:	aa1a      	add	r2, sp, #104	@ 0x68
9001c600:	6869      	ldr	r1, [r5, #4]
9001c602:	c203      	stmia	r2!, {r0, r1}
9001c604:	6818      	ldr	r0, [r3, #0]
9001c606:	aa1c      	add	r2, sp, #112	@ 0x70
9001c608:	6859      	ldr	r1, [r3, #4]
9001c60a:	c203      	stmia	r2!, {r0, r1}
9001c60c:	a81a      	add	r0, sp, #104	@ 0x68
9001c60e:	f7f8 ffb3 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c612:	4629      	mov	r1, r5
9001c614:	a81c      	add	r0, sp, #112	@ 0x70
9001c616:	f7f8 ffd7 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c61a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001c61e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001c622:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001c626:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001c62a:	bfdb      	ittet	le
9001c62c:	b29a      	uxthle	r2, r3
9001c62e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001c632:	2201      	movgt	r2, #1
9001c634:	fb91 f2f2 	sdivle	r2, r1, r2
9001c638:	9202      	str	r2, [sp, #8]
9001c63a:	9802      	ldr	r0, [sp, #8]
9001c63c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001c640:	9902      	ldr	r1, [sp, #8]
9001c642:	fb92 f0f0 	sdiv	r0, r2, r0
9001c646:	b280      	uxth	r0, r0
9001c648:	4488      	add	r8, r1
9001c64a:	9010      	str	r0, [sp, #64]	@ 0x40
9001c64c:	f108 38ff 	add.w	r8, r8, #4294967295
9001c650:	9802      	ldr	r0, [sp, #8]
9001c652:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001c654:	fb05 2510 	mls	r5, r5, r0, r2
9001c658:	fb98 f8f1 	sdiv	r8, r8, r1
9001c65c:	fb15 f503 	smulbb	r5, r5, r3
9001c660:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001c664:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001c668:	f108 0801 	add.w	r8, r8, #1
9001c66c:	440d      	add	r5, r1
9001c66e:	4419      	add	r1, r3
9001c670:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001c674:	fa1f f888 	uxth.w	r8, r8
9001c678:	441a      	add	r2, r3
9001c67a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001c67e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001c682:	b2ad      	uxth	r5, r5
9001c684:	9304      	str	r3, [sp, #16]
9001c686:	4b94      	ldr	r3, [pc, #592]	@ (9001c8d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001c688:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001c68c:	6818      	ldr	r0, [r3, #0]
9001c68e:	6803      	ldr	r3, [r0, #0]
9001c690:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001c692:	4798      	blx	r3
9001c694:	4b91      	ldr	r3, [pc, #580]	@ (9001c8dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001c696:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001c69a:	2d00      	cmp	r5, #0
9001c69c:	881a      	ldrh	r2, [r3, #0]
9001c69e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001c6a2:	fb02 f606 	mul.w	r6, r2, r6
9001c6a6:	fb02 7101 	mla	r1, r2, r1, r7
9001c6aa:	9318      	str	r3, [sp, #96]	@ 0x60
9001c6ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001c6b0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001c6b4:	f04f 0100 	mov.w	r1, #0
9001c6b8:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001c6bc:	930f      	str	r3, [sp, #60]	@ 0x3c
9001c6be:	4b88      	ldr	r3, [pc, #544]	@ (9001c8e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001c6c0:	920a      	str	r2, [sp, #40]	@ 0x28
9001c6c2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c6c4:	eba3 0304 	sub.w	r3, r3, r4
9001c6c8:	910d      	str	r1, [sp, #52]	@ 0x34
9001c6ca:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001c6ce:	9319      	str	r3, [sp, #100]	@ 0x64
9001c6d0:	f108 0204 	add.w	r2, r8, #4
9001c6d4:	9211      	str	r2, [sp, #68]	@ 0x44
9001c6d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001c6d8:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001c6dc:	9215      	str	r2, [sp, #84]	@ 0x54
9001c6de:	9a04      	ldr	r2, [sp, #16]
9001c6e0:	bf18      	it	ne
9001c6e2:	2200      	movne	r2, #0
9001c6e4:	b292      	uxth	r2, r2
9001c6e6:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001c6e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c6ea:	fa11 f383 	uxtah	r3, r1, r3
9001c6ee:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001c6f0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001c6f4:	3304      	adds	r3, #4
9001c6f6:	9306      	str	r3, [sp, #24]
9001c6f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001c6fa:	4283      	cmp	r3, r0
9001c6fc:	f240 8166 	bls.w	9001c9cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001c700:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001c704:	f04f 0a01 	mov.w	sl, #1
9001c708:	9902      	ldr	r1, [sp, #8]
9001c70a:	9e06      	ldr	r6, [sp, #24]
9001c70c:	46d3      	mov	fp, sl
9001c70e:	4657      	mov	r7, sl
9001c710:	7836      	ldrb	r6, [r6, #0]
9001c712:	fbb5 f3f3 	udiv	r3, r5, r3
9001c716:	1acb      	subs	r3, r1, r3
9001c718:	9612      	str	r6, [sp, #72]	@ 0x48
9001c71a:	3601      	adds	r6, #1
9001c71c:	b29b      	uxth	r3, r3
9001c71e:	9605      	str	r6, [sp, #20]
9001c720:	9316      	str	r3, [sp, #88]	@ 0x58
9001c722:	9b06      	ldr	r3, [sp, #24]
9001c724:	7859      	ldrb	r1, [r3, #1]
9001c726:	789b      	ldrb	r3, [r3, #2]
9001c728:	021b      	lsls	r3, r3, #8
9001c72a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001c72e:	9906      	ldr	r1, [sp, #24]
9001c730:	78c9      	ldrb	r1, [r1, #3]
9001c732:	430b      	orrs	r3, r1
9001c734:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001c736:	4419      	add	r1, r3
9001c738:	1c4e      	adds	r6, r1, #1
9001c73a:	7849      	ldrb	r1, [r1, #1]
9001c73c:	9603      	str	r6, [sp, #12]
9001c73e:	0209      	lsls	r1, r1, #8
9001c740:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c742:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001c746:	5cf3      	ldrb	r3, [r6, r3]
9001c748:	4319      	orrs	r1, r3
9001c74a:	b28b      	uxth	r3, r1
9001c74c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001c750:	930c      	str	r3, [sp, #48]	@ 0x30
9001c752:	2300      	movs	r3, #0
9001c754:	9307      	str	r3, [sp, #28]
9001c756:	469c      	mov	ip, r3
9001c758:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001c75c:	930e      	str	r3, [sp, #56]	@ 0x38
9001c75e:	2d00      	cmp	r5, #0
9001c760:	d07e      	beq.n	9001c860 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001c762:	42af      	cmp	r7, r5
9001c764:	d26e      	bcs.n	9001c844 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001c766:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001c768:	1bed      	subs	r5, r5, r7
9001c76a:	9201      	str	r2, [sp, #4]
9001c76c:	4283      	cmp	r3, r0
9001c76e:	b2ad      	uxth	r5, r5
9001c770:	d802      	bhi.n	9001c778 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001c772:	e073      	b.n	9001c85c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001c774:	2b00      	cmp	r3, #0
9001c776:	d15f      	bne.n	9001c838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001c778:	9b03      	ldr	r3, [sp, #12]
9001c77a:	f1cb 0207 	rsb	r2, fp, #7
9001c77e:	785b      	ldrb	r3, [r3, #1]
9001c780:	4093      	lsls	r3, r2
9001c782:	005b      	lsls	r3, r3, #1
9001c784:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001c788:	9b03      	ldr	r3, [sp, #12]
9001c78a:	781b      	ldrb	r3, [r3, #0]
9001c78c:	fa43 f30b 	asr.w	r3, r3, fp
9001c790:	b2db      	uxtb	r3, r3
9001c792:	4313      	orrs	r3, r2
9001c794:	f10b 0201 	add.w	r2, fp, #1
9001c798:	fa5f fb82 	uxtb.w	fp, r2
9001c79c:	9a03      	ldr	r2, [sp, #12]
9001c79e:	b29f      	uxth	r7, r3
9001c7a0:	f1bb 0f08 	cmp.w	fp, #8
9001c7a4:	bf13      	iteet	ne
9001c7a6:	3201      	addne	r2, #1
9001c7a8:	3202      	addeq	r2, #2
9001c7aa:	f04f 0b00 	moveq.w	fp, #0
9001c7ae:	9203      	strne	r2, [sp, #12]
9001c7b0:	bf08      	it	eq
9001c7b2:	9203      	streq	r2, [sp, #12]
9001c7b4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c7b6:	42ba      	cmp	r2, r7
9001c7b8:	d309      	bcc.n	9001c7ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001c7ba:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001c7be:	2301      	movs	r3, #1
9001c7c0:	9a05      	ldr	r2, [sp, #20]
9001c7c2:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001c7c6:	d30e      	bcc.n	9001c7e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001c7c8:	469a      	mov	sl, r3
9001c7ca:	2600      	movs	r6, #0
9001c7cc:	e035      	b.n	9001c83a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001c7ce:	9b05      	ldr	r3, [sp, #20]
9001c7d0:	429f      	cmp	r7, r3
9001c7d2:	d318      	bcc.n	9001c806 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001c7d4:	eb04 030a 	add.w	r3, r4, sl
9001c7d8:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001c7dc:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001c7e0:	f10a 0301 	add.w	r3, sl, #1
9001c7e4:	b29b      	uxth	r3, r3
9001c7e6:	9a05      	ldr	r2, [sp, #20]
9001c7e8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001c7ec:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001c7f0:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001c7f2:	7116      	strb	r6, [r2, #4]
9001c7f4:	f10a 0601 	add.w	r6, sl, #1
9001c7f8:	80d1      	strh	r1, [r2, #6]
9001c7fa:	7156      	strb	r6, [r2, #5]
9001c7fc:	9a05      	ldr	r2, [sp, #20]
9001c7fe:	3201      	adds	r2, #1
9001c800:	b292      	uxth	r2, r2
9001c802:	9205      	str	r2, [sp, #20]
9001c804:	e7e0      	b.n	9001c7c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001c806:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001c80a:	463a      	mov	r2, r7
9001c80c:	795b      	ldrb	r3, [r3, #5]
9001c80e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001c812:	4426      	add	r6, r4
9001c814:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001c816:	eb01 0c06 	add.w	ip, r1, r6
9001c81a:	f1bc 0f00 	cmp.w	ip, #0
9001c81e:	dd07      	ble.n	9001c830 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001c820:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001c824:	f892 c004 	ldrb.w	ip, [r2, #4]
9001c828:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001c82c:	88d2      	ldrh	r2, [r2, #6]
9001c82e:	e7f1      	b.n	9001c814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001c830:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001c834:	b29b      	uxth	r3, r3
9001c836:	e7c3      	b.n	9001c7c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001c838:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001c83a:	970c      	str	r7, [sp, #48]	@ 0x30
9001c83c:	46b4      	mov	ip, r6
9001c83e:	9a01      	ldr	r2, [sp, #4]
9001c840:	461f      	mov	r7, r3
9001c842:	e78c      	b.n	9001c75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001c844:	1b7b      	subs	r3, r7, r5
9001c846:	eb0c 0605 	add.w	r6, ip, r5
9001c84a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c84e:	b29b      	uxth	r3, r3
9001c850:	b2b6      	uxth	r6, r6
9001c852:	9201      	str	r2, [sp, #4]
9001c854:	2500      	movs	r5, #0
9001c856:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001c858:	4282      	cmp	r2, r0
9001c85a:	d88b      	bhi.n	9001c774 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001c85c:	9a01      	ldr	r2, [sp, #4]
9001c85e:	e74b      	b.n	9001c6f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001c860:	4297      	cmp	r7, r2
9001c862:	d332      	bcc.n	9001c8ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001c864:	1abb      	subs	r3, r7, r2
9001c866:	9208      	str	r2, [sp, #32]
9001c868:	9501      	str	r5, [sp, #4]
9001c86a:	b29b      	uxth	r3, r3
9001c86c:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001c86e:	29ff      	cmp	r1, #255	@ 0xff
9001c870:	9908      	ldr	r1, [sp, #32]
9001c872:	eb0c 0601 	add.w	r6, ip, r1
9001c876:	d135      	bne.n	9001c8e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001c878:	f1a0 0e02 	sub.w	lr, r0, #2
9001c87c:	b2b6      	uxth	r6, r6
9001c87e:	45b4      	cmp	ip, r6
9001c880:	f040 808c 	bne.w	9001c99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001c884:	9908      	ldr	r1, [sp, #32]
9001c886:	4297      	cmp	r7, r2
9001c888:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001c88c:	d3e2      	bcc.n	9001c854 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001c88e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001c890:	9904      	ldr	r1, [sp, #16]
9001c892:	8812      	ldrh	r2, [r2, #0]
9001c894:	1a52      	subs	r2, r2, r1
9001c896:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001c898:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c89c:	9a07      	ldr	r2, [sp, #28]
9001c89e:	3201      	adds	r2, #1
9001c8a0:	428a      	cmp	r2, r1
9001c8a2:	9207      	str	r2, [sp, #28]
9001c8a4:	f040 8087 	bne.w	9001c9b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001c8a8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001c8ac:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001c8b0:	9b04      	ldr	r3, [sp, #16]
9001c8b2:	1bed      	subs	r5, r5, r7
9001c8b4:	b2ad      	uxth	r5, r5
9001c8b6:	2d00      	cmp	r5, #0
9001c8b8:	bf08      	it	eq
9001c8ba:	461a      	moveq	r2, r3
9001c8bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c8be:	bf18      	it	ne
9001c8c0:	2200      	movne	r2, #0
9001c8c2:	3301      	adds	r3, #1
9001c8c4:	b292      	uxth	r2, r2
9001c8c6:	930d      	str	r3, [sp, #52]	@ 0x34
9001c8c8:	e70d      	b.n	9001c6e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001c8ca:	1bd1      	subs	r1, r2, r7
9001c8cc:	9708      	str	r7, [sp, #32]
9001c8ce:	b28b      	uxth	r3, r1
9001c8d0:	9301      	str	r3, [sp, #4]
9001c8d2:	462b      	mov	r3, r5
9001c8d4:	e7ca      	b.n	9001c86c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001c8d6:	bf00      	nop
9001c8d8:	24021bdc 	.word	0x24021bdc
9001c8dc:	24021bd6 	.word	0x24021bd6
9001c8e0:	fffff7fb 	.word	0xfffff7fb
9001c8e4:	b2b6      	uxth	r6, r6
9001c8e6:	900b      	str	r0, [sp, #44]	@ 0x2c
9001c8e8:	45b4      	cmp	ip, r6
9001c8ea:	d0cb      	beq.n	9001c884 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001c8ec:	f10c 0101 	add.w	r1, ip, #1
9001c8f0:	44a4      	add	ip, r4
9001c8f2:	9117      	str	r1, [sp, #92]	@ 0x5c
9001c8f4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001c8f8:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001c8fa:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001c8fe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001c900:	ea4f 2825 	mov.w	r8, r5, asr #8
9001c904:	f8b1 c000 	ldrh.w	ip, [r1]
9001c908:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001c90a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001c90e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001c912:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001c916:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c91a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c91e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001c922:	fb1e fe01 	smulbb	lr, lr, r1
9001c926:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001c928:	fa5f fc8c 	uxtb.w	ip, ip
9001c92c:	fb08 e801 	mla	r8, r8, r1, lr
9001c930:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001c934:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001c936:	00ed      	lsls	r5, r5, #3
9001c938:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001c93c:	fa1f f888 	uxth.w	r8, r8
9001c940:	fb19 f901 	smulbb	r9, r9, r1
9001c944:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001c946:	b2ed      	uxtb	r5, r5
9001c948:	fb0e 9e01 	mla	lr, lr, r1, r9
9001c94c:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001c94e:	fb1c fc01 	smulbb	ip, ip, r1
9001c952:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001c954:	fa1f fe8e 	uxth.w	lr, lr
9001c958:	fb05 c501 	mla	r5, r5, r1, ip
9001c95c:	f108 0c01 	add.w	ip, r8, #1
9001c960:	f10e 0901 	add.w	r9, lr, #1
9001c964:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001c966:	b2ad      	uxth	r5, r5
9001c968:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001c96c:	f105 0c01 	add.w	ip, r5, #1
9001c970:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001c974:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001c978:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001c97c:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c980:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001c984:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001c988:	ea4c 0808 	orr.w	r8, ip, r8
9001c98c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001c990:	ea48 0809 	orr.w	r8, r8, r9
9001c994:	f821 8b02 	strh.w	r8, [r1], #2
9001c998:	910b      	str	r1, [sp, #44]	@ 0x2c
9001c99a:	e7a5      	b.n	9001c8e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001c99c:	f10c 0801 	add.w	r8, ip, #1
9001c9a0:	44a4      	add	ip, r4
9001c9a2:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001c9a4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001c9a8:	fa1f fc88 	uxth.w	ip, r8
9001c9ac:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001c9b0:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001c9b4:	e763      	b.n	9001c87e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001c9b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c9ba:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001c9be:	1aad      	subs	r5, r5, r2
9001c9c0:	b2ad      	uxth	r5, r5
9001c9c2:	2d00      	cmp	r5, #0
9001c9c4:	bf18      	it	ne
9001c9c6:	2200      	movne	r2, #0
9001c9c8:	9201      	str	r2, [sp, #4]
9001c9ca:	e744      	b.n	9001c856 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001c9cc:	4b03      	ldr	r3, [pc, #12]	@ (9001c9dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001c9ce:	6818      	ldr	r0, [r3, #0]
9001c9d0:	6803      	ldr	r3, [r0, #0]
9001c9d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c9d4:	4798      	blx	r3
9001c9d6:	b01f      	add	sp, #124	@ 0x7c
9001c9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c9dc:	24021bdc 	.word	0x24021bdc

9001c9e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001c9e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c9e4:	b093      	sub	sp, #76	@ 0x4c
9001c9e6:	4616      	mov	r6, r2
9001c9e8:	460d      	mov	r5, r1
9001c9ea:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001c9ee:	9003      	str	r0, [sp, #12]
9001c9f0:	9201      	str	r2, [sp, #4]
9001c9f2:	2a00      	cmp	r2, #0
9001c9f4:	f000 8303 	beq.w	9001cffe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001c9f8:	6830      	ldr	r0, [r6, #0]
9001c9fa:	ac0e      	add	r4, sp, #56	@ 0x38
9001c9fc:	6871      	ldr	r1, [r6, #4]
9001c9fe:	c403      	stmia	r4!, {r0, r1}
9001ca00:	6818      	ldr	r0, [r3, #0]
9001ca02:	ac10      	add	r4, sp, #64	@ 0x40
9001ca04:	6859      	ldr	r1, [r3, #4]
9001ca06:	c403      	stmia	r4!, {r0, r1}
9001ca08:	a80e      	add	r0, sp, #56	@ 0x38
9001ca0a:	f7f8 fdb5 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ca0e:	4631      	mov	r1, r6
9001ca10:	a810      	add	r0, sp, #64	@ 0x40
9001ca12:	f7f8 fdd9 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ca16:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001ca1a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001ca1e:	bfdb      	ittet	le
9001ca20:	b293      	uxthle	r3, r2
9001ca22:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001ca26:	2301      	movgt	r3, #1
9001ca28:	fb91 f3f3 	sdivle	r3, r1, r3
9001ca2c:	9304      	str	r3, [sp, #16]
9001ca2e:	f105 0308 	add.w	r3, r5, #8
9001ca32:	9904      	ldr	r1, [sp, #16]
9001ca34:	9308      	str	r3, [sp, #32]
9001ca36:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001ca3a:	440b      	add	r3, r1
9001ca3c:	3b01      	subs	r3, #1
9001ca3e:	fb93 f3f1 	sdiv	r3, r3, r1
9001ca42:	3b01      	subs	r3, #1
9001ca44:	9908      	ldr	r1, [sp, #32]
9001ca46:	b29b      	uxth	r3, r3
9001ca48:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001ca4c:	9904      	ldr	r1, [sp, #16]
9001ca4e:	9309      	str	r3, [sp, #36]	@ 0x24
9001ca50:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001ca54:	fb93 f0f1 	sdiv	r0, r3, r1
9001ca58:	b284      	uxth	r4, r0
9001ca5a:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001ca5e:	9405      	str	r4, [sp, #20]
9001ca60:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001ca64:	fb05 3914 	mls	r9, r5, r4, r3
9001ca68:	fb19 f902 	smulbb	r9, r9, r2
9001ca6c:	4489      	add	r9, r1
9001ca6e:	fa1f f989 	uxth.w	r9, r9
9001ca72:	2d00      	cmp	r5, #0
9001ca74:	d05d      	beq.n	9001cb32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001ca76:	1e6a      	subs	r2, r5, #1
9001ca78:	9808      	ldr	r0, [sp, #32]
9001ca7a:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001ca7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001ca80:	fa9a fa8a 	rev.w	sl, sl
9001ca84:	4492      	add	sl, r2
9001ca86:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001ca8a:	f04f 0600 	mov.w	r6, #0
9001ca8e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001ca92:	4411      	add	r1, r2
9001ca94:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001ca98:	4413      	add	r3, r2
9001ca9a:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001ca9e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001caa2:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001caa6:	9302      	str	r3, [sp, #8]
9001caa8:	4bca      	ldr	r3, [pc, #808]	@ (9001cdd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001caaa:	6818      	ldr	r0, [r3, #0]
9001caac:	6803      	ldr	r3, [r0, #0]
9001caae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001cab0:	4798      	blx	r3
9001cab2:	4bc9      	ldr	r3, [pc, #804]	@ (9001cdd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001cab4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001cab8:	2100      	movs	r1, #0
9001caba:	881b      	ldrh	r3, [r3, #0]
9001cabc:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001cac0:	fb03 2404 	mla	r4, r3, r4, r2
9001cac4:	2280      	movs	r2, #128	@ 0x80
9001cac6:	436b      	muls	r3, r5
9001cac8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001cacc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001cad0:	930d      	str	r3, [sp, #52]	@ 0x34
9001cad2:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001cad6:	fb99 f3f3 	sdiv	r3, r9, r3
9001cada:	9306      	str	r3, [sp, #24]
9001cadc:	9b01      	ldr	r3, [sp, #4]
9001cade:	43db      	mvns	r3, r3
9001cae0:	b2db      	uxtb	r3, r3
9001cae2:	930a      	str	r3, [sp, #40]	@ 0x28
9001cae4:	9b03      	ldr	r3, [sp, #12]
9001cae6:	3304      	adds	r3, #4
9001cae8:	4618      	mov	r0, r3
9001caea:	930b      	str	r3, [sp, #44]	@ 0x2c
9001caec:	f00c f8b4 	bl	90028c58 <memset>
9001caf0:	4bba      	ldr	r3, [pc, #744]	@ (9001cddc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001caf2:	9300      	str	r3, [sp, #0]
9001caf4:	2300      	movs	r3, #0
9001caf6:	9307      	str	r3, [sp, #28]
9001caf8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001cafa:	42a3      	cmp	r3, r4
9001cafc:	f240 827a 	bls.w	9001cff4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001cb00:	f04f 0e07 	mov.w	lr, #7
9001cb04:	f1b9 0f00 	cmp.w	r9, #0
9001cb08:	f000 8159 	beq.w	9001cdbe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001cb0c:	f89a 5000 	ldrb.w	r5, [sl]
9001cb10:	f10a 0701 	add.w	r7, sl, #1
9001cb14:	b2ed      	uxtb	r5, r5
9001cb16:	11aa      	asrs	r2, r5, #6
9001cb18:	d10e      	bne.n	9001cb38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001cb1a:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001cb1e:	9b03      	ldr	r3, [sp, #12]
9001cb20:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001cb24:	88ae      	ldrh	r6, [r5, #4]
9001cb26:	f109 39ff 	add.w	r9, r9, #4294967295
9001cb2a:	fa1f f989 	uxth.w	r9, r9
9001cb2e:	46ba      	mov	sl, r7
9001cb30:	e7e8      	b.n	9001cb04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001cb32:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001cb36:	e7a6      	b.n	9001ca86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001cb38:	2a01      	cmp	r2, #1
9001cb3a:	d129      	bne.n	9001cb90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001cb3c:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001cb40:	f005 0203 	and.w	r2, r5, #3
9001cb44:	2103      	movs	r1, #3
9001cb46:	3b02      	subs	r3, #2
9001cb48:	4413      	add	r3, r2
9001cb4a:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001cb4e:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001cb52:	f003 031f 	and.w	r3, r3, #31
9001cb56:	3a02      	subs	r2, #2
9001cb58:	3d02      	subs	r5, #2
9001cb5a:	f363 0604 	bfi	r6, r3, #0, #5
9001cb5e:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001cb62:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001cb66:	f362 164a 	bfi	r6, r2, #5, #6
9001cb6a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001cb6e:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001cb72:	f005 051f 	and.w	r5, r5, #31
9001cb76:	fb11 2205 	smlabb	r2, r1, r5, r2
9001cb7a:	f365 26cf 	bfi	r6, r5, #11, #5
9001cb7e:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001cb82:	9a03      	ldr	r2, [sp, #12]
9001cb84:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001cb88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001cb8c:	809e      	strh	r6, [r3, #4]
9001cb8e:	e7ca      	b.n	9001cb26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001cb90:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001cb94:	2a02      	cmp	r2, #2
9001cb96:	b2ab      	uxth	r3, r5
9001cb98:	d136      	bne.n	9001cc08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001cb9a:	2101      	movs	r1, #1
9001cb9c:	fb12 1205 	smlabb	r2, r2, r5, r1
9001cba0:	4492      	add	sl, r2
9001cba2:	463a      	mov	r2, r7
9001cba4:	4552      	cmp	r2, sl
9001cba6:	d01c      	beq.n	9001cbe2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001cba8:	4694      	mov	ip, r2
9001cbaa:	f04f 0b03 	mov.w	fp, #3
9001cbae:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001cbb2:	7852      	ldrb	r2, [r2, #1]
9001cbb4:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001cbb8:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001cbbc:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001cbc0:	f001 021f 	and.w	r2, r1, #31
9001cbc4:	460e      	mov	r6, r1
9001cbc6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001cbca:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001cbce:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001cbd2:	9a03      	ldr	r2, [sp, #12]
9001cbd4:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001cbd8:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001cbdc:	4662      	mov	r2, ip
9001cbde:	8081      	strh	r1, [r0, #4]
9001cbe0:	e7e0      	b.n	9001cba4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001cbe2:	4599      	cmp	r9, r3
9001cbe4:	d20b      	bcs.n	9001cbfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001cbe6:	eba5 0509 	sub.w	r5, r5, r9
9001cbea:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001cbee:	2d00      	cmp	r5, #0
9001cbf0:	f300 8208 	bgt.w	9001d004 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001cbf4:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001cbf8:	2301      	movs	r3, #1
9001cbfa:	9307      	str	r3, [sp, #28]
9001cbfc:	e00c      	b.n	9001cc18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001cbfe:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001cc02:	eba9 0903 	sub.w	r9, r9, r3
9001cc06:	e790      	b.n	9001cb2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001cc08:	4599      	cmp	r9, r3
9001cc0a:	d2fa      	bcs.n	9001cc02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001cc0c:	eba5 0509 	sub.w	r5, r5, r9
9001cc10:	2d00      	cmp	r5, #0
9001cc12:	dc1d      	bgt.n	9001cc50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001cc14:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001cc18:	f04f 0b00 	mov.w	fp, #0
9001cc1c:	f1b8 0f00 	cmp.w	r8, #0
9001cc20:	f340 81a0 	ble.w	9001cf64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001cc24:	783b      	ldrb	r3, [r7, #0]
9001cc26:	f107 0a01 	add.w	sl, r7, #1
9001cc2a:	b2db      	uxtb	r3, r3
9001cc2c:	119a      	asrs	r2, r3, #6
9001cc2e:	f040 80d7 	bne.w	9001cde0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001cc32:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001cc36:	9a03      	ldr	r2, [sp, #12]
9001cc38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001cc3c:	889e      	ldrh	r6, [r3, #4]
9001cc3e:	9b01      	ldr	r3, [sp, #4]
9001cc40:	2bff      	cmp	r3, #255	@ 0xff
9001cc42:	f040 81e8 	bne.w	9001d016 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001cc46:	8026      	strh	r6, [r4, #0]
9001cc48:	f108 38ff 	add.w	r8, r8, #4294967295
9001cc4c:	3402      	adds	r4, #2
9001cc4e:	e0be      	b.n	9001cdce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001cc50:	9b02      	ldr	r3, [sp, #8]
9001cc52:	9a02      	ldr	r2, [sp, #8]
9001cc54:	42ab      	cmp	r3, r5
9001cc56:	bfa8      	it	ge
9001cc58:	462b      	movge	r3, r5
9001cc5a:	eba2 0803 	sub.w	r8, r2, r3
9001cc5e:	9a07      	ldr	r2, [sp, #28]
9001cc60:	1aed      	subs	r5, r5, r3
9001cc62:	2a00      	cmp	r2, #0
9001cc64:	d05a      	beq.n	9001cd1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001cc66:	9a01      	ldr	r2, [sp, #4]
9001cc68:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001cc6c:	2aff      	cmp	r2, #255	@ 0xff
9001cc6e:	d049      	beq.n	9001cd04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001cc70:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001cc74:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001cc78:	42a3      	cmp	r3, r4
9001cc7a:	f240 80a5 	bls.w	9001cdc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001cc7e:	46bc      	mov	ip, r7
9001cc80:	8820      	ldrh	r0, [r4, #0]
9001cc82:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001cc86:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001cc8a:	7879      	ldrb	r1, [r7, #1]
9001cc8c:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001cc90:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001cc94:	fb1a fa09 	smulbb	sl, sl, r9
9001cc98:	b212      	sxth	r2, r2
9001cc9a:	b291      	uxth	r1, r2
9001cc9c:	00d2      	lsls	r2, r2, #3
9001cc9e:	120f      	asrs	r7, r1, #8
9001cca0:	10c9      	asrs	r1, r1, #3
9001cca2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cca6:	b2d2      	uxtb	r2, r2
9001cca8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001ccac:	fb07 a70e 	mla	r7, r7, lr, sl
9001ccb0:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001ccb4:	00c0      	lsls	r0, r0, #3
9001ccb6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001ccba:	b2bf      	uxth	r7, r7
9001ccbc:	b2c0      	uxtb	r0, r0
9001ccbe:	fb1a fa09 	smulbb	sl, sl, r9
9001ccc2:	fb10 f009 	smulbb	r0, r0, r9
9001ccc6:	fb01 a10e 	mla	r1, r1, lr, sl
9001ccca:	fb02 020e 	mla	r2, r2, lr, r0
9001ccce:	1c78      	adds	r0, r7, #1
9001ccd0:	b289      	uxth	r1, r1
9001ccd2:	b292      	uxth	r2, r2
9001ccd4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001ccd8:	f101 0a01 	add.w	sl, r1, #1
9001ccdc:	1c50      	adds	r0, r2, #1
9001ccde:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001cce2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cce6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001ccea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ccee:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001ccf2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ccf6:	4307      	orrs	r7, r0
9001ccf8:	ea47 070a 	orr.w	r7, r7, sl
9001ccfc:	f824 7b02 	strh.w	r7, [r4], #2
9001cd00:	4667      	mov	r7, ip
9001cd02:	e7b9      	b.n	9001cc78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001cd04:	42a3      	cmp	r3, r4
9001cd06:	d95f      	bls.n	9001cdc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001cd08:	463a      	mov	r2, r7
9001cd0a:	f812 1b02 	ldrb.w	r1, [r2], #2
9001cd0e:	7878      	ldrb	r0, [r7, #1]
9001cd10:	4617      	mov	r7, r2
9001cd12:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001cd16:	f824 1b02 	strh.w	r1, [r4], #2
9001cd1a:	e7f3      	b.n	9001cd04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001cd1c:	9901      	ldr	r1, [sp, #4]
9001cd1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001cd22:	b2b2      	uxth	r2, r6
9001cd24:	29ff      	cmp	r1, #255	@ 0xff
9001cd26:	d044      	beq.n	9001cdb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001cd28:	ea4f 2922 	mov.w	r9, r2, asr #8
9001cd2c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001cd30:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001cd34:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001cd38:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001cd3c:	4608      	mov	r0, r1
9001cd3e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001cd42:	fb09 f901 	mul.w	r9, r9, r1
9001cd46:	fb0e fe01 	mul.w	lr, lr, r1
9001cd4a:	00d1      	lsls	r1, r2, #3
9001cd4c:	b2c9      	uxtb	r1, r1
9001cd4e:	4341      	muls	r1, r0
9001cd50:	429c      	cmp	r4, r3
9001cd52:	f4bf af61 	bcs.w	9001cc18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001cd56:	8822      	ldrh	r2, [r4, #0]
9001cd58:	1210      	asrs	r0, r2, #8
9001cd5a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001cd5e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001cd62:	00d2      	lsls	r2, r2, #3
9001cd64:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001cd68:	fb00 900a 	mla	r0, r0, sl, r9
9001cd6c:	b2d2      	uxtb	r2, r2
9001cd6e:	fb0c ec0a 	mla	ip, ip, sl, lr
9001cd72:	b280      	uxth	r0, r0
9001cd74:	fb02 120a 	mla	r2, r2, sl, r1
9001cd78:	fa1f fc8c 	uxth.w	ip, ip
9001cd7c:	b292      	uxth	r2, r2
9001cd7e:	f100 0b01 	add.w	fp, r0, #1
9001cd82:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001cd86:	1c50      	adds	r0, r2, #1
9001cd88:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001cd8c:	f10c 0201 	add.w	r2, ip, #1
9001cd90:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001cd94:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001cd98:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001cd9c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001cda0:	ea40 0b0b 	orr.w	fp, r0, fp
9001cda4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001cda8:	ea4b 0b0c 	orr.w	fp, fp, ip
9001cdac:	f824 bb02 	strh.w	fp, [r4], #2
9001cdb0:	e7ce      	b.n	9001cd50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001cdb2:	429c      	cmp	r4, r3
9001cdb4:	f4bf af30 	bcs.w	9001cc18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001cdb8:	f824 2b02 	strh.w	r2, [r4], #2
9001cdbc:	e7f9      	b.n	9001cdb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001cdbe:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001cdc2:	4657      	mov	r7, sl
9001cdc4:	464d      	mov	r5, r9
9001cdc6:	e727      	b.n	9001cc18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001cdc8:	2300      	movs	r3, #0
9001cdca:	e716      	b.n	9001cbfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001cdcc:	44bb      	add	fp, r7
9001cdce:	4657      	mov	r7, sl
9001cdd0:	e724      	b.n	9001cc1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001cdd2:	bf00      	nop
9001cdd4:	24021bdc 	.word	0x24021bdc
9001cdd8:	24021bd6 	.word	0x24021bd6
9001cddc:	24000180 	.word	0x24000180
9001cde0:	2a01      	cmp	r2, #1
9001cde2:	d12a      	bne.n	9001ce3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001cde4:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001cde8:	f003 0203 	and.w	r2, r3, #3
9001cdec:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001cdf0:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001cdf4:	3902      	subs	r1, #2
9001cdf6:	3802      	subs	r0, #2
9001cdf8:	3b02      	subs	r3, #2
9001cdfa:	4411      	add	r1, r2
9001cdfc:	f001 011f 	and.w	r1, r1, #31
9001ce00:	f361 0604 	bfi	r6, r1, #0, #5
9001ce04:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001ce08:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001ce0c:	f360 164a 	bfi	r6, r0, #5, #6
9001ce10:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001ce14:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001ce18:	f002 031f 	and.w	r3, r2, #31
9001ce1c:	2203      	movs	r2, #3
9001ce1e:	f363 26cf 	bfi	r6, r3, #11, #5
9001ce22:	fb12 0303 	smlabb	r3, r2, r3, r0
9001ce26:	2207      	movs	r2, #7
9001ce28:	fb12 3301 	smlabb	r3, r2, r1, r3
9001ce2c:	9a03      	ldr	r2, [sp, #12]
9001ce2e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ce32:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ce36:	809e      	strh	r6, [r3, #4]
9001ce38:	e701      	b.n	9001cc3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001ce3a:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001ce3e:	4647      	mov	r7, r8
9001ce40:	45a8      	cmp	r8, r5
9001ce42:	bfa8      	it	ge
9001ce44:	462f      	movge	r7, r5
9001ce46:	2a02      	cmp	r2, #2
9001ce48:	d154      	bne.n	9001cef4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001ce4a:	9b01      	ldr	r3, [sp, #4]
9001ce4c:	2bff      	cmp	r3, #255	@ 0xff
9001ce4e:	d01a      	beq.n	9001ce86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001ce50:	eb0b 0307 	add.w	r3, fp, r7
9001ce54:	2b40      	cmp	r3, #64	@ 0x40
9001ce56:	dd16      	ble.n	9001ce86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001ce58:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001ce5c:	9800      	ldr	r0, [sp, #0]
9001ce5e:	4649      	mov	r1, r9
9001ce60:	f7e5 fd6e 	bl	90002940 <_ZN8touchgfx5paint9flushLineEPmi>
9001ce64:	465a      	mov	r2, fp
9001ce66:	9b01      	ldr	r3, [sp, #4]
9001ce68:	4620      	mov	r0, r4
9001ce6a:	9900      	ldr	r1, [sp, #0]
9001ce6c:	444c      	add	r4, r9
9001ce6e:	f7e5 fdad 	bl	900029cc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001ce72:	9b00      	ldr	r3, [sp, #0]
9001ce74:	f04f 0b00 	mov.w	fp, #0
9001ce78:	461a      	mov	r2, r3
9001ce7a:	4b6a      	ldr	r3, [pc, #424]	@ (9001d024 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ce7c:	429a      	cmp	r2, r3
9001ce7e:	bf0c      	ite	eq
9001ce80:	4b69      	ldreq	r3, [pc, #420]	@ (9001d028 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001ce82:	4b68      	ldrne	r3, [pc, #416]	@ (9001d024 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ce84:	9300      	str	r3, [sp, #0]
9001ce86:	4652      	mov	r2, sl
9001ce88:	2100      	movs	r1, #0
9001ce8a:	42a9      	cmp	r1, r5
9001ce8c:	da2c      	bge.n	9001cee8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001ce8e:	4694      	mov	ip, r2
9001ce90:	f04f 0903 	mov.w	r9, #3
9001ce94:	42b9      	cmp	r1, r7
9001ce96:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001ce9a:	7852      	ldrb	r2, [r2, #1]
9001ce9c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001cea0:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001cea4:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001cea8:	f003 021f 	and.w	r2, r3, #31
9001ceac:	461e      	mov	r6, r3
9001ceae:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001ceb2:	fb19 000e 	smlabb	r0, r9, lr, r0
9001ceb6:	f04f 0e07 	mov.w	lr, #7
9001ceba:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001cebe:	9a03      	ldr	r2, [sp, #12]
9001cec0:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001cec4:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001cec8:	8083      	strh	r3, [r0, #4]
9001ceca:	da0a      	bge.n	9001cee2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001cecc:	9a01      	ldr	r2, [sp, #4]
9001cece:	2aff      	cmp	r2, #255	@ 0xff
9001ced0:	bf13      	iteet	ne
9001ced2:	9a00      	ldrne	r2, [sp, #0]
9001ced4:	8023      	strheq	r3, [r4, #0]
9001ced6:	3402      	addeq	r4, #2
9001ced8:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001cedc:	bf18      	it	ne
9001cede:	f10b 0b01 	addne.w	fp, fp, #1
9001cee2:	3101      	adds	r1, #1
9001cee4:	4662      	mov	r2, ip
9001cee6:	e7d0      	b.n	9001ce8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001cee8:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001ceec:	eba8 0807 	sub.w	r8, r8, r7
9001cef0:	1bed      	subs	r5, r5, r7
9001cef2:	e76c      	b.n	9001cdce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001cef4:	9b01      	ldr	r3, [sp, #4]
9001cef6:	eba8 0807 	sub.w	r8, r8, r7
9001cefa:	1bed      	subs	r5, r5, r7
9001cefc:	fa1f f986 	uxth.w	r9, r6
9001cf00:	2bff      	cmp	r3, #255	@ 0xff
9001cf02:	d027      	beq.n	9001cf54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001cf04:	eb0b 0307 	add.w	r3, fp, r7
9001cf08:	2b40      	cmp	r3, #64	@ 0x40
9001cf0a:	dd18      	ble.n	9001cf3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001cf0c:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001cf10:	9800      	ldr	r0, [sp, #0]
9001cf12:	4619      	mov	r1, r3
9001cf14:	930c      	str	r3, [sp, #48]	@ 0x30
9001cf16:	f7e5 fd13 	bl	90002940 <_ZN8touchgfx5paint9flushLineEPmi>
9001cf1a:	465a      	mov	r2, fp
9001cf1c:	9b01      	ldr	r3, [sp, #4]
9001cf1e:	4620      	mov	r0, r4
9001cf20:	9900      	ldr	r1, [sp, #0]
9001cf22:	f04f 0b00 	mov.w	fp, #0
9001cf26:	f7e5 fd51 	bl	900029cc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001cf2a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001cf2c:	441c      	add	r4, r3
9001cf2e:	9b00      	ldr	r3, [sp, #0]
9001cf30:	461a      	mov	r2, r3
9001cf32:	4b3c      	ldr	r3, [pc, #240]	@ (9001d024 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001cf34:	429a      	cmp	r2, r3
9001cf36:	bf0c      	ite	eq
9001cf38:	4b3b      	ldreq	r3, [pc, #236]	@ (9001d028 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001cf3a:	4b3a      	ldrne	r3, [pc, #232]	@ (9001d024 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001cf3c:	9300      	str	r3, [sp, #0]
9001cf3e:	9b00      	ldr	r3, [sp, #0]
9001cf40:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001cf44:	463b      	mov	r3, r7
9001cf46:	2b00      	cmp	r3, #0
9001cf48:	f43f af40 	beq.w	9001cdcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001cf4c:	f822 9b02 	strh.w	r9, [r2], #2
9001cf50:	3b01      	subs	r3, #1
9001cf52:	e7f8      	b.n	9001cf46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001cf54:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001cf58:	42a7      	cmp	r7, r4
9001cf5a:	f67f af38 	bls.w	9001cdce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001cf5e:	f824 9b02 	strh.w	r9, [r4], #2
9001cf62:	e7f9      	b.n	9001cf58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001cf64:	f1bb 0f00 	cmp.w	fp, #0
9001cf68:	d00c      	beq.n	9001cf84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001cf6a:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001cf6e:	9800      	ldr	r0, [sp, #0]
9001cf70:	4641      	mov	r1, r8
9001cf72:	f7e5 fce5 	bl	90002940 <_ZN8touchgfx5paint9flushLineEPmi>
9001cf76:	4620      	mov	r0, r4
9001cf78:	4444      	add	r4, r8
9001cf7a:	9b01      	ldr	r3, [sp, #4]
9001cf7c:	465a      	mov	r2, fp
9001cf7e:	9900      	ldr	r1, [sp, #0]
9001cf80:	f7e5 fd24 	bl	900029cc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001cf84:	4b29      	ldr	r3, [pc, #164]	@ (9001d02c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001cf86:	9a02      	ldr	r2, [sp, #8]
9001cf88:	881b      	ldrh	r3, [r3, #0]
9001cf8a:	1a9b      	subs	r3, r3, r2
9001cf8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cf90:	9b06      	ldr	r3, [sp, #24]
9001cf92:	3301      	adds	r3, #1
9001cf94:	9306      	str	r3, [sp, #24]
9001cf96:	9a06      	ldr	r2, [sp, #24]
9001cf98:	9b04      	ldr	r3, [sp, #16]
9001cf9a:	4293      	cmp	r3, r2
9001cf9c:	d120      	bne.n	9001cfe0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001cf9e:	9b05      	ldr	r3, [sp, #20]
9001cfa0:	2100      	movs	r1, #0
9001cfa2:	9a05      	ldr	r2, [sp, #20]
9001cfa4:	f04f 0600 	mov.w	r6, #0
9001cfa8:	f103 0801 	add.w	r8, r3, #1
9001cfac:	9b08      	ldr	r3, [sp, #32]
9001cfae:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001cfb2:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001cfb6:	2280      	movs	r2, #128	@ 0x80
9001cfb8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001cfbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001cfbe:	ba3f      	rev	r7, r7
9001cfc0:	eba9 0905 	sub.w	r9, r9, r5
9001cfc4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001cfc6:	441f      	add	r7, r3
9001cfc8:	f00b fe46 	bl	90028c58 <memset>
9001cfcc:	fa1f f989 	uxth.w	r9, r9
9001cfd0:	2300      	movs	r3, #0
9001cfd2:	f8cd 8014 	str.w	r8, [sp, #20]
9001cfd6:	9306      	str	r3, [sp, #24]
9001cfd8:	f7e5 fca8 	bl	9000292c <_ZN8touchgfx5paint8tearDownEv>
9001cfdc:	46ba      	mov	sl, r7
9001cfde:	e58b      	b.n	9001caf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001cfe0:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001cfe4:	9b02      	ldr	r3, [sp, #8]
9001cfe6:	eba9 0903 	sub.w	r9, r9, r3
9001cfea:	eba9 0505 	sub.w	r5, r9, r5
9001cfee:	fa1f f985 	uxth.w	r9, r5
9001cff2:	e7f1      	b.n	9001cfd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001cff4:	4b0e      	ldr	r3, [pc, #56]	@ (9001d030 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001cff6:	6818      	ldr	r0, [r3, #0]
9001cff8:	6803      	ldr	r3, [r0, #0]
9001cffa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cffc:	4798      	blx	r3
9001cffe:	b013      	add	sp, #76	@ 0x4c
9001d000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d004:	9b02      	ldr	r3, [sp, #8]
9001d006:	9a02      	ldr	r2, [sp, #8]
9001d008:	42ab      	cmp	r3, r5
9001d00a:	bfa8      	it	ge
9001d00c:	462b      	movge	r3, r5
9001d00e:	eba2 0803 	sub.w	r8, r2, r3
9001d012:	1aed      	subs	r5, r5, r3
9001d014:	e627      	b.n	9001cc66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001d016:	f108 38ff 	add.w	r8, r8, #4294967295
9001d01a:	fa1f f986 	uxth.w	r9, r6
9001d01e:	2500      	movs	r5, #0
9001d020:	2701      	movs	r7, #1
9001d022:	e76f      	b.n	9001cf04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001d024:	24000180 	.word	0x24000180
9001d028:	24000280 	.word	0x24000280
9001d02c:	24021bd6 	.word	0x24021bd6
9001d030:	24021bdc 	.word	0x24021bdc

9001d034 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001d034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d038:	b08f      	sub	sp, #60	@ 0x3c
9001d03a:	461c      	mov	r4, r3
9001d03c:	460f      	mov	r7, r1
9001d03e:	9203      	str	r2, [sp, #12]
9001d040:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d044:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001d046:	9202      	str	r2, [sp, #8]
9001d048:	2a00      	cmp	r2, #0
9001d04a:	f000 8128 	beq.w	9001d29e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001d04e:	6820      	ldr	r0, [r4, #0]
9001d050:	aa0a      	add	r2, sp, #40	@ 0x28
9001d052:	6861      	ldr	r1, [r4, #4]
9001d054:	c203      	stmia	r2!, {r0, r1}
9001d056:	6818      	ldr	r0, [r3, #0]
9001d058:	aa0c      	add	r2, sp, #48	@ 0x30
9001d05a:	6859      	ldr	r1, [r3, #4]
9001d05c:	c203      	stmia	r2!, {r0, r1}
9001d05e:	a80a      	add	r0, sp, #40	@ 0x28
9001d060:	f7f8 fa8a 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d064:	4621      	mov	r1, r4
9001d066:	a80c      	add	r0, sp, #48	@ 0x30
9001d068:	f7f8 faae 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d06c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001d070:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001d074:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001d078:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001d07c:	bfdb      	ittet	le
9001d07e:	b2b3      	uxthle	r3, r6
9001d080:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001d084:	2301      	movgt	r3, #1
9001d086:	fb92 f3f3 	sdivle	r3, r2, r3
9001d08a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001d08e:	441d      	add	r5, r3
9001d090:	fb92 f1f3 	sdiv	r1, r2, r3
9001d094:	fa1f fc81 	uxth.w	ip, r1
9001d098:	3d01      	subs	r5, #1
9001d09a:	fb0c 2413 	mls	r4, ip, r3, r2
9001d09e:	4661      	mov	r1, ip
9001d0a0:	fb14 f406 	smulbb	r4, r4, r6
9001d0a4:	4404      	add	r4, r0
9001d0a6:	fb95 f5f3 	sdiv	r5, r5, r3
9001d0aa:	b2a4      	uxth	r4, r4
9001d0ac:	b121      	cbz	r1, 9001d0b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001d0ae:	9b03      	ldr	r3, [sp, #12]
9001d0b0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d0b4:	ba1b      	rev	r3, r3
9001d0b6:	441f      	add	r7, r3
9001d0b8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001d0bc:	b2ad      	uxth	r5, r5
9001d0be:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001d0c2:	4418      	add	r0, r3
9001d0c4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001d0c8:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001d0cc:	00ad      	lsls	r5, r5, #2
9001d0ce:	441a      	add	r2, r3
9001d0d0:	4b74      	ldr	r3, [pc, #464]	@ (9001d2a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001d0d2:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001d0d6:	6818      	ldr	r0, [r3, #0]
9001d0d8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001d0dc:	6803      	ldr	r3, [r0, #0]
9001d0de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d0e0:	4798      	blx	r3
9001d0e2:	4a71      	ldr	r2, [pc, #452]	@ (9001d2a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001d0e4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001d0e8:	2c00      	cmp	r4, #0
9001d0ea:	8813      	ldrh	r3, [r2, #0]
9001d0ec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001d0f0:	bf0c      	ite	eq
9001d0f2:	46c8      	moveq	r8, r9
9001d0f4:	f04f 0800 	movne.w	r8, #0
9001d0f8:	9209      	str	r2, [sp, #36]	@ 0x24
9001d0fa:	fb03 c101 	mla	r1, r3, r1, ip
9001d0fe:	4373      	muls	r3, r6
9001d100:	fa1f f888 	uxth.w	r8, r8
9001d104:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d108:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d10c:	9304      	str	r3, [sp, #16]
9001d10e:	1d2b      	adds	r3, r5, #4
9001d110:	9305      	str	r3, [sp, #20]
9001d112:	2300      	movs	r3, #0
9001d114:	9301      	str	r3, [sp, #4]
9001d116:	9a04      	ldr	r2, [sp, #16]
9001d118:	4282      	cmp	r2, r0
9001d11a:	f240 80bb 	bls.w	9001d294 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001d11e:	b95b      	cbnz	r3, 9001d138 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001d120:	783a      	ldrb	r2, [r7, #0]
9001d122:	0993      	lsrs	r3, r2, #6
9001d124:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001d128:	9201      	str	r2, [sp, #4]
9001d12a:	1e5a      	subs	r2, r3, #1
9001d12c:	2a02      	cmp	r2, #2
9001d12e:	bf8d      	iteet	hi
9001d130:	787b      	ldrbhi	r3, [r7, #1]
9001d132:	3701      	addls	r7, #1
9001d134:	b29b      	uxthls	r3, r3
9001d136:	3702      	addhi	r7, #2
9001d138:	b184      	cbz	r4, 9001d15c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001d13a:	429c      	cmp	r4, r3
9001d13c:	bf91      	iteee	ls
9001d13e:	1b1c      	subls	r4, r3, r4
9001d140:	1ae4      	subhi	r4, r4, r3
9001d142:	46c4      	movhi	ip, r8
9001d144:	f04f 0a00 	movhi.w	sl, #0
9001d148:	bf9b      	ittet	ls
9001d14a:	fa1f fa84 	uxthls.w	sl, r4
9001d14e:	2400      	movls	r4, #0
9001d150:	b2a4      	uxthhi	r4, r4
9001d152:	fa1f fc89 	uxthls.w	ip, r9
9001d156:	4653      	mov	r3, sl
9001d158:	46e0      	mov	r8, ip
9001d15a:	e7dc      	b.n	9001d116 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001d15c:	2204      	movs	r2, #4
9001d15e:	9905      	ldr	r1, [sp, #20]
9001d160:	4543      	cmp	r3, r8
9001d162:	4615      	mov	r5, r2
9001d164:	9a01      	ldr	r2, [sp, #4]
9001d166:	bf24      	itt	cs
9001d168:	eba3 0a08 	subcs.w	sl, r3, r8
9001d16c:	46c6      	movcs	lr, r8
9001d16e:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d172:	9903      	ldr	r1, [sp, #12]
9001d174:	bf3c      	itt	cc
9001d176:	eba8 0c03 	subcc.w	ip, r8, r3
9001d17a:	469e      	movcc	lr, r3
9001d17c:	588a      	ldr	r2, [r1, r2]
9001d17e:	bf26      	itte	cs
9001d180:	fa1f fa8a 	uxthcs.w	sl, sl
9001d184:	46a4      	movcs	ip, r4
9001d186:	fa1f fc8c 	uxthcc.w	ip, ip
9001d18a:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001d18e:	bf38      	it	cc
9001d190:	46a2      	movcc	sl, r4
9001d192:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001d196:	2900      	cmp	r1, #0
9001d198:	d066      	beq.n	9001d268 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001d19a:	29ff      	cmp	r1, #255	@ 0xff
9001d19c:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001d1a0:	d114      	bne.n	9001d1cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001d1a2:	9d02      	ldr	r5, [sp, #8]
9001d1a4:	2dff      	cmp	r5, #255	@ 0xff
9001d1a6:	d111      	bne.n	9001d1cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001d1a8:	0951      	lsrs	r1, r2, #5
9001d1aa:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001d1ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001d1b2:	4486      	add	lr, r0
9001d1b4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001d1b8:	f026 0607 	bic.w	r6, r6, #7
9001d1bc:	430e      	orrs	r6, r1
9001d1be:	4316      	orrs	r6, r2
9001d1c0:	b2b6      	uxth	r6, r6
9001d1c2:	4586      	cmp	lr, r0
9001d1c4:	d051      	beq.n	9001d26a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d1c6:	f820 6b02 	strh.w	r6, [r0], #2
9001d1ca:	e7fa      	b.n	9001d1c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001d1cc:	9d02      	ldr	r5, [sp, #8]
9001d1ce:	b2f6      	uxtb	r6, r6
9001d1d0:	4486      	add	lr, r0
9001d1d2:	4369      	muls	r1, r5
9001d1d4:	1c4d      	adds	r5, r1, #1
9001d1d6:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001d1da:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001d1de:	b2d2      	uxtb	r2, r2
9001d1e0:	122d      	asrs	r5, r5, #8
9001d1e2:	ea6f 0b05 	mvn.w	fp, r5
9001d1e6:	b2ad      	uxth	r5, r5
9001d1e8:	fb11 f105 	smulbb	r1, r1, r5
9001d1ec:	fa5f fb8b 	uxtb.w	fp, fp
9001d1f0:	fb16 f605 	smulbb	r6, r6, r5
9001d1f4:	fb12 f205 	smulbb	r2, r2, r5
9001d1f8:	b289      	uxth	r1, r1
9001d1fa:	b2b6      	uxth	r6, r6
9001d1fc:	b292      	uxth	r2, r2
9001d1fe:	9106      	str	r1, [sp, #24]
9001d200:	9607      	str	r6, [sp, #28]
9001d202:	9208      	str	r2, [sp, #32]
9001d204:	4586      	cmp	lr, r0
9001d206:	d030      	beq.n	9001d26a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d208:	8802      	ldrh	r2, [r0, #0]
9001d20a:	9906      	ldr	r1, [sp, #24]
9001d20c:	1216      	asrs	r6, r2, #8
9001d20e:	10d5      	asrs	r5, r2, #3
9001d210:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d214:	00d2      	lsls	r2, r2, #3
9001d216:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d21a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001d21e:	b2d2      	uxtb	r2, r2
9001d220:	fb06 160b 	mla	r6, r6, fp, r1
9001d224:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d228:	9907      	ldr	r1, [sp, #28]
9001d22a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d22e:	b2b6      	uxth	r6, r6
9001d230:	fb05 150b 	mla	r5, r5, fp, r1
9001d234:	9908      	ldr	r1, [sp, #32]
9001d236:	fb02 120b 	mla	r2, r2, fp, r1
9001d23a:	1c71      	adds	r1, r6, #1
9001d23c:	b2ad      	uxth	r5, r5
9001d23e:	b292      	uxth	r2, r2
9001d240:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001d244:	1c51      	adds	r1, r2, #1
9001d246:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d24a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001d24e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d252:	4316      	orrs	r6, r2
9001d254:	1c6a      	adds	r2, r5, #1
9001d256:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001d25a:	096d      	lsrs	r5, r5, #5
9001d25c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d260:	432e      	orrs	r6, r5
9001d262:	f820 6b02 	strh.w	r6, [r0], #2
9001d266:	e7cd      	b.n	9001d204 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001d268:	4470      	add	r0, lr
9001d26a:	4543      	cmp	r3, r8
9001d26c:	f4ff af73 	bcc.w	9001d156 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001d270:	fa1f fc89 	uxth.w	ip, r9
9001d274:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001d278:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001d27a:	eba4 040c 	sub.w	r4, r4, ip
9001d27e:	881b      	ldrh	r3, [r3, #0]
9001d280:	b2a4      	uxth	r4, r4
9001d282:	eba3 0309 	sub.w	r3, r3, r9
9001d286:	2c00      	cmp	r4, #0
9001d288:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d28c:	bf18      	it	ne
9001d28e:	f04f 0c00 	movne.w	ip, #0
9001d292:	e760      	b.n	9001d156 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001d294:	4b03      	ldr	r3, [pc, #12]	@ (9001d2a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001d296:	6818      	ldr	r0, [r3, #0]
9001d298:	6803      	ldr	r3, [r0, #0]
9001d29a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d29c:	4798      	blx	r3
9001d29e:	b00f      	add	sp, #60	@ 0x3c
9001d2a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d2a4:	24021bdc 	.word	0x24021bdc
9001d2a8:	24021bd6 	.word	0x24021bd6

9001d2ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001d2ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d2b0:	b093      	sub	sp, #76	@ 0x4c
9001d2b2:	461c      	mov	r4, r3
9001d2b4:	9205      	str	r2, [sp, #20]
9001d2b6:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001d2ba:	9101      	str	r1, [sp, #4]
9001d2bc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001d2be:	9202      	str	r2, [sp, #8]
9001d2c0:	2a00      	cmp	r2, #0
9001d2c2:	f000 812e 	beq.w	9001d522 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001d2c6:	6820      	ldr	r0, [r4, #0]
9001d2c8:	aa0e      	add	r2, sp, #56	@ 0x38
9001d2ca:	6861      	ldr	r1, [r4, #4]
9001d2cc:	c203      	stmia	r2!, {r0, r1}
9001d2ce:	6818      	ldr	r0, [r3, #0]
9001d2d0:	aa10      	add	r2, sp, #64	@ 0x40
9001d2d2:	6859      	ldr	r1, [r3, #4]
9001d2d4:	c203      	stmia	r2!, {r0, r1}
9001d2d6:	a80e      	add	r0, sp, #56	@ 0x38
9001d2d8:	f7f8 f94e 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d2dc:	4621      	mov	r1, r4
9001d2de:	a810      	add	r0, sp, #64	@ 0x40
9001d2e0:	f7f8 f972 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d2e4:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001d2e8:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001d2ec:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001d2f0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001d2f4:	bfdb      	ittet	le
9001d2f6:	b2b3      	uxthle	r3, r6
9001d2f8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001d2fc:	2301      	movgt	r3, #1
9001d2fe:	fb92 f3f3 	sdivle	r3, r2, r3
9001d302:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001d306:	441d      	add	r5, r3
9001d308:	fb92 f1f3 	sdiv	r1, r2, r3
9001d30c:	fa1f fc81 	uxth.w	ip, r1
9001d310:	3d01      	subs	r5, #1
9001d312:	fb0c 2413 	mls	r4, ip, r3, r2
9001d316:	4661      	mov	r1, ip
9001d318:	fb14 f406 	smulbb	r4, r4, r6
9001d31c:	4404      	add	r4, r0
9001d31e:	fb95 f5f3 	sdiv	r5, r5, r3
9001d322:	b2a4      	uxth	r4, r4
9001d324:	b131      	cbz	r1, 9001d334 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001d326:	9b05      	ldr	r3, [sp, #20]
9001d328:	9901      	ldr	r1, [sp, #4]
9001d32a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d32e:	ba1b      	rev	r3, r3
9001d330:	4419      	add	r1, r3
9001d332:	9101      	str	r1, [sp, #4]
9001d334:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001d338:	b2ad      	uxth	r5, r5
9001d33a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001d33e:	4418      	add	r0, r3
9001d340:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001d344:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001d348:	00ad      	lsls	r5, r5, #2
9001d34a:	441a      	add	r2, r3
9001d34c:	4b76      	ldr	r3, [pc, #472]	@ (9001d528 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001d34e:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001d352:	6818      	ldr	r0, [r3, #0]
9001d354:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001d358:	6803      	ldr	r3, [r0, #0]
9001d35a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d35c:	4798      	blx	r3
9001d35e:	4973      	ldr	r1, [pc, #460]	@ (9001d52c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001d360:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001d364:	2c00      	cmp	r4, #0
9001d366:	880b      	ldrh	r3, [r1, #0]
9001d368:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001d36c:	910d      	str	r1, [sp, #52]	@ 0x34
9001d36e:	fb03 c202 	mla	r2, r3, r2, ip
9001d372:	bf08      	it	eq
9001d374:	46dc      	moveq	ip, fp
9001d376:	fb03 f306 	mul.w	r3, r3, r6
9001d37a:	bf18      	it	ne
9001d37c:	f04f 0c00 	movne.w	ip, #0
9001d380:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d384:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d388:	fa1f fc8c 	uxth.w	ip, ip
9001d38c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d390:	9106      	str	r1, [sp, #24]
9001d392:	9308      	str	r3, [sp, #32]
9001d394:	1d2b      	adds	r3, r5, #4
9001d396:	9309      	str	r3, [sp, #36]	@ 0x24
9001d398:	9b02      	ldr	r3, [sp, #8]
9001d39a:	43da      	mvns	r2, r3
9001d39c:	2300      	movs	r3, #0
9001d39e:	b2d2      	uxtb	r2, r2
9001d3a0:	9303      	str	r3, [sp, #12]
9001d3a2:	9207      	str	r2, [sp, #28]
9001d3a4:	9a08      	ldr	r2, [sp, #32]
9001d3a6:	4282      	cmp	r2, r0
9001d3a8:	f240 80b6 	bls.w	9001d518 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001d3ac:	b963      	cbnz	r3, 9001d3c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001d3ae:	9b01      	ldr	r3, [sp, #4]
9001d3b0:	781a      	ldrb	r2, [r3, #0]
9001d3b2:	0993      	lsrs	r3, r2, #6
9001d3b4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001d3b8:	9203      	str	r2, [sp, #12]
9001d3ba:	1e5a      	subs	r2, r3, #1
9001d3bc:	2a02      	cmp	r2, #2
9001d3be:	d815      	bhi.n	9001d3ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001d3c0:	9a01      	ldr	r2, [sp, #4]
9001d3c2:	b29b      	uxth	r3, r3
9001d3c4:	3201      	adds	r2, #1
9001d3c6:	9201      	str	r2, [sp, #4]
9001d3c8:	b1b4      	cbz	r4, 9001d3f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001d3ca:	429c      	cmp	r4, r3
9001d3cc:	bf91      	iteee	ls
9001d3ce:	1b1c      	subls	r4, r3, r4
9001d3d0:	1ae4      	subhi	r4, r4, r3
9001d3d2:	4666      	movhi	r6, ip
9001d3d4:	f04f 0800 	movhi.w	r8, #0
9001d3d8:	bf9b      	ittet	ls
9001d3da:	fa1f f884 	uxthls.w	r8, r4
9001d3de:	2400      	movls	r4, #0
9001d3e0:	b2a4      	uxthhi	r4, r4
9001d3e2:	fa1f f68b 	uxthls.w	r6, fp
9001d3e6:	4643      	mov	r3, r8
9001d3e8:	46b4      	mov	ip, r6
9001d3ea:	e7db      	b.n	9001d3a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001d3ec:	9a01      	ldr	r2, [sp, #4]
9001d3ee:	9b01      	ldr	r3, [sp, #4]
9001d3f0:	3202      	adds	r2, #2
9001d3f2:	785b      	ldrb	r3, [r3, #1]
9001d3f4:	9201      	str	r2, [sp, #4]
9001d3f6:	e7e7      	b.n	9001d3c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001d3f8:	2203      	movs	r2, #3
9001d3fa:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001d3fc:	4563      	cmp	r3, ip
9001d3fe:	4615      	mov	r5, r2
9001d400:	9a03      	ldr	r2, [sp, #12]
9001d402:	bf2c      	ite	cs
9001d404:	eba3 080c 	subcs.w	r8, r3, ip
9001d408:	ebac 0603 	subcc.w	r6, ip, r3
9001d40c:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d410:	9905      	ldr	r1, [sp, #20]
9001d412:	bf24      	itt	cs
9001d414:	fa1f f888 	uxthcs.w	r8, r8
9001d418:	46e1      	movcs	r9, ip
9001d41a:	eb01 0502 	add.w	r5, r1, r2
9001d41e:	9902      	ldr	r1, [sp, #8]
9001d420:	bf2f      	iteee	cs
9001d422:	4626      	movcs	r6, r4
9001d424:	b2b6      	uxthcc	r6, r6
9001d426:	4699      	movcc	r9, r3
9001d428:	46a0      	movcc	r8, r4
9001d42a:	29ff      	cmp	r1, #255	@ 0xff
9001d42c:	d04a      	beq.n	9001d4c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001d42e:	9f06      	ldr	r7, [sp, #24]
9001d430:	46ca      	mov	sl, r9
9001d432:	78a9      	ldrb	r1, [r5, #2]
9001d434:	9004      	str	r0, [sp, #16]
9001d436:	4379      	muls	r1, r7
9001d438:	910a      	str	r1, [sp, #40]	@ 0x28
9001d43a:	7869      	ldrb	r1, [r5, #1]
9001d43c:	4379      	muls	r1, r7
9001d43e:	910b      	str	r1, [sp, #44]	@ 0x2c
9001d440:	9905      	ldr	r1, [sp, #20]
9001d442:	5c8a      	ldrb	r2, [r1, r2]
9001d444:	437a      	muls	r2, r7
9001d446:	920c      	str	r2, [sp, #48]	@ 0x30
9001d448:	f1ba 0f00 	cmp.w	sl, #0
9001d44c:	d03d      	beq.n	9001d4ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001d44e:	9a04      	ldr	r2, [sp, #16]
9001d450:	f10a 3aff 	add.w	sl, sl, #4294967295
9001d454:	9f07      	ldr	r7, [sp, #28]
9001d456:	8812      	ldrh	r2, [r2, #0]
9001d458:	fa1f fa8a 	uxth.w	sl, sl
9001d45c:	46be      	mov	lr, r7
9001d45e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001d460:	1215      	asrs	r5, r2, #8
9001d462:	10d1      	asrs	r1, r2, #3
9001d464:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001d468:	00d2      	lsls	r2, r2, #3
9001d46a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001d46e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001d472:	b2d2      	uxtb	r2, r2
9001d474:	fb05 750e 	mla	r5, r5, lr, r7
9001d478:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001d47c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001d47e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d482:	b2ad      	uxth	r5, r5
9001d484:	fb01 710e 	mla	r1, r1, lr, r7
9001d488:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001d48a:	fb02 720e 	mla	r2, r2, lr, r7
9001d48e:	f105 0e01 	add.w	lr, r5, #1
9001d492:	b289      	uxth	r1, r1
9001d494:	b292      	uxth	r2, r2
9001d496:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d49a:	f102 0e01 	add.w	lr, r2, #1
9001d49e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001d4a2:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001d4a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d4aa:	4315      	orrs	r5, r2
9001d4ac:	1c4a      	adds	r2, r1, #1
9001d4ae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001d4b2:	9a04      	ldr	r2, [sp, #16]
9001d4b4:	0949      	lsrs	r1, r1, #5
9001d4b6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001d4ba:	430d      	orrs	r5, r1
9001d4bc:	f822 5b02 	strh.w	r5, [r2], #2
9001d4c0:	9204      	str	r2, [sp, #16]
9001d4c2:	e7c1      	b.n	9001d448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001d4c4:	4649      	mov	r1, r9
9001d4c6:	4686      	mov	lr, r0
9001d4c8:	b999      	cbnz	r1, 9001d4f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001d4ca:	4563      	cmp	r3, ip
9001d4cc:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001d4d0:	d389      	bcc.n	9001d3e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d4d2:	fa1f f68b 	uxth.w	r6, fp
9001d4d6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001d4da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d4dc:	1ba4      	subs	r4, r4, r6
9001d4de:	881b      	ldrh	r3, [r3, #0]
9001d4e0:	b2a4      	uxth	r4, r4
9001d4e2:	eba3 030b 	sub.w	r3, r3, fp
9001d4e6:	2c00      	cmp	r4, #0
9001d4e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d4ec:	bf18      	it	ne
9001d4ee:	2600      	movne	r6, #0
9001d4f0:	e779      	b.n	9001d3e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d4f2:	78aa      	ldrb	r2, [r5, #2]
9001d4f4:	3901      	subs	r1, #1
9001d4f6:	4f0e      	ldr	r7, [pc, #56]	@ (9001d530 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001d4f8:	b289      	uxth	r1, r1
9001d4fa:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001d4fe:	786a      	ldrb	r2, [r5, #1]
9001d500:	00d2      	lsls	r2, r2, #3
9001d502:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d506:	ea4a 0202 	orr.w	r2, sl, r2
9001d50a:	f895 a000 	ldrb.w	sl, [r5]
9001d50e:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001d512:	f82e 2b02 	strh.w	r2, [lr], #2
9001d516:	e7d7      	b.n	9001d4c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001d518:	4b03      	ldr	r3, [pc, #12]	@ (9001d528 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001d51a:	6818      	ldr	r0, [r3, #0]
9001d51c:	6803      	ldr	r3, [r0, #0]
9001d51e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d520:	4798      	blx	r3
9001d522:	b013      	add	sp, #76	@ 0x4c
9001d524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d528:	24021bdc 	.word	0x24021bdc
9001d52c:	24021bd6 	.word	0x24021bd6
9001d530:	fffff800 	.word	0xfffff800

9001d534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001d534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d538:	b09d      	sub	sp, #116	@ 0x74
9001d53a:	461c      	mov	r4, r3
9001d53c:	4683      	mov	fp, r0
9001d53e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001d540:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001d544:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001d548:	920e      	str	r2, [sp, #56]	@ 0x38
9001d54a:	2a00      	cmp	r2, #0
9001d54c:	f000 81e4 	beq.w	9001d918 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001d550:	6820      	ldr	r0, [r4, #0]
9001d552:	aa18      	add	r2, sp, #96	@ 0x60
9001d554:	6861      	ldr	r1, [r4, #4]
9001d556:	c203      	stmia	r2!, {r0, r1}
9001d558:	6818      	ldr	r0, [r3, #0]
9001d55a:	aa1a      	add	r2, sp, #104	@ 0x68
9001d55c:	6859      	ldr	r1, [r3, #4]
9001d55e:	c203      	stmia	r2!, {r0, r1}
9001d560:	a818      	add	r0, sp, #96	@ 0x60
9001d562:	f7f8 f809 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d566:	4621      	mov	r1, r4
9001d568:	a81a      	add	r0, sp, #104	@ 0x68
9001d56a:	f7f8 f82d 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d56e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001d572:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001d576:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001d57a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001d57e:	bfdb      	ittet	le
9001d580:	b29a      	uxthle	r2, r3
9001d582:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d586:	2201      	movgt	r2, #1
9001d588:	fb91 f2f2 	sdivle	r2, r1, r2
9001d58c:	9202      	str	r2, [sp, #8]
9001d58e:	9802      	ldr	r0, [sp, #8]
9001d590:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001d594:	9902      	ldr	r1, [sp, #8]
9001d596:	fb92 f0f0 	sdiv	r0, r2, r0
9001d59a:	b280      	uxth	r0, r0
9001d59c:	440c      	add	r4, r1
9001d59e:	900f      	str	r0, [sp, #60]	@ 0x3c
9001d5a0:	3c01      	subs	r4, #1
9001d5a2:	9802      	ldr	r0, [sp, #8]
9001d5a4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001d5a6:	fb05 2510 	mls	r5, r5, r0, r2
9001d5aa:	fb94 f4f1 	sdiv	r4, r4, r1
9001d5ae:	fb15 f503 	smulbb	r5, r5, r3
9001d5b2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001d5b6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001d5ba:	3401      	adds	r4, #1
9001d5bc:	440d      	add	r5, r1
9001d5be:	4419      	add	r1, r3
9001d5c0:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001d5c4:	b2a4      	uxth	r4, r4
9001d5c6:	441a      	add	r2, r3
9001d5c8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001d5cc:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001d5d0:	00a4      	lsls	r4, r4, #2
9001d5d2:	9306      	str	r3, [sp, #24]
9001d5d4:	b2ad      	uxth	r5, r5
9001d5d6:	4bb3      	ldr	r3, [pc, #716]	@ (9001d8a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001d5d8:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001d5dc:	6818      	ldr	r0, [r3, #0]
9001d5de:	6803      	ldr	r3, [r0, #0]
9001d5e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d5e2:	4798      	blx	r3
9001d5e4:	4bb0      	ldr	r3, [pc, #704]	@ (9001d8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001d5e6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001d5ea:	2d00      	cmp	r5, #0
9001d5ec:	881a      	ldrh	r2, [r3, #0]
9001d5ee:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001d5f2:	fb02 f606 	mul.w	r6, r2, r6
9001d5f6:	fb02 7101 	mla	r1, r2, r1, r7
9001d5fa:	9316      	str	r3, [sp, #88]	@ 0x58
9001d5fc:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001d600:	4baa      	ldr	r3, [pc, #680]	@ (9001d8ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001d602:	bf18      	it	ne
9001d604:	2100      	movne	r1, #0
9001d606:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001d60a:	eba3 030b 	sub.w	r3, r3, fp
9001d60e:	920a      	str	r2, [sp, #40]	@ 0x28
9001d610:	f104 0204 	add.w	r2, r4, #4
9001d614:	9317      	str	r3, [sp, #92]	@ 0x5c
9001d616:	9213      	str	r2, [sp, #76]	@ 0x4c
9001d618:	9a06      	ldr	r2, [sp, #24]
9001d61a:	bf08      	it	eq
9001d61c:	4611      	moveq	r1, r2
9001d61e:	2200      	movs	r2, #0
9001d620:	b289      	uxth	r1, r1
9001d622:	920d      	str	r2, [sp, #52]	@ 0x34
9001d624:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d626:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d628:	fa12 f383 	uxtah	r3, r2, r3
9001d62c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d62e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001d632:	3304      	adds	r3, #4
9001d634:	9308      	str	r3, [sp, #32]
9001d636:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d638:	4543      	cmp	r3, r8
9001d63a:	f240 8168 	bls.w	9001d90e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001d63e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001d642:	f04f 0e01 	mov.w	lr, #1
9001d646:	9a02      	ldr	r2, [sp, #8]
9001d648:	9808      	ldr	r0, [sp, #32]
9001d64a:	fbb5 f3f3 	udiv	r3, r5, r3
9001d64e:	1ad3      	subs	r3, r2, r3
9001d650:	7800      	ldrb	r0, [r0, #0]
9001d652:	b29b      	uxth	r3, r3
9001d654:	9010      	str	r0, [sp, #64]	@ 0x40
9001d656:	3001      	adds	r0, #1
9001d658:	9314      	str	r3, [sp, #80]	@ 0x50
9001d65a:	9b08      	ldr	r3, [sp, #32]
9001d65c:	9007      	str	r0, [sp, #28]
9001d65e:	785a      	ldrb	r2, [r3, #1]
9001d660:	789b      	ldrb	r3, [r3, #2]
9001d662:	021b      	lsls	r3, r3, #8
9001d664:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001d668:	9a08      	ldr	r2, [sp, #32]
9001d66a:	78d2      	ldrb	r2, [r2, #3]
9001d66c:	4313      	orrs	r3, r2
9001d66e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d670:	441a      	add	r2, r3
9001d672:	1c50      	adds	r0, r2, #1
9001d674:	7852      	ldrb	r2, [r2, #1]
9001d676:	9005      	str	r0, [sp, #20]
9001d678:	0212      	lsls	r2, r2, #8
9001d67a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d67c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001d680:	5cc3      	ldrb	r3, [r0, r3]
9001d682:	431a      	orrs	r2, r3
9001d684:	b293      	uxth	r3, r2
9001d686:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001d68a:	930b      	str	r3, [sp, #44]	@ 0x2c
9001d68c:	2300      	movs	r3, #0
9001d68e:	9309      	str	r3, [sp, #36]	@ 0x24
9001d690:	2301      	movs	r3, #1
9001d692:	9301      	str	r3, [sp, #4]
9001d694:	9304      	str	r3, [sp, #16]
9001d696:	2300      	movs	r3, #0
9001d698:	9303      	str	r3, [sp, #12]
9001d69a:	2d00      	cmp	r5, #0
9001d69c:	d07d      	beq.n	9001d79a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001d69e:	45ae      	cmp	lr, r5
9001d6a0:	d26c      	bcs.n	9001d77c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001d6a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d6a4:	eba5 050e 	sub.w	r5, r5, lr
9001d6a8:	460c      	mov	r4, r1
9001d6aa:	4543      	cmp	r3, r8
9001d6ac:	b2ad      	uxth	r5, r5
9001d6ae:	d802      	bhi.n	9001d6b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001d6b0:	e071      	b.n	9001d796 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001d6b2:	2b00      	cmp	r3, #0
9001d6b4:	d15d      	bne.n	9001d772 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001d6b6:	9b05      	ldr	r3, [sp, #20]
9001d6b8:	9a04      	ldr	r2, [sp, #16]
9001d6ba:	785b      	ldrb	r3, [r3, #1]
9001d6bc:	f1c2 0207 	rsb	r2, r2, #7
9001d6c0:	9904      	ldr	r1, [sp, #16]
9001d6c2:	4093      	lsls	r3, r2
9001d6c4:	005b      	lsls	r3, r3, #1
9001d6c6:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001d6ca:	9b05      	ldr	r3, [sp, #20]
9001d6cc:	781b      	ldrb	r3, [r3, #0]
9001d6ce:	410b      	asrs	r3, r1
9001d6d0:	3101      	adds	r1, #1
9001d6d2:	b2c9      	uxtb	r1, r1
9001d6d4:	b2db      	uxtb	r3, r3
9001d6d6:	2908      	cmp	r1, #8
9001d6d8:	9104      	str	r1, [sp, #16]
9001d6da:	9905      	ldr	r1, [sp, #20]
9001d6dc:	ea43 0302 	orr.w	r3, r3, r2
9001d6e0:	bf0c      	ite	eq
9001d6e2:	3102      	addeq	r1, #2
9001d6e4:	3101      	addne	r1, #1
9001d6e6:	b29a      	uxth	r2, r3
9001d6e8:	bf05      	ittet	eq
9001d6ea:	9105      	streq	r1, [sp, #20]
9001d6ec:	2100      	moveq	r1, #0
9001d6ee:	9105      	strne	r1, [sp, #20]
9001d6f0:	9104      	streq	r1, [sp, #16]
9001d6f2:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001d6f4:	4291      	cmp	r1, r2
9001d6f6:	d30a      	bcc.n	9001d70e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001d6f8:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001d6fc:	2301      	movs	r3, #1
9001d6fe:	9907      	ldr	r1, [sp, #28]
9001d700:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001d704:	d30f      	bcc.n	9001d726 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001d706:	2100      	movs	r1, #0
9001d708:	9301      	str	r3, [sp, #4]
9001d70a:	9103      	str	r1, [sp, #12]
9001d70c:	e032      	b.n	9001d774 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001d70e:	9b07      	ldr	r3, [sp, #28]
9001d710:	429a      	cmp	r2, r3
9001d712:	d318      	bcc.n	9001d746 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001d714:	9b01      	ldr	r3, [sp, #4]
9001d716:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001d71a:	445b      	add	r3, fp
9001d71c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001d720:	9b01      	ldr	r3, [sp, #4]
9001d722:	3301      	adds	r3, #1
9001d724:	b29b      	uxth	r3, r3
9001d726:	9907      	ldr	r1, [sp, #28]
9001d728:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001d72c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d730:	7108      	strb	r0, [r1, #4]
9001d732:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001d734:	80c8      	strh	r0, [r1, #6]
9001d736:	9801      	ldr	r0, [sp, #4]
9001d738:	3001      	adds	r0, #1
9001d73a:	7148      	strb	r0, [r1, #5]
9001d73c:	9907      	ldr	r1, [sp, #28]
9001d73e:	3101      	adds	r1, #1
9001d740:	b289      	uxth	r1, r1
9001d742:	9107      	str	r1, [sp, #28]
9001d744:	e7df      	b.n	9001d706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001d746:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001d74a:	4611      	mov	r1, r2
9001d74c:	795b      	ldrb	r3, [r3, #5]
9001d74e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001d752:	4458      	add	r0, fp
9001d754:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001d756:	4406      	add	r6, r0
9001d758:	2e00      	cmp	r6, #0
9001d75a:	dd06      	ble.n	9001d76a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d75c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d760:	790e      	ldrb	r6, [r1, #4]
9001d762:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001d766:	88c9      	ldrh	r1, [r1, #6]
9001d768:	e7f4      	b.n	9001d754 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001d76a:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001d76e:	b29b      	uxth	r3, r3
9001d770:	e7c5      	b.n	9001d6fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001d772:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001d774:	4621      	mov	r1, r4
9001d776:	920b      	str	r2, [sp, #44]	@ 0x2c
9001d778:	469e      	mov	lr, r3
9001d77a:	e78e      	b.n	9001d69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001d77c:	9a03      	ldr	r2, [sp, #12]
9001d77e:	ebae 0305 	sub.w	r3, lr, r5
9001d782:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d786:	442a      	add	r2, r5
9001d788:	b29b      	uxth	r3, r3
9001d78a:	b292      	uxth	r2, r2
9001d78c:	9203      	str	r2, [sp, #12]
9001d78e:	2500      	movs	r5, #0
9001d790:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001d792:	4542      	cmp	r2, r8
9001d794:	d88d      	bhi.n	9001d6b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001d796:	4621      	mov	r1, r4
9001d798:	e74d      	b.n	9001d636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001d79a:	458e      	cmp	lr, r1
9001d79c:	f04f 0900 	mov.w	r9, #0
9001d7a0:	bf2b      	itete	cs
9001d7a2:	ebae 0301 	subcs.w	r3, lr, r1
9001d7a6:	eba1 040e 	subcc.w	r4, r1, lr
9001d7aa:	462c      	movcs	r4, r5
9001d7ac:	462b      	movcc	r3, r5
9001d7ae:	bf27      	ittee	cs
9001d7b0:	b29b      	uxthcs	r3, r3
9001d7b2:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001d7b4:	b2a4      	uxthcc	r4, r4
9001d7b6:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001d7ba:	9a03      	ldr	r2, [sp, #12]
9001d7bc:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001d7be:	444a      	add	r2, r9
9001d7c0:	4548      	cmp	r0, r9
9001d7c2:	b292      	uxth	r2, r2
9001d7c4:	d074      	beq.n	9001d8b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001d7c6:	2004      	movs	r0, #4
9001d7c8:	445a      	add	r2, fp
9001d7ca:	4605      	mov	r5, r0
9001d7cc:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001d7d0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d7d2:	fb15 0202 	smlabb	r2, r5, r2, r0
9001d7d6:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d7d8:	5880      	ldr	r0, [r0, r2]
9001d7da:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001d7de:	d014      	beq.n	9001d80a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d7e0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001d7e4:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001d7e8:	d112      	bne.n	9001d810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d7ea:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001d7ec:	2aff      	cmp	r2, #255	@ 0xff
9001d7ee:	d10f      	bne.n	9001d810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d7f0:	0942      	lsrs	r2, r0, #5
9001d7f2:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001d7f6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d7fa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d7fe:	f025 0507 	bic.w	r5, r5, #7
9001d802:	4315      	orrs	r5, r2
9001d804:	4305      	orrs	r5, r0
9001d806:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001d80a:	f109 0901 	add.w	r9, r9, #1
9001d80e:	e7d4      	b.n	9001d7ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001d810:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001d814:	b2ed      	uxtb	r5, r5
9001d816:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d81a:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d81e:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001d822:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d826:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001d82a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d82e:	9215      	str	r2, [sp, #84]	@ 0x54
9001d830:	fa5f fc8c 	uxtb.w	ip, ip
9001d834:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001d836:	b2c0      	uxtb	r0, r0
9001d838:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001d83c:	fb02 fa0a 	mul.w	sl, r2, sl
9001d840:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001d844:	f10a 0201 	add.w	r2, sl, #1
9001d848:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001d84c:	1212      	asrs	r2, r2, #8
9001d84e:	fa1f fa82 	uxth.w	sl, r2
9001d852:	43d2      	mvns	r2, r2
9001d854:	fb16 f60a 	smulbb	r6, r6, sl
9001d858:	b2d2      	uxtb	r2, r2
9001d85a:	fb10 f00a 	smulbb	r0, r0, sl
9001d85e:	fb07 6702 	mla	r7, r7, r2, r6
9001d862:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001d864:	fb0c 0002 	mla	r0, ip, r2, r0
9001d868:	fb15 f50a 	smulbb	r5, r5, sl
9001d86c:	b2bf      	uxth	r7, r7
9001d86e:	b280      	uxth	r0, r0
9001d870:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001d874:	fb06 5602 	mla	r6, r6, r2, r5
9001d878:	1c7a      	adds	r2, r7, #1
9001d87a:	1c45      	adds	r5, r0, #1
9001d87c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d880:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d884:	b2b6      	uxth	r6, r6
9001d886:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d88a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d88e:	432f      	orrs	r7, r5
9001d890:	1c75      	adds	r5, r6, #1
9001d892:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d896:	096d      	lsrs	r5, r5, #5
9001d898:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d89c:	432f      	orrs	r7, r5
9001d89e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001d8a2:	e7b2      	b.n	9001d80a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d8a4:	24021bdc 	.word	0x24021bdc
9001d8a8:	24021bd6 	.word	0x24021bd6
9001d8ac:	fffff7fb 	.word	0xfffff7fb
9001d8b0:	9203      	str	r2, [sp, #12]
9001d8b2:	458e      	cmp	lr, r1
9001d8b4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001d8b6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d8ba:	f4ff af68 	bcc.w	9001d78e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001d8be:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001d8c0:	9906      	ldr	r1, [sp, #24]
9001d8c2:	8812      	ldrh	r2, [r2, #0]
9001d8c4:	1a52      	subs	r2, r2, r1
9001d8c6:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001d8c8:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d8cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001d8ce:	3201      	adds	r2, #1
9001d8d0:	428a      	cmp	r2, r1
9001d8d2:	9209      	str	r2, [sp, #36]	@ 0x24
9001d8d4:	d111      	bne.n	9001d8fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001d8d6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001d8da:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001d8de:	9b06      	ldr	r3, [sp, #24]
9001d8e0:	eba5 0509 	sub.w	r5, r5, r9
9001d8e4:	b2ad      	uxth	r5, r5
9001d8e6:	2d00      	cmp	r5, #0
9001d8e8:	bf08      	it	eq
9001d8ea:	4619      	moveq	r1, r3
9001d8ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d8ee:	bf18      	it	ne
9001d8f0:	2100      	movne	r1, #0
9001d8f2:	3301      	adds	r3, #1
9001d8f4:	b289      	uxth	r1, r1
9001d8f6:	930d      	str	r3, [sp, #52]	@ 0x34
9001d8f8:	e694      	b.n	9001d624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001d8fa:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d8fe:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001d902:	1b2d      	subs	r5, r5, r4
9001d904:	b2ad      	uxth	r5, r5
9001d906:	2d00      	cmp	r5, #0
9001d908:	bf18      	it	ne
9001d90a:	2400      	movne	r4, #0
9001d90c:	e740      	b.n	9001d790 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001d90e:	4b04      	ldr	r3, [pc, #16]	@ (9001d920 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001d910:	6818      	ldr	r0, [r3, #0]
9001d912:	6803      	ldr	r3, [r0, #0]
9001d914:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d916:	4798      	blx	r3
9001d918:	b01d      	add	sp, #116	@ 0x74
9001d91a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d91e:	bf00      	nop
9001d920:	24021bdc 	.word	0x24021bdc

9001d924 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001d924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d928:	b09f      	sub	sp, #124	@ 0x7c
9001d92a:	461d      	mov	r5, r3
9001d92c:	4604      	mov	r4, r0
9001d92e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001d930:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001d934:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001d938:	920a      	str	r2, [sp, #40]	@ 0x28
9001d93a:	2a00      	cmp	r2, #0
9001d93c:	f000 81fe 	beq.w	9001dd3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001d940:	6828      	ldr	r0, [r5, #0]
9001d942:	aa1a      	add	r2, sp, #104	@ 0x68
9001d944:	6869      	ldr	r1, [r5, #4]
9001d946:	c203      	stmia	r2!, {r0, r1}
9001d948:	6818      	ldr	r0, [r3, #0]
9001d94a:	aa1c      	add	r2, sp, #112	@ 0x70
9001d94c:	6859      	ldr	r1, [r3, #4]
9001d94e:	c203      	stmia	r2!, {r0, r1}
9001d950:	a81a      	add	r0, sp, #104	@ 0x68
9001d952:	f7f7 fe11 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d956:	4629      	mov	r1, r5
9001d958:	a81c      	add	r0, sp, #112	@ 0x70
9001d95a:	f7f7 fe35 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d95e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001d962:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001d966:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001d96a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001d96e:	bfdb      	ittet	le
9001d970:	b29a      	uxthle	r2, r3
9001d972:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d976:	2201      	movgt	r2, #1
9001d978:	fb91 f2f2 	sdivle	r2, r1, r2
9001d97c:	9201      	str	r2, [sp, #4]
9001d97e:	9801      	ldr	r0, [sp, #4]
9001d980:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001d984:	9901      	ldr	r1, [sp, #4]
9001d986:	fb92 f0f0 	sdiv	r0, r2, r0
9001d98a:	b280      	uxth	r0, r0
9001d98c:	440e      	add	r6, r1
9001d98e:	9010      	str	r0, [sp, #64]	@ 0x40
9001d990:	3e01      	subs	r6, #1
9001d992:	9801      	ldr	r0, [sp, #4]
9001d994:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001d996:	fb05 2510 	mls	r5, r5, r0, r2
9001d99a:	fb96 f6f1 	sdiv	r6, r6, r1
9001d99e:	fb15 f503 	smulbb	r5, r5, r3
9001d9a2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001d9a6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001d9aa:	3601      	adds	r6, #1
9001d9ac:	440d      	add	r5, r1
9001d9ae:	4419      	add	r1, r3
9001d9b0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001d9b4:	b2b6      	uxth	r6, r6
9001d9b6:	441a      	add	r2, r3
9001d9b8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001d9bc:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001d9c0:	b2ad      	uxth	r5, r5
9001d9c2:	9304      	str	r3, [sp, #16]
9001d9c4:	4b96      	ldr	r3, [pc, #600]	@ (9001dc20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001d9c6:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001d9ca:	6818      	ldr	r0, [r3, #0]
9001d9cc:	6803      	ldr	r3, [r0, #0]
9001d9ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d9d0:	4798      	blx	r3
9001d9d2:	4b94      	ldr	r3, [pc, #592]	@ (9001dc24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001d9d4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001d9d8:	2d00      	cmp	r5, #0
9001d9da:	881a      	ldrh	r2, [r3, #0]
9001d9dc:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001d9e0:	fb02 f707 	mul.w	r7, r2, r7
9001d9e4:	fb02 c101 	mla	r1, r2, r1, ip
9001d9e8:	9318      	str	r3, [sp, #96]	@ 0x60
9001d9ea:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001d9ee:	4b8e      	ldr	r3, [pc, #568]	@ (9001dc28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001d9f0:	bf18      	it	ne
9001d9f2:	2100      	movne	r1, #0
9001d9f4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001d9f8:	eba3 0304 	sub.w	r3, r3, r4
9001d9fc:	920b      	str	r2, [sp, #44]	@ 0x2c
9001d9fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001da00:	9319      	str	r3, [sp, #100]	@ 0x64
9001da02:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001da06:	f106 0204 	add.w	r2, r6, #4
9001da0a:	9206      	str	r2, [sp, #24]
9001da0c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001da0e:	ea6f 0202 	mvn.w	r2, r2
9001da12:	b2d2      	uxtb	r2, r2
9001da14:	9215      	str	r2, [sp, #84]	@ 0x54
9001da16:	9a04      	ldr	r2, [sp, #16]
9001da18:	bf08      	it	eq
9001da1a:	4611      	moveq	r1, r2
9001da1c:	2200      	movs	r2, #0
9001da1e:	b289      	uxth	r1, r1
9001da20:	920d      	str	r2, [sp, #52]	@ 0x34
9001da22:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001da24:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001da26:	fa12 f383 	uxtah	r3, r2, r3
9001da2a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001da2c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001da30:	3304      	adds	r3, #4
9001da32:	9307      	str	r3, [sp, #28]
9001da34:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001da36:	455b      	cmp	r3, fp
9001da38:	f240 817b 	bls.w	9001dd32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001da3c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001da40:	f04f 0801 	mov.w	r8, #1
9001da44:	9a01      	ldr	r2, [sp, #4]
9001da46:	9807      	ldr	r0, [sp, #28]
9001da48:	46c4      	mov	ip, r8
9001da4a:	f8cd 8008 	str.w	r8, [sp, #8]
9001da4e:	7800      	ldrb	r0, [r0, #0]
9001da50:	fbb5 f3f3 	udiv	r3, r5, r3
9001da54:	1ad3      	subs	r3, r2, r3
9001da56:	9011      	str	r0, [sp, #68]	@ 0x44
9001da58:	3001      	adds	r0, #1
9001da5a:	b29b      	uxth	r3, r3
9001da5c:	9005      	str	r0, [sp, #20]
9001da5e:	9316      	str	r3, [sp, #88]	@ 0x58
9001da60:	9b07      	ldr	r3, [sp, #28]
9001da62:	785a      	ldrb	r2, [r3, #1]
9001da64:	789b      	ldrb	r3, [r3, #2]
9001da66:	021b      	lsls	r3, r3, #8
9001da68:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001da6c:	9a07      	ldr	r2, [sp, #28]
9001da6e:	78d2      	ldrb	r2, [r2, #3]
9001da70:	4313      	orrs	r3, r2
9001da72:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001da74:	441a      	add	r2, r3
9001da76:	1c50      	adds	r0, r2, #1
9001da78:	7852      	ldrb	r2, [r2, #1]
9001da7a:	9003      	str	r0, [sp, #12]
9001da7c:	0212      	lsls	r2, r2, #8
9001da7e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001da80:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001da84:	5cc3      	ldrb	r3, [r0, r3]
9001da86:	431a      	orrs	r2, r3
9001da88:	b293      	uxth	r3, r2
9001da8a:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001da8e:	930c      	str	r3, [sp, #48]	@ 0x30
9001da90:	2300      	movs	r3, #0
9001da92:	9308      	str	r3, [sp, #32]
9001da94:	461a      	mov	r2, r3
9001da96:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001da9a:	930e      	str	r3, [sp, #56]	@ 0x38
9001da9c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001daa0:	930f      	str	r3, [sp, #60]	@ 0x3c
9001daa2:	2d00      	cmp	r5, #0
9001daa4:	d07d      	beq.n	9001dba2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001daa6:	45ac      	cmp	ip, r5
9001daa8:	d26d      	bcs.n	9001db86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001daaa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001daac:	eba5 050c 	sub.w	r5, r5, ip
9001dab0:	4608      	mov	r0, r1
9001dab2:	455b      	cmp	r3, fp
9001dab4:	b2ad      	uxth	r5, r5
9001dab6:	d802      	bhi.n	9001dabe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001dab8:	e071      	b.n	9001db9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001daba:	2b00      	cmp	r3, #0
9001dabc:	d15d      	bne.n	9001db7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001dabe:	9b03      	ldr	r3, [sp, #12]
9001dac0:	9a02      	ldr	r2, [sp, #8]
9001dac2:	785b      	ldrb	r3, [r3, #1]
9001dac4:	f1c2 0207 	rsb	r2, r2, #7
9001dac8:	9902      	ldr	r1, [sp, #8]
9001daca:	4093      	lsls	r3, r2
9001dacc:	005b      	lsls	r3, r3, #1
9001dace:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001dad2:	9b03      	ldr	r3, [sp, #12]
9001dad4:	781b      	ldrb	r3, [r3, #0]
9001dad6:	410b      	asrs	r3, r1
9001dad8:	3101      	adds	r1, #1
9001dada:	b2c9      	uxtb	r1, r1
9001dadc:	b2db      	uxtb	r3, r3
9001dade:	2908      	cmp	r1, #8
9001dae0:	9102      	str	r1, [sp, #8]
9001dae2:	9903      	ldr	r1, [sp, #12]
9001dae4:	ea43 0302 	orr.w	r3, r3, r2
9001dae8:	bf0c      	ite	eq
9001daea:	3102      	addeq	r1, #2
9001daec:	3101      	addne	r1, #1
9001daee:	b29a      	uxth	r2, r3
9001daf0:	bf05      	ittet	eq
9001daf2:	9103      	streq	r1, [sp, #12]
9001daf4:	2100      	moveq	r1, #0
9001daf6:	9103      	strne	r1, [sp, #12]
9001daf8:	9102      	streq	r1, [sp, #8]
9001dafa:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001dafc:	4291      	cmp	r1, r2
9001dafe:	d30a      	bcc.n	9001db16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001db00:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001db04:	2301      	movs	r3, #1
9001db06:	9905      	ldr	r1, [sp, #20]
9001db08:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001db0c:	d30f      	bcc.n	9001db2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001db0e:	2100      	movs	r1, #0
9001db10:	4698      	mov	r8, r3
9001db12:	9100      	str	r1, [sp, #0]
9001db14:	e032      	b.n	9001db7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001db16:	9b05      	ldr	r3, [sp, #20]
9001db18:	429a      	cmp	r2, r3
9001db1a:	d318      	bcc.n	9001db4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001db1c:	eb04 0308 	add.w	r3, r4, r8
9001db20:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001db24:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001db28:	f108 0301 	add.w	r3, r8, #1
9001db2c:	b29b      	uxth	r3, r3
9001db2e:	9905      	ldr	r1, [sp, #20]
9001db30:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001db34:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001db38:	710e      	strb	r6, [r1, #4]
9001db3a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001db3c:	80ce      	strh	r6, [r1, #6]
9001db3e:	f108 0601 	add.w	r6, r8, #1
9001db42:	714e      	strb	r6, [r1, #5]
9001db44:	9905      	ldr	r1, [sp, #20]
9001db46:	3101      	adds	r1, #1
9001db48:	b289      	uxth	r1, r1
9001db4a:	9105      	str	r1, [sp, #20]
9001db4c:	e7df      	b.n	9001db0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001db4e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001db52:	4611      	mov	r1, r2
9001db54:	795b      	ldrb	r3, [r3, #5]
9001db56:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001db5a:	4426      	add	r6, r4
9001db5c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001db5e:	4437      	add	r7, r6
9001db60:	2f00      	cmp	r7, #0
9001db62:	dd06      	ble.n	9001db72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001db64:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001db68:	790f      	ldrb	r7, [r1, #4]
9001db6a:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001db6e:	88c9      	ldrh	r1, [r1, #6]
9001db70:	e7f4      	b.n	9001db5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001db72:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001db76:	b29b      	uxth	r3, r3
9001db78:	e7c5      	b.n	9001db06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001db7a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001db7c:	920c      	str	r2, [sp, #48]	@ 0x30
9001db7e:	4601      	mov	r1, r0
9001db80:	9a00      	ldr	r2, [sp, #0]
9001db82:	469c      	mov	ip, r3
9001db84:	e78d      	b.n	9001daa2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001db86:	ebac 0305 	sub.w	r3, ip, r5
9001db8a:	1957      	adds	r7, r2, r5
9001db8c:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001db90:	b2ba      	uxth	r2, r7
9001db92:	b29b      	uxth	r3, r3
9001db94:	9200      	str	r2, [sp, #0]
9001db96:	2500      	movs	r5, #0
9001db98:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001db9a:	455a      	cmp	r2, fp
9001db9c:	d88d      	bhi.n	9001daba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001db9e:	4601      	mov	r1, r0
9001dba0:	e748      	b.n	9001da34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001dba2:	458c      	cmp	ip, r1
9001dba4:	bf27      	ittee	cs
9001dba6:	ebac 0301 	subcs.w	r3, ip, r1
9001dbaa:	4628      	movcs	r0, r5
9001dbac:	eba1 000c 	subcc.w	r0, r1, ip
9001dbb0:	462b      	movcc	r3, r5
9001dbb2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001dbb4:	bf27      	ittee	cs
9001dbb6:	b29b      	uxthcs	r3, r3
9001dbb8:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001dbba:	b280      	uxthcc	r0, r0
9001dbbc:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001dbc0:	2dff      	cmp	r5, #255	@ 0xff
9001dbc2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001dbc4:	eb02 0705 	add.w	r7, r2, r5
9001dbc8:	b2bd      	uxth	r5, r7
9001dbca:	9500      	str	r5, [sp, #0]
9001dbcc:	d12e      	bne.n	9001dc2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001dbce:	465e      	mov	r6, fp
9001dbd0:	9d00      	ldr	r5, [sp, #0]
9001dbd2:	42aa      	cmp	r2, r5
9001dbd4:	f040 8083 	bne.w	9001dcde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001dbd8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001dbda:	458c      	cmp	ip, r1
9001dbdc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001dbe0:	d3d9      	bcc.n	9001db96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001dbe2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001dbe4:	9904      	ldr	r1, [sp, #16]
9001dbe6:	8812      	ldrh	r2, [r2, #0]
9001dbe8:	1a52      	subs	r2, r2, r1
9001dbea:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001dbec:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001dbf0:	9a08      	ldr	r2, [sp, #32]
9001dbf2:	3201      	adds	r2, #1
9001dbf4:	428a      	cmp	r2, r1
9001dbf6:	9208      	str	r2, [sp, #32]
9001dbf8:	f040 8091 	bne.w	9001dd1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001dbfc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001dc00:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001dc04:	9b04      	ldr	r3, [sp, #16]
9001dc06:	eba5 050c 	sub.w	r5, r5, ip
9001dc0a:	b2ad      	uxth	r5, r5
9001dc0c:	2d00      	cmp	r5, #0
9001dc0e:	bf08      	it	eq
9001dc10:	4619      	moveq	r1, r3
9001dc12:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dc14:	bf18      	it	ne
9001dc16:	2100      	movne	r1, #0
9001dc18:	3301      	adds	r3, #1
9001dc1a:	b289      	uxth	r1, r1
9001dc1c:	930d      	str	r3, [sp, #52]	@ 0x34
9001dc1e:	e700      	b.n	9001da22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001dc20:	24021bdc 	.word	0x24021bdc
9001dc24:	24021bd6 	.word	0x24021bd6
9001dc28:	fffff7fb 	.word	0xfffff7fb
9001dc2c:	46d9      	mov	r9, fp
9001dc2e:	9d00      	ldr	r5, [sp, #0]
9001dc30:	42aa      	cmp	r2, r5
9001dc32:	d0d1      	beq.n	9001dbd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001dc34:	1c55      	adds	r5, r2, #1
9001dc36:	4422      	add	r2, r4
9001dc38:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001dc3c:	9a06      	ldr	r2, [sp, #24]
9001dc3e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001dc42:	9517      	str	r5, [sp, #92]	@ 0x5c
9001dc44:	4472      	add	r2, lr
9001dc46:	9212      	str	r2, [sp, #72]	@ 0x48
9001dc48:	f8b9 2000 	ldrh.w	r2, [r9]
9001dc4c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001dc4e:	1216      	asrs	r6, r2, #8
9001dc50:	f897 a002 	ldrb.w	sl, [r7, #2]
9001dc54:	10d5      	asrs	r5, r2, #3
9001dc56:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001dc58:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001dc5c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001dc60:	00d2      	lsls	r2, r2, #3
9001dc62:	fb1a fa07 	smulbb	sl, sl, r7
9001dc66:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001dc6a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001dc6c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001dc70:	b2d2      	uxtb	r2, r2
9001dc72:	fb06 a607 	mla	r6, r6, r7, sl
9001dc76:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001dc78:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001dc7c:	f897 a001 	ldrb.w	sl, [r7, #1]
9001dc80:	b2b6      	uxth	r6, r6
9001dc82:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001dc84:	fb1a fa07 	smulbb	sl, sl, r7
9001dc88:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001dc8a:	fb05 a507 	mla	r5, r5, r7, sl
9001dc8e:	9f06      	ldr	r7, [sp, #24]
9001dc90:	f106 0a01 	add.w	sl, r6, #1
9001dc94:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001dc98:	b2ad      	uxth	r5, r5
9001dc9a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001dc9c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001dca0:	f105 0a01 	add.w	sl, r5, #1
9001dca4:	fb1e fe07 	smulbb	lr, lr, r7
9001dca8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001dcaa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001dcae:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001dcb2:	fb02 e207 	mla	r2, r2, r7, lr
9001dcb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dcba:	b292      	uxth	r2, r2
9001dcbc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001dcc0:	f102 0e01 	add.w	lr, r2, #1
9001dcc4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001dcc8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001dccc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001dcd0:	ea4e 0606 	orr.w	r6, lr, r6
9001dcd4:	ea46 060a 	orr.w	r6, r6, sl
9001dcd8:	f829 6b02 	strh.w	r6, [r9], #2
9001dcdc:	e7a7      	b.n	9001dc2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001dcde:	f102 0e01 	add.w	lr, r2, #1
9001dce2:	4422      	add	r2, r4
9001dce4:	9f06      	ldr	r7, [sp, #24]
9001dce6:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001dcea:	9a06      	ldr	r2, [sp, #24]
9001dcec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001dcf0:	eb02 0a05 	add.w	sl, r2, r5
9001dcf4:	4a13      	ldr	r2, [pc, #76]	@ (9001dd44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001dcf6:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001dcfa:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001dcfe:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001dd02:	00d2      	lsls	r2, r2, #3
9001dd04:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001dd08:	ea49 0202 	orr.w	r2, r9, r2
9001dd0c:	f817 9005 	ldrb.w	r9, [r7, r5]
9001dd10:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001dd14:	f826 2b02 	strh.w	r2, [r6], #2
9001dd18:	fa1f f28e 	uxth.w	r2, lr
9001dd1c:	e758      	b.n	9001dbd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001dd1e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001dd22:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001dd26:	1a2d      	subs	r5, r5, r0
9001dd28:	b2ad      	uxth	r5, r5
9001dd2a:	2d00      	cmp	r5, #0
9001dd2c:	bf18      	it	ne
9001dd2e:	2000      	movne	r0, #0
9001dd30:	e732      	b.n	9001db98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001dd32:	4b05      	ldr	r3, [pc, #20]	@ (9001dd48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001dd34:	6818      	ldr	r0, [r3, #0]
9001dd36:	6803      	ldr	r3, [r0, #0]
9001dd38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001dd3a:	4798      	blx	r3
9001dd3c:	b01f      	add	sp, #124	@ 0x7c
9001dd3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dd42:	bf00      	nop
9001dd44:	fffff800 	.word	0xfffff800
9001dd48:	24021bdc 	.word	0x24021bdc

9001dd4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001dd4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dd50:	b091      	sub	sp, #68	@ 0x44
9001dd52:	469b      	mov	fp, r3
9001dd54:	4616      	mov	r6, r2
9001dd56:	f9b3 2000 	ldrsh.w	r2, [r3]
9001dd5a:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001dd5e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001dd62:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001dd66:	4604      	mov	r4, r0
9001dd68:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001dd6c:	4640      	mov	r0, r8
9001dd6e:	460d      	mov	r5, r1
9001dd70:	4659      	mov	r1, fp
9001dd72:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001dd76:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001dd7a:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001dd7e:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001dd82:	f7f2 f921 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001dd86:	4631      	mov	r1, r6
9001dd88:	4640      	mov	r0, r8
9001dd8a:	f7f2 f91d 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001dd8e:	4b74      	ldr	r3, [pc, #464]	@ (9001df60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001dd90:	8818      	ldrh	r0, [r3, #0]
9001dd92:	4b74      	ldr	r3, [pc, #464]	@ (9001df64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001dd94:	b202      	sxth	r2, r0
9001dd96:	8819      	ldrh	r1, [r3, #0]
9001dd98:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001dd9c:	b20e      	sxth	r6, r1
9001dd9e:	2b00      	cmp	r3, #0
9001dda0:	da07      	bge.n	9001ddb2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001dda2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001dda6:	4463      	add	r3, ip
9001dda8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001ddac:	2300      	movs	r3, #0
9001ddae:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001ddb2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001ddb6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001ddba:	1ad2      	subs	r2, r2, r3
9001ddbc:	4594      	cmp	ip, r2
9001ddbe:	bfc4      	itt	gt
9001ddc0:	1ac2      	subgt	r2, r0, r3
9001ddc2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001ddc6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001ddca:	2a00      	cmp	r2, #0
9001ddcc:	da07      	bge.n	9001ddde <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001ddce:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001ddd2:	4462      	add	r2, ip
9001ddd4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001ddd8:	2200      	movs	r2, #0
9001ddda:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001ddde:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001dde2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001dde6:	eba6 060a 	sub.w	r6, r6, sl
9001ddea:	42b2      	cmp	r2, r6
9001ddec:	bfc4      	itt	gt
9001ddee:	eba1 020a 	subgt.w	r2, r1, sl
9001ddf2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001ddf6:	4a5c      	ldr	r2, [pc, #368]	@ (9001df68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001ddf8:	7812      	ldrb	r2, [r2, #0]
9001ddfa:	b9a2      	cbnz	r2, 9001de26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001ddfc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001de00:	4286      	cmp	r6, r0
9001de02:	4640      	mov	r0, r8
9001de04:	9303      	str	r3, [sp, #12]
9001de06:	bf14      	ite	ne
9001de08:	2600      	movne	r6, #0
9001de0a:	2601      	moveq	r6, #1
9001de0c:	f7f2 f91f 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001de10:	9b03      	ldr	r3, [sp, #12]
9001de12:	b160      	cbz	r0, 9001de2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001de14:	2300      	movs	r3, #0
9001de16:	8023      	strh	r3, [r4, #0]
9001de18:	8063      	strh	r3, [r4, #2]
9001de1a:	80a3      	strh	r3, [r4, #4]
9001de1c:	4620      	mov	r0, r4
9001de1e:	80e3      	strh	r3, [r4, #6]
9001de20:	b011      	add	sp, #68	@ 0x44
9001de22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001de26:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001de2a:	428e      	cmp	r6, r1
9001de2c:	e7e9      	b.n	9001de02 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001de2e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001de32:	a90e      	add	r1, sp, #56	@ 0x38
9001de34:	900e      	str	r0, [sp, #56]	@ 0x38
9001de36:	a80c      	add	r0, sp, #48	@ 0x30
9001de38:	9205      	str	r2, [sp, #20]
9001de3a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001de3e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001de42:	9206      	str	r2, [sp, #24]
9001de44:	f8bb 2000 	ldrh.w	r2, [fp]
9001de48:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001de4c:	1a9b      	subs	r3, r3, r2
9001de4e:	b21b      	sxth	r3, r3
9001de50:	9303      	str	r3, [sp, #12]
9001de52:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001de56:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001df70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001de5a:	ebaa 0a03 	sub.w	sl, sl, r3
9001de5e:	fa0f f38a 	sxth.w	r3, sl
9001de62:	9304      	str	r3, [sp, #16]
9001de64:	9b03      	ldr	r3, [sp, #12]
9001de66:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001de6a:	9b04      	ldr	r3, [sp, #16]
9001de6c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001de70:	9b05      	ldr	r3, [sp, #20]
9001de72:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001de76:	9b06      	ldr	r3, [sp, #24]
9001de78:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001de7c:	f7f7 fba4 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001de80:	4640      	mov	r0, r8
9001de82:	f7f7 fb79 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de86:	a80e      	add	r0, sp, #56	@ 0x38
9001de88:	f7f7 fb76 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de8c:	4b37      	ldr	r3, [pc, #220]	@ (9001df6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001de8e:	4628      	mov	r0, r5
9001de90:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001de94:	881b      	ldrh	r3, [r3, #0]
9001de96:	9307      	str	r3, [sp, #28]
9001de98:	682b      	ldr	r3, [r5, #0]
9001de9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001de9c:	4798      	blx	r3
9001de9e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001dea2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001dea6:	4681      	mov	r9, r0
9001dea8:	f8db 0000 	ldr.w	r0, [fp]
9001deac:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001deb0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001deb2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001deb6:	6803      	ldr	r3, [r0, #0]
9001deb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001deba:	4798      	blx	r3
9001debc:	4607      	mov	r7, r0
9001debe:	f8db 0000 	ldr.w	r0, [fp]
9001dec2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001dec6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001deca:	6803      	ldr	r3, [r0, #0]
9001decc:	9109      	str	r1, [sp, #36]	@ 0x24
9001dece:	9208      	str	r2, [sp, #32]
9001ded0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001ded2:	4798      	blx	r3
9001ded4:	f010 0f01 	tst.w	r0, #1
9001ded8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001dedc:	d012      	beq.n	9001df04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001dede:	f8db 0000 	ldr.w	r0, [fp]
9001dee2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001dee6:	6803      	ldr	r3, [r0, #0]
9001dee8:	9200      	str	r2, [sp, #0]
9001deea:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001deec:	462b      	mov	r3, r5
9001deee:	e898 0006 	ldmia.w	r8, {r1, r2}
9001def2:	47b0      	blx	r6
9001def4:	9b03      	ldr	r3, [sp, #12]
9001def6:	8023      	strh	r3, [r4, #0]
9001def8:	9b04      	ldr	r3, [sp, #16]
9001defa:	8063      	strh	r3, [r4, #2]
9001defc:	9b05      	ldr	r3, [sp, #20]
9001defe:	80a3      	strh	r3, [r4, #4]
9001df00:	9b06      	ldr	r3, [sp, #24]
9001df02:	e78b      	b.n	9001de1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001df04:	fb09 f202 	mul.w	r2, r9, r2
9001df08:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001df0c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001df10:	440f      	add	r7, r1
9001df12:	b166      	cbz	r6, 9001df2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001df14:	9a07      	ldr	r2, [sp, #28]
9001df16:	4592      	cmp	sl, r2
9001df18:	d109      	bne.n	9001df2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001df1a:	f8db 0000 	ldr.w	r0, [fp]
9001df1e:	fb09 f303 	mul.w	r3, r9, r3
9001df22:	4629      	mov	r1, r5
9001df24:	6802      	ldr	r2, [r0, #0]
9001df26:	6b56      	ldr	r6, [r2, #52]	@ 0x34
9001df28:	463a      	mov	r2, r7
9001df2a:	47b0      	blx	r6
9001df2c:	e7e2      	b.n	9001def4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001df2e:	fb0a f303 	mul.w	r3, sl, r3
9001df32:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001df36:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001df70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001df3a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001df3e:	4545      	cmp	r5, r8
9001df40:	d2d8      	bcs.n	9001def4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001df42:	f8db 0000 	ldr.w	r0, [fp]
9001df46:	4629      	mov	r1, r5
9001df48:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001df4c:	4435      	add	r5, r6
9001df4e:	6802      	ldr	r2, [r0, #0]
9001df50:	005b      	lsls	r3, r3, #1
9001df52:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
9001df56:	463a      	mov	r2, r7
9001df58:	47d0      	blx	sl
9001df5a:	444f      	add	r7, r9
9001df5c:	e7ef      	b.n	9001df3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001df5e:	bf00      	nop
9001df60:	24021bd0 	.word	0x24021bd0
9001df64:	24021bd2 	.word	0x24021bd2
9001df68:	24021bd4 	.word	0x24021bd4
9001df6c:	24021bd6 	.word	0x24021bd6
9001df70:	24021bdc 	.word	0x24021bdc

9001df74 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001df74:	b5f0      	push	{r4, r5, r6, r7, lr}
9001df76:	4606      	mov	r6, r0
9001df78:	b087      	sub	sp, #28
9001df7a:	460c      	mov	r4, r1
9001df7c:	4617      	mov	r7, r2
9001df7e:	461d      	mov	r5, r3
9001df80:	b333      	cbz	r3, 9001dfd0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001df82:	4608      	mov	r0, r1
9001df84:	f7f2 f863 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001df88:	bb10      	cbnz	r0, 9001dfd0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001df8a:	6820      	ldr	r0, [r4, #0]
9001df8c:	ab04      	add	r3, sp, #16
9001df8e:	6861      	ldr	r1, [r4, #4]
9001df90:	4c1b      	ldr	r4, [pc, #108]	@ (9001e000 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001df92:	c303      	stmia	r3!, {r0, r1}
9001df94:	a804      	add	r0, sp, #16
9001df96:	f7f7 faef 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001df9a:	6820      	ldr	r0, [r4, #0]
9001df9c:	6803      	ldr	r3, [r0, #0]
9001df9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001dfa0:	4798      	blx	r3
9001dfa2:	2dff      	cmp	r5, #255	@ 0xff
9001dfa4:	d016      	beq.n	9001dfd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001dfa6:	f010 0f08 	tst.w	r0, #8
9001dfaa:	6820      	ldr	r0, [r4, #0]
9001dfac:	d015      	beq.n	9001dfda <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001dfae:	2400      	movs	r4, #0
9001dfb0:	6801      	ldr	r1, [r0, #0]
9001dfb2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001dfb6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001dfba:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001dfbe:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001dfc2:	9401      	str	r4, [sp, #4]
9001dfc4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001dfc8:	9400      	str	r4, [sp, #0]
9001dfca:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
9001dfcc:	4639      	mov	r1, r7
9001dfce:	47a0      	blx	r4
9001dfd0:	b007      	add	sp, #28
9001dfd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001dfd4:	f010 0f02 	tst.w	r0, #2
9001dfd8:	e7e7      	b.n	9001dfaa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001dfda:	6803      	ldr	r3, [r0, #0]
9001dfdc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001dfde:	4798      	blx	r3
9001dfe0:	4b08      	ldr	r3, [pc, #32]	@ (9001e004 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001dfe2:	4601      	mov	r1, r0
9001dfe4:	4630      	mov	r0, r6
9001dfe6:	881a      	ldrh	r2, [r3, #0]
9001dfe8:	6833      	ldr	r3, [r6, #0]
9001dfea:	e9cd 7500 	strd	r7, r5, [sp]
9001dfee:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001dff0:	ab04      	add	r3, sp, #16
9001dff2:	47a8      	blx	r5
9001dff4:	6820      	ldr	r0, [r4, #0]
9001dff6:	6803      	ldr	r3, [r0, #0]
9001dff8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001dffa:	4798      	blx	r3
9001dffc:	e7e8      	b.n	9001dfd0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001dffe:	bf00      	nop
9001e000:	24021bdc 	.word	0x24021bdc
9001e004:	24021bd6 	.word	0x24021bd6

9001e008 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001e008:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e00c:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001e010:	4688      	mov	r8, r1
9001e012:	4614      	mov	r4, r2
9001e014:	461d      	mov	r5, r3
9001e016:	9e08      	ldr	r6, [sp, #32]
9001e018:	2f00      	cmp	r7, #0
9001e01a:	f000 80ab 	beq.w	9001e174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e01e:	4618      	mov	r0, r3
9001e020:	f7f2 f815 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001e024:	2800      	cmp	r0, #0
9001e026:	f040 80a5 	bne.w	9001e174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e02a:	f9b5 1000 	ldrsh.w	r1, [r5]
9001e02e:	2fff      	cmp	r7, #255	@ 0xff
9001e030:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001e034:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001e038:	fb04 1303 	mla	r3, r4, r3, r1
9001e03c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001e040:	eba4 0200 	sub.w	r2, r4, r0
9001e044:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001e048:	fb04 f505 	mul.w	r5, r4, r5
9001e04c:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001e050:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001e054:	d04a      	beq.n	9001e0ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001e056:	b2bc      	uxth	r4, r7
9001e058:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001e05c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001e060:	fa5f f788 	uxtb.w	r7, r8
9001e064:	b2f3      	uxtb	r3, r6
9001e066:	0040      	lsls	r0, r0, #1
9001e068:	fb0e fe04 	mul.w	lr, lr, r4
9001e06c:	4367      	muls	r7, r4
9001e06e:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001e072:	4363      	muls	r3, r4
9001e074:	fa1f fc8c 	uxth.w	ip, ip
9001e078:	42a9      	cmp	r1, r5
9001e07a:	d27b      	bcs.n	9001e174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e07c:	eb01 0900 	add.w	r9, r1, r0
9001e080:	4549      	cmp	r1, r9
9001e082:	d231      	bcs.n	9001e0e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001e084:	880a      	ldrh	r2, [r1, #0]
9001e086:	1214      	asrs	r4, r2, #8
9001e088:	10d6      	asrs	r6, r2, #3
9001e08a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001e08e:	00d2      	lsls	r2, r2, #3
9001e090:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e094:	b2d2      	uxtb	r2, r2
9001e096:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001e09a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e09e:	fb14 f40c 	smulbb	r4, r4, ip
9001e0a2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001e0a6:	fb12 f20c 	smulbb	r2, r2, ip
9001e0aa:	fb16 f60c 	smulbb	r6, r6, ip
9001e0ae:	4474      	add	r4, lr
9001e0b0:	441a      	add	r2, r3
9001e0b2:	b2a4      	uxth	r4, r4
9001e0b4:	443e      	add	r6, r7
9001e0b6:	b292      	uxth	r2, r2
9001e0b8:	f104 0a01 	add.w	sl, r4, #1
9001e0bc:	b2b6      	uxth	r6, r6
9001e0be:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001e0c2:	f102 0a01 	add.w	sl, r2, #1
9001e0c6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001e0ca:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001e0ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e0d2:	4322      	orrs	r2, r4
9001e0d4:	1c74      	adds	r4, r6, #1
9001e0d6:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001e0da:	0976      	lsrs	r6, r6, #5
9001e0dc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e0e0:	4332      	orrs	r2, r6
9001e0e2:	f821 2b02 	strh.w	r2, [r1], #2
9001e0e6:	e7cb      	b.n	9001e080 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001e0e8:	4441      	add	r1, r8
9001e0ea:	e7c5      	b.n	9001e078 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001e0ec:	0973      	lsrs	r3, r6, #5
9001e0ee:	4f22      	ldr	r7, [pc, #136]	@ (9001e178 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001e0f0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001e0f4:	ea08 0707 	and.w	r7, r8, r7
9001e0f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001e0fc:	433b      	orrs	r3, r7
9001e0fe:	07e7      	lsls	r7, r4, #31
9001e100:	ea43 0306 	orr.w	r3, r3, r6
9001e104:	b29b      	uxth	r3, r3
9001e106:	d50b      	bpl.n	9001e120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001e108:	0040      	lsls	r0, r0, #1
9001e10a:	0052      	lsls	r2, r2, #1
9001e10c:	42a9      	cmp	r1, r5
9001e10e:	d231      	bcs.n	9001e174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e110:	180c      	adds	r4, r1, r0
9001e112:	42a1      	cmp	r1, r4
9001e114:	d202      	bcs.n	9001e11c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001e116:	f821 3b02 	strh.w	r3, [r1], #2
9001e11a:	e7fa      	b.n	9001e112 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001e11c:	4411      	add	r1, r2
9001e11e:	e7f5      	b.n	9001e10c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001e120:	078e      	lsls	r6, r1, #30
9001e122:	d008      	beq.n	9001e136 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001e124:	0066      	lsls	r6, r4, #1
9001e126:	460a      	mov	r2, r1
9001e128:	42aa      	cmp	r2, r5
9001e12a:	d202      	bcs.n	9001e132 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001e12c:	8013      	strh	r3, [r2, #0]
9001e12e:	4432      	add	r2, r6
9001e130:	e7fa      	b.n	9001e128 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001e132:	3102      	adds	r1, #2
9001e134:	3801      	subs	r0, #1
9001e136:	07c2      	lsls	r2, r0, #31
9001e138:	d50b      	bpl.n	9001e152 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001e13a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001e13e:	0066      	lsls	r6, r4, #1
9001e140:	3a01      	subs	r2, #1
9001e142:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001e146:	42aa      	cmp	r2, r5
9001e148:	d202      	bcs.n	9001e150 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001e14a:	8013      	strh	r3, [r2, #0]
9001e14c:	4432      	add	r2, r6
9001e14e:	e7fa      	b.n	9001e146 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001e150:	3801      	subs	r0, #1
9001e152:	b178      	cbz	r0, 9001e174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e154:	1040      	asrs	r0, r0, #1
9001e156:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001e15a:	0080      	lsls	r0, r0, #2
9001e15c:	0064      	lsls	r4, r4, #1
9001e15e:	42a9      	cmp	r1, r5
9001e160:	d208      	bcs.n	9001e174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e162:	180e      	adds	r6, r1, r0
9001e164:	460a      	mov	r2, r1
9001e166:	42b2      	cmp	r2, r6
9001e168:	d202      	bcs.n	9001e170 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001e16a:	f842 3b04 	str.w	r3, [r2], #4
9001e16e:	e7fa      	b.n	9001e166 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001e170:	4421      	add	r1, r4
9001e172:	e7f4      	b.n	9001e15e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001e174:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e178:	00fff800 	.word	0x00fff800

9001e17c <_ZN8touchgfx8LCD16bppC1Ev>:
9001e17c:	2200      	movs	r2, #0
9001e17e:	4912      	ldr	r1, [pc, #72]	@ (9001e1c8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001e180:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001e184:	6001      	str	r1, [r0, #0]
9001e186:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001e18a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001e18e:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001e192:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001e196:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001e19a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001e19e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001e1a2:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001e1a6:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001e1aa:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001e1ae:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001e1b2:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001e1b6:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001e1ba:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001e1be:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001e1c2:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001e1c6:	4770      	bx	lr
9001e1c8:	9002dd80 	.word	0x9002dd80

9001e1cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001e1cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e1d0:	b08d      	sub	sp, #52	@ 0x34
9001e1d2:	460d      	mov	r5, r1
9001e1d4:	4604      	mov	r4, r0
9001e1d6:	4699      	mov	r9, r3
9001e1d8:	6808      	ldr	r0, [r1, #0]
9001e1da:	ab08      	add	r3, sp, #32
9001e1dc:	6849      	ldr	r1, [r1, #4]
9001e1de:	c303      	stmia	r3!, {r0, r1}
9001e1e0:	6810      	ldr	r0, [r2, #0]
9001e1e2:	ab0a      	add	r3, sp, #40	@ 0x28
9001e1e4:	6851      	ldr	r1, [r2, #4]
9001e1e6:	c303      	stmia	r3!, {r0, r1}
9001e1e8:	a808      	add	r0, sp, #32
9001e1ea:	f7f7 f9c5 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e1ee:	4629      	mov	r1, r5
9001e1f0:	a80a      	add	r0, sp, #40	@ 0x28
9001e1f2:	4d67      	ldr	r5, [pc, #412]	@ (9001e390 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001e1f4:	f7f7 f9e8 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e1f8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001e1fc:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001e200:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001e204:	6828      	ldr	r0, [r5, #0]
9001e206:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e20a:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001e20e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001e212:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001e216:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001e21a:	440a      	add	r2, r1
9001e21c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001e220:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001e224:	4413      	add	r3, r2
9001e226:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001e22a:	6803      	ldr	r3, [r0, #0]
9001e22c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001e22e:	4798      	blx	r3
9001e230:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001e234:	d119      	bne.n	9001e26a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001e236:	f010 0f20 	tst.w	r0, #32
9001e23a:	6828      	ldr	r0, [r5, #0]
9001e23c:	d018      	beq.n	9001e270 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001e23e:	2500      	movs	r5, #0
9001e240:	6801      	ldr	r1, [r0, #0]
9001e242:	b2b6      	uxth	r6, r6
9001e244:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001e248:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001e24c:	9601      	str	r6, [sp, #4]
9001e24e:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001e252:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001e256:	9502      	str	r5, [sp, #8]
9001e258:	fa1f f588 	uxth.w	r5, r8
9001e25c:	9500      	str	r5, [sp, #0]
9001e25e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
9001e260:	4621      	mov	r1, r4
9001e262:	47a8      	blx	r5
9001e264:	b00d      	add	sp, #52	@ 0x34
9001e266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e26a:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001e26e:	e7e4      	b.n	9001e23a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001e270:	6803      	ldr	r3, [r0, #0]
9001e272:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e274:	4798      	blx	r3
9001e276:	4947      	ldr	r1, [pc, #284]	@ (9001e394 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001e278:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001e27c:	880b      	ldrh	r3, [r1, #0]
9001e27e:	468a      	mov	sl, r1
9001e280:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001e284:	fb03 5202 	mla	r2, r3, r2, r5
9001e288:	4373      	muls	r3, r6
9001e28a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e28e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e292:	9307      	str	r3, [sp, #28]
9001e294:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001e298:	9306      	str	r3, [sp, #24]
9001e29a:	9b07      	ldr	r3, [sp, #28]
9001e29c:	4298      	cmp	r0, r3
9001e29e:	d270      	bcs.n	9001e382 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001e2a0:	9b06      	ldr	r3, [sp, #24]
9001e2a2:	4621      	mov	r1, r4
9001e2a4:	eb00 0b03 	add.w	fp, r0, r3
9001e2a8:	4558      	cmp	r0, fp
9001e2aa:	d25d      	bcs.n	9001e368 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001e2ac:	f851 4b04 	ldr.w	r4, [r1], #4
9001e2b0:	0e23      	lsrs	r3, r4, #24
9001e2b2:	d014      	beq.n	9001e2de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001e2b4:	2bff      	cmp	r3, #255	@ 0xff
9001e2b6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001e2ba:	d112      	bne.n	9001e2e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001e2bc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001e2c0:	d10f      	bne.n	9001e2e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001e2c2:	0963      	lsrs	r3, r4, #5
9001e2c4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001e2c8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001e2cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001e2d0:	f02c 0c07 	bic.w	ip, ip, #7
9001e2d4:	ea43 0c0c 	orr.w	ip, r3, ip
9001e2d8:	ea4c 0404 	orr.w	r4, ip, r4
9001e2dc:	8004      	strh	r4, [r0, #0]
9001e2de:	3002      	adds	r0, #2
9001e2e0:	e7e2      	b.n	9001e2a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001e2e2:	fb09 f303 	mul.w	r3, r9, r3
9001e2e6:	8807      	ldrh	r7, [r0, #0]
9001e2e8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001e2ec:	fa5f fc8c 	uxtb.w	ip, ip
9001e2f0:	1c5a      	adds	r2, r3, #1
9001e2f2:	123e      	asrs	r6, r7, #8
9001e2f4:	10fd      	asrs	r5, r7, #3
9001e2f6:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001e2fa:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e2fe:	00ff      	lsls	r7, r7, #3
9001e300:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e304:	1212      	asrs	r2, r2, #8
9001e306:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e30a:	b293      	uxth	r3, r2
9001e30c:	43d2      	mvns	r2, r2
9001e30e:	b2ff      	uxtb	r7, r7
9001e310:	fb1e fe03 	smulbb	lr, lr, r3
9001e314:	b2d2      	uxtb	r2, r2
9001e316:	fb1c fc03 	smulbb	ip, ip, r3
9001e31a:	b2e4      	uxtb	r4, r4
9001e31c:	fb06 e602 	mla	r6, r6, r2, lr
9001e320:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e324:	fb14 f403 	smulbb	r4, r4, r3
9001e328:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001e32c:	b2b6      	uxth	r6, r6
9001e32e:	fb05 c502 	mla	r5, r5, r2, ip
9001e332:	fb07 4702 	mla	r7, r7, r2, r4
9001e336:	f106 0e01 	add.w	lr, r6, #1
9001e33a:	b2ad      	uxth	r5, r5
9001e33c:	b2bf      	uxth	r7, r7
9001e33e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001e342:	f105 0c01 	add.w	ip, r5, #1
9001e346:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001e34a:	1c7e      	adds	r6, r7, #1
9001e34c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001e350:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001e354:	096d      	lsrs	r5, r5, #5
9001e356:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e35a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e35e:	ea46 060e 	orr.w	r6, r6, lr
9001e362:	432e      	orrs	r6, r5
9001e364:	8006      	strh	r6, [r0, #0]
9001e366:	e7ba      	b.n	9001e2de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001e368:	f8ba 3000 	ldrh.w	r3, [sl]
9001e36c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001e370:	eba3 0308 	sub.w	r3, r3, r8
9001e374:	eba4 0408 	sub.w	r4, r4, r8
9001e378:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e37c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001e380:	e78b      	b.n	9001e29a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001e382:	4b03      	ldr	r3, [pc, #12]	@ (9001e390 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001e384:	6818      	ldr	r0, [r3, #0]
9001e386:	6803      	ldr	r3, [r0, #0]
9001e388:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e38a:	4798      	blx	r3
9001e38c:	e76a      	b.n	9001e264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001e38e:	bf00      	nop
9001e390:	24021bdc 	.word	0x24021bdc
9001e394:	24021bd6 	.word	0x24021bd6

9001e398 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001e398:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001e39c:	b085      	sub	sp, #20
9001e39e:	6810      	ldr	r0, [r2, #0]
9001e3a0:	460c      	mov	r4, r1
9001e3a2:	6851      	ldr	r1, [r2, #4]
9001e3a4:	466d      	mov	r5, sp
9001e3a6:	4616      	mov	r6, r2
9001e3a8:	c503      	stmia	r5!, {r0, r1}
9001e3aa:	6818      	ldr	r0, [r3, #0]
9001e3ac:	6859      	ldr	r1, [r3, #4]
9001e3ae:	c503      	stmia	r5!, {r0, r1}
9001e3b0:	4668      	mov	r0, sp
9001e3b2:	4d2e      	ldr	r5, [pc, #184]	@ (9001e46c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001e3b4:	f7f7 f8e0 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e3b8:	4631      	mov	r1, r6
9001e3ba:	a802      	add	r0, sp, #8
9001e3bc:	4e2c      	ldr	r6, [pc, #176]	@ (9001e470 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001e3be:	f7f7 f903 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e3c2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001e3c6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001e3ca:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e3ce:	6828      	ldr	r0, [r5, #0]
9001e3d0:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e3d4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001e3d8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001e3dc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001e3e0:	f8bd 1000 	ldrh.w	r1, [sp]
9001e3e4:	440a      	add	r2, r1
9001e3e6:	f8ad 2008 	strh.w	r2, [sp, #8]
9001e3ea:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001e3ee:	4413      	add	r3, r2
9001e3f0:	f8ad 300a 	strh.w	r3, [sp, #10]
9001e3f4:	6803      	ldr	r3, [r0, #0]
9001e3f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e3f8:	4798      	blx	r3
9001e3fa:	8833      	ldrh	r3, [r6, #0]
9001e3fc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001e400:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001e404:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001e408:	f8df e068 	ldr.w	lr, [pc, #104]	@ 9001e474 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001e40c:	fb03 1202 	mla	r2, r3, r2, r1
9001e410:	fb08 f303 	mul.w	r3, r8, r3
9001e414:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e418:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e41c:	4298      	cmp	r0, r3
9001e41e:	d21d      	bcs.n	9001e45c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001e420:	eb00 080c 	add.w	r8, r0, ip
9001e424:	4540      	cmp	r0, r8
9001e426:	d20f      	bcs.n	9001e448 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001e428:	f854 1b04 	ldr.w	r1, [r4], #4
9001e42c:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001e430:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001e434:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001e438:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001e43c:	ea42 0209 	orr.w	r2, r2, r9
9001e440:	430a      	orrs	r2, r1
9001e442:	f820 2b02 	strh.w	r2, [r0], #2
9001e446:	e7ed      	b.n	9001e424 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001e448:	8832      	ldrh	r2, [r6, #0]
9001e44a:	1bd2      	subs	r2, r2, r7
9001e44c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e450:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001e454:	1bd2      	subs	r2, r2, r7
9001e456:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001e45a:	e7df      	b.n	9001e41c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001e45c:	6828      	ldr	r0, [r5, #0]
9001e45e:	6803      	ldr	r3, [r0, #0]
9001e460:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e462:	4798      	blx	r3
9001e464:	b005      	add	sp, #20
9001e466:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001e46a:	bf00      	nop
9001e46c:	24021bdc 	.word	0x24021bdc
9001e470:	24021bd6 	.word	0x24021bd6
9001e474:	fffff800 	.word	0xfffff800

9001e478 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001e478:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e47c:	b08e      	sub	sp, #56	@ 0x38
9001e47e:	460e      	mov	r6, r1
9001e480:	4604      	mov	r4, r0
9001e482:	461d      	mov	r5, r3
9001e484:	6808      	ldr	r0, [r1, #0]
9001e486:	ab0a      	add	r3, sp, #40	@ 0x28
9001e488:	6849      	ldr	r1, [r1, #4]
9001e48a:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9001e660 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001e48e:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 9001e664 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001e492:	c303      	stmia	r3!, {r0, r1}
9001e494:	6810      	ldr	r0, [r2, #0]
9001e496:	ab0c      	add	r3, sp, #48	@ 0x30
9001e498:	6851      	ldr	r1, [r2, #4]
9001e49a:	c303      	stmia	r3!, {r0, r1}
9001e49c:	a80a      	add	r0, sp, #40	@ 0x28
9001e49e:	f7f7 f86b 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e4a2:	4631      	mov	r1, r6
9001e4a4:	a80c      	add	r0, sp, #48	@ 0x30
9001e4a6:	f7f7 f88f 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e4aa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001e4ae:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001e4b2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001e4b6:	f8d8 0000 	ldr.w	r0, [r8]
9001e4ba:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e4be:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9001e4c2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001e4c6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001e4ca:	440c      	add	r4, r1
9001e4cc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9001e4d0:	440a      	add	r2, r1
9001e4d2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9001e4d6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001e4da:	4413      	add	r3, r2
9001e4dc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001e4e0:	6803      	ldr	r3, [r0, #0]
9001e4e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001e4e4:	4798      	blx	r3
9001e4e6:	2dff      	cmp	r5, #255	@ 0xff
9001e4e8:	d124      	bne.n	9001e534 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001e4ea:	f010 0f01 	tst.w	r0, #1
9001e4ee:	f8d8 0000 	ldr.w	r0, [r8]
9001e4f2:	d022      	beq.n	9001e53a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001e4f4:	2100      	movs	r1, #0
9001e4f6:	f04f 0e01 	mov.w	lr, #1
9001e4fa:	f8d0 c000 	ldr.w	ip, [r0]
9001e4fe:	b2b6      	uxth	r6, r6
9001e500:	f8cd e018 	str.w	lr, [sp, #24]
9001e504:	b2bf      	uxth	r7, r7
9001e506:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001e50a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001e50e:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001e512:	f8b9 e000 	ldrh.w	lr, [r9]
9001e516:	9503      	str	r5, [sp, #12]
9001e518:	9601      	str	r6, [sp, #4]
9001e51a:	9700      	str	r7, [sp, #0]
9001e51c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001e520:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001e524:	9102      	str	r1, [sp, #8]
9001e526:	4621      	mov	r1, r4
9001e528:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
9001e52c:	47a8      	blx	r5
9001e52e:	b00e      	add	sp, #56	@ 0x38
9001e530:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e534:	f010 0f04 	tst.w	r0, #4
9001e538:	e7d9      	b.n	9001e4ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001e53a:	6803      	ldr	r3, [r0, #0]
9001e53c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e53e:	4798      	blx	r3
9001e540:	f8b9 3000 	ldrh.w	r3, [r9]
9001e544:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001e548:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001e54c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
9001e550:	435e      	muls	r6, r3
9001e552:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001e556:	2dff      	cmp	r5, #255	@ 0xff
9001e558:	fb03 1202 	mla	r2, r3, r2, r1
9001e55c:	ebac 0c07 	sub.w	ip, ip, r7
9001e560:	eba3 0707 	sub.w	r7, r3, r7
9001e564:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e568:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001e56c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001e570:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001e574:	d049      	beq.n	9001e60a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001e576:	43eb      	mvns	r3, r5
9001e578:	fa1f f985 	uxth.w	r9, r5
9001e57c:	b2db      	uxtb	r3, r3
9001e57e:	42b0      	cmp	r0, r6
9001e580:	d266      	bcs.n	9001e650 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e582:	eb00 0a0e 	add.w	sl, r0, lr
9001e586:	4550      	cmp	r0, sl
9001e588:	4621      	mov	r1, r4
9001e58a:	f104 0403 	add.w	r4, r4, #3
9001e58e:	d25b      	bcs.n	9001e648 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001e590:	8802      	ldrh	r2, [r0, #0]
9001e592:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e596:	ea4f 2822 	mov.w	r8, r2, asr #8
9001e59a:	fb11 f109 	smulbb	r1, r1, r9
9001e59e:	10d5      	asrs	r5, r2, #3
9001e5a0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001e5a4:	00d2      	lsls	r2, r2, #3
9001e5a6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e5aa:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001e5ae:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e5b2:	fb08 1803 	mla	r8, r8, r3, r1
9001e5b6:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001e5ba:	b2d2      	uxtb	r2, r2
9001e5bc:	fb11 f109 	smulbb	r1, r1, r9
9001e5c0:	fa1f f888 	uxth.w	r8, r8
9001e5c4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e5c8:	fb05 1503 	mla	r5, r5, r3, r1
9001e5cc:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e5d0:	fb11 f109 	smulbb	r1, r1, r9
9001e5d4:	b2ad      	uxth	r5, r5
9001e5d6:	fb02 1203 	mla	r2, r2, r3, r1
9001e5da:	f108 0101 	add.w	r1, r8, #1
9001e5de:	b292      	uxth	r2, r2
9001e5e0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001e5e4:	1c51      	adds	r1, r2, #1
9001e5e6:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001e5ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e5ee:	1c69      	adds	r1, r5, #1
9001e5f0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001e5f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e5f8:	096d      	lsrs	r5, r5, #5
9001e5fa:	ea42 0208 	orr.w	r2, r2, r8
9001e5fe:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e602:	432a      	orrs	r2, r5
9001e604:	f820 2b02 	strh.w	r2, [r0], #2
9001e608:	e7bd      	b.n	9001e586 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001e60a:	4a14      	ldr	r2, [pc, #80]	@ (9001e65c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001e60c:	42b0      	cmp	r0, r6
9001e60e:	d21f      	bcs.n	9001e650 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e610:	eb00 050e 	add.w	r5, r0, lr
9001e614:	42a8      	cmp	r0, r5
9001e616:	4621      	mov	r1, r4
9001e618:	f104 0403 	add.w	r4, r4, #3
9001e61c:	d210      	bcs.n	9001e640 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001e61e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001e622:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e626:	00db      	lsls	r3, r3, #3
9001e628:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001e62c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001e630:	430b      	orrs	r3, r1
9001e632:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e636:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001e63a:	f820 3b02 	strh.w	r3, [r0], #2
9001e63e:	e7e9      	b.n	9001e614 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001e640:	4438      	add	r0, r7
9001e642:	eb01 040c 	add.w	r4, r1, ip
9001e646:	e7e1      	b.n	9001e60c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001e648:	4438      	add	r0, r7
9001e64a:	eb01 040c 	add.w	r4, r1, ip
9001e64e:	e796      	b.n	9001e57e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001e650:	4b03      	ldr	r3, [pc, #12]	@ (9001e660 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001e652:	6818      	ldr	r0, [r3, #0]
9001e654:	6803      	ldr	r3, [r0, #0]
9001e656:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e658:	4798      	blx	r3
9001e65a:	e768      	b.n	9001e52e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001e65c:	fffff800 	.word	0xfffff800
9001e660:	24021bdc 	.word	0x24021bdc
9001e664:	24021bd6 	.word	0x24021bd6

9001e668 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001e668:	b4f0      	push	{r4, r5, r6, r7}
9001e66a:	4616      	mov	r6, r2
9001e66c:	461c      	mov	r4, r3
9001e66e:	460d      	mov	r5, r1
9001e670:	9a04      	ldr	r2, [sp, #16]
9001e672:	2e01      	cmp	r6, #1
9001e674:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001e678:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001e67c:	d012      	beq.n	9001e6a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001e67e:	d303      	bcc.n	9001e688 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001e680:	2e02      	cmp	r6, #2
9001e682:	d00a      	beq.n	9001e69a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001e684:	bcf0      	pop	{r4, r5, r6, r7}
9001e686:	4770      	bx	lr
9001e688:	6805      	ldr	r5, [r0, #0]
9001e68a:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001e68e:	68ed      	ldr	r5, [r5, #12]
9001e690:	4613      	mov	r3, r2
9001e692:	4622      	mov	r2, r4
9001e694:	46ac      	mov	ip, r5
9001e696:	bcf0      	pop	{r4, r5, r6, r7}
9001e698:	4760      	bx	ip
9001e69a:	4621      	mov	r1, r4
9001e69c:	4628      	mov	r0, r5
9001e69e:	bcf0      	pop	{r4, r5, r6, r7}
9001e6a0:	f7ff bd94 	b.w	9001e1cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e6a4:	4621      	mov	r1, r4
9001e6a6:	4628      	mov	r0, r5
9001e6a8:	bcf0      	pop	{r4, r5, r6, r7}
9001e6aa:	f7ff bee5 	b.w	9001e478 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001e6b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001e6b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e6b4:	b093      	sub	sp, #76	@ 0x4c
9001e6b6:	4681      	mov	r9, r0
9001e6b8:	4688      	mov	r8, r1
9001e6ba:	6810      	ldr	r0, [r2, #0]
9001e6bc:	6851      	ldr	r1, [r2, #4]
9001e6be:	ac0e      	add	r4, sp, #56	@ 0x38
9001e6c0:	4616      	mov	r6, r2
9001e6c2:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9001e6c6:	4f6b      	ldr	r7, [pc, #428]	@ (9001e874 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001e6c8:	c403      	stmia	r4!, {r0, r1}
9001e6ca:	6818      	ldr	r0, [r3, #0]
9001e6cc:	ac10      	add	r4, sp, #64	@ 0x40
9001e6ce:	6859      	ldr	r1, [r3, #4]
9001e6d0:	c403      	stmia	r4!, {r0, r1}
9001e6d2:	a80e      	add	r0, sp, #56	@ 0x38
9001e6d4:	f7f6 ff50 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e6d8:	4631      	mov	r1, r6
9001e6da:	a810      	add	r0, sp, #64	@ 0x40
9001e6dc:	4e66      	ldr	r6, [pc, #408]	@ (9001e878 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e6de:	f7f6 ff73 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e6e2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001e6e6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001e6ea:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9001e6ee:	6830      	ldr	r0, [r6, #0]
9001e6f0:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e6f4:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9001e6f8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001e6fc:	4489      	add	r9, r1
9001e6fe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9001e702:	440a      	add	r2, r1
9001e704:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9001e708:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001e70c:	4413      	add	r3, r2
9001e70e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001e712:	6803      	ldr	r3, [r0, #0]
9001e714:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001e716:	4798      	blx	r3
9001e718:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001e71c:	6830      	ldr	r0, [r6, #0]
9001e71e:	d01d      	beq.n	9001e75c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001e720:	2200      	movs	r2, #0
9001e722:	6801      	ldr	r1, [r0, #0]
9001e724:	b2a4      	uxth	r4, r4
9001e726:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001e72a:	b2ad      	uxth	r5, r5
9001e72c:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001e730:	220b      	movs	r2, #11
9001e732:	9207      	str	r2, [sp, #28]
9001e734:	883a      	ldrh	r2, [r7, #0]
9001e736:	9502      	str	r5, [sp, #8]
9001e738:	9206      	str	r2, [sp, #24]
9001e73a:	2201      	movs	r2, #1
9001e73c:	9401      	str	r4, [sp, #4]
9001e73e:	e9cd a204 	strd	sl, r2, [sp, #16]
9001e742:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9001e746:	9203      	str	r2, [sp, #12]
9001e748:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9001e74c:	9200      	str	r2, [sp, #0]
9001e74e:	4642      	mov	r2, r8
9001e750:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
9001e752:	4649      	mov	r1, r9
9001e754:	47a0      	blx	r4
9001e756:	b013      	add	sp, #76	@ 0x4c
9001e758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e75c:	6803      	ldr	r3, [r0, #0]
9001e75e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e760:	4798      	blx	r3
9001e762:	883b      	ldrh	r3, [r7, #0]
9001e764:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e768:	f04f 0e04 	mov.w	lr, #4
9001e76c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9001e770:	435d      	muls	r5, r3
9001e772:	fb03 1202 	mla	r2, r3, r2, r1
9001e776:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e77a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001e77e:	920c      	str	r2, [sp, #48]	@ 0x30
9001e780:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001e784:	1b12      	subs	r2, r2, r4
9001e786:	920d      	str	r2, [sp, #52]	@ 0x34
9001e788:	0062      	lsls	r2, r4, #1
9001e78a:	1b1c      	subs	r4, r3, r4
9001e78c:	920a      	str	r2, [sp, #40]	@ 0x28
9001e78e:	0063      	lsls	r3, r4, #1
9001e790:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e792:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e794:	4298      	cmp	r0, r3
9001e796:	d266      	bcs.n	9001e866 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001e798:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e79a:	eb00 0b03 	add.w	fp, r0, r3
9001e79e:	4558      	cmp	r0, fp
9001e7a0:	d25c      	bcs.n	9001e85c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001e7a2:	f819 3b01 	ldrb.w	r3, [r9], #1
9001e7a6:	fb1e e303 	smlabb	r3, lr, r3, lr
9001e7aa:	f858 2003 	ldr.w	r2, [r8, r3]
9001e7ae:	0e11      	lsrs	r1, r2, #24
9001e7b0:	d012      	beq.n	9001e7d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e7b2:	29ff      	cmp	r1, #255	@ 0xff
9001e7b4:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001e7b8:	d110      	bne.n	9001e7dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e7ba:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001e7be:	d10d      	bne.n	9001e7dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e7c0:	0953      	lsrs	r3, r2, #5
9001e7c2:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9001e7c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e7ca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001e7ce:	f027 0707 	bic.w	r7, r7, #7
9001e7d2:	431f      	orrs	r7, r3
9001e7d4:	433a      	orrs	r2, r7
9001e7d6:	8002      	strh	r2, [r0, #0]
9001e7d8:	3002      	adds	r0, #2
9001e7da:	e7e0      	b.n	9001e79e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001e7dc:	fb0a f101 	mul.w	r1, sl, r1
9001e7e0:	8806      	ldrh	r6, [r0, #0]
9001e7e2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001e7e6:	b2d2      	uxtb	r2, r2
9001e7e8:	1c4b      	adds	r3, r1, #1
9001e7ea:	1235      	asrs	r5, r6, #8
9001e7ec:	10f4      	asrs	r4, r6, #3
9001e7ee:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001e7f2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001e7f6:	00f6      	lsls	r6, r6, #3
9001e7f8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9001e7fc:	121b      	asrs	r3, r3, #8
9001e7fe:	b2f6      	uxtb	r6, r6
9001e800:	b299      	uxth	r1, r3
9001e802:	43db      	mvns	r3, r3
9001e804:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001e808:	fb1c fc01 	smulbb	ip, ip, r1
9001e80c:	b2db      	uxtb	r3, r3
9001e80e:	fb12 f201 	smulbb	r2, r2, r1
9001e812:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e816:	fb05 c503 	mla	r5, r5, r3, ip
9001e81a:	b2ff      	uxtb	r7, r7
9001e81c:	fb06 2203 	mla	r2, r6, r3, r2
9001e820:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001e824:	fb17 f701 	smulbb	r7, r7, r1
9001e828:	b2ad      	uxth	r5, r5
9001e82a:	b292      	uxth	r2, r2
9001e82c:	fb04 7403 	mla	r4, r4, r3, r7
9001e830:	f105 0c01 	add.w	ip, r5, #1
9001e834:	1c57      	adds	r7, r2, #1
9001e836:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001e83a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001e83e:	b2a4      	uxth	r4, r4
9001e840:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001e844:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001e848:	433d      	orrs	r5, r7
9001e84a:	1c67      	adds	r7, r4, #1
9001e84c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001e850:	0964      	lsrs	r4, r4, #5
9001e852:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001e856:	4325      	orrs	r5, r4
9001e858:	8005      	strh	r5, [r0, #0]
9001e85a:	e7bd      	b.n	9001e7d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e85c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001e85e:	4418      	add	r0, r3
9001e860:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e862:	4499      	add	r9, r3
9001e864:	e795      	b.n	9001e792 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001e866:	4b04      	ldr	r3, [pc, #16]	@ (9001e878 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e868:	6818      	ldr	r0, [r3, #0]
9001e86a:	6803      	ldr	r3, [r0, #0]
9001e86c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e86e:	4798      	blx	r3
9001e870:	e771      	b.n	9001e756 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001e872:	bf00      	nop
9001e874:	24021bd6 	.word	0x24021bd6
9001e878:	24021bdc 	.word	0x24021bdc

9001e87c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001e87c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e880:	b087      	sub	sp, #28
9001e882:	4680      	mov	r8, r0
9001e884:	460d      	mov	r5, r1
9001e886:	4614      	mov	r4, r2
9001e888:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9001e88c:	2e00      	cmp	r6, #0
9001e88e:	f000 80b9 	beq.w	9001ea04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001e892:	6810      	ldr	r0, [r2, #0]
9001e894:	af02      	add	r7, sp, #8
9001e896:	6851      	ldr	r1, [r2, #4]
9001e898:	c703      	stmia	r7!, {r0, r1}
9001e89a:	6818      	ldr	r0, [r3, #0]
9001e89c:	af04      	add	r7, sp, #16
9001e89e:	6859      	ldr	r1, [r3, #4]
9001e8a0:	c703      	stmia	r7!, {r0, r1}
9001e8a2:	a802      	add	r0, sp, #8
9001e8a4:	f7f6 fe68 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e8a8:	4621      	mov	r1, r4
9001e8aa:	a804      	add	r0, sp, #16
9001e8ac:	f7f6 fe8c 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e8b0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e8b4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e8b8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001e8bc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001e8c0:	fb14 2103 	smlabb	r1, r4, r3, r2
9001e8c4:	eb08 0401 	add.w	r4, r8, r1
9001e8c8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e8cc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e8d0:	440a      	add	r2, r1
9001e8d2:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001e8d6:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e8da:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e8de:	4413      	add	r3, r2
9001e8e0:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e8e4:	4b49      	ldr	r3, [pc, #292]	@ (9001ea0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e8e6:	6818      	ldr	r0, [r3, #0]
9001e8e8:	6803      	ldr	r3, [r0, #0]
9001e8ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e8ec:	4798      	blx	r3
9001e8ee:	4b48      	ldr	r3, [pc, #288]	@ (9001ea10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001e8f0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001e8f4:	2eff      	cmp	r6, #255	@ 0xff
9001e8f6:	881a      	ldrh	r2, [r3, #0]
9001e8f8:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001e8fc:	fb02 c101 	mla	r1, r2, r1, ip
9001e900:	fb02 f207 	mul.w	r2, r2, r7
9001e904:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e908:	f105 0104 	add.w	r1, r5, #4
9001e90c:	461d      	mov	r5, r3
9001e90e:	d05a      	beq.n	9001e9c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001e910:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9001e914:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e918:	b2b6      	uxth	r6, r6
9001e91a:	9301      	str	r3, [sp, #4]
9001e91c:	fa1f fe8e 	uxth.w	lr, lr
9001e920:	4282      	cmp	r2, r0
9001e922:	d96a      	bls.n	9001e9fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e924:	eb00 0b0a 	add.w	fp, r0, sl
9001e928:	4583      	cmp	fp, r0
9001e92a:	d940      	bls.n	9001e9ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001e92c:	8805      	ldrh	r5, [r0, #0]
9001e92e:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e932:	122f      	asrs	r7, r5, #8
9001e934:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e938:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e93c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e940:	00ed      	lsls	r5, r5, #3
9001e942:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e946:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001e94a:	fb17 f70e 	smulbb	r7, r7, lr
9001e94e:	b2ed      	uxtb	r5, r5
9001e950:	fb19 f90e 	smulbb	r9, r9, lr
9001e954:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e958:	fb15 f50e 	smulbb	r5, r5, lr
9001e95c:	fb0c 7c06 	mla	ip, ip, r6, r7
9001e960:	10df      	asrs	r7, r3, #3
9001e962:	00db      	lsls	r3, r3, #3
9001e964:	fa1f fc8c 	uxth.w	ip, ip
9001e968:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e96c:	b2db      	uxtb	r3, r3
9001e96e:	fb07 9706 	mla	r7, r7, r6, r9
9001e972:	f10c 0901 	add.w	r9, ip, #1
9001e976:	fb03 5306 	mla	r3, r3, r6, r5
9001e97a:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001e97e:	b29b      	uxth	r3, r3
9001e980:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
9001e984:	b2bf      	uxth	r7, r7
9001e986:	f103 0c01 	add.w	ip, r3, #1
9001e98a:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e98e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e992:	ea4c 0c09 	orr.w	ip, ip, r9
9001e996:	f107 0901 	add.w	r9, r7, #1
9001e99a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001e99e:	097f      	lsrs	r7, r7, #5
9001e9a0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9001e9a4:	ea4c 0c07 	orr.w	ip, ip, r7
9001e9a8:	f820 cb02 	strh.w	ip, [r0], #2
9001e9ac:	e7bc      	b.n	9001e928 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001e9ae:	9b01      	ldr	r3, [sp, #4]
9001e9b0:	881b      	ldrh	r3, [r3, #0]
9001e9b2:	eba3 0308 	sub.w	r3, r3, r8
9001e9b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e9ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e9be:	eba3 0308 	sub.w	r3, r3, r8
9001e9c2:	441c      	add	r4, r3
9001e9c4:	e7ac      	b.n	9001e920 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001e9c6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e9ca:	4282      	cmp	r2, r0
9001e9cc:	d915      	bls.n	9001e9fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e9ce:	eb00 060a 	add.w	r6, r0, sl
9001e9d2:	4286      	cmp	r6, r0
9001e9d4:	d906      	bls.n	9001e9e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001e9d6:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e9da:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e9de:	f820 3b02 	strh.w	r3, [r0], #2
9001e9e2:	e7f6      	b.n	9001e9d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001e9e4:	882b      	ldrh	r3, [r5, #0]
9001e9e6:	eba3 0308 	sub.w	r3, r3, r8
9001e9ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e9ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e9f2:	eba3 0308 	sub.w	r3, r3, r8
9001e9f6:	441c      	add	r4, r3
9001e9f8:	e7e7      	b.n	9001e9ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001e9fa:	4b04      	ldr	r3, [pc, #16]	@ (9001ea0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e9fc:	6818      	ldr	r0, [r3, #0]
9001e9fe:	6803      	ldr	r3, [r0, #0]
9001ea00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ea02:	4798      	blx	r3
9001ea04:	b007      	add	sp, #28
9001ea06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ea0a:	bf00      	nop
9001ea0c:	24021bdc 	.word	0x24021bdc
9001ea10:	24021bd6 	.word	0x24021bd6

9001ea14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001ea14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ea18:	b091      	sub	sp, #68	@ 0x44
9001ea1a:	4680      	mov	r8, r0
9001ea1c:	460f      	mov	r7, r1
9001ea1e:	4614      	mov	r4, r2
9001ea20:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
9001ea24:	2d00      	cmp	r5, #0
9001ea26:	d051      	beq.n	9001eacc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001ea28:	6810      	ldr	r0, [r2, #0]
9001ea2a:	ae0c      	add	r6, sp, #48	@ 0x30
9001ea2c:	6851      	ldr	r1, [r2, #4]
9001ea2e:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 9001ec30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001ea32:	c603      	stmia	r6!, {r0, r1}
9001ea34:	6818      	ldr	r0, [r3, #0]
9001ea36:	ae0e      	add	r6, sp, #56	@ 0x38
9001ea38:	6859      	ldr	r1, [r3, #4]
9001ea3a:	c603      	stmia	r6!, {r0, r1}
9001ea3c:	a80c      	add	r0, sp, #48	@ 0x30
9001ea3e:	f7f6 fd9b 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ea42:	4621      	mov	r1, r4
9001ea44:	a80e      	add	r0, sp, #56	@ 0x38
9001ea46:	f7f6 fdbf 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ea4a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9001ea4e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001ea52:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001ea56:	f8d9 0000 	ldr.w	r0, [r9]
9001ea5a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ea5e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001ea62:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
9001ea66:	eb08 0401 	add.w	r4, r8, r1
9001ea6a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001ea6e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 9001ec34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001ea72:	440a      	add	r2, r1
9001ea74:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
9001ea78:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9001ea7c:	4413      	add	r3, r2
9001ea7e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9001ea82:	6803      	ldr	r3, [r0, #0]
9001ea84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001ea86:	4798      	blx	r3
9001ea88:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001ea8c:	f8d9 0000 	ldr.w	r0, [r9]
9001ea90:	d01f      	beq.n	9001ead2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001ea92:	2200      	movs	r2, #0
9001ea94:	6801      	ldr	r1, [r0, #0]
9001ea96:	b2b6      	uxth	r6, r6
9001ea98:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001ea9c:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001eaa0:	220b      	movs	r2, #11
9001eaa2:	9207      	str	r2, [sp, #28]
9001eaa4:	f8b8 2000 	ldrh.w	r2, [r8]
9001eaa8:	9601      	str	r6, [sp, #4]
9001eaaa:	9206      	str	r2, [sp, #24]
9001eaac:	2201      	movs	r2, #1
9001eaae:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001eab2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
9001eab6:	9203      	str	r2, [sp, #12]
9001eab8:	fa1f f28a 	uxth.w	r2, sl
9001eabc:	9202      	str	r2, [sp, #8]
9001eabe:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001eac2:	9200      	str	r2, [sp, #0]
9001eac4:	463a      	mov	r2, r7
9001eac6:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
9001eac8:	4621      	mov	r1, r4
9001eaca:	47a8      	blx	r5
9001eacc:	b011      	add	sp, #68	@ 0x44
9001eace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ead2:	6803      	ldr	r3, [r0, #0]
9001ead4:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001ead8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001eada:	4798      	blx	r3
9001eadc:	f8b8 2000 	ldrh.w	r2, [r8]
9001eae0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001eae4:	2dff      	cmp	r5, #255	@ 0xff
9001eae6:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
9001eaea:	fb0a fa02 	mul.w	sl, sl, r2
9001eaee:	fb02 1303 	mla	r3, r2, r3, r1
9001eaf2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001eaf6:	d062      	beq.n	9001ebbe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001eaf8:	ea6f 0c05 	mvn.w	ip, r5
9001eafc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001eb00:	b2ad      	uxth	r5, r5
9001eb02:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
9001eb06:	fa5f fc8c 	uxtb.w	ip, ip
9001eb0a:	930a      	str	r3, [sp, #40]	@ 0x28
9001eb0c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001eb0e:	4298      	cmp	r0, r3
9001eb10:	f080 8085 	bcs.w	9001ec1e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001eb14:	eb00 0b09 	add.w	fp, r0, r9
9001eb18:	4558      	cmp	r0, fp
9001eb1a:	d246      	bcs.n	9001ebaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001eb1c:	f814 eb01 	ldrb.w	lr, [r4], #1
9001eb20:	2303      	movs	r3, #3
9001eb22:	2204      	movs	r2, #4
9001eb24:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001eb28:	8803      	ldrh	r3, [r0, #0]
9001eb2a:	eb07 0a0e 	add.w	sl, r7, lr
9001eb2e:	1219      	asrs	r1, r3, #8
9001eb30:	10da      	asrs	r2, r3, #3
9001eb32:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001eb36:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001eb3a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001eb3e:	00db      	lsls	r3, r3, #3
9001eb40:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001eb44:	fb18 f805 	smulbb	r8, r8, r5
9001eb48:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001eb4c:	fb1e fe05 	smulbb	lr, lr, r5
9001eb50:	b2db      	uxtb	r3, r3
9001eb52:	fb01 810c 	mla	r1, r1, ip, r8
9001eb56:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001eb5a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001eb5e:	fb18 f805 	smulbb	r8, r8, r5
9001eb62:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001eb66:	b289      	uxth	r1, r1
9001eb68:	fb02 820c 	mla	r2, r2, ip, r8
9001eb6c:	fb03 e30c 	mla	r3, r3, ip, lr
9001eb70:	f101 0801 	add.w	r8, r1, #1
9001eb74:	b292      	uxth	r2, r2
9001eb76:	b29b      	uxth	r3, r3
9001eb78:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001eb7c:	f102 0801 	add.w	r8, r2, #1
9001eb80:	f103 0e01 	add.w	lr, r3, #1
9001eb84:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001eb88:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9001eb8c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001eb90:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001eb94:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001eb98:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001eb9c:	ea4e 0101 	orr.w	r1, lr, r1
9001eba0:	ea41 0108 	orr.w	r1, r1, r8
9001eba4:	f820 1b02 	strh.w	r1, [r0], #2
9001eba8:	e7b6      	b.n	9001eb18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001ebaa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001ebac:	881b      	ldrh	r3, [r3, #0]
9001ebae:	1b9b      	subs	r3, r3, r6
9001ebb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ebb4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001ebb8:	1b9b      	subs	r3, r3, r6
9001ebba:	441c      	add	r4, r3
9001ebbc:	e7a6      	b.n	9001eb0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001ebbe:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001ebc2:	2203      	movs	r2, #3
9001ebc4:	2504      	movs	r5, #4
9001ebc6:	4919      	ldr	r1, [pc, #100]	@ (9001ec2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001ebc8:	4550      	cmp	r0, sl
9001ebca:	d228      	bcs.n	9001ec1e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001ebcc:	eb00 0c09 	add.w	ip, r0, r9
9001ebd0:	4560      	cmp	r0, ip
9001ebd2:	4623      	mov	r3, r4
9001ebd4:	d219      	bcs.n	9001ec0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001ebd6:	f893 e000 	ldrb.w	lr, [r3]
9001ebda:	3401      	adds	r4, #1
9001ebdc:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001ebe0:	eb07 0b0e 	add.w	fp, r7, lr
9001ebe4:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001ebe8:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001ebec:	f89b b001 	ldrb.w	fp, [fp, #1]
9001ebf0:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001ebf4:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001ebf8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001ebfc:	ea43 030b 	orr.w	r3, r3, fp
9001ec00:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001ec04:	f820 3b02 	strh.w	r3, [r0], #2
9001ec08:	e7e2      	b.n	9001ebd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001ec0a:	f8b8 3000 	ldrh.w	r3, [r8]
9001ec0e:	1b9b      	subs	r3, r3, r6
9001ec10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ec14:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001ec18:	1b9b      	subs	r3, r3, r6
9001ec1a:	441c      	add	r4, r3
9001ec1c:	e7d4      	b.n	9001ebc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001ec1e:	4b04      	ldr	r3, [pc, #16]	@ (9001ec30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001ec20:	6818      	ldr	r0, [r3, #0]
9001ec22:	6803      	ldr	r3, [r0, #0]
9001ec24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ec26:	4798      	blx	r3
9001ec28:	e750      	b.n	9001eacc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001ec2a:	bf00      	nop
9001ec2c:	fffff800 	.word	0xfffff800
9001ec30:	24021bdc 	.word	0x24021bdc
9001ec34:	24021bd6 	.word	0x24021bd6

9001ec38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001ec38:	b4f0      	push	{r4, r5, r6, r7}
9001ec3a:	460c      	mov	r4, r1
9001ec3c:	4611      	mov	r1, r2
9001ec3e:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001ec42:	461a      	mov	r2, r3
9001ec44:	780f      	ldrb	r7, [r1, #0]
9001ec46:	9b04      	ldr	r3, [sp, #16]
9001ec48:	2f01      	cmp	r7, #1
9001ec4a:	784e      	ldrb	r6, [r1, #1]
9001ec4c:	d038      	beq.n	9001ecc0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001ec4e:	d31f      	bcc.n	9001ec90 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001ec50:	2f02      	cmp	r7, #2
9001ec52:	d14d      	bne.n	9001ecf0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001ec54:	2e03      	cmp	r6, #3
9001ec56:	d84b      	bhi.n	9001ecf0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001ec58:	e8df f006 	tbb	[pc, r6]
9001ec5c:	17140702 	.word	0x17140702
9001ec60:	9504      	str	r5, [sp, #16]
9001ec62:	4620      	mov	r0, r4
9001ec64:	bcf0      	pop	{r4, r5, r6, r7}
9001ec66:	f7ff be09 	b.w	9001e87c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001ec6a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001ec6c:	2800      	cmp	r0, #0
9001ec6e:	d03f      	beq.n	9001ecf0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001ec70:	6806      	ldr	r6, [r0, #0]
9001ec72:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001ec76:	68b5      	ldr	r5, [r6, #8]
9001ec78:	4613      	mov	r3, r2
9001ec7a:	46ac      	mov	ip, r5
9001ec7c:	460a      	mov	r2, r1
9001ec7e:	4621      	mov	r1, r4
9001ec80:	bcf0      	pop	{r4, r5, r6, r7}
9001ec82:	4760      	bx	ip
9001ec84:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001ec88:	e7f0      	b.n	9001ec6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001ec8a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001ec8e:	e7ed      	b.n	9001ec6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001ec90:	2e03      	cmp	r6, #3
9001ec92:	d82d      	bhi.n	9001ecf0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001ec94:	e8df f006 	tbb	[pc, r6]
9001ec98:	110e0702 	.word	0x110e0702
9001ec9c:	9504      	str	r5, [sp, #16]
9001ec9e:	4620      	mov	r0, r4
9001eca0:	bcf0      	pop	{r4, r5, r6, r7}
9001eca2:	f7ff bd05 	b.w	9001e6b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001eca6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001eca8:	b310      	cbz	r0, 9001ecf0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001ecaa:	6806      	ldr	r6, [r0, #0]
9001ecac:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001ecb0:	68f5      	ldr	r5, [r6, #12]
9001ecb2:	e7e1      	b.n	9001ec78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001ecb4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001ecb8:	e7f6      	b.n	9001eca8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001ecba:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001ecbe:	e7f3      	b.n	9001eca8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001ecc0:	2e03      	cmp	r6, #3
9001ecc2:	d815      	bhi.n	9001ecf0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001ecc4:	e8df f006 	tbb	[pc, r6]
9001ecc8:	110e0702 	.word	0x110e0702
9001eccc:	9504      	str	r5, [sp, #16]
9001ecce:	4620      	mov	r0, r4
9001ecd0:	bcf0      	pop	{r4, r5, r6, r7}
9001ecd2:	f7ff be9f 	b.w	9001ea14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001ecd6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001ecd8:	b150      	cbz	r0, 9001ecf0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001ecda:	6806      	ldr	r6, [r0, #0]
9001ecdc:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001ece0:	6935      	ldr	r5, [r6, #16]
9001ece2:	e7c9      	b.n	9001ec78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001ece4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001ece8:	e7f6      	b.n	9001ecd8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001ecea:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001ecee:	e7f3      	b.n	9001ecd8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001ecf0:	bcf0      	pop	{r4, r5, r6, r7}
9001ecf2:	4770      	bx	lr

9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001ecf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ecf8:	b087      	sub	sp, #28
9001ecfa:	4604      	mov	r4, r0
9001ecfc:	460e      	mov	r6, r1
9001ecfe:	6810      	ldr	r0, [r2, #0]
9001ed00:	6851      	ldr	r1, [r2, #4]
9001ed02:	ad02      	add	r5, sp, #8
9001ed04:	4617      	mov	r7, r2
9001ed06:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
9001ed0a:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 9001ef3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001ed0e:	c503      	stmia	r5!, {r0, r1}
9001ed10:	6818      	ldr	r0, [r3, #0]
9001ed12:	ad04      	add	r5, sp, #16
9001ed14:	6859      	ldr	r1, [r3, #4]
9001ed16:	c503      	stmia	r5!, {r0, r1}
9001ed18:	a802      	add	r0, sp, #8
9001ed1a:	f7f6 fc2d 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ed1e:	4639      	mov	r1, r7
9001ed20:	a804      	add	r0, sp, #16
9001ed22:	f7f6 fc51 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ed26:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001ed2a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ed2e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001ed32:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001ed36:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ed3a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001ed3e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001ed42:	440e      	add	r6, r1
9001ed44:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ed48:	440a      	add	r2, r1
9001ed4a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001ed4e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ed52:	4413      	add	r3, r2
9001ed54:	f8ad 3012 	strh.w	r3, [sp, #18]
9001ed58:	4b77      	ldr	r3, [pc, #476]	@ (9001ef38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001ed5a:	6818      	ldr	r0, [r3, #0]
9001ed5c:	6803      	ldr	r3, [r0, #0]
9001ed5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ed60:	4798      	blx	r3
9001ed62:	f8b9 b000 	ldrh.w	fp, [r9]
9001ed66:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ed6a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001ed6e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001ed72:	fb05 f50b 	mul.w	r5, r5, fp
9001ed76:	fb0b 2303 	mla	r3, fp, r3, r2
9001ed7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ed7e:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001ed82:	9300      	str	r3, [sp, #0]
9001ed84:	d069      	beq.n	9001ee5a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001ed86:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001ed8a:	4558      	cmp	r0, fp
9001ed8c:	f080 80cc 	bcs.w	9001ef28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001ed90:	9b00      	ldr	r3, [sp, #0]
9001ed92:	4631      	mov	r1, r6
9001ed94:	18c3      	adds	r3, r0, r3
9001ed96:	9301      	str	r3, [sp, #4]
9001ed98:	9b01      	ldr	r3, [sp, #4]
9001ed9a:	4298      	cmp	r0, r3
9001ed9c:	d24f      	bcs.n	9001ee3e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001ed9e:	f811 2b01 	ldrb.w	r2, [r1], #1
9001eda2:	2a00      	cmp	r2, #0
9001eda4:	d048      	beq.n	9001ee38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001eda6:	fb0a f202 	mul.w	r2, sl, r2
9001edaa:	1c53      	adds	r3, r2, #1
9001edac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001edb0:	121b      	asrs	r3, r3, #8
9001edb2:	d041      	beq.n	9001ee38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001edb4:	8802      	ldrh	r2, [r0, #0]
9001edb6:	b29e      	uxth	r6, r3
9001edb8:	f8b4 c000 	ldrh.w	ip, [r4]
9001edbc:	43db      	mvns	r3, r3
9001edbe:	1215      	asrs	r5, r2, #8
9001edc0:	b2db      	uxtb	r3, r3
9001edc2:	ea4f 272c 	mov.w	r7, ip, asr #8
9001edc6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001edca:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001edce:	fb15 f503 	smulbb	r5, r5, r3
9001edd2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001edd6:	00d2      	lsls	r2, r2, #3
9001edd8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001eddc:	fb07 5706 	mla	r7, r7, r6, r5
9001ede0:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001ede4:	b2d2      	uxtb	r2, r2
9001ede6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001edea:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001edee:	fb1e fe03 	smulbb	lr, lr, r3
9001edf2:	b2bf      	uxth	r7, r7
9001edf4:	fb12 f203 	smulbb	r2, r2, r3
9001edf8:	fa5f fc8c 	uxtb.w	ip, ip
9001edfc:	fb05 e506 	mla	r5, r5, r6, lr
9001ee00:	f107 0e01 	add.w	lr, r7, #1
9001ee04:	fb0c 2c06 	mla	ip, ip, r6, r2
9001ee08:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001ee0c:	fa1f fc8c 	uxth.w	ip, ip
9001ee10:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
9001ee14:	b2ad      	uxth	r5, r5
9001ee16:	f10c 0701 	add.w	r7, ip, #1
9001ee1a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001ee1e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001ee22:	ea47 070e 	orr.w	r7, r7, lr
9001ee26:	f105 0e01 	add.w	lr, r5, #1
9001ee2a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001ee2e:	096d      	lsrs	r5, r5, #5
9001ee30:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ee34:	432f      	orrs	r7, r5
9001ee36:	8007      	strh	r7, [r0, #0]
9001ee38:	3002      	adds	r0, #2
9001ee3a:	3402      	adds	r4, #2
9001ee3c:	e7ac      	b.n	9001ed98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001ee3e:	f8b9 3000 	ldrh.w	r3, [r9]
9001ee42:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001ee46:	eba3 0308 	sub.w	r3, r3, r8
9001ee4a:	eba6 0608 	sub.w	r6, r6, r8
9001ee4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ee52:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001ee56:	440e      	add	r6, r1
9001ee58:	e797      	b.n	9001ed8a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001ee5a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001ee5e:	42a8      	cmp	r0, r5
9001ee60:	d262      	bcs.n	9001ef28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001ee62:	9b00      	ldr	r3, [sp, #0]
9001ee64:	4631      	mov	r1, r6
9001ee66:	eb00 0b03 	add.w	fp, r0, r3
9001ee6a:	4558      	cmp	r0, fp
9001ee6c:	d24e      	bcs.n	9001ef0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001ee6e:	f811 3b01 	ldrb.w	r3, [r1], #1
9001ee72:	b12b      	cbz	r3, 9001ee80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001ee74:	2bff      	cmp	r3, #255	@ 0xff
9001ee76:	f8b4 e000 	ldrh.w	lr, [r4]
9001ee7a:	d104      	bne.n	9001ee86 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001ee7c:	f8a0 e000 	strh.w	lr, [r0]
9001ee80:	3002      	adds	r0, #2
9001ee82:	3402      	adds	r4, #2
9001ee84:	e7f1      	b.n	9001ee6a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001ee86:	8802      	ldrh	r2, [r0, #0]
9001ee88:	b29f      	uxth	r7, r3
9001ee8a:	43db      	mvns	r3, r3
9001ee8c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ee90:	1216      	asrs	r6, r2, #8
9001ee92:	b2db      	uxtb	r3, r3
9001ee94:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ee98:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001ee9c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001eea0:	00d2      	lsls	r2, r2, #3
9001eea2:	fb16 f603 	smulbb	r6, r6, r3
9001eea6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001eeaa:	b2d2      	uxtb	r2, r2
9001eeac:	fb0c 6c07 	mla	ip, ip, r7, r6
9001eeb0:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001eeb4:	fb1a fa03 	smulbb	sl, sl, r3
9001eeb8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001eebc:	fa1f fc8c 	uxth.w	ip, ip
9001eec0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001eec4:	fb12 f303 	smulbb	r3, r2, r3
9001eec8:	fa5f fe8e 	uxtb.w	lr, lr
9001eecc:	fb06 a607 	mla	r6, r6, r7, sl
9001eed0:	f10c 0201 	add.w	r2, ip, #1
9001eed4:	fb0e 3307 	mla	r3, lr, r7, r3
9001eed8:	b2b6      	uxth	r6, r6
9001eeda:	b29b      	uxth	r3, r3
9001eedc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001eee0:	f106 0a01 	add.w	sl, r6, #1
9001eee4:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
9001eee8:	f103 0c01 	add.w	ip, r3, #1
9001eeec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001eef0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001eef4:	0976      	lsrs	r6, r6, #5
9001eef6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001eefa:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001eefe:	ea4c 0c02 	orr.w	ip, ip, r2
9001ef02:	ea4c 0c06 	orr.w	ip, ip, r6
9001ef06:	f8a0 c000 	strh.w	ip, [r0]
9001ef0a:	e7b9      	b.n	9001ee80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001ef0c:	f8b9 3000 	ldrh.w	r3, [r9]
9001ef10:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001ef14:	eba3 0308 	sub.w	r3, r3, r8
9001ef18:	eba6 0608 	sub.w	r6, r6, r8
9001ef1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ef20:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001ef24:	440e      	add	r6, r1
9001ef26:	e79a      	b.n	9001ee5e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001ef28:	4b03      	ldr	r3, [pc, #12]	@ (9001ef38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001ef2a:	6818      	ldr	r0, [r3, #0]
9001ef2c:	6803      	ldr	r3, [r0, #0]
9001ef2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ef30:	4798      	blx	r3
9001ef32:	b007      	add	sp, #28
9001ef34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ef38:	24021bdc 	.word	0x24021bdc
9001ef3c:	24021bd6 	.word	0x24021bd6

9001ef40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001ef40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ef44:	b089      	sub	sp, #36	@ 0x24
9001ef46:	4607      	mov	r7, r0
9001ef48:	4688      	mov	r8, r1
9001ef4a:	4692      	mov	sl, r2
9001ef4c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
9001ef50:	4699      	mov	r9, r3
9001ef52:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001ef54:	2e00      	cmp	r6, #0
9001ef56:	d048      	beq.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ef58:	4608      	mov	r0, r1
9001ef5a:	f7fa f813 	bl	90018f84 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001ef5e:	4605      	mov	r5, r0
9001ef60:	4640      	mov	r0, r8
9001ef62:	f7fa f843 	bl	90018fec <_ZNK8touchgfx6Bitmap9getHeightEv>
9001ef66:	f8ad 000e 	strh.w	r0, [sp, #14]
9001ef6a:	4640      	mov	r0, r8
9001ef6c:	f8ad a008 	strh.w	sl, [sp, #8]
9001ef70:	f8ad 500c 	strh.w	r5, [sp, #12]
9001ef74:	f8ad 900a 	strh.w	r9, [sp, #10]
9001ef78:	f7fa f8f6 	bl	90019168 <_ZNK8touchgfx6Bitmap7getDataEv>
9001ef7c:	4605      	mov	r5, r0
9001ef7e:	4640      	mov	r0, r8
9001ef80:	f7fa f922 	bl	900191c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001ef84:	4682      	mov	sl, r0
9001ef86:	4640      	mov	r0, r8
9001ef88:	f7fa f972 	bl	90019270 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001ef8c:	2810      	cmp	r0, #16
9001ef8e:	d82c      	bhi.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ef90:	e8df f010 	tbh	[pc, r0, lsl #1]
9001ef94:	00ba00ca 	.word	0x00ba00ca
9001ef98:	002b0011 	.word	0x002b0011
9001ef9c:	002b002b 	.word	0x002b002b
9001efa0:	002b002b 	.word	0x002b002b
9001efa4:	002b002b 	.word	0x002b002b
9001efa8:	00c1002b 	.word	0x00c1002b
9001efac:	002b002b 	.word	0x002b002b
9001efb0:	002b0180 	.word	0x002b0180
9001efb4:	0173      	.short	0x0173
9001efb6:	4bbc      	ldr	r3, [pc, #752]	@ (9001f2a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
9001efb8:	6818      	ldr	r0, [r3, #0]
9001efba:	6803      	ldr	r3, [r0, #0]
9001efbc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001efbe:	4798      	blx	r3
9001efc0:	2eff      	cmp	r6, #255	@ 0xff
9001efc2:	d101      	bne.n	9001efc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001efc4:	0683      	lsls	r3, r0, #26
9001efc6:	d506      	bpl.n	9001efd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
9001efc8:	4633      	mov	r3, r6
9001efca:	4622      	mov	r2, r4
9001efcc:	a902      	add	r1, sp, #8
9001efce:	4628      	mov	r0, r5
9001efd0:	f7ff f8fc 	bl	9001e1cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001efd4:	e009      	b.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001efd6:	4640      	mov	r0, r8
9001efd8:	f7fa f88e 	bl	900190f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001efdc:	b940      	cbnz	r0, 9001eff0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9001efde:	4623      	mov	r3, r4
9001efe0:	aa02      	add	r2, sp, #8
9001efe2:	4629      	mov	r1, r5
9001efe4:	4638      	mov	r0, r7
9001efe6:	f7ff f9d7 	bl	9001e398 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001efea:	b009      	add	sp, #36	@ 0x24
9001efec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eff0:	f10d 0918 	add.w	r9, sp, #24
9001eff4:	4641      	mov	r1, r8
9001eff6:	f10d 0810 	add.w	r8, sp, #16
9001effa:	4648      	mov	r0, r9
9001effc:	f7fa f82a 	bl	90019054 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001f000:	e899 0003 	ldmia.w	r9, {r0, r1}
9001f004:	e888 0003 	stmia.w	r8, {r0, r1}
9001f008:	4640      	mov	r0, r8
9001f00a:	4621      	mov	r1, r4
9001f00c:	f7f0 ffdc 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001f010:	4640      	mov	r0, r8
9001f012:	f7f1 f81c 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001f016:	2800      	cmp	r0, #0
9001f018:	d1d6      	bne.n	9001efc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001f01a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f01e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001f022:	4293      	cmp	r3, r2
9001f024:	dd12      	ble.n	9001f04c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
9001f026:	1a9b      	subs	r3, r3, r2
9001f028:	f9b4 0000 	ldrsh.w	r0, [r4]
9001f02c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001f030:	f8ad 0018 	strh.w	r0, [sp, #24]
9001f034:	4628      	mov	r0, r5
9001f036:	f8ad 201a 	strh.w	r2, [sp, #26]
9001f03a:	464a      	mov	r2, r9
9001f03c:	f8ad 101c 	strh.w	r1, [sp, #28]
9001f040:	a902      	add	r1, sp, #8
9001f042:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f046:	4633      	mov	r3, r6
9001f048:	f7ff f8c0 	bl	9001e1cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f04c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001f050:	f9b4 2000 	ldrsh.w	r2, [r4]
9001f054:	4293      	cmp	r3, r2
9001f056:	dd12      	ble.n	9001f07e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
9001f058:	1a9b      	subs	r3, r3, r2
9001f05a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001f05e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001f062:	f8ad 2018 	strh.w	r2, [sp, #24]
9001f066:	464a      	mov	r2, r9
9001f068:	f8ad 001a 	strh.w	r0, [sp, #26]
9001f06c:	4628      	mov	r0, r5
9001f06e:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f072:	23ff      	movs	r3, #255	@ 0xff
9001f074:	f8ad 101e 	strh.w	r1, [sp, #30]
9001f078:	a902      	add	r1, sp, #8
9001f07a:	f7ff f8a7 	bl	9001e1cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f07e:	4643      	mov	r3, r8
9001f080:	aa02      	add	r2, sp, #8
9001f082:	4629      	mov	r1, r5
9001f084:	4638      	mov	r0, r7
9001f086:	f7ff f987 	bl	9001e398 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001f08a:	88a2      	ldrh	r2, [r4, #4]
9001f08c:	8823      	ldrh	r3, [r4, #0]
9001f08e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001f092:	4413      	add	r3, r2
9001f094:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f098:	440a      	add	r2, r1
9001f09a:	b29b      	uxth	r3, r3
9001f09c:	b292      	uxth	r2, r2
9001f09e:	b218      	sxth	r0, r3
9001f0a0:	b211      	sxth	r1, r2
9001f0a2:	4288      	cmp	r0, r1
9001f0a4:	dd12      	ble.n	9001f0cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
9001f0a6:	1a9b      	subs	r3, r3, r2
9001f0a8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001f0ac:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001f0b0:	464a      	mov	r2, r9
9001f0b2:	f8ad 1018 	strh.w	r1, [sp, #24]
9001f0b6:	a902      	add	r1, sp, #8
9001f0b8:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f0bc:	23ff      	movs	r3, #255	@ 0xff
9001f0be:	f8ad 001e 	strh.w	r0, [sp, #30]
9001f0c2:	4628      	mov	r0, r5
9001f0c4:	f8ad 601a 	strh.w	r6, [sp, #26]
9001f0c8:	f7ff f880 	bl	9001e1cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f0cc:	88e2      	ldrh	r2, [r4, #6]
9001f0ce:	8863      	ldrh	r3, [r4, #2]
9001f0d0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001f0d4:	4413      	add	r3, r2
9001f0d6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001f0da:	440a      	add	r2, r1
9001f0dc:	b29b      	uxth	r3, r3
9001f0de:	b292      	uxth	r2, r2
9001f0e0:	b218      	sxth	r0, r3
9001f0e2:	b211      	sxth	r1, r2
9001f0e4:	4288      	cmp	r0, r1
9001f0e6:	dd80      	ble.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f0e8:	1a9b      	subs	r3, r3, r2
9001f0ea:	f9b4 6000 	ldrsh.w	r6, [r4]
9001f0ee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001f0f2:	464a      	mov	r2, r9
9001f0f4:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f0f8:	23ff      	movs	r3, #255	@ 0xff
9001f0fa:	f8ad 6018 	strh.w	r6, [sp, #24]
9001f0fe:	f8ad 101a 	strh.w	r1, [sp, #26]
9001f102:	f8ad 001c 	strh.w	r0, [sp, #28]
9001f106:	e761      	b.n	9001efcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
9001f108:	4633      	mov	r3, r6
9001f10a:	4622      	mov	r2, r4
9001f10c:	a902      	add	r1, sp, #8
9001f10e:	4628      	mov	r0, r5
9001f110:	f7ff f9b2 	bl	9001e478 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001f114:	e769      	b.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f116:	e9cd 4600 	strd	r4, r6, [sp]
9001f11a:	ab02      	add	r3, sp, #8
9001f11c:	4652      	mov	r2, sl
9001f11e:	4629      	mov	r1, r5
9001f120:	4638      	mov	r0, r7
9001f122:	f7ff fd89 	bl	9001ec38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001f126:	e760      	b.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f128:	4640      	mov	r0, r8
9001f12a:	f7f9 ffe5 	bl	900190f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001f12e:	b948      	cbnz	r0, 9001f144 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
9001f130:	683b      	ldr	r3, [r7, #0]
9001f132:	aa02      	add	r2, sp, #8
9001f134:	4629      	mov	r1, r5
9001f136:	e9cd 6000 	strd	r6, r0, [sp]
9001f13a:	4638      	mov	r0, r7
9001f13c:	68de      	ldr	r6, [r3, #12]
9001f13e:	4623      	mov	r3, r4
9001f140:	47b0      	blx	r6
9001f142:	e752      	b.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f144:	f10d 0918 	add.w	r9, sp, #24
9001f148:	4641      	mov	r1, r8
9001f14a:	f10d 0810 	add.w	r8, sp, #16
9001f14e:	4648      	mov	r0, r9
9001f150:	f7f9 ff80 	bl	90019054 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001f154:	e899 0003 	ldmia.w	r9, {r0, r1}
9001f158:	e888 0003 	stmia.w	r8, {r0, r1}
9001f15c:	4640      	mov	r0, r8
9001f15e:	4621      	mov	r1, r4
9001f160:	f7f0 ff32 	bl	9000ffc8 <_ZN8touchgfx4RectaNERKS0_>
9001f164:	4640      	mov	r0, r8
9001f166:	f7f0 ff72 	bl	9001004e <_ZNK8touchgfx4Rect7isEmptyEv>
9001f16a:	b138      	cbz	r0, 9001f17c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
9001f16c:	4623      	mov	r3, r4
9001f16e:	9600      	str	r6, [sp, #0]
9001f170:	aa02      	add	r2, sp, #8
9001f172:	4651      	mov	r1, sl
9001f174:	4628      	mov	r0, r5
9001f176:	f7ff fdbd 	bl	9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f17a:	e736      	b.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f17c:	683b      	ldr	r3, [r7, #0]
9001f17e:	aa02      	add	r2, sp, #8
9001f180:	4629      	mov	r1, r5
9001f182:	e9cd 6000 	strd	r6, r0, [sp]
9001f186:	4638      	mov	r0, r7
9001f188:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001f18c:	4643      	mov	r3, r8
9001f18e:	47d8      	blx	fp
9001f190:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f194:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001f198:	4293      	cmp	r3, r2
9001f19a:	dd13      	ble.n	9001f1c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
9001f19c:	f9b4 0000 	ldrsh.w	r0, [r4]
9001f1a0:	1a9b      	subs	r3, r3, r2
9001f1a2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001f1a6:	f8ad 0018 	strh.w	r0, [sp, #24]
9001f1aa:	4628      	mov	r0, r5
9001f1ac:	f8ad 201a 	strh.w	r2, [sp, #26]
9001f1b0:	aa02      	add	r2, sp, #8
9001f1b2:	f8ad 101c 	strh.w	r1, [sp, #28]
9001f1b6:	4651      	mov	r1, sl
9001f1b8:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f1bc:	464b      	mov	r3, r9
9001f1be:	9600      	str	r6, [sp, #0]
9001f1c0:	f7ff fd98 	bl	9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f1c4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001f1c8:	f9b4 2000 	ldrsh.w	r2, [r4]
9001f1cc:	4293      	cmp	r3, r2
9001f1ce:	dd13      	ble.n	9001f1f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
9001f1d0:	1a9b      	subs	r3, r3, r2
9001f1d2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001f1d6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001f1da:	f8ad 2018 	strh.w	r2, [sp, #24]
9001f1de:	aa02      	add	r2, sp, #8
9001f1e0:	f8ad 001a 	strh.w	r0, [sp, #26]
9001f1e4:	4628      	mov	r0, r5
9001f1e6:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f1ea:	464b      	mov	r3, r9
9001f1ec:	f8ad 101e 	strh.w	r1, [sp, #30]
9001f1f0:	4651      	mov	r1, sl
9001f1f2:	9600      	str	r6, [sp, #0]
9001f1f4:	f7ff fd7e 	bl	9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f1f8:	88a2      	ldrh	r2, [r4, #4]
9001f1fa:	8823      	ldrh	r3, [r4, #0]
9001f1fc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001f200:	4413      	add	r3, r2
9001f202:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f206:	440a      	add	r2, r1
9001f208:	b29b      	uxth	r3, r3
9001f20a:	b292      	uxth	r2, r2
9001f20c:	b218      	sxth	r0, r3
9001f20e:	b211      	sxth	r1, r2
9001f210:	4288      	cmp	r0, r1
9001f212:	dd13      	ble.n	9001f23c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
9001f214:	1a9b      	subs	r3, r3, r2
9001f216:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001f21a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001f21e:	aa02      	add	r2, sp, #8
9001f220:	f8ad 1018 	strh.w	r1, [sp, #24]
9001f224:	4651      	mov	r1, sl
9001f226:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f22a:	464b      	mov	r3, r9
9001f22c:	f8ad 001e 	strh.w	r0, [sp, #30]
9001f230:	4628      	mov	r0, r5
9001f232:	9600      	str	r6, [sp, #0]
9001f234:	f8ad 701a 	strh.w	r7, [sp, #26]
9001f238:	f7ff fd5c 	bl	9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f23c:	88e2      	ldrh	r2, [r4, #6]
9001f23e:	8863      	ldrh	r3, [r4, #2]
9001f240:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001f244:	4413      	add	r3, r2
9001f246:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001f24a:	440a      	add	r2, r1
9001f24c:	b29b      	uxth	r3, r3
9001f24e:	b292      	uxth	r2, r2
9001f250:	b218      	sxth	r0, r3
9001f252:	b211      	sxth	r1, r2
9001f254:	4288      	cmp	r0, r1
9001f256:	f77f aec8 	ble.w	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f25a:	f9b4 7000 	ldrsh.w	r7, [r4]
9001f25e:	1a9b      	subs	r3, r3, r2
9001f260:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001f264:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f268:	464b      	mov	r3, r9
9001f26a:	f8ad 7018 	strh.w	r7, [sp, #24]
9001f26e:	f8ad 101a 	strh.w	r1, [sp, #26]
9001f272:	f8ad 001c 	strh.w	r0, [sp, #28]
9001f276:	9600      	str	r6, [sp, #0]
9001f278:	e77a      	b.n	9001f170 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
9001f27a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
9001f27e:	2800      	cmp	r0, #0
9001f280:	f43f aeb3 	beq.w	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f284:	6803      	ldr	r3, [r0, #0]
9001f286:	9600      	str	r6, [sp, #0]
9001f288:	68de      	ldr	r6, [r3, #12]
9001f28a:	4623      	mov	r3, r4
9001f28c:	aa02      	add	r2, sp, #8
9001f28e:	4629      	mov	r1, r5
9001f290:	47b0      	blx	r6
9001f292:	e6aa      	b.n	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f294:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
9001f298:	2800      	cmp	r0, #0
9001f29a:	f43f aea6 	beq.w	9001efea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001f29e:	6803      	ldr	r3, [r0, #0]
9001f2a0:	9600      	str	r6, [sp, #0]
9001f2a2:	689e      	ldr	r6, [r3, #8]
9001f2a4:	e7f1      	b.n	9001f28a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
9001f2a6:	bf00      	nop
9001f2a8:	24021bdc 	.word	0x24021bdc

9001f2ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001f2ac:	b180      	cbz	r0, 9001f2d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001f2ae:	2903      	cmp	r1, #3
9001f2b0:	d81c      	bhi.n	9001f2ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001f2b2:	e8df f001 	tbb	[pc, r1]
9001f2b6:	1d02      	.short	0x1d02
9001f2b8:	1f08      	.short	0x1f08
9001f2ba:	4b10      	ldr	r3, [pc, #64]	@ (9001f2fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001f2bc:	8818      	ldrh	r0, [r3, #0]
9001f2be:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f2c2:	4240      	negs	r0, r0
9001f2c4:	4770      	bx	lr
9001f2c6:	4b0d      	ldr	r3, [pc, #52]	@ (9001f2fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001f2c8:	8818      	ldrh	r0, [r3, #0]
9001f2ca:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f2ce:	4770      	bx	lr
9001f2d0:	2903      	cmp	r1, #3
9001f2d2:	d80b      	bhi.n	9001f2ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001f2d4:	a301      	add	r3, pc, #4	@ (adr r3, 9001f2dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001f2d6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001f2da:	bf00      	nop
9001f2dc:	9001f2f1 	.word	0x9001f2f1
9001f2e0:	9001f2c7 	.word	0x9001f2c7
9001f2e4:	9001f2f5 	.word	0x9001f2f5
9001f2e8:	9001f2bb 	.word	0x9001f2bb
9001f2ec:	2000      	movs	r0, #0
9001f2ee:	4770      	bx	lr
9001f2f0:	2001      	movs	r0, #1
9001f2f2:	4770      	bx	lr
9001f2f4:	f04f 30ff 	mov.w	r0, #4294967295
9001f2f8:	4770      	bx	lr
9001f2fa:	bf00      	nop
9001f2fc:	24021bd6 	.word	0x24021bd6

9001f300 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001f300:	b180      	cbz	r0, 9001f324 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001f302:	2903      	cmp	r1, #3
9001f304:	d81c      	bhi.n	9001f340 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001f306:	e8df f001 	tbb	[pc, r1]
9001f30a:	021d      	.short	0x021d
9001f30c:	071f      	.short	0x071f
9001f30e:	4b10      	ldr	r3, [pc, #64]	@ (9001f350 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001f310:	8818      	ldrh	r0, [r3, #0]
9001f312:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f316:	4770      	bx	lr
9001f318:	4b0d      	ldr	r3, [pc, #52]	@ (9001f350 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001f31a:	8818      	ldrh	r0, [r3, #0]
9001f31c:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f320:	4240      	negs	r0, r0
9001f322:	4770      	bx	lr
9001f324:	2903      	cmp	r1, #3
9001f326:	d80b      	bhi.n	9001f340 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001f328:	a301      	add	r3, pc, #4	@ (adr r3, 9001f330 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001f32a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001f32e:	bf00      	nop
9001f330:	9001f30f 	.word	0x9001f30f
9001f334:	9001f349 	.word	0x9001f349
9001f338:	9001f319 	.word	0x9001f319
9001f33c:	9001f345 	.word	0x9001f345
9001f340:	2000      	movs	r0, #0
9001f342:	4770      	bx	lr
9001f344:	2001      	movs	r0, #1
9001f346:	4770      	bx	lr
9001f348:	f04f 30ff 	mov.w	r0, #4294967295
9001f34c:	4770      	bx	lr
9001f34e:	bf00      	nop
9001f350:	24021bd6 	.word	0x24021bd6

9001f354 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001f354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f358:	b099      	sub	sp, #100	@ 0x64
9001f35a:	910b      	str	r1, [sp, #44]	@ 0x2c
9001f35c:	a914      	add	r1, sp, #80	@ 0x50
9001f35e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
9001f362:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
9001f366:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
9001f36a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
9001f36e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
9001f372:	e881 000c 	stmia.w	r1, {r2, r3}
9001f376:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
9001f37a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
9001f37e:	9309      	str	r3, [sp, #36]	@ 0x24
9001f380:	f891 900d 	ldrb.w	r9, [r1, #13]
9001f384:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9001f388:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001f38c:	9310      	str	r3, [sp, #64]	@ 0x40
9001f38e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
9001f392:	930c      	str	r3, [sp, #48]	@ 0x30
9001f394:	f407 7380 	and.w	r3, r7, #256	@ 0x100
9001f398:	798f      	ldrb	r7, [r1, #6]
9001f39a:	431f      	orrs	r7, r3
9001f39c:	f000 8195 	beq.w	9001f6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f3a0:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001f3a4:	f409 7380 	and.w	r3, r9, #256	@ 0x100
9001f3a8:	f891 9007 	ldrb.w	r9, [r1, #7]
9001f3ac:	ea59 0903 	orrs.w	r9, r9, r3
9001f3b0:	f000 818b 	beq.w	9001f6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f3b4:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001f3b8:	b29b      	uxth	r3, r3
9001f3ba:	2d00      	cmp	r5, #0
9001f3bc:	f000 812e 	beq.w	9001f61c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001f3c0:	1aed      	subs	r5, r5, r3
9001f3c2:	b2ad      	uxth	r5, r5
9001f3c4:	042b      	lsls	r3, r5, #16
9001f3c6:	d502      	bpl.n	9001f3ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001f3c8:	1b64      	subs	r4, r4, r5
9001f3ca:	2500      	movs	r5, #0
9001f3cc:	b224      	sxth	r4, r4
9001f3ce:	f9b2 1000 	ldrsh.w	r1, [r2]
9001f3d2:	a814      	add	r0, sp, #80	@ 0x50
9001f3d4:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
9001f3d8:	428c      	cmp	r4, r1
9001f3da:	b28b      	uxth	r3, r1
9001f3dc:	bfbf      	itttt	lt
9001f3de:	18ed      	addlt	r5, r5, r3
9001f3e0:	1b2c      	sublt	r4, r5, r4
9001f3e2:	b2a5      	uxthlt	r5, r4
9001f3e4:	460c      	movlt	r4, r1
9001f3e6:	8891      	ldrh	r1, [r2, #4]
9001f3e8:	440b      	add	r3, r1
9001f3ea:	4621      	mov	r1, r4
9001f3ec:	b21b      	sxth	r3, r3
9001f3ee:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f3f0:	88d3      	ldrh	r3, [r2, #6]
9001f3f2:	8852      	ldrh	r2, [r2, #2]
9001f3f4:	4413      	add	r3, r2
9001f3f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f3f8:	b21b      	sxth	r3, r3
9001f3fa:	930d      	str	r3, [sp, #52]	@ 0x34
9001f3fc:	4bbd      	ldr	r3, [pc, #756]	@ (9001f6f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001f3fe:	f893 b000 	ldrb.w	fp, [r3]
9001f402:	f10b 3cff 	add.w	ip, fp, #4294967295
9001f406:	f1dc 0300 	rsbs	r3, ip, #0
9001f40a:	eb43 030c 	adc.w	r3, r3, ip
9001f40e:	930e      	str	r3, [sp, #56]	@ 0x38
9001f410:	4653      	mov	r3, sl
9001f412:	f7f5 ff26 	bl	90015262 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001f416:	4621      	mov	r1, r4
9001f418:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
9001f41c:	4653      	mov	r3, sl
9001f41e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f420:	a814      	add	r0, sp, #80	@ 0x50
9001f422:	f7f5 ff3b 	bl	9001529c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001f426:	a918      	add	r1, sp, #96	@ 0x60
9001f428:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001f42c:	a817      	add	r0, sp, #92	@ 0x5c
9001f42e:	f7f6 f861 	bl	900154f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001f432:	f1ba 0f00 	cmp.w	sl, #0
9001f436:	f040 80f4 	bne.w	9001f622 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001f43a:	f1bb 0f01 	cmp.w	fp, #1
9001f43e:	f040 80f8 	bne.w	9001f632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001f442:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f444:	2b00      	cmp	r3, #0
9001f446:	f040 8145 	bne.w	9001f6d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001f44a:	b2ba      	uxth	r2, r7
9001f44c:	b905      	cbnz	r5, 9001f450 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001f44e:	b16e      	cbz	r6, 9001f46c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001f450:	fb06 5302 	mla	r3, r6, r2, r5
9001f454:	9828      	ldr	r0, [sp, #160]	@ 0xa0
9001f456:	4631      	mov	r1, r6
9001f458:	fb08 f303 	mul.w	r3, r8, r3
9001f45c:	f003 0607 	and.w	r6, r3, #7
9001f460:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001f464:	9328      	str	r3, [sp, #160]	@ 0xa0
9001f466:	eba9 0301 	sub.w	r3, r9, r1
9001f46a:	930a      	str	r3, [sp, #40]	@ 0x28
9001f46c:	4651      	mov	r1, sl
9001f46e:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001f470:	f7ff ff1c 	bl	9001f2ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001f474:	4681      	mov	r9, r0
9001f476:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001f478:	f7ff ff42 	bl	9001f300 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001f47c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f47e:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001f480:	4683      	mov	fp, r0
9001f482:	eba3 0a01 	sub.w	sl, r3, r1
9001f486:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f488:	459a      	cmp	sl, r3
9001f48a:	bfa8      	it	ge
9001f48c:	469a      	movge	sl, r3
9001f48e:	f1ba 0f00 	cmp.w	sl, #0
9001f492:	f340 811a 	ble.w	9001f6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f496:	1b64      	subs	r4, r4, r5
9001f498:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001f49a:	1b1c      	subs	r4, r3, r4
9001f49c:	42bc      	cmp	r4, r7
9001f49e:	bfd4      	ite	le
9001f4a0:	ebc5 0504 	rsble	r5, r5, r4
9001f4a4:	ebc5 0507 	rsbgt	r5, r5, r7
9001f4a8:	2d00      	cmp	r5, #0
9001f4aa:	f340 810e 	ble.w	9001f6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f4ae:	1b52      	subs	r2, r2, r5
9001f4b0:	fb08 f302 	mul.w	r3, r8, r2
9001f4b4:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f4b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f4b8:	2b00      	cmp	r3, #0
9001f4ba:	f040 8116 	bne.w	9001f6ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001f4be:	4b8e      	ldr	r3, [pc, #568]	@ (9001f6f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001f4c0:	6818      	ldr	r0, [r3, #0]
9001f4c2:	6803      	ldr	r3, [r0, #0]
9001f4c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f4c6:	4798      	blx	r3
9001f4c8:	2301      	movs	r3, #1
9001f4ca:	4a8c      	ldr	r2, [pc, #560]	@ (9001f6fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001f4cc:	fa03 f308 	lsl.w	r3, r3, r8
9001f4d0:	8811      	ldrh	r1, [r2, #0]
9001f4d2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
9001f4d6:	3b01      	subs	r3, #1
9001f4d8:	b2db      	uxtb	r3, r3
9001f4da:	930e      	str	r3, [sp, #56]	@ 0x38
9001f4dc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
9001f4e0:	fb01 2303 	mla	r3, r1, r3, r2
9001f4e4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f4e8:	930a      	str	r3, [sp, #40]	@ 0x28
9001f4ea:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f4ec:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001f4f0:	9313      	str	r3, [sp, #76]	@ 0x4c
9001f4f2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f4f4:	0a19      	lsrs	r1, r3, #8
9001f4f6:	b2cb      	uxtb	r3, r1
9001f4f8:	9312      	str	r3, [sp, #72]	@ 0x48
9001f4fa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f4fc:	b2db      	uxtb	r3, r3
9001f4fe:	9311      	str	r3, [sp, #68]	@ 0x44
9001f500:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f502:	095a      	lsrs	r2, r3, #5
9001f504:	4b7e      	ldr	r3, [pc, #504]	@ (9001f700 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001f506:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f50a:	400b      	ands	r3, r1
9001f50c:	4313      	orrs	r3, r2
9001f50e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
9001f510:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f514:	4313      	orrs	r3, r2
9001f516:	b29b      	uxth	r3, r3
9001f518:	9310      	str	r3, [sp, #64]	@ 0x40
9001f51a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f51c:	781a      	ldrb	r2, [r3, #0]
9001f51e:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001f522:	fb05 b919 	mls	r9, r5, r9, fp
9001f526:	4132      	asrs	r2, r6
9001f528:	fb03 fb05 	mul.w	fp, r3, r5
9001f52c:	930d      	str	r3, [sp, #52]	@ 0x34
9001f52e:	b2d2      	uxtb	r2, r2
9001f530:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001f534:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001f538:	f0c0 80f5 	bcc.w	9001f726 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001f53c:	46ae      	mov	lr, r5
9001f53e:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
9001f542:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001f546:	f0c0 80dd 	bcc.w	9001f704 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001f54a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f54c:	4013      	ands	r3, r2
9001f54e:	d055      	beq.n	9001f5fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001f550:	20ff      	movs	r0, #255	@ 0xff
9001f552:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001f554:	fb90 f1f1 	sdiv	r1, r0, r1
9001f558:	434b      	muls	r3, r1
9001f55a:	2bfe      	cmp	r3, #254	@ 0xfe
9001f55c:	dd03      	ble.n	9001f566 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001f55e:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001f560:	4281      	cmp	r1, r0
9001f562:	f000 80c4 	beq.w	9001f6ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001f566:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001f568:	f8bc 4000 	ldrh.w	r4, [ip]
9001f56c:	fb11 f303 	smulbb	r3, r1, r3
9001f570:	1220      	asrs	r0, r4, #8
9001f572:	b29b      	uxth	r3, r3
9001f574:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001f578:	1c59      	adds	r1, r3, #1
9001f57a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001f57e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001f582:	10e1      	asrs	r1, r4, #3
9001f584:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001f588:	00e4      	lsls	r4, r4, #3
9001f58a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001f58e:	b29f      	uxth	r7, r3
9001f590:	43db      	mvns	r3, r3
9001f592:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f596:	b2db      	uxtb	r3, r3
9001f598:	b2e4      	uxtb	r4, r4
9001f59a:	9309      	str	r3, [sp, #36]	@ 0x24
9001f59c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001f59e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001f5a2:	fb13 f907 	smulbb	r9, r3, r7
9001f5a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f5a8:	fb00 9003 	mla	r0, r0, r3, r9
9001f5ac:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9001f5ae:	fb13 f907 	smulbb	r9, r3, r7
9001f5b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f5b4:	b280      	uxth	r0, r0
9001f5b6:	fb01 9103 	mla	r1, r1, r3, r9
9001f5ba:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001f5bc:	fb13 f707 	smulbb	r7, r3, r7
9001f5c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f5c2:	b289      	uxth	r1, r1
9001f5c4:	fb04 7403 	mla	r4, r4, r3, r7
9001f5c8:	1c43      	adds	r3, r0, #1
9001f5ca:	b2a4      	uxth	r4, r4
9001f5cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001f5d0:	f104 0901 	add.w	r9, r4, #1
9001f5d4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9001f5d8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001f5dc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001f5e0:	ea49 0000 	orr.w	r0, r9, r0
9001f5e4:	f101 0901 	add.w	r9, r1, #1
9001f5e8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001f5ec:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001f5f0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001f5f4:	ea40 0009 	orr.w	r0, r0, r9
9001f5f8:	f8ac 0000 	strh.w	r0, [ip]
9001f5fc:	4446      	add	r6, r8
9001f5fe:	b2b6      	uxth	r6, r6
9001f600:	2e07      	cmp	r6, #7
9001f602:	bf89      	itett	hi
9001f604:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
9001f606:	fa42 f208 	asrls.w	r2, r2, r8
9001f60a:	2600      	movhi	r6, #0
9001f60c:	785a      	ldrbhi	r2, [r3, #1]
9001f60e:	bf8a      	itet	hi
9001f610:	3301      	addhi	r3, #1
9001f612:	b2d2      	uxtbls	r2, r2
9001f614:	9328      	strhi	r3, [sp, #160]	@ 0xa0
9001f616:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f618:	449c      	add	ip, r3
9001f61a:	e792      	b.n	9001f542 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001f61c:	441c      	add	r4, r3
9001f61e:	b224      	sxth	r4, r4
9001f620:	e6d5      	b.n	9001f3ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001f622:	f1ba 0f01 	cmp.w	sl, #1
9001f626:	f47f af0c 	bne.w	9001f442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f62a:	f1bb 0f01 	cmp.w	fp, #1
9001f62e:	f47f af08 	bne.w	9001f442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f632:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 9001f6f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001f636:	f8db 0000 	ldr.w	r0, [fp]
9001f63a:	6803      	ldr	r3, [r0, #0]
9001f63c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f63e:	4798      	blx	r3
9001f640:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
9001f644:	465a      	mov	r2, fp
9001f646:	d006      	beq.n	9001f656 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f648:	f1b8 0f04 	cmp.w	r8, #4
9001f64c:	d140      	bne.n	9001f6d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001f64e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f650:	3300      	adds	r3, #0
9001f652:	bf18      	it	ne
9001f654:	2301      	movne	r3, #1
9001f656:	0580      	lsls	r0, r0, #22
9001f658:	d56e      	bpl.n	9001f738 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f65a:	f1b8 0f08 	cmp.w	r8, #8
9001f65e:	d16b      	bne.n	9001f738 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f660:	2b00      	cmp	r3, #0
9001f662:	bf0c      	ite	eq
9001f664:	f44f 7100 	moveq.w	r1, #512	@ 0x200
9001f668:	f44f 7180 	movne.w	r1, #256	@ 0x100
9001f66c:	2d00      	cmp	r5, #0
9001f66e:	f47f aee8 	bne.w	9001f442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f672:	2e00      	cmp	r6, #0
9001f674:	f47f aee5 	bne.w	9001f442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f678:	19e3      	adds	r3, r4, r7
9001f67a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001f67c:	4283      	cmp	r3, r0
9001f67e:	f73f aee0 	bgt.w	9001f442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f682:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f684:	980d      	ldr	r0, [sp, #52]	@ 0x34
9001f686:	444b      	add	r3, r9
9001f688:	4283      	cmp	r3, r0
9001f68a:	f73f aeda 	bgt.w	9001f442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f68e:	b2bf      	uxth	r7, r7
9001f690:	f1b8 0f08 	cmp.w	r8, #8
9001f694:	6810      	ldr	r0, [r2, #0]
9001f696:	f04f 0500 	mov.w	r5, #0
9001f69a:	bf18      	it	ne
9001f69c:	3701      	addne	r7, #1
9001f69e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
9001f6a2:	6804      	ldr	r4, [r0, #0]
9001f6a4:	bf18      	it	ne
9001f6a6:	f027 0701 	bicne.w	r7, r7, #1
9001f6aa:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001f6ae:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001f6b2:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001f6b4:	bf18      	it	ne
9001f6b6:	b2bf      	uxthne	r7, r7
9001f6b8:	9104      	str	r1, [sp, #16]
9001f6ba:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9001f6bc:	e9cd 7900 	strd	r7, r9, [sp]
9001f6c0:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001f6c4:	9928      	ldr	r1, [sp, #160]	@ 0xa0
9001f6c6:	6d64      	ldr	r4, [r4, #84]	@ 0x54
9001f6c8:	47a0      	blx	r4
9001f6ca:	b019      	add	sp, #100	@ 0x64
9001f6cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f6d0:	2300      	movs	r3, #0
9001f6d2:	e7c0      	b.n	9001f656 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f6d4:	2208      	movs	r2, #8
9001f6d6:	fb92 f3f8 	sdiv	r3, r2, r8
9001f6da:	1e5a      	subs	r2, r3, #1
9001f6dc:	443a      	add	r2, r7
9001f6de:	fb92 f2f3 	sdiv	r2, r2, r3
9001f6e2:	fb12 f203 	smulbb	r2, r2, r3
9001f6e6:	b292      	uxth	r2, r2
9001f6e8:	e6b0      	b.n	9001f44c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001f6ea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001f6ec:	e6ec      	b.n	9001f4c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001f6ee:	9810      	ldr	r0, [sp, #64]	@ 0x40
9001f6f0:	e782      	b.n	9001f5f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001f6f2:	bf00      	nop
9001f6f4:	24021bd4 	.word	0x24021bd4
9001f6f8:	24021bdc 	.word	0x24021bdc
9001f6fc:	24021bd6 	.word	0x24021bd6
9001f700:	00fff800 	.word	0x00fff800
9001f704:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001f706:	b153      	cbz	r3, 9001f71e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001f708:	441e      	add	r6, r3
9001f70a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f70c:	b2b6      	uxth	r6, r6
9001f70e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001f712:	f006 0607 	and.w	r6, r6, #7
9001f716:	781a      	ldrb	r2, [r3, #0]
9001f718:	9328      	str	r3, [sp, #160]	@ 0xa0
9001f71a:	4132      	asrs	r2, r6
9001f71c:	b2d2      	uxtb	r2, r2
9001f71e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f720:	445b      	add	r3, fp
9001f722:	930a      	str	r3, [sp, #40]	@ 0x28
9001f724:	e706      	b.n	9001f534 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001f726:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f728:	2b00      	cmp	r3, #0
9001f72a:	d1ce      	bne.n	9001f6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f72c:	4b05      	ldr	r3, [pc, #20]	@ (9001f744 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001f72e:	6818      	ldr	r0, [r3, #0]
9001f730:	6803      	ldr	r3, [r0, #0]
9001f732:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f734:	4798      	blx	r3
9001f736:	e7c8      	b.n	9001f6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f738:	2b00      	cmp	r3, #0
9001f73a:	f43f ae82 	beq.w	9001f442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f73e:	f44f 7180 	mov.w	r1, #256	@ 0x100
9001f742:	e793      	b.n	9001f66c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001f744:	24021bdc 	.word	0x24021bdc

9001f748 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001f748:	b538      	push	{r3, r4, r5, lr}
9001f74a:	4c15      	ldr	r4, [pc, #84]	@ (9001f7a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001f74c:	4605      	mov	r5, r0
9001f74e:	7823      	ldrb	r3, [r4, #0]
9001f750:	f3bf 8f5b 	dmb	ish
9001f754:	07da      	lsls	r2, r3, #31
9001f756:	d40b      	bmi.n	9001f770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f758:	4620      	mov	r0, r4
9001f75a:	f008 fc6b 	bl	90028034 <__cxa_guard_acquire>
9001f75e:	b138      	cbz	r0, 9001f770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f760:	4620      	mov	r0, r4
9001f762:	f008 fc73 	bl	9002804c <__cxa_guard_release>
9001f766:	4a0f      	ldr	r2, [pc, #60]	@ (9001f7a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f768:	490f      	ldr	r1, [pc, #60]	@ (9001f7a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001f76a:	4810      	ldr	r0, [pc, #64]	@ (9001f7ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f76c:	f008 fc5b 	bl	90028026 <__aeabi_atexit>
9001f770:	4c0f      	ldr	r4, [pc, #60]	@ (9001f7b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001f772:	7823      	ldrb	r3, [r4, #0]
9001f774:	f3bf 8f5b 	dmb	ish
9001f778:	07db      	lsls	r3, r3, #31
9001f77a:	d40b      	bmi.n	9001f794 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f77c:	4620      	mov	r0, r4
9001f77e:	f008 fc59 	bl	90028034 <__cxa_guard_acquire>
9001f782:	b138      	cbz	r0, 9001f794 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f784:	4620      	mov	r0, r4
9001f786:	f008 fc61 	bl	9002804c <__cxa_guard_release>
9001f78a:	4a06      	ldr	r2, [pc, #24]	@ (9001f7a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f78c:	4909      	ldr	r1, [pc, #36]	@ (9001f7b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001f78e:	480a      	ldr	r0, [pc, #40]	@ (9001f7b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f790:	f008 fc49 	bl	90028026 <__aeabi_atexit>
9001f794:	4b05      	ldr	r3, [pc, #20]	@ (9001f7ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f796:	616b      	str	r3, [r5, #20]
9001f798:	4b07      	ldr	r3, [pc, #28]	@ (9001f7b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f79a:	61ab      	str	r3, [r5, #24]
9001f79c:	bd38      	pop	{r3, r4, r5, pc}
9001f79e:	bf00      	nop
9001f7a0:	24021cc0 	.word	0x24021cc0
9001f7a4:	24000000 	.word	0x24000000
9001f7a8:	9001b8e5 	.word	0x9001b8e5
9001f7ac:	240000e4 	.word	0x240000e4
9001f7b0:	24021cc4 	.word	0x24021cc4
9001f7b4:	9001b8e3 	.word	0x9001b8e3
9001f7b8:	240000e8 	.word	0x240000e8

9001f7bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001f7bc:	b538      	push	{r3, r4, r5, lr}
9001f7be:	4c15      	ldr	r4, [pc, #84]	@ (9001f814 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001f7c0:	4605      	mov	r5, r0
9001f7c2:	7823      	ldrb	r3, [r4, #0]
9001f7c4:	f3bf 8f5b 	dmb	ish
9001f7c8:	07da      	lsls	r2, r3, #31
9001f7ca:	d40b      	bmi.n	9001f7e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f7cc:	4620      	mov	r0, r4
9001f7ce:	f008 fc31 	bl	90028034 <__cxa_guard_acquire>
9001f7d2:	b138      	cbz	r0, 9001f7e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f7d4:	4620      	mov	r0, r4
9001f7d6:	f008 fc39 	bl	9002804c <__cxa_guard_release>
9001f7da:	4a0f      	ldr	r2, [pc, #60]	@ (9001f818 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f7dc:	490f      	ldr	r1, [pc, #60]	@ (9001f81c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001f7de:	4810      	ldr	r0, [pc, #64]	@ (9001f820 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f7e0:	f008 fc21 	bl	90028026 <__aeabi_atexit>
9001f7e4:	4c0f      	ldr	r4, [pc, #60]	@ (9001f824 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001f7e6:	7823      	ldrb	r3, [r4, #0]
9001f7e8:	f3bf 8f5b 	dmb	ish
9001f7ec:	07db      	lsls	r3, r3, #31
9001f7ee:	d40b      	bmi.n	9001f808 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f7f0:	4620      	mov	r0, r4
9001f7f2:	f008 fc1f 	bl	90028034 <__cxa_guard_acquire>
9001f7f6:	b138      	cbz	r0, 9001f808 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f7f8:	4620      	mov	r0, r4
9001f7fa:	f008 fc27 	bl	9002804c <__cxa_guard_release>
9001f7fe:	4a06      	ldr	r2, [pc, #24]	@ (9001f818 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f800:	4909      	ldr	r1, [pc, #36]	@ (9001f828 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001f802:	480a      	ldr	r0, [pc, #40]	@ (9001f82c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f804:	f008 fc0f 	bl	90028026 <__aeabi_atexit>
9001f808:	4b05      	ldr	r3, [pc, #20]	@ (9001f820 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f80a:	60eb      	str	r3, [r5, #12]
9001f80c:	4b07      	ldr	r3, [pc, #28]	@ (9001f82c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f80e:	612b      	str	r3, [r5, #16]
9001f810:	bd38      	pop	{r3, r4, r5, pc}
9001f812:	bf00      	nop
9001f814:	24021c98 	.word	0x24021c98
9001f818:	24000000 	.word	0x24000000
9001f81c:	9001b8e9 	.word	0x9001b8e9
9001f820:	240000bc 	.word	0x240000bc
9001f824:	24021c9c 	.word	0x24021c9c
9001f828:	9001b8e7 	.word	0x9001b8e7
9001f82c:	240000c0 	.word	0x240000c0

9001f830 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001f830:	b510      	push	{r4, lr}
9001f832:	4604      	mov	r4, r0
9001f834:	f7ff ff88 	bl	9001f748 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001f838:	4620      	mov	r0, r4
9001f83a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f83e:	f7ff bfbd 	b.w	9001f7bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001f844 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001f844:	b538      	push	{r3, r4, r5, lr}
9001f846:	4c15      	ldr	r4, [pc, #84]	@ (9001f89c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001f848:	4605      	mov	r5, r0
9001f84a:	7823      	ldrb	r3, [r4, #0]
9001f84c:	f3bf 8f5b 	dmb	ish
9001f850:	07da      	lsls	r2, r3, #31
9001f852:	d40b      	bmi.n	9001f86c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f854:	4620      	mov	r0, r4
9001f856:	f008 fbed 	bl	90028034 <__cxa_guard_acquire>
9001f85a:	b138      	cbz	r0, 9001f86c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f85c:	4620      	mov	r0, r4
9001f85e:	f008 fbf5 	bl	9002804c <__cxa_guard_release>
9001f862:	4a0f      	ldr	r2, [pc, #60]	@ (9001f8a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f864:	490f      	ldr	r1, [pc, #60]	@ (9001f8a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001f866:	4810      	ldr	r0, [pc, #64]	@ (9001f8a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f868:	f008 fbdd 	bl	90028026 <__aeabi_atexit>
9001f86c:	4c0f      	ldr	r4, [pc, #60]	@ (9001f8ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001f86e:	7823      	ldrb	r3, [r4, #0]
9001f870:	f3bf 8f5b 	dmb	ish
9001f874:	07db      	lsls	r3, r3, #31
9001f876:	d40b      	bmi.n	9001f890 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f878:	4620      	mov	r0, r4
9001f87a:	f008 fbdb 	bl	90028034 <__cxa_guard_acquire>
9001f87e:	b138      	cbz	r0, 9001f890 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f880:	4620      	mov	r0, r4
9001f882:	f008 fbe3 	bl	9002804c <__cxa_guard_release>
9001f886:	4a06      	ldr	r2, [pc, #24]	@ (9001f8a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f888:	4909      	ldr	r1, [pc, #36]	@ (9001f8b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001f88a:	480a      	ldr	r0, [pc, #40]	@ (9001f8b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f88c:	f008 fbcb 	bl	90028026 <__aeabi_atexit>
9001f890:	4b05      	ldr	r3, [pc, #20]	@ (9001f8a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f892:	626b      	str	r3, [r5, #36]	@ 0x24
9001f894:	4b07      	ldr	r3, [pc, #28]	@ (9001f8b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f896:	62ab      	str	r3, [r5, #40]	@ 0x28
9001f898:	bd38      	pop	{r3, r4, r5, pc}
9001f89a:	bf00      	nop
9001f89c:	24021cc8 	.word	0x24021cc8
9001f8a0:	24000000 	.word	0x24000000
9001f8a4:	9001b8dd 	.word	0x9001b8dd
9001f8a8:	240000ec 	.word	0x240000ec
9001f8ac:	24021ccc 	.word	0x24021ccc
9001f8b0:	9001b8db 	.word	0x9001b8db
9001f8b4:	240000f0 	.word	0x240000f0

9001f8b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001f8b8:	b538      	push	{r3, r4, r5, lr}
9001f8ba:	4c15      	ldr	r4, [pc, #84]	@ (9001f910 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001f8bc:	4605      	mov	r5, r0
9001f8be:	7823      	ldrb	r3, [r4, #0]
9001f8c0:	f3bf 8f5b 	dmb	ish
9001f8c4:	07da      	lsls	r2, r3, #31
9001f8c6:	d40b      	bmi.n	9001f8e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f8c8:	4620      	mov	r0, r4
9001f8ca:	f008 fbb3 	bl	90028034 <__cxa_guard_acquire>
9001f8ce:	b138      	cbz	r0, 9001f8e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f8d0:	4620      	mov	r0, r4
9001f8d2:	f008 fbbb 	bl	9002804c <__cxa_guard_release>
9001f8d6:	4a0f      	ldr	r2, [pc, #60]	@ (9001f914 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f8d8:	490f      	ldr	r1, [pc, #60]	@ (9001f918 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001f8da:	4810      	ldr	r0, [pc, #64]	@ (9001f91c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f8dc:	f008 fba3 	bl	90028026 <__aeabi_atexit>
9001f8e0:	4c0f      	ldr	r4, [pc, #60]	@ (9001f920 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001f8e2:	7823      	ldrb	r3, [r4, #0]
9001f8e4:	f3bf 8f5b 	dmb	ish
9001f8e8:	07db      	lsls	r3, r3, #31
9001f8ea:	d40b      	bmi.n	9001f904 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f8ec:	4620      	mov	r0, r4
9001f8ee:	f008 fba1 	bl	90028034 <__cxa_guard_acquire>
9001f8f2:	b138      	cbz	r0, 9001f904 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f8f4:	4620      	mov	r0, r4
9001f8f6:	f008 fba9 	bl	9002804c <__cxa_guard_release>
9001f8fa:	4a06      	ldr	r2, [pc, #24]	@ (9001f914 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f8fc:	4909      	ldr	r1, [pc, #36]	@ (9001f924 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001f8fe:	480a      	ldr	r0, [pc, #40]	@ (9001f928 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f900:	f008 fb91 	bl	90028026 <__aeabi_atexit>
9001f904:	4b05      	ldr	r3, [pc, #20]	@ (9001f91c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f906:	61eb      	str	r3, [r5, #28]
9001f908:	4b07      	ldr	r3, [pc, #28]	@ (9001f928 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f90a:	622b      	str	r3, [r5, #32]
9001f90c:	bd38      	pop	{r3, r4, r5, pc}
9001f90e:	bf00      	nop
9001f910:	24021ca0 	.word	0x24021ca0
9001f914:	24000000 	.word	0x24000000
9001f918:	9001b8e1 	.word	0x9001b8e1
9001f91c:	240000c4 	.word	0x240000c4
9001f920:	24021ca4 	.word	0x24021ca4
9001f924:	9001b8df 	.word	0x9001b8df
9001f928:	240000c8 	.word	0x240000c8

9001f92c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001f92c:	b510      	push	{r4, lr}
9001f92e:	4604      	mov	r4, r0
9001f930:	f7ff ff88 	bl	9001f844 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001f934:	4620      	mov	r0, r4
9001f936:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f93a:	f7ff bfbd 	b.w	9001f8b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001f940 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001f940:	b538      	push	{r3, r4, r5, lr}
9001f942:	4c15      	ldr	r4, [pc, #84]	@ (9001f998 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001f944:	4605      	mov	r5, r0
9001f946:	7823      	ldrb	r3, [r4, #0]
9001f948:	f3bf 8f5b 	dmb	ish
9001f94c:	07da      	lsls	r2, r3, #31
9001f94e:	d40b      	bmi.n	9001f968 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f950:	4620      	mov	r0, r4
9001f952:	f008 fb6f 	bl	90028034 <__cxa_guard_acquire>
9001f956:	b138      	cbz	r0, 9001f968 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f958:	4620      	mov	r0, r4
9001f95a:	f008 fb77 	bl	9002804c <__cxa_guard_release>
9001f95e:	4a0f      	ldr	r2, [pc, #60]	@ (9001f99c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f960:	490f      	ldr	r1, [pc, #60]	@ (9001f9a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001f962:	4810      	ldr	r0, [pc, #64]	@ (9001f9a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f964:	f008 fb5f 	bl	90028026 <__aeabi_atexit>
9001f968:	4c0f      	ldr	r4, [pc, #60]	@ (9001f9a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001f96a:	7823      	ldrb	r3, [r4, #0]
9001f96c:	f3bf 8f5b 	dmb	ish
9001f970:	07db      	lsls	r3, r3, #31
9001f972:	d40b      	bmi.n	9001f98c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f974:	4620      	mov	r0, r4
9001f976:	f008 fb5d 	bl	90028034 <__cxa_guard_acquire>
9001f97a:	b138      	cbz	r0, 9001f98c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f97c:	4620      	mov	r0, r4
9001f97e:	f008 fb65 	bl	9002804c <__cxa_guard_release>
9001f982:	4a06      	ldr	r2, [pc, #24]	@ (9001f99c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f984:	4909      	ldr	r1, [pc, #36]	@ (9001f9ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001f986:	480a      	ldr	r0, [pc, #40]	@ (9001f9b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f988:	f008 fb4d 	bl	90028026 <__aeabi_atexit>
9001f98c:	4b05      	ldr	r3, [pc, #20]	@ (9001f9a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f98e:	636b      	str	r3, [r5, #52]	@ 0x34
9001f990:	4b07      	ldr	r3, [pc, #28]	@ (9001f9b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f992:	63ab      	str	r3, [r5, #56]	@ 0x38
9001f994:	bd38      	pop	{r3, r4, r5, pc}
9001f996:	bf00      	nop
9001f998:	24021cd8 	.word	0x24021cd8
9001f99c:	24000000 	.word	0x24000000
9001f9a0:	9001b8d5 	.word	0x9001b8d5
9001f9a4:	240000fc 	.word	0x240000fc
9001f9a8:	24021cdc 	.word	0x24021cdc
9001f9ac:	9001b8d3 	.word	0x9001b8d3
9001f9b0:	24000100 	.word	0x24000100

9001f9b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001f9b4:	b538      	push	{r3, r4, r5, lr}
9001f9b6:	4c15      	ldr	r4, [pc, #84]	@ (9001fa0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001f9b8:	4605      	mov	r5, r0
9001f9ba:	7823      	ldrb	r3, [r4, #0]
9001f9bc:	f3bf 8f5b 	dmb	ish
9001f9c0:	07da      	lsls	r2, r3, #31
9001f9c2:	d40b      	bmi.n	9001f9dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f9c4:	4620      	mov	r0, r4
9001f9c6:	f008 fb35 	bl	90028034 <__cxa_guard_acquire>
9001f9ca:	b138      	cbz	r0, 9001f9dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f9cc:	4620      	mov	r0, r4
9001f9ce:	f008 fb3d 	bl	9002804c <__cxa_guard_release>
9001f9d2:	4a0f      	ldr	r2, [pc, #60]	@ (9001fa10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f9d4:	490f      	ldr	r1, [pc, #60]	@ (9001fa14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001f9d6:	4810      	ldr	r0, [pc, #64]	@ (9001fa18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f9d8:	f008 fb25 	bl	90028026 <__aeabi_atexit>
9001f9dc:	4c0f      	ldr	r4, [pc, #60]	@ (9001fa1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001f9de:	7823      	ldrb	r3, [r4, #0]
9001f9e0:	f3bf 8f5b 	dmb	ish
9001f9e4:	07db      	lsls	r3, r3, #31
9001f9e6:	d40b      	bmi.n	9001fa00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f9e8:	4620      	mov	r0, r4
9001f9ea:	f008 fb23 	bl	90028034 <__cxa_guard_acquire>
9001f9ee:	b138      	cbz	r0, 9001fa00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f9f0:	4620      	mov	r0, r4
9001f9f2:	f008 fb2b 	bl	9002804c <__cxa_guard_release>
9001f9f6:	4a06      	ldr	r2, [pc, #24]	@ (9001fa10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f9f8:	4909      	ldr	r1, [pc, #36]	@ (9001fa20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001f9fa:	480a      	ldr	r0, [pc, #40]	@ (9001fa24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f9fc:	f008 fb13 	bl	90028026 <__aeabi_atexit>
9001fa00:	4b05      	ldr	r3, [pc, #20]	@ (9001fa18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001fa02:	62eb      	str	r3, [r5, #44]	@ 0x2c
9001fa04:	4b07      	ldr	r3, [pc, #28]	@ (9001fa24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001fa06:	632b      	str	r3, [r5, #48]	@ 0x30
9001fa08:	bd38      	pop	{r3, r4, r5, pc}
9001fa0a:	bf00      	nop
9001fa0c:	24021ca8 	.word	0x24021ca8
9001fa10:	24000000 	.word	0x24000000
9001fa14:	9001b8d9 	.word	0x9001b8d9
9001fa18:	240000cc 	.word	0x240000cc
9001fa1c:	24021cac 	.word	0x24021cac
9001fa20:	9001b8d7 	.word	0x9001b8d7
9001fa24:	240000d0 	.word	0x240000d0

9001fa28 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001fa28:	b510      	push	{r4, lr}
9001fa2a:	4604      	mov	r4, r0
9001fa2c:	f7ff ff88 	bl	9001f940 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001fa30:	4620      	mov	r0, r4
9001fa32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fa36:	f7ff bfbd 	b.w	9001f9b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001fa3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001fa3c:	b538      	push	{r3, r4, r5, lr}
9001fa3e:	4c15      	ldr	r4, [pc, #84]	@ (9001fa94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001fa40:	4605      	mov	r5, r0
9001fa42:	7823      	ldrb	r3, [r4, #0]
9001fa44:	f3bf 8f5b 	dmb	ish
9001fa48:	07da      	lsls	r2, r3, #31
9001fa4a:	d40b      	bmi.n	9001fa64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001fa4c:	4620      	mov	r0, r4
9001fa4e:	f008 faf1 	bl	90028034 <__cxa_guard_acquire>
9001fa52:	b138      	cbz	r0, 9001fa64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001fa54:	4620      	mov	r0, r4
9001fa56:	f008 faf9 	bl	9002804c <__cxa_guard_release>
9001fa5a:	4a0f      	ldr	r2, [pc, #60]	@ (9001fa98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001fa5c:	490f      	ldr	r1, [pc, #60]	@ (9001fa9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001fa5e:	4810      	ldr	r0, [pc, #64]	@ (9001faa0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001fa60:	f008 fae1 	bl	90028026 <__aeabi_atexit>
9001fa64:	4c0f      	ldr	r4, [pc, #60]	@ (9001faa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001fa66:	7823      	ldrb	r3, [r4, #0]
9001fa68:	f3bf 8f5b 	dmb	ish
9001fa6c:	07db      	lsls	r3, r3, #31
9001fa6e:	d40b      	bmi.n	9001fa88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001fa70:	4620      	mov	r0, r4
9001fa72:	f008 fadf 	bl	90028034 <__cxa_guard_acquire>
9001fa76:	b138      	cbz	r0, 9001fa88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001fa78:	4620      	mov	r0, r4
9001fa7a:	f008 fae7 	bl	9002804c <__cxa_guard_release>
9001fa7e:	4a06      	ldr	r2, [pc, #24]	@ (9001fa98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001fa80:	4909      	ldr	r1, [pc, #36]	@ (9001faa8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001fa82:	480a      	ldr	r0, [pc, #40]	@ (9001faac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001fa84:	f008 facf 	bl	90028026 <__aeabi_atexit>
9001fa88:	4b05      	ldr	r3, [pc, #20]	@ (9001faa0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001fa8a:	656b      	str	r3, [r5, #84]	@ 0x54
9001fa8c:	4b07      	ldr	r3, [pc, #28]	@ (9001faac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001fa8e:	65ab      	str	r3, [r5, #88]	@ 0x58
9001fa90:	bd38      	pop	{r3, r4, r5, pc}
9001fa92:	bf00      	nop
9001fa94:	24021ce0 	.word	0x24021ce0
9001fa98:	24000000 	.word	0x24000000
9001fa9c:	9001b8c5 	.word	0x9001b8c5
9001faa0:	24000104 	.word	0x24000104
9001faa4:	24021ce4 	.word	0x24021ce4
9001faa8:	9001b8c3 	.word	0x9001b8c3
9001faac:	24000108 	.word	0x24000108

9001fab0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001fab0:	b538      	push	{r3, r4, r5, lr}
9001fab2:	4c15      	ldr	r4, [pc, #84]	@ (9001fb08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001fab4:	4605      	mov	r5, r0
9001fab6:	7823      	ldrb	r3, [r4, #0]
9001fab8:	f3bf 8f5b 	dmb	ish
9001fabc:	07da      	lsls	r2, r3, #31
9001fabe:	d40b      	bmi.n	9001fad8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001fac0:	4620      	mov	r0, r4
9001fac2:	f008 fab7 	bl	90028034 <__cxa_guard_acquire>
9001fac6:	b138      	cbz	r0, 9001fad8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001fac8:	4620      	mov	r0, r4
9001faca:	f008 fabf 	bl	9002804c <__cxa_guard_release>
9001face:	4a0f      	ldr	r2, [pc, #60]	@ (9001fb0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001fad0:	490f      	ldr	r1, [pc, #60]	@ (9001fb10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001fad2:	4810      	ldr	r0, [pc, #64]	@ (9001fb14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001fad4:	f008 faa7 	bl	90028026 <__aeabi_atexit>
9001fad8:	4c0f      	ldr	r4, [pc, #60]	@ (9001fb18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001fada:	7823      	ldrb	r3, [r4, #0]
9001fadc:	f3bf 8f5b 	dmb	ish
9001fae0:	07db      	lsls	r3, r3, #31
9001fae2:	d40b      	bmi.n	9001fafc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001fae4:	4620      	mov	r0, r4
9001fae6:	f008 faa5 	bl	90028034 <__cxa_guard_acquire>
9001faea:	b138      	cbz	r0, 9001fafc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001faec:	4620      	mov	r0, r4
9001faee:	f008 faad 	bl	9002804c <__cxa_guard_release>
9001faf2:	4a06      	ldr	r2, [pc, #24]	@ (9001fb0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001faf4:	4909      	ldr	r1, [pc, #36]	@ (9001fb1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001faf6:	480a      	ldr	r0, [pc, #40]	@ (9001fb20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001faf8:	f008 fa95 	bl	90028026 <__aeabi_atexit>
9001fafc:	4b05      	ldr	r3, [pc, #20]	@ (9001fb14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001fafe:	64eb      	str	r3, [r5, #76]	@ 0x4c
9001fb00:	4b07      	ldr	r3, [pc, #28]	@ (9001fb20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001fb02:	652b      	str	r3, [r5, #80]	@ 0x50
9001fb04:	bd38      	pop	{r3, r4, r5, pc}
9001fb06:	bf00      	nop
9001fb08:	24021ce8 	.word	0x24021ce8
9001fb0c:	24000000 	.word	0x24000000
9001fb10:	9001b8c9 	.word	0x9001b8c9
9001fb14:	2400010c 	.word	0x2400010c
9001fb18:	24021cec 	.word	0x24021cec
9001fb1c:	9001b8c7 	.word	0x9001b8c7
9001fb20:	24000110 	.word	0x24000110

9001fb24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001fb24:	b538      	push	{r3, r4, r5, lr}
9001fb26:	4c15      	ldr	r4, [pc, #84]	@ (9001fb7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001fb28:	4605      	mov	r5, r0
9001fb2a:	7823      	ldrb	r3, [r4, #0]
9001fb2c:	f3bf 8f5b 	dmb	ish
9001fb30:	07da      	lsls	r2, r3, #31
9001fb32:	d40b      	bmi.n	9001fb4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001fb34:	4620      	mov	r0, r4
9001fb36:	f008 fa7d 	bl	90028034 <__cxa_guard_acquire>
9001fb3a:	b138      	cbz	r0, 9001fb4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001fb3c:	4620      	mov	r0, r4
9001fb3e:	f008 fa85 	bl	9002804c <__cxa_guard_release>
9001fb42:	4a0f      	ldr	r2, [pc, #60]	@ (9001fb80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001fb44:	490f      	ldr	r1, [pc, #60]	@ (9001fb84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001fb46:	4810      	ldr	r0, [pc, #64]	@ (9001fb88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001fb48:	f008 fa6d 	bl	90028026 <__aeabi_atexit>
9001fb4c:	4c0f      	ldr	r4, [pc, #60]	@ (9001fb8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001fb4e:	7823      	ldrb	r3, [r4, #0]
9001fb50:	f3bf 8f5b 	dmb	ish
9001fb54:	07db      	lsls	r3, r3, #31
9001fb56:	d40b      	bmi.n	9001fb70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001fb58:	4620      	mov	r0, r4
9001fb5a:	f008 fa6b 	bl	90028034 <__cxa_guard_acquire>
9001fb5e:	b138      	cbz	r0, 9001fb70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001fb60:	4620      	mov	r0, r4
9001fb62:	f008 fa73 	bl	9002804c <__cxa_guard_release>
9001fb66:	4a06      	ldr	r2, [pc, #24]	@ (9001fb80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001fb68:	4909      	ldr	r1, [pc, #36]	@ (9001fb90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001fb6a:	480a      	ldr	r0, [pc, #40]	@ (9001fb94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001fb6c:	f008 fa5b 	bl	90028026 <__aeabi_atexit>
9001fb70:	4b05      	ldr	r3, [pc, #20]	@ (9001fb88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001fb72:	646b      	str	r3, [r5, #68]	@ 0x44
9001fb74:	4b07      	ldr	r3, [pc, #28]	@ (9001fb94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001fb76:	64ab      	str	r3, [r5, #72]	@ 0x48
9001fb78:	bd38      	pop	{r3, r4, r5, pc}
9001fb7a:	bf00      	nop
9001fb7c:	24021cb0 	.word	0x24021cb0
9001fb80:	24000000 	.word	0x24000000
9001fb84:	9001b8cd 	.word	0x9001b8cd
9001fb88:	240000d4 	.word	0x240000d4
9001fb8c:	24021cb4 	.word	0x24021cb4
9001fb90:	9001b8cb 	.word	0x9001b8cb
9001fb94:	240000d8 	.word	0x240000d8

9001fb98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001fb98:	b538      	push	{r3, r4, r5, lr}
9001fb9a:	4c15      	ldr	r4, [pc, #84]	@ (9001fbf0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001fb9c:	4605      	mov	r5, r0
9001fb9e:	7823      	ldrb	r3, [r4, #0]
9001fba0:	f3bf 8f5b 	dmb	ish
9001fba4:	07da      	lsls	r2, r3, #31
9001fba6:	d40b      	bmi.n	9001fbc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001fba8:	4620      	mov	r0, r4
9001fbaa:	f008 fa43 	bl	90028034 <__cxa_guard_acquire>
9001fbae:	b138      	cbz	r0, 9001fbc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001fbb0:	4620      	mov	r0, r4
9001fbb2:	f008 fa4b 	bl	9002804c <__cxa_guard_release>
9001fbb6:	4a0f      	ldr	r2, [pc, #60]	@ (9001fbf4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001fbb8:	490f      	ldr	r1, [pc, #60]	@ (9001fbf8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001fbba:	4810      	ldr	r0, [pc, #64]	@ (9001fbfc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001fbbc:	f008 fa33 	bl	90028026 <__aeabi_atexit>
9001fbc0:	4c0f      	ldr	r4, [pc, #60]	@ (9001fc00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001fbc2:	7823      	ldrb	r3, [r4, #0]
9001fbc4:	f3bf 8f5b 	dmb	ish
9001fbc8:	07db      	lsls	r3, r3, #31
9001fbca:	d40b      	bmi.n	9001fbe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001fbcc:	4620      	mov	r0, r4
9001fbce:	f008 fa31 	bl	90028034 <__cxa_guard_acquire>
9001fbd2:	b138      	cbz	r0, 9001fbe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001fbd4:	4620      	mov	r0, r4
9001fbd6:	f008 fa39 	bl	9002804c <__cxa_guard_release>
9001fbda:	4a06      	ldr	r2, [pc, #24]	@ (9001fbf4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001fbdc:	4909      	ldr	r1, [pc, #36]	@ (9001fc04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001fbde:	480a      	ldr	r0, [pc, #40]	@ (9001fc08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001fbe0:	f008 fa21 	bl	90028026 <__aeabi_atexit>
9001fbe4:	4b05      	ldr	r3, [pc, #20]	@ (9001fbfc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001fbe6:	63eb      	str	r3, [r5, #60]	@ 0x3c
9001fbe8:	4b07      	ldr	r3, [pc, #28]	@ (9001fc08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001fbea:	642b      	str	r3, [r5, #64]	@ 0x40
9001fbec:	bd38      	pop	{r3, r4, r5, pc}
9001fbee:	bf00      	nop
9001fbf0:	24021cd0 	.word	0x24021cd0
9001fbf4:	24000000 	.word	0x24000000
9001fbf8:	9001b8d1 	.word	0x9001b8d1
9001fbfc:	240000f4 	.word	0x240000f4
9001fc00:	24021cd4 	.word	0x24021cd4
9001fc04:	9001b8cf 	.word	0x9001b8cf
9001fc08:	240000f8 	.word	0x240000f8

9001fc0c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001fc0c:	b510      	push	{r4, lr}
9001fc0e:	4604      	mov	r4, r0
9001fc10:	f7ff ff14 	bl	9001fa3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001fc14:	4620      	mov	r0, r4
9001fc16:	f7ff ff85 	bl	9001fb24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001fc1a:	4620      	mov	r0, r4
9001fc1c:	f7ff ff48 	bl	9001fab0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001fc20:	4620      	mov	r0, r4
9001fc22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fc26:	f7ff bfb7 	b.w	9001fb98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001fc2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001fc2c:	b538      	push	{r3, r4, r5, lr}
9001fc2e:	4c15      	ldr	r4, [pc, #84]	@ (9001fc84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001fc30:	4605      	mov	r5, r0
9001fc32:	7823      	ldrb	r3, [r4, #0]
9001fc34:	f3bf 8f5b 	dmb	ish
9001fc38:	07da      	lsls	r2, r3, #31
9001fc3a:	d40b      	bmi.n	9001fc54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001fc3c:	4620      	mov	r0, r4
9001fc3e:	f008 f9f9 	bl	90028034 <__cxa_guard_acquire>
9001fc42:	b138      	cbz	r0, 9001fc54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001fc44:	4620      	mov	r0, r4
9001fc46:	f008 fa01 	bl	9002804c <__cxa_guard_release>
9001fc4a:	4a0f      	ldr	r2, [pc, #60]	@ (9001fc88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001fc4c:	490f      	ldr	r1, [pc, #60]	@ (9001fc8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001fc4e:	4810      	ldr	r0, [pc, #64]	@ (9001fc90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001fc50:	f008 f9e9 	bl	90028026 <__aeabi_atexit>
9001fc54:	4c0f      	ldr	r4, [pc, #60]	@ (9001fc94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001fc56:	7823      	ldrb	r3, [r4, #0]
9001fc58:	f3bf 8f5b 	dmb	ish
9001fc5c:	07db      	lsls	r3, r3, #31
9001fc5e:	d40b      	bmi.n	9001fc78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001fc60:	4620      	mov	r0, r4
9001fc62:	f008 f9e7 	bl	90028034 <__cxa_guard_acquire>
9001fc66:	b138      	cbz	r0, 9001fc78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001fc68:	4620      	mov	r0, r4
9001fc6a:	f008 f9ef 	bl	9002804c <__cxa_guard_release>
9001fc6e:	4a06      	ldr	r2, [pc, #24]	@ (9001fc88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001fc70:	4909      	ldr	r1, [pc, #36]	@ (9001fc98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001fc72:	480a      	ldr	r0, [pc, #40]	@ (9001fc9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001fc74:	f008 f9d7 	bl	90028026 <__aeabi_atexit>
9001fc78:	4b05      	ldr	r3, [pc, #20]	@ (9001fc90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001fc7a:	666b      	str	r3, [r5, #100]	@ 0x64
9001fc7c:	4b07      	ldr	r3, [pc, #28]	@ (9001fc9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001fc7e:	66ab      	str	r3, [r5, #104]	@ 0x68
9001fc80:	bd38      	pop	{r3, r4, r5, pc}
9001fc82:	bf00      	nop
9001fc84:	24021cb8 	.word	0x24021cb8
9001fc88:	24000000 	.word	0x24000000
9001fc8c:	9001b8bd 	.word	0x9001b8bd
9001fc90:	240000dc 	.word	0x240000dc
9001fc94:	24021cbc 	.word	0x24021cbc
9001fc98:	9001b8bb 	.word	0x9001b8bb
9001fc9c:	240000e0 	.word	0x240000e0

9001fca0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001fca0:	b538      	push	{r3, r4, r5, lr}
9001fca2:	4c15      	ldr	r4, [pc, #84]	@ (9001fcf8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001fca4:	4605      	mov	r5, r0
9001fca6:	7823      	ldrb	r3, [r4, #0]
9001fca8:	f3bf 8f5b 	dmb	ish
9001fcac:	07da      	lsls	r2, r3, #31
9001fcae:	d40b      	bmi.n	9001fcc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001fcb0:	4620      	mov	r0, r4
9001fcb2:	f008 f9bf 	bl	90028034 <__cxa_guard_acquire>
9001fcb6:	b138      	cbz	r0, 9001fcc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001fcb8:	4620      	mov	r0, r4
9001fcba:	f008 f9c7 	bl	9002804c <__cxa_guard_release>
9001fcbe:	4a0f      	ldr	r2, [pc, #60]	@ (9001fcfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001fcc0:	490f      	ldr	r1, [pc, #60]	@ (9001fd00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001fcc2:	4810      	ldr	r0, [pc, #64]	@ (9001fd04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001fcc4:	f008 f9af 	bl	90028026 <__aeabi_atexit>
9001fcc8:	4c0f      	ldr	r4, [pc, #60]	@ (9001fd08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001fcca:	7823      	ldrb	r3, [r4, #0]
9001fccc:	f3bf 8f5b 	dmb	ish
9001fcd0:	07db      	lsls	r3, r3, #31
9001fcd2:	d40b      	bmi.n	9001fcec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001fcd4:	4620      	mov	r0, r4
9001fcd6:	f008 f9ad 	bl	90028034 <__cxa_guard_acquire>
9001fcda:	b138      	cbz	r0, 9001fcec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001fcdc:	4620      	mov	r0, r4
9001fcde:	f008 f9b5 	bl	9002804c <__cxa_guard_release>
9001fce2:	4a06      	ldr	r2, [pc, #24]	@ (9001fcfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001fce4:	4909      	ldr	r1, [pc, #36]	@ (9001fd0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001fce6:	480a      	ldr	r0, [pc, #40]	@ (9001fd10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001fce8:	f008 f99d 	bl	90028026 <__aeabi_atexit>
9001fcec:	4b05      	ldr	r3, [pc, #20]	@ (9001fd04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001fcee:	65eb      	str	r3, [r5, #92]	@ 0x5c
9001fcf0:	4b07      	ldr	r3, [pc, #28]	@ (9001fd10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001fcf2:	662b      	str	r3, [r5, #96]	@ 0x60
9001fcf4:	bd38      	pop	{r3, r4, r5, pc}
9001fcf6:	bf00      	nop
9001fcf8:	24021c90 	.word	0x24021c90
9001fcfc:	24000000 	.word	0x24000000
9001fd00:	9001b8c1 	.word	0x9001b8c1
9001fd04:	240000b4 	.word	0x240000b4
9001fd08:	24021c94 	.word	0x24021c94
9001fd0c:	9001b8bf 	.word	0x9001b8bf
9001fd10:	240000b8 	.word	0x240000b8

9001fd14 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001fd14:	b510      	push	{r4, lr}
9001fd16:	4604      	mov	r4, r0
9001fd18:	f7ff ff88 	bl	9001fc2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001fd1c:	4620      	mov	r0, r4
9001fd1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fd22:	f7ff bfbd 	b.w	9001fca0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001fd28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001fd28:	b538      	push	{r3, r4, r5, lr}
9001fd2a:	4c15      	ldr	r4, [pc, #84]	@ (9001fd80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001fd2c:	4605      	mov	r5, r0
9001fd2e:	7823      	ldrb	r3, [r4, #0]
9001fd30:	f3bf 8f5b 	dmb	ish
9001fd34:	07da      	lsls	r2, r3, #31
9001fd36:	d40b      	bmi.n	9001fd50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001fd38:	4620      	mov	r0, r4
9001fd3a:	f008 f97b 	bl	90028034 <__cxa_guard_acquire>
9001fd3e:	b138      	cbz	r0, 9001fd50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001fd40:	4620      	mov	r0, r4
9001fd42:	f008 f983 	bl	9002804c <__cxa_guard_release>
9001fd46:	4a0f      	ldr	r2, [pc, #60]	@ (9001fd84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001fd48:	490f      	ldr	r1, [pc, #60]	@ (9001fd88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001fd4a:	4810      	ldr	r0, [pc, #64]	@ (9001fd8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001fd4c:	f008 f96b 	bl	90028026 <__aeabi_atexit>
9001fd50:	4c0f      	ldr	r4, [pc, #60]	@ (9001fd90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001fd52:	7823      	ldrb	r3, [r4, #0]
9001fd54:	f3bf 8f5b 	dmb	ish
9001fd58:	07db      	lsls	r3, r3, #31
9001fd5a:	d40b      	bmi.n	9001fd74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001fd5c:	4620      	mov	r0, r4
9001fd5e:	f008 f969 	bl	90028034 <__cxa_guard_acquire>
9001fd62:	b138      	cbz	r0, 9001fd74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001fd64:	4620      	mov	r0, r4
9001fd66:	f008 f971 	bl	9002804c <__cxa_guard_release>
9001fd6a:	4a06      	ldr	r2, [pc, #24]	@ (9001fd84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001fd6c:	4909      	ldr	r1, [pc, #36]	@ (9001fd94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001fd6e:	480a      	ldr	r0, [pc, #40]	@ (9001fd98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001fd70:	f008 f959 	bl	90028026 <__aeabi_atexit>
9001fd74:	4b05      	ldr	r3, [pc, #20]	@ (9001fd8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001fd76:	676b      	str	r3, [r5, #116]	@ 0x74
9001fd78:	4b07      	ldr	r3, [pc, #28]	@ (9001fd98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001fd7a:	67ab      	str	r3, [r5, #120]	@ 0x78
9001fd7c:	bd38      	pop	{r3, r4, r5, pc}
9001fd7e:	bf00      	nop
9001fd80:	24021c88 	.word	0x24021c88
9001fd84:	24000000 	.word	0x24000000
9001fd88:	9001b8b5 	.word	0x9001b8b5
9001fd8c:	240000ac 	.word	0x240000ac
9001fd90:	24021c8c 	.word	0x24021c8c
9001fd94:	9001b8b3 	.word	0x9001b8b3
9001fd98:	240000b0 	.word	0x240000b0

9001fd9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001fd9c:	b538      	push	{r3, r4, r5, lr}
9001fd9e:	4c15      	ldr	r4, [pc, #84]	@ (9001fdf4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001fda0:	4605      	mov	r5, r0
9001fda2:	7823      	ldrb	r3, [r4, #0]
9001fda4:	f3bf 8f5b 	dmb	ish
9001fda8:	07da      	lsls	r2, r3, #31
9001fdaa:	d40b      	bmi.n	9001fdc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001fdac:	4620      	mov	r0, r4
9001fdae:	f008 f941 	bl	90028034 <__cxa_guard_acquire>
9001fdb2:	b138      	cbz	r0, 9001fdc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001fdb4:	4620      	mov	r0, r4
9001fdb6:	f008 f949 	bl	9002804c <__cxa_guard_release>
9001fdba:	4a0f      	ldr	r2, [pc, #60]	@ (9001fdf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001fdbc:	490f      	ldr	r1, [pc, #60]	@ (9001fdfc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001fdbe:	4810      	ldr	r0, [pc, #64]	@ (9001fe00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001fdc0:	f008 f931 	bl	90028026 <__aeabi_atexit>
9001fdc4:	4c0f      	ldr	r4, [pc, #60]	@ (9001fe04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001fdc6:	7823      	ldrb	r3, [r4, #0]
9001fdc8:	f3bf 8f5b 	dmb	ish
9001fdcc:	07db      	lsls	r3, r3, #31
9001fdce:	d40b      	bmi.n	9001fde8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001fdd0:	4620      	mov	r0, r4
9001fdd2:	f008 f92f 	bl	90028034 <__cxa_guard_acquire>
9001fdd6:	b138      	cbz	r0, 9001fde8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001fdd8:	4620      	mov	r0, r4
9001fdda:	f008 f937 	bl	9002804c <__cxa_guard_release>
9001fdde:	4a06      	ldr	r2, [pc, #24]	@ (9001fdf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001fde0:	4909      	ldr	r1, [pc, #36]	@ (9001fe08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001fde2:	480a      	ldr	r0, [pc, #40]	@ (9001fe0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001fde4:	f008 f91f 	bl	90028026 <__aeabi_atexit>
9001fde8:	4b05      	ldr	r3, [pc, #20]	@ (9001fe00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001fdea:	66eb      	str	r3, [r5, #108]	@ 0x6c
9001fdec:	4b07      	ldr	r3, [pc, #28]	@ (9001fe0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001fdee:	672b      	str	r3, [r5, #112]	@ 0x70
9001fdf0:	bd38      	pop	{r3, r4, r5, pc}
9001fdf2:	bf00      	nop
9001fdf4:	24021c80 	.word	0x24021c80
9001fdf8:	24000000 	.word	0x24000000
9001fdfc:	9001b8b9 	.word	0x9001b8b9
9001fe00:	240000a4 	.word	0x240000a4
9001fe04:	24021c84 	.word	0x24021c84
9001fe08:	9001b8b7 	.word	0x9001b8b7
9001fe0c:	240000a8 	.word	0x240000a8

9001fe10 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001fe10:	b510      	push	{r4, lr}
9001fe12:	4604      	mov	r4, r0
9001fe14:	f7ff ff88 	bl	9001fd28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001fe18:	4620      	mov	r0, r4
9001fe1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fe1e:	f7ff bfbd 	b.w	9001fd9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001fe22 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001fe22:	b510      	push	{r4, lr}
9001fe24:	4604      	mov	r4, r0
9001fe26:	f7ff fff3 	bl	9001fe10 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001fe2a:	4620      	mov	r0, r4
9001fe2c:	f7ff ff72 	bl	9001fd14 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001fe30:	4620      	mov	r0, r4
9001fe32:	f7ff fdf9 	bl	9001fa28 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001fe36:	4620      	mov	r0, r4
9001fe38:	f7ff fcfa 	bl	9001f830 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001fe3c:	4620      	mov	r0, r4
9001fe3e:	f7ff fd75 	bl	9001f92c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001fe42:	4620      	mov	r0, r4
9001fe44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fe48:	f7ff bee0 	b.w	9001fc0c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001fe4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001fe4c:	b538      	push	{r3, r4, r5, lr}
9001fe4e:	4c0b      	ldr	r4, [pc, #44]	@ (9001fe7c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001fe50:	4605      	mov	r5, r0
9001fe52:	7823      	ldrb	r3, [r4, #0]
9001fe54:	f3bf 8f5b 	dmb	ish
9001fe58:	07db      	lsls	r3, r3, #31
9001fe5a:	d40b      	bmi.n	9001fe74 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001fe5c:	4620      	mov	r0, r4
9001fe5e:	f008 f8e9 	bl	90028034 <__cxa_guard_acquire>
9001fe62:	b138      	cbz	r0, 9001fe74 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001fe64:	4620      	mov	r0, r4
9001fe66:	f008 f8f1 	bl	9002804c <__cxa_guard_release>
9001fe6a:	4a05      	ldr	r2, [pc, #20]	@ (9001fe80 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001fe6c:	4905      	ldr	r1, [pc, #20]	@ (9001fe84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001fe6e:	4806      	ldr	r0, [pc, #24]	@ (9001fe88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001fe70:	f008 f8d9 	bl	90028026 <__aeabi_atexit>
9001fe74:	4b04      	ldr	r3, [pc, #16]	@ (9001fe88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001fe76:	67eb      	str	r3, [r5, #124]	@ 0x7c
9001fe78:	bd38      	pop	{r3, r4, r5, pc}
9001fe7a:	bf00      	nop
9001fe7c:	24021c74 	.word	0x24021c74
9001fe80:	24000000 	.word	0x24000000
9001fe84:	9001b8b1 	.word	0x9001b8b1
9001fe88:	2400009c 	.word	0x2400009c

9001fe8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001fe8c:	b538      	push	{r3, r4, r5, lr}
9001fe8e:	4c0b      	ldr	r4, [pc, #44]	@ (9001febc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001fe90:	4605      	mov	r5, r0
9001fe92:	7823      	ldrb	r3, [r4, #0]
9001fe94:	f3bf 8f5b 	dmb	ish
9001fe98:	07db      	lsls	r3, r3, #31
9001fe9a:	d40b      	bmi.n	9001feb4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001fe9c:	4620      	mov	r0, r4
9001fe9e:	f008 f8c9 	bl	90028034 <__cxa_guard_acquire>
9001fea2:	b138      	cbz	r0, 9001feb4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001fea4:	4620      	mov	r0, r4
9001fea6:	f008 f8d1 	bl	9002804c <__cxa_guard_release>
9001feaa:	4a05      	ldr	r2, [pc, #20]	@ (9001fec0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001feac:	4905      	ldr	r1, [pc, #20]	@ (9001fec4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001feae:	4806      	ldr	r0, [pc, #24]	@ (9001fec8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001feb0:	f008 f8b9 	bl	90028026 <__aeabi_atexit>
9001feb4:	4b04      	ldr	r3, [pc, #16]	@ (9001fec8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001feb6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
9001feba:	bd38      	pop	{r3, r4, r5, pc}
9001febc:	24021c78 	.word	0x24021c78
9001fec0:	24000000 	.word	0x24000000
9001fec4:	9001b8af 	.word	0x9001b8af
9001fec8:	240000a0 	.word	0x240000a0

9001fecc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001fecc:	b570      	push	{r4, r5, r6, lr}
9001fece:	4d0d      	ldr	r5, [pc, #52]	@ (9001ff04 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001fed0:	4606      	mov	r6, r0
9001fed2:	4c0d      	ldr	r4, [pc, #52]	@ (9001ff08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001fed4:	782b      	ldrb	r3, [r5, #0]
9001fed6:	f3bf 8f5b 	dmb	ish
9001feda:	f013 0f01 	tst.w	r3, #1
9001fede:	d10d      	bne.n	9001fefc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001fee0:	4628      	mov	r0, r5
9001fee2:	f008 f8a7 	bl	90028034 <__cxa_guard_acquire>
9001fee6:	b148      	cbz	r0, 9001fefc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001fee8:	4b08      	ldr	r3, [pc, #32]	@ (9001ff0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001feea:	4628      	mov	r0, r5
9001feec:	6023      	str	r3, [r4, #0]
9001feee:	f008 f8ad 	bl	9002804c <__cxa_guard_release>
9001fef2:	4a07      	ldr	r2, [pc, #28]	@ (9001ff10 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001fef4:	4620      	mov	r0, r4
9001fef6:	4907      	ldr	r1, [pc, #28]	@ (9001ff14 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001fef8:	f008 f895 	bl	90028026 <__aeabi_atexit>
9001fefc:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
9001ff00:	bd70      	pop	{r4, r5, r6, pc}
9001ff02:	bf00      	nop
9001ff04:	24021c7c 	.word	0x24021c7c
9001ff08:	24021df4 	.word	0x24021df4
9001ff0c:	9002db1c 	.word	0x9002db1c
9001ff10:	24000000 	.word	0x24000000
9001ff14:	9001b8ad 	.word	0x9001b8ad

9001ff18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001ff18:	b510      	push	{r4, lr}
9001ff1a:	4604      	mov	r4, r0
9001ff1c:	f7ff ff96 	bl	9001fe4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001ff20:	4620      	mov	r0, r4
9001ff22:	f7ff ffb3 	bl	9001fe8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001ff26:	4620      	mov	r0, r4
9001ff28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ff2c:	f7ff bfce 	b.w	9001fecc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001ff30 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
9001ff30:	b570      	push	{r4, r5, r6, lr}
9001ff32:	4d0d      	ldr	r5, [pc, #52]	@ (9001ff68 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
9001ff34:	4606      	mov	r6, r0
9001ff36:	4c0d      	ldr	r4, [pc, #52]	@ (9001ff6c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
9001ff38:	782b      	ldrb	r3, [r5, #0]
9001ff3a:	f3bf 8f5b 	dmb	ish
9001ff3e:	f013 0f01 	tst.w	r3, #1
9001ff42:	d10d      	bne.n	9001ff60 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
9001ff44:	4628      	mov	r0, r5
9001ff46:	f008 f875 	bl	90028034 <__cxa_guard_acquire>
9001ff4a:	b148      	cbz	r0, 9001ff60 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
9001ff4c:	4b08      	ldr	r3, [pc, #32]	@ (9001ff70 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
9001ff4e:	4628      	mov	r0, r5
9001ff50:	6023      	str	r3, [r4, #0]
9001ff52:	f008 f87b 	bl	9002804c <__cxa_guard_release>
9001ff56:	4a07      	ldr	r2, [pc, #28]	@ (9001ff74 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
9001ff58:	4620      	mov	r0, r4
9001ff5a:	4907      	ldr	r1, [pc, #28]	@ (9001ff78 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
9001ff5c:	f008 f863 	bl	90028026 <__aeabi_atexit>
9001ff60:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
9001ff64:	bd70      	pop	{r4, r5, r6, pc}
9001ff66:	bf00      	nop
9001ff68:	24021c70 	.word	0x24021c70
9001ff6c:	24021cf0 	.word	0x24021cf0
9001ff70:	9002db38 	.word	0x9002db38
9001ff74:	24000000 	.word	0x24000000
9001ff78:	9001b8ab 	.word	0x9001b8ab

9001ff7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001ff7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ff80:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
9001ff84:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
9001ff88:	2d00      	cmp	r5, #0
9001ff8a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
9001ff8e:	fb05 4c0e 	mla	ip, r5, lr, r4
9001ff92:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
9001ff96:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
9001ff9a:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
9001ff9e:	eb02 0a0c 	add.w	sl, r2, ip
9001ffa2:	8808      	ldrh	r0, [r1, #0]
9001ffa4:	f2c0 80b0 	blt.w	90020108 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001ffa8:	45ab      	cmp	fp, r5
9001ffaa:	f340 80ad 	ble.w	90020108 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001ffae:	2c00      	cmp	r4, #0
9001ffb0:	f2c0 80a8 	blt.w	90020104 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001ffb4:	45a6      	cmp	lr, r4
9001ffb6:	f340 80a5 	ble.w	90020104 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001ffba:	f812 200c 	ldrb.w	r2, [r2, ip]
9001ffbe:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001ffc2:	1c62      	adds	r2, r4, #1
9001ffc4:	f100 80a3 	bmi.w	9002010e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001ffc8:	4596      	cmp	lr, r2
9001ffca:	f340 80a0 	ble.w	9002010e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001ffce:	f1b9 0f00 	cmp.w	r9, #0
9001ffd2:	f000 809c 	beq.w	9002010e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001ffd6:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001ffda:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001ffde:	3501      	adds	r5, #1
9001ffe0:	f100 8099 	bmi.w	90020116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001ffe4:	45ab      	cmp	fp, r5
9001ffe6:	f340 8096 	ble.w	90020116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001ffea:	2f00      	cmp	r7, #0
9001ffec:	f000 8093 	beq.w	90020116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001fff0:	2c00      	cmp	r4, #0
9001fff2:	f2c0 808e 	blt.w	90020112 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001fff6:	45a6      	cmp	lr, r4
9001fff8:	f340 808b 	ble.w	90020112 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001fffc:	f81a 200e 	ldrb.w	r2, [sl, lr]
90020000:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90020004:	3401      	adds	r4, #1
90020006:	f100 8089 	bmi.w	9002011c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002000a:	45a6      	cmp	lr, r4
9002000c:	f340 8086 	ble.w	9002011c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020010:	f1b9 0f00 	cmp.w	r9, #0
90020014:	f000 8082 	beq.w	9002011c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020018:	44d6      	add	lr, sl
9002001a:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002001e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90020022:	ea4f 4408 	mov.w	r4, r8, lsl #16
90020026:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
9002002a:	fb19 fe07 	smulbb	lr, r9, r7
9002002e:	f1c7 0210 	rsb	r2, r7, #16
90020032:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90020036:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002003a:	eba2 0209 	sub.w	r2, r2, r9
9002003e:	ea44 0808 	orr.w	r8, r4, r8
90020042:	ea4f 440c 	mov.w	r4, ip, lsl #16
90020046:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002004a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9002004e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90020052:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90020056:	ea44 0c0c 	orr.w	ip, r4, ip
9002005a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002005e:	fb04 f40c 	mul.w	r4, r4, ip
90020062:	fb02 4808 	mla	r8, r2, r8, r4
90020066:	041a      	lsls	r2, r3, #16
90020068:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002006c:	b2b4      	uxth	r4, r6
9002006e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90020072:	43f6      	mvns	r6, r6
90020074:	4313      	orrs	r3, r2
90020076:	042a      	lsls	r2, r5, #16
90020078:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002007c:	b2f6      	uxtb	r6, r6
9002007e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90020082:	fb0e 8303 	mla	r3, lr, r3, r8
90020086:	432a      	orrs	r2, r5
90020088:	fb07 3202 	mla	r2, r7, r2, r3
9002008c:	10c7      	asrs	r7, r0, #3
9002008e:	0d53      	lsrs	r3, r2, #21
90020090:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90020094:	0952      	lsrs	r2, r2, #5
90020096:	fb17 f706 	smulbb	r7, r7, r6
9002009a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002009e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900200a2:	431a      	orrs	r2, r3
900200a4:	b293      	uxth	r3, r2
900200a6:	1202      	asrs	r2, r0, #8
900200a8:	121d      	asrs	r5, r3, #8
900200aa:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900200ae:	00c0      	lsls	r0, r0, #3
900200b0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900200b4:	fb12 f206 	smulbb	r2, r2, r6
900200b8:	b2c0      	uxtb	r0, r0
900200ba:	fb05 2504 	mla	r5, r5, r4, r2
900200be:	10da      	asrs	r2, r3, #3
900200c0:	fb10 f006 	smulbb	r0, r0, r6
900200c4:	00db      	lsls	r3, r3, #3
900200c6:	b2ad      	uxth	r5, r5
900200c8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900200cc:	b2db      	uxtb	r3, r3
900200ce:	fb02 7204 	mla	r2, r2, r4, r7
900200d2:	fb03 0004 	mla	r0, r3, r4, r0
900200d6:	1c6b      	adds	r3, r5, #1
900200d8:	b292      	uxth	r2, r2
900200da:	b280      	uxth	r0, r0
900200dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900200e0:	1c43      	adds	r3, r0, #1
900200e2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900200e6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900200ea:	1c50      	adds	r0, r2, #1
900200ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900200f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900200f4:	0952      	lsrs	r2, r2, #5
900200f6:	432b      	orrs	r3, r5
900200f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900200fc:	4313      	orrs	r3, r2
900200fe:	800b      	strh	r3, [r1, #0]
90020100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020104:	4680      	mov	r8, r0
90020106:	e75c      	b.n	9001ffc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90020108:	4684      	mov	ip, r0
9002010a:	4680      	mov	r8, r0
9002010c:	e767      	b.n	9001ffde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002010e:	4684      	mov	ip, r0
90020110:	e765      	b.n	9001ffde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90020112:	4605      	mov	r5, r0
90020114:	e776      	b.n	90020004 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90020116:	4603      	mov	r3, r0
90020118:	4605      	mov	r5, r0
9002011a:	e782      	b.n	90020022 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9002011c:	4603      	mov	r3, r0
9002011e:	e780      	b.n	90020022 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90020120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020124:	b099      	sub	sp, #100	@ 0x64
90020126:	9215      	str	r2, [sp, #84]	@ 0x54
90020128:	9309      	str	r3, [sp, #36]	@ 0x24
9002012a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
9002012c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90020130:	9016      	str	r0, [sp, #88]	@ 0x58
90020132:	930d      	str	r3, [sp, #52]	@ 0x34
90020134:	6850      	ldr	r0, [r2, #4]
90020136:	910c      	str	r1, [sp, #48]	@ 0x30
90020138:	6812      	ldr	r2, [r2, #0]
9002013a:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9002013e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90020142:	fb00 1303 	mla	r3, r0, r3, r1
90020146:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9002014a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002014c:	681b      	ldr	r3, [r3, #0]
9002014e:	930b      	str	r3, [sp, #44]	@ 0x2c
90020150:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90020152:	685e      	ldr	r6, [r3, #4]
90020154:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020156:	3604      	adds	r6, #4
90020158:	43db      	mvns	r3, r3
9002015a:	b2db      	uxtb	r3, r3
9002015c:	930a      	str	r3, [sp, #40]	@ 0x28
9002015e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020160:	2b00      	cmp	r3, #0
90020162:	dc03      	bgt.n	9002016c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90020164:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90020166:	2b00      	cmp	r3, #0
90020168:	f340 8225 	ble.w	900205b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9002016c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002016e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020172:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020176:	1e48      	subs	r0, r1, #1
90020178:	1e57      	subs	r7, r2, #1
9002017a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002017c:	2b00      	cmp	r3, #0
9002017e:	f340 80e3 	ble.w	90020348 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90020182:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90020186:	ea4f 4325 	mov.w	r3, r5, asr #16
9002018a:	d406      	bmi.n	9002019a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002018c:	4584      	cmp	ip, r0
9002018e:	da04      	bge.n	9002019a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020190:	2b00      	cmp	r3, #0
90020192:	db02      	blt.n	9002019a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020194:	42bb      	cmp	r3, r7
90020196:	f2c0 80d8 	blt.w	9002034a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002019a:	f11c 0c01 	adds.w	ip, ip, #1
9002019e:	f100 80c9 	bmi.w	90020334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900201a2:	4561      	cmp	r1, ip
900201a4:	f2c0 80c6 	blt.w	90020334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900201a8:	3301      	adds	r3, #1
900201aa:	f100 80c3 	bmi.w	90020334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900201ae:	429a      	cmp	r2, r3
900201b0:	f2c0 80c0 	blt.w	90020334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900201b4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900201b8:	4647      	mov	r7, r8
900201ba:	f1bb 0f00 	cmp.w	fp, #0
900201be:	f340 80e3 	ble.w	90020388 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
900201c2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
900201c4:	ea4f 4c25 	mov.w	ip, r5, asr #16
900201c8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900201ca:	f3ca 3003 	ubfx	r0, sl, #12, #4
900201ce:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900201d2:	ea5f 422a 	movs.w	r2, sl, asr #16
900201d6:	f3c5 3103 	ubfx	r1, r5, #12, #4
900201da:	689b      	ldr	r3, [r3, #8]
900201dc:	f100 8121 	bmi.w	90020422 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900201e0:	f103 39ff 	add.w	r9, r3, #4294967295
900201e4:	454a      	cmp	r2, r9
900201e6:	f280 811c 	bge.w	90020422 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900201ea:	f1bc 0f00 	cmp.w	ip, #0
900201ee:	f2c0 8118 	blt.w	90020422 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900201f2:	f10e 39ff 	add.w	r9, lr, #4294967295
900201f6:	45cc      	cmp	ip, r9
900201f8:	f280 8113 	bge.w	90020422 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900201fc:	b21b      	sxth	r3, r3
900201fe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90020200:	fb0c 2203 	mla	r2, ip, r3, r2
90020204:	eb04 0902 	add.w	r9, r4, r2
90020208:	5ca2      	ldrb	r2, [r4, r2]
9002020a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002020e:	2800      	cmp	r0, #0
90020210:	f000 80fe 	beq.w	90020410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90020214:	f899 2001 	ldrb.w	r2, [r9, #1]
90020218:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002021c:	9211      	str	r2, [sp, #68]	@ 0x44
9002021e:	b151      	cbz	r1, 90020236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020220:	eb09 0203 	add.w	r2, r9, r3
90020224:	f819 3003 	ldrb.w	r3, [r9, r3]
90020228:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002022c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002022e:	7853      	ldrb	r3, [r2, #1]
90020230:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90020234:	9312      	str	r3, [sp, #72]	@ 0x48
90020236:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90020238:	fb10 f201 	smulbb	r2, r0, r1
9002023c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002023e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90020242:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90020246:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
9002024a:	10d2      	asrs	r2, r2, #3
9002024c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90020250:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90020254:	ea4c 0c03 	orr.w	ip, ip, r3
90020258:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002025a:	041b      	lsls	r3, r3, #16
9002025c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90020260:	4323      	orrs	r3, r4
90020262:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90020264:	4353      	muls	r3, r2
90020266:	fb09 330c 	mla	r3, r9, ip, r3
9002026a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9002026e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90020272:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90020276:	ea4c 0e0e 	orr.w	lr, ip, lr
9002027a:	f1c1 0c10 	rsb	ip, r1, #16
9002027e:	ebac 0c00 	sub.w	ip, ip, r0
90020282:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020286:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002028a:	fb0c 3c0e 	mla	ip, ip, lr, r3
9002028e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90020290:	0418      	lsls	r0, r3, #16
90020292:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90020296:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002029a:	4318      	orrs	r0, r3
9002029c:	fb02 c200 	mla	r2, r2, r0, ip
900202a0:	8838      	ldrh	r0, [r7, #0]
900202a2:	0d53      	lsrs	r3, r2, #21
900202a4:	0952      	lsrs	r2, r2, #5
900202a6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900202aa:	1201      	asrs	r1, r0, #8
900202ac:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900202b0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900202b4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900202b8:	00c0      	lsls	r0, r0, #3
900202ba:	431a      	orrs	r2, r3
900202bc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
900202c0:	fb11 f104 	smulbb	r1, r1, r4
900202c4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900202c8:	b292      	uxth	r2, r2
900202ca:	fb1e fe04 	smulbb	lr, lr, r4
900202ce:	b2c0      	uxtb	r0, r0
900202d0:	ea4f 2c22 	mov.w	ip, r2, asr #8
900202d4:	fb10 f004 	smulbb	r0, r0, r4
900202d8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900202dc:	fb0c 1c03 	mla	ip, ip, r3, r1
900202e0:	10d1      	asrs	r1, r2, #3
900202e2:	00d2      	lsls	r2, r2, #3
900202e4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900202e8:	fa1f fc8c 	uxth.w	ip, ip
900202ec:	b2d2      	uxtb	r2, r2
900202ee:	fb01 e103 	mla	r1, r1, r3, lr
900202f2:	fb02 0303 	mla	r3, r2, r3, r0
900202f6:	b289      	uxth	r1, r1
900202f8:	b29a      	uxth	r2, r3
900202fa:	f10c 0301 	add.w	r3, ip, #1
900202fe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90020302:	1c53      	adds	r3, r2, #1
90020304:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020308:	1c4a      	adds	r2, r1, #1
9002030a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002030e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020312:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020316:	0949      	lsrs	r1, r1, #5
90020318:	ea43 030c 	orr.w	r3, r3, ip
9002031c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020320:	430b      	orrs	r3, r1
90020322:	803b      	strh	r3, [r7, #0]
90020324:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90020326:	3702      	adds	r7, #2
90020328:	f10b 3bff 	add.w	fp, fp, #4294967295
9002032c:	449a      	add	sl, r3
9002032e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020330:	441d      	add	r5, r3
90020332:	e742      	b.n	900201ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90020334:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90020336:	f108 0802 	add.w	r8, r8, #2
9002033a:	449a      	add	sl, r3
9002033c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002033e:	441d      	add	r5, r3
90020340:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020342:	3b01      	subs	r3, #1
90020344:	9309      	str	r3, [sp, #36]	@ 0x24
90020346:	e718      	b.n	9002017a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90020348:	d023      	beq.n	90020392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9002034a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002034c:	9825      	ldr	r0, [sp, #148]	@ 0x94
9002034e:	3b01      	subs	r3, #1
90020350:	fb00 a003 	mla	r0, r0, r3, sl
90020354:	1400      	asrs	r0, r0, #16
90020356:	f53f af2d 	bmi.w	900201b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002035a:	3901      	subs	r1, #1
9002035c:	4288      	cmp	r0, r1
9002035e:	f6bf af29 	bge.w	900201b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90020362:	9926      	ldr	r1, [sp, #152]	@ 0x98
90020364:	fb01 5303 	mla	r3, r1, r3, r5
90020368:	141b      	asrs	r3, r3, #16
9002036a:	f53f af23 	bmi.w	900201b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002036e:	3a01      	subs	r2, #1
90020370:	4293      	cmp	r3, r2
90020372:	f6bf af1f 	bge.w	900201b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90020376:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
9002037a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
9002037e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
90020382:	f1be 0f00 	cmp.w	lr, #0
90020386:	dc6c      	bgt.n	90020462 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020388:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002038a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002038e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90020392:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020394:	2b00      	cmp	r3, #0
90020396:	f340 810e 	ble.w	900205b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9002039a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002039e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900203a0:	ee30 0a04 	vadd.f32	s0, s0, s8
900203a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900203a8:	eef0 6a62 	vmov.f32	s13, s5
900203ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
900203b0:	ee31 1a05 	vadd.f32	s2, s2, s10
900203b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900203b8:	ee16 aa90 	vmov	sl, s13
900203bc:	eef0 6a43 	vmov.f32	s13, s6
900203c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900203c4:	ee16 5a90 	vmov	r5, s13
900203c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900203cc:	ee61 7a27 	vmul.f32	s15, s2, s15
900203d0:	ee77 2a62 	vsub.f32	s5, s14, s5
900203d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900203d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900203dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900203e0:	ee12 2a90 	vmov	r2, s5
900203e4:	eef0 2a47 	vmov.f32	s5, s14
900203e8:	fb92 f3f3 	sdiv	r3, r2, r3
900203ec:	ee13 2a10 	vmov	r2, s6
900203f0:	9325      	str	r3, [sp, #148]	@ 0x94
900203f2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900203f4:	eeb0 3a67 	vmov.f32	s6, s15
900203f8:	fb92 f3f3 	sdiv	r3, r2, r3
900203fc:	9326      	str	r3, [sp, #152]	@ 0x98
900203fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020400:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90020402:	3b01      	subs	r3, #1
90020404:	930c      	str	r3, [sp, #48]	@ 0x30
90020406:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90020408:	bf08      	it	eq
9002040a:	4613      	moveq	r3, r2
9002040c:	9309      	str	r3, [sp, #36]	@ 0x24
9002040e:	e6a6      	b.n	9002015e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90020410:	2900      	cmp	r1, #0
90020412:	f43f af10 	beq.w	90020236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020416:	f819 3003 	ldrb.w	r3, [r9, r3]
9002041a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002041e:	930f      	str	r3, [sp, #60]	@ 0x3c
90020420:	e709      	b.n	90020236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020422:	f112 0901 	adds.w	r9, r2, #1
90020426:	f53f af7d 	bmi.w	90020324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002042a:	454b      	cmp	r3, r9
9002042c:	f6ff af7a 	blt.w	90020324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90020430:	f11c 0901 	adds.w	r9, ip, #1
90020434:	f53f af76 	bmi.w	90020324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90020438:	45ce      	cmp	lr, r9
9002043a:	f6ff af73 	blt.w	90020324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002043e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90020440:	b21b      	sxth	r3, r3
90020442:	9202      	str	r2, [sp, #8]
90020444:	fa0f f28e 	sxth.w	r2, lr
90020448:	9300      	str	r3, [sp, #0]
9002044a:	4633      	mov	r3, r6
9002044c:	9201      	str	r2, [sp, #4]
9002044e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90020450:	e9cd 1405 	strd	r1, r4, [sp, #20]
90020454:	e9cd c003 	strd	ip, r0, [sp, #12]
90020458:	4639      	mov	r1, r7
9002045a:	9816      	ldr	r0, [sp, #88]	@ 0x58
9002045c:	f7ff fd8e 	bl	9001ff7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90020460:	e760      	b.n	90020324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90020462:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90020464:	ea4f 422a 	mov.w	r2, sl, asr #16
90020468:	1429      	asrs	r1, r5, #16
9002046a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002046c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90020470:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90020474:	f3c5 3003 	ubfx	r0, r5, #12, #4
90020478:	fb03 2101 	mla	r1, r3, r1, r2
9002047c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002047e:	440a      	add	r2, r1
90020480:	5c61      	ldrb	r1, [r4, r1]
90020482:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90020486:	f1bc 0f00 	cmp.w	ip, #0
9002048a:	f000 808c 	beq.w	900205a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9002048e:	7857      	ldrb	r7, [r2, #1]
90020490:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90020494:	9413      	str	r4, [sp, #76]	@ 0x4c
90020496:	b140      	cbz	r0, 900204aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90020498:	18d7      	adds	r7, r2, r3
9002049a:	5cd3      	ldrb	r3, [r2, r3]
9002049c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900204a0:	9310      	str	r3, [sp, #64]	@ 0x40
900204a2:	787b      	ldrb	r3, [r7, #1]
900204a4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900204a8:	9314      	str	r3, [sp, #80]	@ 0x50
900204aa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900204ac:	fb1c f200 	smulbb	r2, ip, r0
900204b0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900204b2:	f10e 3eff 	add.w	lr, lr, #4294967295
900204b6:	041f      	lsls	r7, r3, #16
900204b8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900204bc:	10d2      	asrs	r2, r2, #3
900204be:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
900204c2:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
900204c6:	431f      	orrs	r7, r3
900204c8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
900204cc:	9317      	str	r3, [sp, #92]	@ 0x5c
900204ce:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900204d0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900204d2:	041b      	lsls	r3, r3, #16
900204d4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900204d8:	ea43 030b 	orr.w	r3, r3, fp
900204dc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900204e0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900204e4:	4353      	muls	r3, r2
900204e6:	fb04 3707 	mla	r7, r4, r7, r3
900204ea:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
900204ee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900204f0:	ea43 0b01 	orr.w	fp, r3, r1
900204f4:	f1c0 0110 	rsb	r1, r0, #16
900204f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900204fa:	eba1 0c0c 	sub.w	ip, r1, ip
900204fe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020502:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90020506:	fb0c 770b 	mla	r7, ip, fp, r7
9002050a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002050e:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
90020512:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90020516:	ea4c 0c0b 	orr.w	ip, ip, fp
9002051a:	fb02 770c 	mla	r7, r2, ip, r7
9002051e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90020520:	0d79      	lsrs	r1, r7, #21
90020522:	8812      	ldrh	r2, [r2, #0]
90020524:	097f      	lsrs	r7, r7, #5
90020526:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002052a:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002052e:	430f      	orrs	r7, r1
90020530:	1211      	asrs	r1, r2, #8
90020532:	b2bb      	uxth	r3, r7
90020534:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90020538:	10d7      	asrs	r7, r2, #3
9002053a:	fb11 f104 	smulbb	r1, r1, r4
9002053e:	1218      	asrs	r0, r3, #8
90020540:	00d2      	lsls	r2, r2, #3
90020542:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90020546:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002054a:	fb17 f704 	smulbb	r7, r7, r4
9002054e:	b2d2      	uxtb	r2, r2
90020550:	fb00 1009 	mla	r0, r0, r9, r1
90020554:	10d9      	asrs	r1, r3, #3
90020556:	fb12 f204 	smulbb	r2, r2, r4
9002055a:	00db      	lsls	r3, r3, #3
9002055c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90020560:	b280      	uxth	r0, r0
90020562:	b2db      	uxtb	r3, r3
90020564:	fb01 7109 	mla	r1, r1, r9, r7
90020568:	fb03 2309 	mla	r3, r3, r9, r2
9002056c:	1c42      	adds	r2, r0, #1
9002056e:	b289      	uxth	r1, r1
90020570:	b29b      	uxth	r3, r3
90020572:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020576:	1c4f      	adds	r7, r1, #1
90020578:	1c5a      	adds	r2, r3, #1
9002057a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002057e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90020582:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90020586:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020588:	0949      	lsrs	r1, r1, #5
9002058a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002058e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020592:	4310      	orrs	r0, r2
90020594:	4308      	orrs	r0, r1
90020596:	f823 0b02 	strh.w	r0, [r3], #2
9002059a:	930e      	str	r3, [sp, #56]	@ 0x38
9002059c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002059e:	449a      	add	sl, r3
900205a0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900205a2:	441d      	add	r5, r3
900205a4:	e6ed      	b.n	90020382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900205a6:	2800      	cmp	r0, #0
900205a8:	f43f af7f 	beq.w	900204aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900205ac:	5cd3      	ldrb	r3, [r2, r3]
900205ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900205b2:	9310      	str	r3, [sp, #64]	@ 0x40
900205b4:	e779      	b.n	900204aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900205b6:	b019      	add	sp, #100	@ 0x64
900205b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900205bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900205bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900205c0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
900205c4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
900205c8:	f1b8 0f00 	cmp.w	r8, #0
900205cc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
900205d0:	fb08 470e 	mla	r7, r8, lr, r4
900205d4:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
900205d8:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
900205dc:	eb02 0907 	add.w	r9, r2, r7
900205e0:	8808      	ldrh	r0, [r1, #0]
900205e2:	db67      	blt.n	900206b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
900205e4:	45c2      	cmp	sl, r8
900205e6:	dd65      	ble.n	900206b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
900205e8:	2c00      	cmp	r4, #0
900205ea:	db61      	blt.n	900206b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
900205ec:	45a6      	cmp	lr, r4
900205ee:	dd5f      	ble.n	900206b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
900205f0:	5dd2      	ldrb	r2, [r2, r7]
900205f2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
900205f6:	1c62      	adds	r2, r4, #1
900205f8:	d45f      	bmi.n	900206ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900205fa:	4596      	cmp	lr, r2
900205fc:	dd5d      	ble.n	900206ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900205fe:	2d00      	cmp	r5, #0
90020600:	d05b      	beq.n	900206ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90020602:	f899 2001 	ldrb.w	r2, [r9, #1]
90020606:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9002060a:	f118 0801 	adds.w	r8, r8, #1
9002060e:	d458      	bmi.n	900206c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020610:	45c2      	cmp	sl, r8
90020612:	dd56      	ble.n	900206c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020614:	2e00      	cmp	r6, #0
90020616:	d054      	beq.n	900206c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020618:	2c00      	cmp	r4, #0
9002061a:	db50      	blt.n	900206be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002061c:	45a6      	cmp	lr, r4
9002061e:	dd4e      	ble.n	900206be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90020620:	f819 200e 	ldrb.w	r2, [r9, lr]
90020624:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90020628:	3401      	adds	r4, #1
9002062a:	d407      	bmi.n	9002063c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002062c:	45a6      	cmp	lr, r4
9002062e:	dd05      	ble.n	9002063c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020630:	b125      	cbz	r5, 9002063c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020632:	44ce      	add	lr, r9
90020634:	f89e 0001 	ldrb.w	r0, [lr, #1]
90020638:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9002063c:	fb15 f406 	smulbb	r4, r5, r6
90020640:	ea4f 430c 	mov.w	r3, ip, lsl #16
90020644:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90020648:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002064c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90020650:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90020654:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90020658:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002065c:	ea43 0c0c 	orr.w	ip, r3, ip
90020660:	f1c6 0310 	rsb	r3, r6, #16
90020664:	ea4e 0707 	orr.w	r7, lr, r7
90020668:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9002066c:	1b5b      	subs	r3, r3, r5
9002066e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90020672:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90020676:	437d      	muls	r5, r7
90020678:	fb03 5c0c 	mla	ip, r3, ip, r5
9002067c:	0403      	lsls	r3, r0, #16
9002067e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90020682:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90020686:	4318      	orrs	r0, r3
90020688:	0413      	lsls	r3, r2, #16
9002068a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002068e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90020692:	fb04 c000 	mla	r0, r4, r0, ip
90020696:	4313      	orrs	r3, r2
90020698:	fb06 0003 	mla	r0, r6, r3, r0
9002069c:	0d43      	lsrs	r3, r0, #21
9002069e:	0940      	lsrs	r0, r0, #5
900206a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900206a4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900206a8:	4318      	orrs	r0, r3
900206aa:	8008      	strh	r0, [r1, #0]
900206ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900206b0:	4684      	mov	ip, r0
900206b2:	e7a0      	b.n	900205f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900206b4:	4607      	mov	r7, r0
900206b6:	4684      	mov	ip, r0
900206b8:	e7a7      	b.n	9002060a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900206ba:	4607      	mov	r7, r0
900206bc:	e7a5      	b.n	9002060a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900206be:	4602      	mov	r2, r0
900206c0:	e7b2      	b.n	90020628 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
900206c2:	4602      	mov	r2, r0
900206c4:	e7ba      	b.n	9002063c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

900206c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900206c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900206ca:	b093      	sub	sp, #76	@ 0x4c
900206cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900206d0:	920f      	str	r2, [sp, #60]	@ 0x3c
900206d2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900206d4:	9010      	str	r0, [sp, #64]	@ 0x40
900206d6:	9108      	str	r1, [sp, #32]
900206d8:	6850      	ldr	r0, [r2, #4]
900206da:	9306      	str	r3, [sp, #24]
900206dc:	6812      	ldr	r2, [r2, #0]
900206de:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900206e2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900206e6:	fb00 1303 	mla	r3, r0, r3, r1
900206ea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900206ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900206f0:	681b      	ldr	r3, [r3, #0]
900206f2:	9307      	str	r3, [sp, #28]
900206f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900206f6:	685f      	ldr	r7, [r3, #4]
900206f8:	3704      	adds	r7, #4
900206fa:	9b08      	ldr	r3, [sp, #32]
900206fc:	2b00      	cmp	r3, #0
900206fe:	dc03      	bgt.n	90020708 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90020700:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90020702:	2b00      	cmp	r3, #0
90020704:	f340 81b2 	ble.w	90020a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90020708:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002070a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002070e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020712:	1e48      	subs	r0, r1, #1
90020714:	f102 3cff 	add.w	ip, r2, #4294967295
90020718:	9b06      	ldr	r3, [sp, #24]
9002071a:	2b00      	cmp	r3, #0
9002071c:	f340 80a9 	ble.w	90020872 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020720:	ea5f 4e24 	movs.w	lr, r4, asr #16
90020724:	ea4f 4326 	mov.w	r3, r6, asr #16
90020728:	d406      	bmi.n	90020738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002072a:	4586      	cmp	lr, r0
9002072c:	da04      	bge.n	90020738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002072e:	2b00      	cmp	r3, #0
90020730:	db02      	blt.n	90020738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90020732:	4563      	cmp	r3, ip
90020734:	f2c0 809e 	blt.w	90020874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90020738:	f11e 0e01 	adds.w	lr, lr, #1
9002073c:	f100 808f 	bmi.w	9002085e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020740:	4571      	cmp	r1, lr
90020742:	f2c0 808c 	blt.w	9002085e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020746:	3301      	adds	r3, #1
90020748:	f100 8089 	bmi.w	9002085e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002074c:	429a      	cmp	r2, r3
9002074e:	f2c0 8086 	blt.w	9002085e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020752:	f8dd b018 	ldr.w	fp, [sp, #24]
90020756:	46c8      	mov	r8, r9
90020758:	f1bb 0f00 	cmp.w	fp, #0
9002075c:	f340 80a6 	ble.w	900208ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90020760:	9a24      	ldr	r2, [sp, #144]	@ 0x90
90020762:	ea4f 4c26 	mov.w	ip, r6, asr #16
90020766:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90020768:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002076c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90020770:	1422      	asrs	r2, r4, #16
90020772:	f3c6 3103 	ubfx	r1, r6, #12, #4
90020776:	689b      	ldr	r3, [r3, #8]
90020778:	f100 80e3 	bmi.w	90020942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002077c:	f103 3aff 	add.w	sl, r3, #4294967295
90020780:	4552      	cmp	r2, sl
90020782:	f280 80de 	bge.w	90020942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020786:	f1bc 0f00 	cmp.w	ip, #0
9002078a:	f2c0 80da 	blt.w	90020942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002078e:	f10e 3aff 	add.w	sl, lr, #4294967295
90020792:	45d4      	cmp	ip, sl
90020794:	f280 80d5 	bge.w	90020942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020798:	b21b      	sxth	r3, r3
9002079a:	9d07      	ldr	r5, [sp, #28]
9002079c:	fb0c 2203 	mla	r2, ip, r3, r2
900207a0:	eb05 0a02 	add.w	sl, r5, r2
900207a4:	5caa      	ldrb	r2, [r5, r2]
900207a6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900207aa:	2800      	cmp	r0, #0
900207ac:	f000 80c0 	beq.w	90020930 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900207b0:	f89a 2001 	ldrb.w	r2, [sl, #1]
900207b4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900207b8:	920b      	str	r2, [sp, #44]	@ 0x2c
900207ba:	b151      	cbz	r1, 900207d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900207bc:	eb0a 0203 	add.w	r2, sl, r3
900207c0:	f81a 3003 	ldrb.w	r3, [sl, r3]
900207c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900207c8:	9309      	str	r3, [sp, #36]	@ 0x24
900207ca:	7853      	ldrb	r3, [r2, #1]
900207cc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900207d0:	930c      	str	r3, [sp, #48]	@ 0x30
900207d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900207d4:	fb10 f201 	smulbb	r2, r0, r1
900207d8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900207da:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900207de:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900207e2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900207e6:	10d2      	asrs	r2, r2, #3
900207e8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900207ec:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
900207f0:	ea4c 0c03 	orr.w	ip, ip, r3
900207f4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900207f6:	041b      	lsls	r3, r3, #16
900207f8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900207fc:	432b      	orrs	r3, r5
900207fe:	4353      	muls	r3, r2
90020800:	fb0a 330c 	mla	r3, sl, ip, r3
90020804:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90020808:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002080c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90020810:	ea4c 0e0e 	orr.w	lr, ip, lr
90020814:	f1c1 0c10 	rsb	ip, r1, #16
90020818:	ebac 0c00 	sub.w	ip, ip, r0
9002081c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020820:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90020824:	fb0c 3c0e 	mla	ip, ip, lr, r3
90020828:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002082a:	0418      	lsls	r0, r3, #16
9002082c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90020830:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90020834:	4318      	orrs	r0, r3
90020836:	fb02 c200 	mla	r2, r2, r0, ip
9002083a:	0d53      	lsrs	r3, r2, #21
9002083c:	0952      	lsrs	r2, r2, #5
9002083e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020842:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90020846:	431a      	orrs	r2, r3
90020848:	f8a8 2000 	strh.w	r2, [r8]
9002084c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002084e:	f108 0802 	add.w	r8, r8, #2
90020852:	f10b 3bff 	add.w	fp, fp, #4294967295
90020856:	441c      	add	r4, r3
90020858:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002085a:	441e      	add	r6, r3
9002085c:	e77c      	b.n	90020758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002085e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020860:	f109 0902 	add.w	r9, r9, #2
90020864:	441c      	add	r4, r3
90020866:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020868:	441e      	add	r6, r3
9002086a:	9b06      	ldr	r3, [sp, #24]
9002086c:	3b01      	subs	r3, #1
9002086e:	9306      	str	r3, [sp, #24]
90020870:	e752      	b.n	90020718 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90020872:	d020      	beq.n	900208b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90020874:	9b06      	ldr	r3, [sp, #24]
90020876:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90020878:	3b01      	subs	r3, #1
9002087a:	fb00 4003 	mla	r0, r0, r3, r4
9002087e:	1400      	asrs	r0, r0, #16
90020880:	f53f af67 	bmi.w	90020752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020884:	3901      	subs	r1, #1
90020886:	4288      	cmp	r0, r1
90020888:	f6bf af63 	bge.w	90020752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002088c:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002088e:	fb01 6303 	mla	r3, r1, r3, r6
90020892:	141b      	asrs	r3, r3, #16
90020894:	f53f af5d 	bmi.w	90020752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020898:	3a01      	subs	r2, #1
9002089a:	4293      	cmp	r3, r2
9002089c:	f6bf af59 	bge.w	90020752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900208a0:	f8dd 8018 	ldr.w	r8, [sp, #24]
900208a4:	46ca      	mov	sl, r9
900208a6:	f1b8 0f00 	cmp.w	r8, #0
900208aa:	dc67      	bgt.n	9002097c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900208ac:	9b06      	ldr	r3, [sp, #24]
900208ae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900208b2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900208b6:	9b08      	ldr	r3, [sp, #32]
900208b8:	2b00      	cmp	r3, #0
900208ba:	f340 80d7 	ble.w	90020a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900208be:	ee30 0a04 	vadd.f32	s0, s0, s8
900208c2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900208c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900208c8:	eeb0 6a62 	vmov.f32	s12, s5
900208cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
900208d0:	ee31 1a05 	vadd.f32	s2, s2, s10
900208d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900208d8:	ee16 4a10 	vmov	r4, s12
900208dc:	eeb0 6a43 	vmov.f32	s12, s6
900208e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900208e4:	ee16 6a10 	vmov	r6, s12
900208e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900208ec:	ee61 7a27 	vmul.f32	s15, s2, s15
900208f0:	ee77 2a62 	vsub.f32	s5, s14, s5
900208f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900208f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900208fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020900:	ee12 2a90 	vmov	r2, s5
90020904:	eef0 2a47 	vmov.f32	s5, s14
90020908:	fb92 f3f3 	sdiv	r3, r2, r3
9002090c:	ee13 2a10 	vmov	r2, s6
90020910:	931f      	str	r3, [sp, #124]	@ 0x7c
90020912:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90020914:	eeb0 3a67 	vmov.f32	s6, s15
90020918:	fb92 f3f3 	sdiv	r3, r2, r3
9002091c:	9320      	str	r3, [sp, #128]	@ 0x80
9002091e:	9b08      	ldr	r3, [sp, #32]
90020920:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90020922:	3b01      	subs	r3, #1
90020924:	9308      	str	r3, [sp, #32]
90020926:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90020928:	bf08      	it	eq
9002092a:	4613      	moveq	r3, r2
9002092c:	9306      	str	r3, [sp, #24]
9002092e:	e6e4      	b.n	900206fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90020930:	2900      	cmp	r1, #0
90020932:	f43f af4e 	beq.w	900207d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90020936:	f81a 3003 	ldrb.w	r3, [sl, r3]
9002093a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002093e:	9309      	str	r3, [sp, #36]	@ 0x24
90020940:	e747      	b.n	900207d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90020942:	f112 0a01 	adds.w	sl, r2, #1
90020946:	d481      	bmi.n	9002084c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020948:	4553      	cmp	r3, sl
9002094a:	f6ff af7f 	blt.w	9002084c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002094e:	f11c 0a01 	adds.w	sl, ip, #1
90020952:	f53f af7b 	bmi.w	9002084c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020956:	45d6      	cmp	lr, sl
90020958:	f6ff af78 	blt.w	9002084c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002095c:	b21b      	sxth	r3, r3
9002095e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90020962:	fa0f f28e 	sxth.w	r2, lr
90020966:	9300      	str	r3, [sp, #0]
90020968:	463b      	mov	r3, r7
9002096a:	9201      	str	r2, [sp, #4]
9002096c:	9a07      	ldr	r2, [sp, #28]
9002096e:	e9cd 0104 	strd	r0, r1, [sp, #16]
90020972:	4641      	mov	r1, r8
90020974:	9810      	ldr	r0, [sp, #64]	@ 0x40
90020976:	f7ff fe21 	bl	900205bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002097a:	e767      	b.n	9002084c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002097c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002097e:	1422      	asrs	r2, r4, #16
90020980:	1431      	asrs	r1, r6, #16
90020982:	9d07      	ldr	r5, [sp, #28]
90020984:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90020988:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9002098c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90020990:	fb03 2101 	mla	r1, r3, r1, r2
90020994:	9a07      	ldr	r2, [sp, #28]
90020996:	440a      	add	r2, r1
90020998:	5c69      	ldrb	r1, [r5, r1]
9002099a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002099e:	f1be 0f00 	cmp.w	lr, #0
900209a2:	d05c      	beq.n	90020a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900209a4:	f892 c001 	ldrb.w	ip, [r2, #1]
900209a8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900209ac:	950d      	str	r5, [sp, #52]	@ 0x34
900209ae:	b150      	cbz	r0, 900209c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900209b0:	eb02 0c03 	add.w	ip, r2, r3
900209b4:	5cd3      	ldrb	r3, [r2, r3]
900209b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900209ba:	930a      	str	r3, [sp, #40]	@ 0x28
900209bc:	f89c 3001 	ldrb.w	r3, [ip, #1]
900209c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900209c4:	930e      	str	r3, [sp, #56]	@ 0x38
900209c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900209c8:	fb1e f200 	smulbb	r2, lr, r0
900209cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900209ce:	f108 38ff 	add.w	r8, r8, #4294967295
900209d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900209d6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900209da:	10d2      	asrs	r2, r2, #3
900209dc:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
900209e0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900209e4:	ea4c 0c03 	orr.w	ip, ip, r3
900209e8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
900209ec:	9311      	str	r3, [sp, #68]	@ 0x44
900209ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900209f0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900209f2:	041b      	lsls	r3, r3, #16
900209f4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900209f8:	ea43 030b 	orr.w	r3, r3, fp
900209fc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020a00:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90020a04:	4353      	muls	r3, r2
90020a06:	fb05 3c0c 	mla	ip, r5, ip, r3
90020a0a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90020a0e:	ea43 0b01 	orr.w	fp, r3, r1
90020a12:	f1c0 0110 	rsb	r1, r0, #16
90020a16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020a18:	eba1 0e0e 	sub.w	lr, r1, lr
90020a1c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90020a20:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90020a24:	fb0e cc0b 	mla	ip, lr, fp, ip
90020a28:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90020a2c:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
90020a30:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90020a34:	ea4b 0e0e 	orr.w	lr, fp, lr
90020a38:	fb02 cc0e 	mla	ip, r2, lr, ip
90020a3c:	ea4f 535c 	mov.w	r3, ip, lsr #21
90020a40:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90020a44:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020a48:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90020a4c:	ea43 0c0c 	orr.w	ip, r3, ip
90020a50:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020a52:	441c      	add	r4, r3
90020a54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020a56:	f82a cb02 	strh.w	ip, [sl], #2
90020a5a:	441e      	add	r6, r3
90020a5c:	e723      	b.n	900208a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90020a5e:	2800      	cmp	r0, #0
90020a60:	d0b1      	beq.n	900209c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020a62:	5cd3      	ldrb	r3, [r2, r3]
90020a64:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020a68:	930a      	str	r3, [sp, #40]	@ 0x28
90020a6a:	e7ac      	b.n	900209c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020a6c:	b013      	add	sp, #76	@ 0x4c
90020a6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020a72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90020a72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020a76:	880d      	ldrh	r5, [r1, #0]
90020a78:	b087      	sub	sp, #28
90020a7a:	10ef      	asrs	r7, r5, #3
90020a7c:	9103      	str	r1, [sp, #12]
90020a7e:	ea4f 2a25 	mov.w	sl, r5, asr #8
90020a82:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90020a86:	00ed      	lsls	r5, r5, #3
90020a88:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90020a8c:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
90020a90:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90020a94:	b2ed      	uxtb	r5, r5
90020a96:	9701      	str	r7, [sp, #4]
90020a98:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
90020a9c:	9502      	str	r5, [sp, #8]
90020a9e:	9d01      	ldr	r5, [sp, #4]
90020aa0:	9902      	ldr	r1, [sp, #8]
90020aa2:	022d      	lsls	r5, r5, #8
90020aa4:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90020aa8:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90020aac:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90020ab0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90020ab4:	430d      	orrs	r5, r1
90020ab6:	fb06 0709 	mla	r7, r6, r9, r0
90020aba:	2e00      	cmp	r6, #0
90020abc:	9505      	str	r5, [sp, #20]
90020abe:	eb02 0c07 	add.w	ip, r2, r7
90020ac2:	f2c0 80b6 	blt.w	90020c32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90020ac6:	45b3      	cmp	fp, r6
90020ac8:	f340 80b3 	ble.w	90020c32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90020acc:	2800      	cmp	r0, #0
90020ace:	f2c0 80ae 	blt.w	90020c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020ad2:	4581      	cmp	r9, r0
90020ad4:	f340 80ab 	ble.w	90020c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020ad8:	5dd7      	ldrb	r7, [r2, r7]
90020ada:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020ade:	441f      	add	r7, r3
90020ae0:	1c42      	adds	r2, r0, #1
90020ae2:	f100 80a9 	bmi.w	90020c38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020ae6:	4591      	cmp	r9, r2
90020ae8:	f340 80a6 	ble.w	90020c38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020aec:	2c00      	cmp	r4, #0
90020aee:	f000 80a3 	beq.w	90020c38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020af2:	f89c 5001 	ldrb.w	r5, [ip, #1]
90020af6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90020afa:	441d      	add	r5, r3
90020afc:	3601      	adds	r6, #1
90020afe:	f100 809f 	bmi.w	90020c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020b02:	45b3      	cmp	fp, r6
90020b04:	f340 809c 	ble.w	90020c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020b08:	f1be 0f00 	cmp.w	lr, #0
90020b0c:	f000 8098 	beq.w	90020c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020b10:	2800      	cmp	r0, #0
90020b12:	f2c0 8093 	blt.w	90020c3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020b16:	4581      	cmp	r9, r0
90020b18:	f340 8090 	ble.w	90020c3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020b1c:	f81c 6009 	ldrb.w	r6, [ip, r9]
90020b20:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020b24:	441e      	add	r6, r3
90020b26:	3001      	adds	r0, #1
90020b28:	f100 808d 	bmi.w	90020c46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020b2c:	4581      	cmp	r9, r0
90020b2e:	f340 808a 	ble.w	90020c46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020b32:	2c00      	cmp	r4, #0
90020b34:	f000 8087 	beq.w	90020c46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020b38:	44e1      	add	r9, ip
90020b3a:	f899 2001 	ldrb.w	r2, [r9, #1]
90020b3e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020b42:	4413      	add	r3, r2
90020b44:	b2a4      	uxth	r4, r4
90020b46:	f897 c002 	ldrb.w	ip, [r7, #2]
90020b4a:	fa1f fe8e 	uxth.w	lr, lr
90020b4e:	9901      	ldr	r1, [sp, #4]
90020b50:	fb04 fb0e 	mul.w	fp, r4, lr
90020b54:	0124      	lsls	r4, r4, #4
90020b56:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90020b5a:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
90020b5e:	eba4 040b 	sub.w	r4, r4, fp
90020b62:	fa1f f08e 	uxth.w	r0, lr
90020b66:	b2a2      	uxth	r2, r4
90020b68:	78ac      	ldrb	r4, [r5, #2]
90020b6a:	eba9 0900 	sub.w	r9, r9, r0
90020b6e:	fa1f fe88 	uxth.w	lr, r8
90020b72:	4354      	muls	r4, r2
90020b74:	ea6f 0808 	mvn.w	r8, r8
90020b78:	fa1f f989 	uxth.w	r9, r9
90020b7c:	fa5f f888 	uxtb.w	r8, r8
90020b80:	fb09 440c 	mla	r4, r9, ip, r4
90020b84:	f896 c002 	ldrb.w	ip, [r6, #2]
90020b88:	fb1a fa08 	smulbb	sl, sl, r8
90020b8c:	fb00 440c 	mla	r4, r0, ip, r4
90020b90:	f893 c002 	ldrb.w	ip, [r3, #2]
90020b94:	fb0b 4c0c 	mla	ip, fp, ip, r4
90020b98:	787c      	ldrb	r4, [r7, #1]
90020b9a:	783f      	ldrb	r7, [r7, #0]
90020b9c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020ba0:	fb0c ac0e 	mla	ip, ip, lr, sl
90020ba4:	f895 a001 	ldrb.w	sl, [r5, #1]
90020ba8:	782d      	ldrb	r5, [r5, #0]
90020baa:	fb02 fa0a 	mul.w	sl, r2, sl
90020bae:	fa1f fc8c 	uxth.w	ip, ip
90020bb2:	436a      	muls	r2, r5
90020bb4:	7835      	ldrb	r5, [r6, #0]
90020bb6:	fb09 aa04 	mla	sl, r9, r4, sl
90020bba:	7874      	ldrb	r4, [r6, #1]
90020bbc:	fb09 2207 	mla	r2, r9, r7, r2
90020bc0:	fb00 aa04 	mla	sl, r0, r4, sl
90020bc4:	785c      	ldrb	r4, [r3, #1]
90020bc6:	fb00 2005 	mla	r0, r0, r5, r2
90020bca:	781b      	ldrb	r3, [r3, #0]
90020bcc:	fb0b a404 	mla	r4, fp, r4, sl
90020bd0:	fb11 fa08 	smulbb	sl, r1, r8
90020bd4:	fb0b 0b03 	mla	fp, fp, r3, r0
90020bd8:	9b02      	ldr	r3, [sp, #8]
90020bda:	f3c4 2407 	ubfx	r4, r4, #8, #8
90020bde:	fb13 f808 	smulbb	r8, r3, r8
90020be2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90020be6:	fb04 a40e 	mla	r4, r4, lr, sl
90020bea:	f10c 0301 	add.w	r3, ip, #1
90020bee:	fb0b 8e0e 	mla	lr, fp, lr, r8
90020bf2:	b2a4      	uxth	r4, r4
90020bf4:	fa1f fe8e 	uxth.w	lr, lr
90020bf8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90020bfc:	f104 0a01 	add.w	sl, r4, #1
90020c00:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90020c04:	f10e 0c01 	add.w	ip, lr, #1
90020c08:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90020c0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020c10:	0964      	lsrs	r4, r4, #5
90020c12:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020c16:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90020c1a:	ea4c 0c03 	orr.w	ip, ip, r3
90020c1e:	9b03      	ldr	r3, [sp, #12]
90020c20:	ea4c 0c04 	orr.w	ip, ip, r4
90020c24:	f8a3 c000 	strh.w	ip, [r3]
90020c28:	b007      	add	sp, #28
90020c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020c2e:	af05      	add	r7, sp, #20
90020c30:	e756      	b.n	90020ae0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90020c32:	ad05      	add	r5, sp, #20
90020c34:	462f      	mov	r7, r5
90020c36:	e761      	b.n	90020afc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90020c38:	ad05      	add	r5, sp, #20
90020c3a:	e75f      	b.n	90020afc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90020c3c:	ae05      	add	r6, sp, #20
90020c3e:	e772      	b.n	90020b26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90020c40:	ab05      	add	r3, sp, #20
90020c42:	461e      	mov	r6, r3
90020c44:	e77e      	b.n	90020b44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90020c46:	ab05      	add	r3, sp, #20
90020c48:	e77c      	b.n	90020b44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90020c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020c4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020c4e:	b095      	sub	sp, #84	@ 0x54
90020c50:	9212      	str	r2, [sp, #72]	@ 0x48
90020c52:	9309      	str	r3, [sp, #36]	@ 0x24
90020c54:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90020c56:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90020c5a:	9013      	str	r0, [sp, #76]	@ 0x4c
90020c5c:	930f      	str	r3, [sp, #60]	@ 0x3c
90020c5e:	6850      	ldr	r0, [r2, #4]
90020c60:	910e      	str	r1, [sp, #56]	@ 0x38
90020c62:	6812      	ldr	r2, [r2, #0]
90020c64:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90020c68:	fb00 1303 	mla	r3, r0, r3, r1
90020c6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020c70:	930a      	str	r3, [sp, #40]	@ 0x28
90020c72:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020c74:	681b      	ldr	r3, [r3, #0]
90020c76:	930d      	str	r3, [sp, #52]	@ 0x34
90020c78:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020c7a:	685c      	ldr	r4, [r3, #4]
90020c7c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90020c7e:	3404      	adds	r4, #4
90020c80:	43db      	mvns	r3, r3
90020c82:	b2db      	uxtb	r3, r3
90020c84:	930b      	str	r3, [sp, #44]	@ 0x2c
90020c86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020c88:	2b00      	cmp	r3, #0
90020c8a:	dc03      	bgt.n	90020c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90020c8c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90020c8e:	2b00      	cmp	r3, #0
90020c90:	f340 8255 	ble.w	9002113e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020c94:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020c96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020c9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020c9e:	1e48      	subs	r0, r1, #1
90020ca0:	1e55      	subs	r5, r2, #1
90020ca2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020ca4:	2b00      	cmp	r3, #0
90020ca6:	f340 80f9 	ble.w	90020e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90020caa:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90020cac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020cae:	1436      	asrs	r6, r6, #16
90020cb0:	ea4f 4323 	mov.w	r3, r3, asr #16
90020cb4:	d406      	bmi.n	90020cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020cb6:	4286      	cmp	r6, r0
90020cb8:	da04      	bge.n	90020cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020cba:	2b00      	cmp	r3, #0
90020cbc:	db02      	blt.n	90020cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020cbe:	42ab      	cmp	r3, r5
90020cc0:	f2c0 80ed 	blt.w	90020e9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90020cc4:	3601      	adds	r6, #1
90020cc6:	f100 80da 	bmi.w	90020e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020cca:	42b1      	cmp	r1, r6
90020ccc:	f2c0 80d7 	blt.w	90020e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020cd0:	3301      	adds	r3, #1
90020cd2:	f100 80d4 	bmi.w	90020e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020cd6:	429a      	cmp	r2, r3
90020cd8:	f2c0 80d1 	blt.w	90020e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020cdc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020cde:	9311      	str	r3, [sp, #68]	@ 0x44
90020ce0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020ce2:	930c      	str	r3, [sp, #48]	@ 0x30
90020ce4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90020ce6:	2b00      	cmp	r3, #0
90020ce8:	f340 80fa 	ble.w	90020ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90020cec:	9826      	ldr	r0, [sp, #152]	@ 0x98
90020cee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020cf0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90020cf2:	68c6      	ldr	r6, [r0, #12]
90020cf4:	141d      	asrs	r5, r3, #16
90020cf6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90020cf8:	f3c2 3103 	ubfx	r1, r2, #12, #4
90020cfc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020cfe:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90020d00:	1400      	asrs	r0, r0, #16
90020d02:	f3c3 3303 	ubfx	r3, r3, #12, #4
90020d06:	6892      	ldr	r2, [r2, #8]
90020d08:	f100 813e 	bmi.w	90020f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020d0c:	1e57      	subs	r7, r2, #1
90020d0e:	42b8      	cmp	r0, r7
90020d10:	f280 813a 	bge.w	90020f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020d14:	2d00      	cmp	r5, #0
90020d16:	f2c0 8137 	blt.w	90020f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020d1a:	1e77      	subs	r7, r6, #1
90020d1c:	42bd      	cmp	r5, r7
90020d1e:	f280 8133 	bge.w	90020f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020d22:	b212      	sxth	r2, r2
90020d24:	fb05 0002 	mla	r0, r5, r2, r0
90020d28:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90020d2a:	f815 a000 	ldrb.w	sl, [r5, r0]
90020d2e:	182e      	adds	r6, r5, r0
90020d30:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90020d34:	eb04 050a 	add.w	r5, r4, sl
90020d38:	2b00      	cmp	r3, #0
90020d3a:	f000 8117 	beq.w	90020f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90020d3e:	f896 c001 	ldrb.w	ip, [r6, #1]
90020d42:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90020d46:	44a4      	add	ip, r4
90020d48:	2900      	cmp	r1, #0
90020d4a:	f000 8117 	beq.w	90020f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90020d4e:	18b0      	adds	r0, r6, r2
90020d50:	5cb2      	ldrb	r2, [r6, r2]
90020d52:	7840      	ldrb	r0, [r0, #1]
90020d54:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020d58:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020d5c:	4422      	add	r2, r4
90020d5e:	4420      	add	r0, r4
90020d60:	b29b      	uxth	r3, r3
90020d62:	f89c 7002 	ldrb.w	r7, [ip, #2]
90020d66:	b289      	uxth	r1, r1
90020d68:	f895 b002 	ldrb.w	fp, [r5, #2]
90020d6c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90020d6e:	fb03 f901 	mul.w	r9, r3, r1
90020d72:	011b      	lsls	r3, r3, #4
90020d74:	f8b6 e000 	ldrh.w	lr, [r6]
90020d78:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90020d7c:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90020d80:	eba3 0309 	sub.w	r3, r3, r9
90020d84:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90020d88:	b289      	uxth	r1, r1
90020d8a:	f814 a00a 	ldrb.w	sl, [r4, sl]
90020d8e:	b29b      	uxth	r3, r3
90020d90:	eba8 0801 	sub.w	r8, r8, r1
90020d94:	435f      	muls	r7, r3
90020d96:	fa1f f888 	uxth.w	r8, r8
90020d9a:	9310      	str	r3, [sp, #64]	@ 0x40
90020d9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020d9e:	fb08 770b 	mla	r7, r8, fp, r7
90020da2:	f892 b002 	ldrb.w	fp, [r2, #2]
90020da6:	fb01 770b 	mla	r7, r1, fp, r7
90020daa:	f890 b002 	ldrb.w	fp, [r0, #2]
90020dae:	fb09 770b 	mla	r7, r9, fp, r7
90020db2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90020db6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90020dba:	f3c7 2707 	ubfx	r7, r7, #8, #8
90020dbe:	fb1b fb03 	smulbb	fp, fp, r3
90020dc2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020dc4:	fb07 b706 	mla	r7, r7, r6, fp
90020dc8:	f895 b001 	ldrb.w	fp, [r5, #1]
90020dcc:	f89c 5001 	ldrb.w	r5, [ip, #1]
90020dd0:	f89c c000 	ldrb.w	ip, [ip]
90020dd4:	b2bf      	uxth	r7, r7
90020dd6:	435d      	muls	r5, r3
90020dd8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020dda:	fb08 550b 	mla	r5, r8, fp, r5
90020dde:	f892 b001 	ldrb.w	fp, [r2, #1]
90020de2:	fb01 550b 	mla	r5, r1, fp, r5
90020de6:	f890 b001 	ldrb.w	fp, [r0, #1]
90020dea:	fb09 550b 	mla	r5, r9, fp, r5
90020dee:	ea4f 0bee 	mov.w	fp, lr, asr #3
90020df2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020df6:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90020dfa:	f3c5 2507 	ubfx	r5, r5, #8, #8
90020dfe:	fa5f fe8e 	uxtb.w	lr, lr
90020e02:	fb1b fb03 	smulbb	fp, fp, r3
90020e06:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020e08:	fb03 f30c 	mul.w	r3, r3, ip
90020e0c:	f892 c000 	ldrb.w	ip, [r2]
90020e10:	fb05 b506 	mla	r5, r5, r6, fp
90020e14:	fb08 330a 	mla	r3, r8, sl, r3
90020e18:	b2ad      	uxth	r5, r5
90020e1a:	fb01 330c 	mla	r3, r1, ip, r3
90020e1e:	f890 c000 	ldrb.w	ip, [r0]
90020e22:	f105 0b01 	add.w	fp, r5, #1
90020e26:	fb09 3c0c 	mla	ip, r9, ip, r3
90020e2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020e2c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90020e30:	fb1e fe03 	smulbb	lr, lr, r3
90020e34:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020e38:	1c7b      	adds	r3, r7, #1
90020e3a:	096d      	lsrs	r5, r5, #5
90020e3c:	fb0c e606 	mla	r6, ip, r6, lr
90020e40:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90020e44:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020e48:	b2b6      	uxth	r6, r6
90020e4a:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90020e4e:	1c77      	adds	r7, r6, #1
90020e50:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90020e54:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020e58:	431f      	orrs	r7, r3
90020e5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020e5c:	433d      	orrs	r5, r7
90020e5e:	801d      	strh	r5, [r3, #0]
90020e60:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020e62:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90020e64:	3302      	adds	r3, #2
90020e66:	930c      	str	r3, [sp, #48]	@ 0x30
90020e68:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020e6a:	4413      	add	r3, r2
90020e6c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90020e6e:	931f      	str	r3, [sp, #124]	@ 0x7c
90020e70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020e72:	4413      	add	r3, r2
90020e74:	9320      	str	r3, [sp, #128]	@ 0x80
90020e76:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90020e78:	3b01      	subs	r3, #1
90020e7a:	9311      	str	r3, [sp, #68]	@ 0x44
90020e7c:	e732      	b.n	90020ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90020e7e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020e80:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90020e82:	4433      	add	r3, r6
90020e84:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90020e86:	931f      	str	r3, [sp, #124]	@ 0x7c
90020e88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020e8a:	4433      	add	r3, r6
90020e8c:	9320      	str	r3, [sp, #128]	@ 0x80
90020e8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020e90:	3b01      	subs	r3, #1
90020e92:	9309      	str	r3, [sp, #36]	@ 0x24
90020e94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020e96:	3302      	adds	r3, #2
90020e98:	930a      	str	r3, [sp, #40]	@ 0x28
90020e9a:	e702      	b.n	90020ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90020e9c:	d027      	beq.n	90020eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90020e9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020ea0:	9821      	ldr	r0, [sp, #132]	@ 0x84
90020ea2:	3b01      	subs	r3, #1
90020ea4:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90020ea6:	fb00 5003 	mla	r0, r0, r3, r5
90020eaa:	1400      	asrs	r0, r0, #16
90020eac:	f53f af16 	bmi.w	90020cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020eb0:	3901      	subs	r1, #1
90020eb2:	4288      	cmp	r0, r1
90020eb4:	f6bf af12 	bge.w	90020cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020eb8:	9922      	ldr	r1, [sp, #136]	@ 0x88
90020eba:	9820      	ldr	r0, [sp, #128]	@ 0x80
90020ebc:	fb01 0303 	mla	r3, r1, r3, r0
90020ec0:	141b      	asrs	r3, r3, #16
90020ec2:	f53f af0b 	bmi.w	90020cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020ec6:	3a01      	subs	r2, #1
90020ec8:	4293      	cmp	r3, r2
90020eca:	f6bf af07 	bge.w	90020cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020ece:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020ed0:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90020ed4:	9311      	str	r3, [sp, #68]	@ 0x44
90020ed6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020ed8:	930c      	str	r3, [sp, #48]	@ 0x30
90020eda:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90020edc:	2b00      	cmp	r3, #0
90020ede:	dc70      	bgt.n	90020fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90020ee0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020ee2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020ee4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90020ee8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020eec:	930a      	str	r3, [sp, #40]	@ 0x28
90020eee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020ef0:	2b00      	cmp	r3, #0
90020ef2:	f340 8124 	ble.w	9002113e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020ef6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90020efa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90020efc:	ee30 0a04 	vadd.f32	s0, s0, s8
90020f00:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020f04:	eef0 6a62 	vmov.f32	s13, s5
90020f08:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020f0c:	ee31 1a05 	vadd.f32	s2, s2, s10
90020f10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020f14:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90020f18:	eef0 6a43 	vmov.f32	s13, s6
90020f1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020f20:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90020f24:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020f28:	ee61 7a27 	vmul.f32	s15, s2, s15
90020f2c:	ee77 2a62 	vsub.f32	s5, s14, s5
90020f30:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020f34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020f38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020f3c:	ee12 2a90 	vmov	r2, s5
90020f40:	eef0 2a47 	vmov.f32	s5, s14
90020f44:	fb92 f3f3 	sdiv	r3, r2, r3
90020f48:	ee13 2a10 	vmov	r2, s6
90020f4c:	9321      	str	r3, [sp, #132]	@ 0x84
90020f4e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90020f50:	eeb0 3a67 	vmov.f32	s6, s15
90020f54:	fb92 f3f3 	sdiv	r3, r2, r3
90020f58:	9322      	str	r3, [sp, #136]	@ 0x88
90020f5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020f5c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90020f5e:	3b01      	subs	r3, #1
90020f60:	930e      	str	r3, [sp, #56]	@ 0x38
90020f62:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90020f64:	bf08      	it	eq
90020f66:	4613      	moveq	r3, r2
90020f68:	9309      	str	r3, [sp, #36]	@ 0x24
90020f6a:	e68c      	b.n	90020c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020f6c:	b149      	cbz	r1, 90020f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90020f6e:	5cb2      	ldrb	r2, [r6, r2]
90020f70:	4628      	mov	r0, r5
90020f72:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020f76:	4422      	add	r2, r4
90020f78:	46ac      	mov	ip, r5
90020f7a:	e6f1      	b.n	90020d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020f7c:	4628      	mov	r0, r5
90020f7e:	462a      	mov	r2, r5
90020f80:	e6ee      	b.n	90020d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020f82:	4628      	mov	r0, r5
90020f84:	462a      	mov	r2, r5
90020f86:	e7f7      	b.n	90020f78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90020f88:	1c47      	adds	r7, r0, #1
90020f8a:	f53f af69 	bmi.w	90020e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020f8e:	42ba      	cmp	r2, r7
90020f90:	f6ff af66 	blt.w	90020e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020f94:	1c6f      	adds	r7, r5, #1
90020f96:	f53f af63 	bmi.w	90020e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020f9a:	42be      	cmp	r6, r7
90020f9c:	f6ff af60 	blt.w	90020e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020fa0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90020fa2:	b236      	sxth	r6, r6
90020fa4:	b212      	sxth	r2, r2
90020fa6:	9002      	str	r0, [sp, #8]
90020fa8:	9601      	str	r6, [sp, #4]
90020faa:	9200      	str	r2, [sp, #0]
90020fac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90020fae:	e9cd 1705 	strd	r1, r7, [sp, #20]
90020fb2:	e9cd 5303 	strd	r5, r3, [sp, #12]
90020fb6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90020fba:	4623      	mov	r3, r4
90020fbc:	f7ff fd59 	bl	90020a72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90020fc0:	e74e      	b.n	90020e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020fc2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90020fc4:	9820      	ldr	r0, [sp, #128]	@ 0x80
90020fc6:	f3c2 3103 	ubfx	r1, r2, #12, #4
90020fca:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90020fcc:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90020fce:	1400      	asrs	r0, r0, #16
90020fd0:	142d      	asrs	r5, r5, #16
90020fd2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020fd4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90020fd8:	f3c3 3303 	ubfx	r3, r3, #12, #4
90020fdc:	fb02 5000 	mla	r0, r2, r0, r5
90020fe0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90020fe2:	f815 9000 	ldrb.w	r9, [r5, r0]
90020fe6:	182e      	adds	r6, r5, r0
90020fe8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90020fec:	eb04 0509 	add.w	r5, r4, r9
90020ff0:	2b00      	cmp	r3, #0
90020ff2:	f000 8096 	beq.w	90021122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90020ff6:	7877      	ldrb	r7, [r6, #1]
90020ff8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020ffc:	4427      	add	r7, r4
90020ffe:	2900      	cmp	r1, #0
90021000:	f000 8097 	beq.w	90021132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90021004:	18b0      	adds	r0, r6, r2
90021006:	5cb2      	ldrb	r2, [r6, r2]
90021008:	7840      	ldrb	r0, [r0, #1]
9002100a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002100e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021012:	4422      	add	r2, r4
90021014:	4420      	add	r0, r4
90021016:	b29b      	uxth	r3, r3
90021018:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002101a:	b289      	uxth	r1, r1
9002101c:	f895 b002 	ldrb.w	fp, [r5, #2]
90021020:	f8b6 c000 	ldrh.w	ip, [r6]
90021024:	fb03 f801 	mul.w	r8, r3, r1
90021028:	011b      	lsls	r3, r3, #4
9002102a:	78be      	ldrb	r6, [r7, #2]
9002102c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90021030:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90021034:	eba3 0308 	sub.w	r3, r3, r8
90021038:	f814 9009 	ldrb.w	r9, [r4, r9]
9002103c:	b289      	uxth	r1, r1
9002103e:	b29b      	uxth	r3, r3
90021040:	ebae 0e01 	sub.w	lr, lr, r1
90021044:	435e      	muls	r6, r3
90021046:	fa1f fe8e 	uxth.w	lr, lr
9002104a:	9310      	str	r3, [sp, #64]	@ 0x40
9002104c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002104e:	fb0e 660b 	mla	r6, lr, fp, r6
90021052:	f892 b002 	ldrb.w	fp, [r2, #2]
90021056:	fb01 660b 	mla	r6, r1, fp, r6
9002105a:	f890 b002 	ldrb.w	fp, [r0, #2]
9002105e:	fb08 660b 	mla	r6, r8, fp, r6
90021062:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90021066:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
9002106a:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002106e:	fb1b fb03 	smulbb	fp, fp, r3
90021072:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021074:	fb06 b60a 	mla	r6, r6, sl, fp
90021078:	f895 b001 	ldrb.w	fp, [r5, #1]
9002107c:	787d      	ldrb	r5, [r7, #1]
9002107e:	783f      	ldrb	r7, [r7, #0]
90021080:	b2b6      	uxth	r6, r6
90021082:	435d      	muls	r5, r3
90021084:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021086:	fb0e 550b 	mla	r5, lr, fp, r5
9002108a:	f892 b001 	ldrb.w	fp, [r2, #1]
9002108e:	fb01 550b 	mla	r5, r1, fp, r5
90021092:	f890 b001 	ldrb.w	fp, [r0, #1]
90021096:	fb08 550b 	mla	r5, r8, fp, r5
9002109a:	ea4f 0bec 	mov.w	fp, ip, asr #3
9002109e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900210a2:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900210a6:	f3c5 2507 	ubfx	r5, r5, #8, #8
900210aa:	fa5f fc8c 	uxtb.w	ip, ip
900210ae:	fb1b fb03 	smulbb	fp, fp, r3
900210b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900210b4:	437b      	muls	r3, r7
900210b6:	7817      	ldrb	r7, [r2, #0]
900210b8:	fb05 b50a 	mla	r5, r5, sl, fp
900210bc:	fb0e 3309 	mla	r3, lr, r9, r3
900210c0:	b2ad      	uxth	r5, r5
900210c2:	fb01 3307 	mla	r3, r1, r7, r3
900210c6:	7807      	ldrb	r7, [r0, #0]
900210c8:	f105 0b01 	add.w	fp, r5, #1
900210cc:	fb08 3707 	mla	r7, r8, r7, r3
900210d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900210d2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900210d6:	fb1c fc03 	smulbb	ip, ip, r3
900210da:	f3c7 2707 	ubfx	r7, r7, #8, #8
900210de:	1c73      	adds	r3, r6, #1
900210e0:	096d      	lsrs	r5, r5, #5
900210e2:	fb07 c70a 	mla	r7, r7, sl, ip
900210e6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900210ea:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900210ee:	b2bf      	uxth	r7, r7
900210f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900210f2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
900210f6:	1c7a      	adds	r2, r7, #1
900210f8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900210fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021100:	4316      	orrs	r6, r2
90021102:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021104:	432e      	orrs	r6, r5
90021106:	f823 6b02 	strh.w	r6, [r3], #2
9002110a:	930c      	str	r3, [sp, #48]	@ 0x30
9002110c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002110e:	4413      	add	r3, r2
90021110:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90021112:	931f      	str	r3, [sp, #124]	@ 0x7c
90021114:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021116:	4413      	add	r3, r2
90021118:	9320      	str	r3, [sp, #128]	@ 0x80
9002111a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002111c:	3b01      	subs	r3, #1
9002111e:	9311      	str	r3, [sp, #68]	@ 0x44
90021120:	e6db      	b.n	90020eda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90021122:	b149      	cbz	r1, 90021138 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90021124:	5cb2      	ldrb	r2, [r6, r2]
90021126:	4628      	mov	r0, r5
90021128:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002112c:	4422      	add	r2, r4
9002112e:	462f      	mov	r7, r5
90021130:	e771      	b.n	90021016 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90021132:	4628      	mov	r0, r5
90021134:	462a      	mov	r2, r5
90021136:	e76e      	b.n	90021016 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90021138:	4628      	mov	r0, r5
9002113a:	462a      	mov	r2, r5
9002113c:	e7f7      	b.n	9002112e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002113e:	b015      	add	sp, #84	@ 0x54
90021140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90021144:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021148:	880f      	ldrh	r7, [r1, #0]
9002114a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
9002114e:	023c      	lsls	r4, r7, #8
90021150:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90021154:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90021158:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
9002115c:	017c      	lsls	r4, r7, #5
9002115e:	00ff      	lsls	r7, r7, #3
90021160:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90021164:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90021168:	b2ff      	uxtb	r7, r7
9002116a:	ea4b 0404 	orr.w	r4, fp, r4
9002116e:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90021172:	4327      	orrs	r7, r4
90021174:	fb05 ca0e 	mla	sl, r5, lr, ip
90021178:	2d00      	cmp	r5, #0
9002117a:	9701      	str	r7, [sp, #4]
9002117c:	eb02 080a 	add.w	r8, r2, sl
90021180:	db7e      	blt.n	90021280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90021182:	45a9      	cmp	r9, r5
90021184:	dd7c      	ble.n	90021280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90021186:	f1bc 0f00 	cmp.w	ip, #0
9002118a:	db77      	blt.n	9002127c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9002118c:	45e6      	cmp	lr, ip
9002118e:	dd75      	ble.n	9002127c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90021190:	f812 700a 	ldrb.w	r7, [r2, sl]
90021194:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90021198:	441f      	add	r7, r3
9002119a:	f11c 0201 	adds.w	r2, ip, #1
9002119e:	d472      	bmi.n	90021286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900211a0:	4596      	cmp	lr, r2
900211a2:	dd70      	ble.n	90021286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900211a4:	2800      	cmp	r0, #0
900211a6:	d06e      	beq.n	90021286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900211a8:	f898 4001 	ldrb.w	r4, [r8, #1]
900211ac:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900211b0:	441c      	add	r4, r3
900211b2:	3501      	adds	r5, #1
900211b4:	d46b      	bmi.n	9002128e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900211b6:	45a9      	cmp	r9, r5
900211b8:	dd69      	ble.n	9002128e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900211ba:	2e00      	cmp	r6, #0
900211bc:	d067      	beq.n	9002128e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900211be:	f1bc 0f00 	cmp.w	ip, #0
900211c2:	db62      	blt.n	9002128a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900211c4:	45e6      	cmp	lr, ip
900211c6:	dd60      	ble.n	9002128a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900211c8:	f818 500e 	ldrb.w	r5, [r8, lr]
900211cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900211d0:	441d      	add	r5, r3
900211d2:	f11c 0201 	adds.w	r2, ip, #1
900211d6:	d45d      	bmi.n	90021294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900211d8:	4596      	cmp	lr, r2
900211da:	dd5b      	ble.n	90021294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900211dc:	2800      	cmp	r0, #0
900211de:	d059      	beq.n	90021294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900211e0:	44c6      	add	lr, r8
900211e2:	f89e 2001 	ldrb.w	r2, [lr, #1]
900211e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900211ea:	4413      	add	r3, r2
900211ec:	b280      	uxth	r0, r0
900211ee:	f897 e002 	ldrb.w	lr, [r7, #2]
900211f2:	b2b2      	uxth	r2, r6
900211f4:	f897 9000 	ldrb.w	r9, [r7]
900211f8:	787f      	ldrb	r7, [r7, #1]
900211fa:	fb00 f602 	mul.w	r6, r0, r2
900211fe:	0100      	lsls	r0, r0, #4
90021200:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90021204:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90021208:	1b80      	subs	r0, r0, r6
9002120a:	fa1f fc82 	uxth.w	ip, r2
9002120e:	b282      	uxth	r2, r0
90021210:	78a0      	ldrb	r0, [r4, #2]
90021212:	eba8 080c 	sub.w	r8, r8, ip
90021216:	4350      	muls	r0, r2
90021218:	fa1f f888 	uxth.w	r8, r8
9002121c:	fb08 0e0e 	mla	lr, r8, lr, r0
90021220:	78a8      	ldrb	r0, [r5, #2]
90021222:	fb0c e000 	mla	r0, ip, r0, lr
90021226:	f893 e002 	ldrb.w	lr, [r3, #2]
9002122a:	fb06 0e0e 	mla	lr, r6, lr, r0
9002122e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90021232:	f894 e000 	ldrb.w	lr, [r4]
90021236:	fb02 fe0e 	mul.w	lr, r2, lr
9002123a:	fb08 e909 	mla	r9, r8, r9, lr
9002123e:	f895 e000 	ldrb.w	lr, [r5]
90021242:	fb0c 990e 	mla	r9, ip, lr, r9
90021246:	f893 e000 	ldrb.w	lr, [r3]
9002124a:	785b      	ldrb	r3, [r3, #1]
9002124c:	fb06 9e0e 	mla	lr, r6, lr, r9
90021250:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90021254:	ea4e 0e00 	orr.w	lr, lr, r0
90021258:	7860      	ldrb	r0, [r4, #1]
9002125a:	4350      	muls	r0, r2
9002125c:	786a      	ldrb	r2, [r5, #1]
9002125e:	fb08 0007 	mla	r0, r8, r7, r0
90021262:	fb0c 0202 	mla	r2, ip, r2, r0
90021266:	fb06 2303 	mla	r3, r6, r3, r2
9002126a:	095b      	lsrs	r3, r3, #5
9002126c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021270:	ea4e 0303 	orr.w	r3, lr, r3
90021274:	800b      	strh	r3, [r1, #0]
90021276:	b003      	add	sp, #12
90021278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002127c:	af01      	add	r7, sp, #4
9002127e:	e78c      	b.n	9002119a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90021280:	ac01      	add	r4, sp, #4
90021282:	4627      	mov	r7, r4
90021284:	e795      	b.n	900211b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90021286:	ac01      	add	r4, sp, #4
90021288:	e793      	b.n	900211b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002128a:	ad01      	add	r5, sp, #4
9002128c:	e7a1      	b.n	900211d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9002128e:	ab01      	add	r3, sp, #4
90021290:	461d      	mov	r5, r3
90021292:	e7ab      	b.n	900211ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90021294:	ab01      	add	r3, sp, #4
90021296:	e7a9      	b.n	900211ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90021298 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002129c:	b08f      	sub	sp, #60	@ 0x3c
9002129e:	920c      	str	r2, [sp, #48]	@ 0x30
900212a0:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
900212a2:	900d      	str	r0, [sp, #52]	@ 0x34
900212a4:	910a      	str	r1, [sp, #40]	@ 0x28
900212a6:	6850      	ldr	r0, [r2, #4]
900212a8:	9306      	str	r3, [sp, #24]
900212aa:	6812      	ldr	r2, [r2, #0]
900212ac:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900212b0:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900212b4:	fb00 1303 	mla	r3, r0, r3, r1
900212b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900212bc:	9307      	str	r3, [sp, #28]
900212be:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900212c0:	681b      	ldr	r3, [r3, #0]
900212c2:	9308      	str	r3, [sp, #32]
900212c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900212c6:	685c      	ldr	r4, [r3, #4]
900212c8:	3404      	adds	r4, #4
900212ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900212cc:	2b00      	cmp	r3, #0
900212ce:	dc03      	bgt.n	900212d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900212d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900212d2:	2b00      	cmp	r3, #0
900212d4:	f340 81d5 	ble.w	90021682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900212d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900212da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900212de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900212e2:	1e48      	subs	r0, r1, #1
900212e4:	1e56      	subs	r6, r2, #1
900212e6:	9b06      	ldr	r3, [sp, #24]
900212e8:	2b00      	cmp	r3, #0
900212ea:	f340 80b6 	ble.w	9002145a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900212ee:	ea5f 472b 	movs.w	r7, fp, asr #16
900212f2:	ea4f 4325 	mov.w	r3, r5, asr #16
900212f6:	d406      	bmi.n	90021306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900212f8:	4287      	cmp	r7, r0
900212fa:	da04      	bge.n	90021306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900212fc:	2b00      	cmp	r3, #0
900212fe:	db02      	blt.n	90021306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90021300:	42b3      	cmp	r3, r6
90021302:	f2c0 80ab 	blt.w	9002145c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90021306:	3701      	adds	r7, #1
90021308:	f100 809c 	bmi.w	90021444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002130c:	42b9      	cmp	r1, r7
9002130e:	f2c0 8099 	blt.w	90021444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021312:	3301      	adds	r3, #1
90021314:	f100 8096 	bmi.w	90021444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021318:	429a      	cmp	r2, r3
9002131a:	f2c0 8093 	blt.w	90021444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002131e:	9b06      	ldr	r3, [sp, #24]
90021320:	930b      	str	r3, [sp, #44]	@ 0x2c
90021322:	9b07      	ldr	r3, [sp, #28]
90021324:	9309      	str	r3, [sp, #36]	@ 0x24
90021326:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021328:	2b00      	cmp	r3, #0
9002132a:	f340 80b4 	ble.w	90021496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9002132e:	9820      	ldr	r0, [sp, #128]	@ 0x80
90021330:	142e      	asrs	r6, r5, #16
90021332:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90021334:	f3cb 3303 	ubfx	r3, fp, #12, #4
90021338:	68c7      	ldr	r7, [r0, #12]
9002133a:	ea5f 402b 	movs.w	r0, fp, asr #16
9002133e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021342:	6892      	ldr	r2, [r2, #8]
90021344:	f100 80fb 	bmi.w	9002153e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90021348:	f102 3cff 	add.w	ip, r2, #4294967295
9002134c:	4560      	cmp	r0, ip
9002134e:	f280 80f6 	bge.w	9002153e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90021352:	2e00      	cmp	r6, #0
90021354:	f2c0 80f3 	blt.w	9002153e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90021358:	f107 3cff 	add.w	ip, r7, #4294967295
9002135c:	4566      	cmp	r6, ip
9002135e:	f280 80ee 	bge.w	9002153e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90021362:	b212      	sxth	r2, r2
90021364:	fb06 0002 	mla	r0, r6, r2, r0
90021368:	9e08      	ldr	r6, [sp, #32]
9002136a:	1837      	adds	r7, r6, r0
9002136c:	5c30      	ldrb	r0, [r6, r0]
9002136e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90021372:	eb04 0c08 	add.w	ip, r4, r8
90021376:	2b00      	cmp	r3, #0
90021378:	f000 80d3 	beq.w	90021522 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
9002137c:	787e      	ldrb	r6, [r7, #1]
9002137e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90021382:	4426      	add	r6, r4
90021384:	2900      	cmp	r1, #0
90021386:	f000 80d4 	beq.w	90021532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9002138a:	18b8      	adds	r0, r7, r2
9002138c:	5cba      	ldrb	r2, [r7, r2]
9002138e:	7840      	ldrb	r0, [r0, #1]
90021390:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021394:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021398:	4422      	add	r2, r4
9002139a:	4420      	add	r0, r4
9002139c:	b29b      	uxth	r3, r3
9002139e:	78b7      	ldrb	r7, [r6, #2]
900213a0:	b289      	uxth	r1, r1
900213a2:	f89c a002 	ldrb.w	sl, [ip, #2]
900213a6:	f89c c001 	ldrb.w	ip, [ip, #1]
900213aa:	fb03 f901 	mul.w	r9, r3, r1
900213ae:	011b      	lsls	r3, r3, #4
900213b0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900213b4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900213b8:	eba3 0309 	sub.w	r3, r3, r9
900213bc:	b289      	uxth	r1, r1
900213be:	b29b      	uxth	r3, r3
900213c0:	ebae 0e01 	sub.w	lr, lr, r1
900213c4:	435f      	muls	r7, r3
900213c6:	fa1f fe8e 	uxth.w	lr, lr
900213ca:	fb0e 770a 	mla	r7, lr, sl, r7
900213ce:	f892 a002 	ldrb.w	sl, [r2, #2]
900213d2:	fb01 770a 	mla	r7, r1, sl, r7
900213d6:	f890 a002 	ldrb.w	sl, [r0, #2]
900213da:	fb09 7a0a 	mla	sl, r9, sl, r7
900213de:	f814 7008 	ldrb.w	r7, [r4, r8]
900213e2:	f896 8000 	ldrb.w	r8, [r6]
900213e6:	7876      	ldrb	r6, [r6, #1]
900213e8:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
900213ec:	fb03 f808 	mul.w	r8, r3, r8
900213f0:	4373      	muls	r3, r6
900213f2:	fb0e 8807 	mla	r8, lr, r7, r8
900213f6:	7817      	ldrb	r7, [r2, #0]
900213f8:	fb0e 330c 	mla	r3, lr, ip, r3
900213fc:	fb01 8807 	mla	r8, r1, r7, r8
90021400:	7807      	ldrb	r7, [r0, #0]
90021402:	fb09 8707 	mla	r7, r9, r7, r8
90021406:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002140a:	ea47 070a 	orr.w	r7, r7, sl
9002140e:	f892 a001 	ldrb.w	sl, [r2, #1]
90021412:	fb01 310a 	mla	r1, r1, sl, r3
90021416:	f890 a001 	ldrb.w	sl, [r0, #1]
9002141a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002141c:	fb09 1a0a 	mla	sl, r9, sl, r1
90021420:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90021424:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90021428:	ea47 070a 	orr.w	r7, r7, sl
9002142c:	801f      	strh	r7, [r3, #0]
9002142e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021430:	3302      	adds	r3, #2
90021432:	9309      	str	r3, [sp, #36]	@ 0x24
90021434:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90021436:	449b      	add	fp, r3
90021438:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002143a:	441d      	add	r5, r3
9002143c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002143e:	3b01      	subs	r3, #1
90021440:	930b      	str	r3, [sp, #44]	@ 0x2c
90021442:	e770      	b.n	90021326 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90021444:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90021446:	449b      	add	fp, r3
90021448:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002144a:	441d      	add	r5, r3
9002144c:	9b06      	ldr	r3, [sp, #24]
9002144e:	3b01      	subs	r3, #1
90021450:	9306      	str	r3, [sp, #24]
90021452:	9b07      	ldr	r3, [sp, #28]
90021454:	3302      	adds	r3, #2
90021456:	9307      	str	r3, [sp, #28]
90021458:	e745      	b.n	900212e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9002145a:	d023      	beq.n	900214a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9002145c:	9b06      	ldr	r3, [sp, #24]
9002145e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90021460:	3b01      	subs	r3, #1
90021462:	fb00 b003 	mla	r0, r0, r3, fp
90021466:	1400      	asrs	r0, r0, #16
90021468:	f53f af59 	bmi.w	9002131e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002146c:	3901      	subs	r1, #1
9002146e:	4288      	cmp	r0, r1
90021470:	f6bf af55 	bge.w	9002131e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021474:	991c      	ldr	r1, [sp, #112]	@ 0x70
90021476:	fb01 5303 	mla	r3, r1, r3, r5
9002147a:	141b      	asrs	r3, r3, #16
9002147c:	f53f af4f 	bmi.w	9002131e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021480:	3a01      	subs	r2, #1
90021482:	4293      	cmp	r3, r2
90021484:	f6bf af4b 	bge.w	9002131e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021488:	9b06      	ldr	r3, [sp, #24]
9002148a:	9309      	str	r3, [sp, #36]	@ 0x24
9002148c:	9b07      	ldr	r3, [sp, #28]
9002148e:	930b      	str	r3, [sp, #44]	@ 0x2c
90021490:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021492:	2b00      	cmp	r3, #0
90021494:	dc70      	bgt.n	90021578 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90021496:	9b06      	ldr	r3, [sp, #24]
90021498:	9a07      	ldr	r2, [sp, #28]
9002149a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002149e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900214a2:	9307      	str	r3, [sp, #28]
900214a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900214a6:	2b00      	cmp	r3, #0
900214a8:	f340 80eb 	ble.w	90021682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900214ac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900214b0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900214b2:	ee30 0a04 	vadd.f32	s0, s0, s8
900214b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900214ba:	eef0 6a62 	vmov.f32	s13, s5
900214be:	eec7 7a00 	vdiv.f32	s15, s14, s0
900214c2:	ee31 1a05 	vadd.f32	s2, s2, s10
900214c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900214ca:	ee16 ba90 	vmov	fp, s13
900214ce:	eef0 6a43 	vmov.f32	s13, s6
900214d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900214d6:	ee16 5a90 	vmov	r5, s13
900214da:	ee20 7aa7 	vmul.f32	s14, s1, s15
900214de:	ee61 7a27 	vmul.f32	s15, s2, s15
900214e2:	ee77 2a62 	vsub.f32	s5, s14, s5
900214e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900214ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900214ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900214f2:	ee12 2a90 	vmov	r2, s5
900214f6:	eef0 2a47 	vmov.f32	s5, s14
900214fa:	fb92 f3f3 	sdiv	r3, r2, r3
900214fe:	ee13 2a10 	vmov	r2, s6
90021502:	931b      	str	r3, [sp, #108]	@ 0x6c
90021504:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90021506:	eeb0 3a67 	vmov.f32	s6, s15
9002150a:	fb92 f3f3 	sdiv	r3, r2, r3
9002150e:	931c      	str	r3, [sp, #112]	@ 0x70
90021510:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021512:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90021514:	3b01      	subs	r3, #1
90021516:	930a      	str	r3, [sp, #40]	@ 0x28
90021518:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002151a:	bf08      	it	eq
9002151c:	4613      	moveq	r3, r2
9002151e:	9306      	str	r3, [sp, #24]
90021520:	e6d3      	b.n	900212ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90021522:	b149      	cbz	r1, 90021538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90021524:	5cba      	ldrb	r2, [r7, r2]
90021526:	4660      	mov	r0, ip
90021528:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002152c:	4422      	add	r2, r4
9002152e:	4666      	mov	r6, ip
90021530:	e734      	b.n	9002139c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90021532:	4660      	mov	r0, ip
90021534:	4662      	mov	r2, ip
90021536:	e731      	b.n	9002139c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90021538:	4660      	mov	r0, ip
9002153a:	4662      	mov	r2, ip
9002153c:	e7f7      	b.n	9002152e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002153e:	f110 0c01 	adds.w	ip, r0, #1
90021542:	f53f af74 	bmi.w	9002142e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021546:	4562      	cmp	r2, ip
90021548:	f6ff af71 	blt.w	9002142e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002154c:	f116 0c01 	adds.w	ip, r6, #1
90021550:	f53f af6d 	bmi.w	9002142e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021554:	4567      	cmp	r7, ip
90021556:	f6ff af6a 	blt.w	9002142e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002155a:	b23f      	sxth	r7, r7
9002155c:	b212      	sxth	r2, r2
9002155e:	9701      	str	r7, [sp, #4]
90021560:	9200      	str	r2, [sp, #0]
90021562:	e9cd 3104 	strd	r3, r1, [sp, #16]
90021566:	e9cd 0602 	strd	r0, r6, [sp, #8]
9002156a:	4623      	mov	r3, r4
9002156c:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002156e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90021572:	f7ff fde7 	bl	90021144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90021576:	e75a      	b.n	9002142e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021578:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002157a:	ea4f 462b 	mov.w	r6, fp, asr #16
9002157e:	1428      	asrs	r0, r5, #16
90021580:	f3cb 3303 	ubfx	r3, fp, #12, #4
90021584:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90021588:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002158c:	fb02 6000 	mla	r0, r2, r0, r6
90021590:	9e08      	ldr	r6, [sp, #32]
90021592:	f816 8000 	ldrb.w	r8, [r6, r0]
90021596:	1837      	adds	r7, r6, r0
90021598:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9002159c:	eb04 0c08 	add.w	ip, r4, r8
900215a0:	2b00      	cmp	r3, #0
900215a2:	d060      	beq.n	90021666 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900215a4:	787e      	ldrb	r6, [r7, #1]
900215a6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900215aa:	4426      	add	r6, r4
900215ac:	2900      	cmp	r1, #0
900215ae:	d062      	beq.n	90021676 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900215b0:	18b8      	adds	r0, r7, r2
900215b2:	5cba      	ldrb	r2, [r7, r2]
900215b4:	7840      	ldrb	r0, [r0, #1]
900215b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900215ba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900215be:	4422      	add	r2, r4
900215c0:	4420      	add	r0, r4
900215c2:	b29b      	uxth	r3, r3
900215c4:	78b7      	ldrb	r7, [r6, #2]
900215c6:	b289      	uxth	r1, r1
900215c8:	f89c a002 	ldrb.w	sl, [ip, #2]
900215cc:	f89c c001 	ldrb.w	ip, [ip, #1]
900215d0:	fb03 f901 	mul.w	r9, r3, r1
900215d4:	011b      	lsls	r3, r3, #4
900215d6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900215da:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900215de:	eba3 0309 	sub.w	r3, r3, r9
900215e2:	b289      	uxth	r1, r1
900215e4:	b29b      	uxth	r3, r3
900215e6:	ebae 0e01 	sub.w	lr, lr, r1
900215ea:	435f      	muls	r7, r3
900215ec:	fa1f fe8e 	uxth.w	lr, lr
900215f0:	fb0e 770a 	mla	r7, lr, sl, r7
900215f4:	f892 a002 	ldrb.w	sl, [r2, #2]
900215f8:	fb01 770a 	mla	r7, r1, sl, r7
900215fc:	f890 a002 	ldrb.w	sl, [r0, #2]
90021600:	fb09 7a0a 	mla	sl, r9, sl, r7
90021604:	f814 7008 	ldrb.w	r7, [r4, r8]
90021608:	f896 8000 	ldrb.w	r8, [r6]
9002160c:	7876      	ldrb	r6, [r6, #1]
9002160e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90021612:	fb03 f808 	mul.w	r8, r3, r8
90021616:	4373      	muls	r3, r6
90021618:	7856      	ldrb	r6, [r2, #1]
9002161a:	fb0e 8807 	mla	r8, lr, r7, r8
9002161e:	7817      	ldrb	r7, [r2, #0]
90021620:	fb0e 330c 	mla	r3, lr, ip, r3
90021624:	fb01 8807 	mla	r8, r1, r7, r8
90021628:	7807      	ldrb	r7, [r0, #0]
9002162a:	fb01 3306 	mla	r3, r1, r6, r3
9002162e:	fb09 8707 	mla	r7, r9, r7, r8
90021632:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021636:	ea47 070a 	orr.w	r7, r7, sl
9002163a:	f890 a001 	ldrb.w	sl, [r0, #1]
9002163e:	fb09 3a0a 	mla	sl, r9, sl, r3
90021642:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021644:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90021648:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9002164c:	ea47 070a 	orr.w	r7, r7, sl
90021650:	f823 7b02 	strh.w	r7, [r3], #2
90021654:	930b      	str	r3, [sp, #44]	@ 0x2c
90021656:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90021658:	449b      	add	fp, r3
9002165a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002165c:	441d      	add	r5, r3
9002165e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021660:	3b01      	subs	r3, #1
90021662:	9309      	str	r3, [sp, #36]	@ 0x24
90021664:	e714      	b.n	90021490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90021666:	b149      	cbz	r1, 9002167c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90021668:	5cba      	ldrb	r2, [r7, r2]
9002166a:	4660      	mov	r0, ip
9002166c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021670:	4422      	add	r2, r4
90021672:	4666      	mov	r6, ip
90021674:	e7a5      	b.n	900215c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90021676:	4660      	mov	r0, ip
90021678:	4662      	mov	r2, ip
9002167a:	e7a2      	b.n	900215c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9002167c:	4660      	mov	r0, ip
9002167e:	4662      	mov	r2, ip
90021680:	e7f7      	b.n	90021672 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90021682:	b00f      	add	sp, #60	@ 0x3c
90021684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021688 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90021688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002168c:	b085      	sub	sp, #20
9002168e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
90021692:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
90021696:	9102      	str	r1, [sp, #8]
90021698:	2c00      	cmp	r4, #0
9002169a:	fb04 710c 	mla	r1, r4, ip, r7
9002169e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
900216a2:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
900216a6:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900216aa:	eb02 0e01 	add.w	lr, r2, r1
900216ae:	f2c0 8122 	blt.w	900218f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900216b2:	45a0      	cmp	r8, r4
900216b4:	f340 811f 	ble.w	900218f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900216b8:	2f00      	cmp	r7, #0
900216ba:	f2c0 811a 	blt.w	900218f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900216be:	45bc      	cmp	ip, r7
900216c0:	f340 8117 	ble.w	900218f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900216c4:	5c52      	ldrb	r2, [r2, r1]
900216c6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900216ca:	1c7a      	adds	r2, r7, #1
900216cc:	f100 8116 	bmi.w	900218fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900216d0:	4594      	cmp	ip, r2
900216d2:	f340 8113 	ble.w	900218fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900216d6:	2e00      	cmp	r6, #0
900216d8:	f000 8112 	beq.w	90021900 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
900216dc:	f89e 2001 	ldrb.w	r2, [lr, #1]
900216e0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900216e4:	3401      	adds	r4, #1
900216e6:	f100 810f 	bmi.w	90021908 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
900216ea:	45a0      	cmp	r8, r4
900216ec:	f340 810c 	ble.w	90021908 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
900216f0:	2800      	cmp	r0, #0
900216f2:	f000 810c 	beq.w	9002190e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
900216f6:	2f00      	cmp	r7, #0
900216f8:	f2c0 8104 	blt.w	90021904 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
900216fc:	45bc      	cmp	ip, r7
900216fe:	f340 8101 	ble.w	90021904 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90021702:	f81e 200c 	ldrb.w	r2, [lr, ip]
90021706:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002170a:	3701      	adds	r7, #1
9002170c:	f100 8102 	bmi.w	90021914 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021710:	45bc      	cmp	ip, r7
90021712:	f340 80ff 	ble.w	90021914 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021716:	2e00      	cmp	r6, #0
90021718:	f000 80fe 	beq.w	90021918 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9002171c:	44f4      	add	ip, lr
9002171e:	f89c 2001 	ldrb.w	r2, [ip, #1]
90021722:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90021726:	b2b6      	uxth	r6, r6
90021728:	b280      	uxth	r0, r0
9002172a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002172e:	fb00 fe06 	mul.w	lr, r0, r6
90021732:	0136      	lsls	r6, r6, #4
90021734:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90021738:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002173c:	eba6 070e 	sub.w	r7, r6, lr
90021740:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90021744:	ea4f 6914 	mov.w	r9, r4, lsr #24
90021748:	b280      	uxth	r0, r0
9002174a:	b2bf      	uxth	r7, r7
9002174c:	1a1b      	subs	r3, r3, r0
9002174e:	ea4f 6812 	mov.w	r8, r2, lsr #24
90021752:	fb0a f607 	mul.w	r6, sl, r7
90021756:	b29b      	uxth	r3, r3
90021758:	fb0b 6603 	mla	r6, fp, r3, r6
9002175c:	fb00 6609 	mla	r6, r0, r9, r6
90021760:	fb0e 6608 	mla	r6, lr, r8, r6
90021764:	f3c6 2607 	ubfx	r6, r6, #8, #8
90021768:	9600      	str	r6, [sp, #0]
9002176a:	2e00      	cmp	r6, #0
9002176c:	f000 80be 	beq.w	900218ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90021770:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90021774:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90021778:	9e02      	ldr	r6, [sp, #8]
9002177a:	fb0b fc0c 	mul.w	ip, fp, ip
9002177e:	fb0b f505 	mul.w	r5, fp, r5
90021782:	8836      	ldrh	r6, [r6, #0]
90021784:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90021788:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002178c:	9501      	str	r5, [sp, #4]
9002178e:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90021792:	44dc      	add	ip, fp
90021794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021798:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002179c:	9503      	str	r5, [sp, #12]
9002179e:	9d01      	ldr	r5, [sp, #4]
900217a0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900217a4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900217a8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900217ac:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900217b0:	fb0a fc0c 	mul.w	ip, sl, ip
900217b4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900217b8:	fb0a fa01 	mul.w	sl, sl, r1
900217bc:	ea4f 251c 	mov.w	r5, ip, lsr #8
900217c0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900217c4:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900217c8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900217cc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900217d0:	4465      	add	r5, ip
900217d2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900217d6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900217da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900217de:	fb09 fc0c 	mul.w	ip, r9, ip
900217e2:	0a2d      	lsrs	r5, r5, #8
900217e4:	fb09 f904 	mul.w	r9, r9, r4
900217e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900217ec:	ea4f 211c 	mov.w	r1, ip, lsr #8
900217f0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900217f4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900217f8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900217fc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90021800:	437d      	muls	r5, r7
90021802:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90021806:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
9002180a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002180e:	4461      	add	r1, ip
90021810:	fb08 f404 	mul.w	r4, r8, r4
90021814:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021818:	fb08 f802 	mul.w	r8, r8, r2
9002181c:	0a09      	lsrs	r1, r1, #8
9002181e:	0a22      	lsrs	r2, r4, #8
90021820:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90021824:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90021828:	fb07 f70a 	mul.w	r7, r7, sl
9002182c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90021830:	4414      	add	r4, r2
90021832:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90021836:	0a24      	lsrs	r4, r4, #8
90021838:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002183c:	9a03      	ldr	r2, [sp, #12]
9002183e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90021842:	fb02 5503 	mla	r5, r2, r3, r5
90021846:	ea4f 2818 	mov.w	r8, r8, lsr #8
9002184a:	9a00      	ldr	r2, [sp, #0]
9002184c:	fb04 540e 	mla	r4, r4, lr, r5
90021850:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90021854:	1235      	asrs	r5, r6, #8
90021856:	fb01 4100 	mla	r1, r1, r0, r4
9002185a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002185e:	0a09      	lsrs	r1, r1, #8
90021860:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90021864:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90021868:	fb03 7101 	mla	r1, r3, r1, r7
9002186c:	fb0e 1e08 	mla	lr, lr, r8, r1
90021870:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90021874:	fb00 e101 	mla	r1, r0, r1, lr
90021878:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
9002187c:	b287      	uxth	r7, r0
9002187e:	0a09      	lsrs	r1, r1, #8
90021880:	437a      	muls	r2, r7
90021882:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90021886:	1c53      	adds	r3, r2, #1
90021888:	4321      	orrs	r1, r4
9002188a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002188e:	0c0a      	lsrs	r2, r1, #16
90021890:	f3c1 2407 	ubfx	r4, r1, #8, #8
90021894:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90021898:	b2c8      	uxtb	r0, r1
9002189a:	fb12 f207 	smulbb	r2, r2, r7
9002189e:	fb14 f407 	smulbb	r4, r4, r7
900218a2:	b2db      	uxtb	r3, r3
900218a4:	fb10 f007 	smulbb	r0, r0, r7
900218a8:	fb05 2503 	mla	r5, r5, r3, r2
900218ac:	10f2      	asrs	r2, r6, #3
900218ae:	00f6      	lsls	r6, r6, #3
900218b0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900218b4:	b2ad      	uxth	r5, r5
900218b6:	b2f6      	uxtb	r6, r6
900218b8:	fb02 4203 	mla	r2, r2, r3, r4
900218bc:	fb06 0303 	mla	r3, r6, r3, r0
900218c0:	b294      	uxth	r4, r2
900218c2:	b299      	uxth	r1, r3
900218c4:	1c6b      	adds	r3, r5, #1
900218c6:	1c62      	adds	r2, r4, #1
900218c8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900218cc:	1c4b      	adds	r3, r1, #1
900218ce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900218d2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900218d6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900218da:	0952      	lsrs	r2, r2, #5
900218dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900218e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900218e4:	432b      	orrs	r3, r5
900218e6:	4313      	orrs	r3, r2
900218e8:	9a02      	ldr	r2, [sp, #8]
900218ea:	8013      	strh	r3, [r2, #0]
900218ec:	b005      	add	sp, #20
900218ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900218f2:	2500      	movs	r5, #0
900218f4:	e6e9      	b.n	900216ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
900218f6:	2100      	movs	r1, #0
900218f8:	460d      	mov	r5, r1
900218fa:	e6f3      	b.n	900216e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900218fc:	2100      	movs	r1, #0
900218fe:	e6f1      	b.n	900216e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021900:	4631      	mov	r1, r6
90021902:	e6ef      	b.n	900216e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021904:	2400      	movs	r4, #0
90021906:	e700      	b.n	9002170a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90021908:	2200      	movs	r2, #0
9002190a:	4614      	mov	r4, r2
9002190c:	e70b      	b.n	90021726 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002190e:	4602      	mov	r2, r0
90021910:	4604      	mov	r4, r0
90021912:	e708      	b.n	90021726 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021914:	2200      	movs	r2, #0
90021916:	e706      	b.n	90021726 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021918:	4632      	mov	r2, r6
9002191a:	e704      	b.n	90021726 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9002191c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002191c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021920:	b09f      	sub	sp, #124	@ 0x7c
90021922:	921b      	str	r2, [sp, #108]	@ 0x6c
90021924:	9309      	str	r3, [sp, #36]	@ 0x24
90021926:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90021928:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
9002192c:	901d      	str	r0, [sp, #116]	@ 0x74
9002192e:	931c      	str	r3, [sp, #112]	@ 0x70
90021930:	6850      	ldr	r0, [r2, #4]
90021932:	9119      	str	r1, [sp, #100]	@ 0x64
90021934:	6812      	ldr	r2, [r2, #0]
90021936:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90021938:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
9002193c:	fb00 1303 	mla	r3, r0, r3, r1
90021940:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021944:	930c      	str	r3, [sp, #48]	@ 0x30
90021946:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90021948:	681b      	ldr	r3, [r3, #0]
9002194a:	9312      	str	r3, [sp, #72]	@ 0x48
9002194c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002194e:	685e      	ldr	r6, [r3, #4]
90021950:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90021954:	3604      	adds	r6, #4
90021956:	930d      	str	r3, [sp, #52]	@ 0x34
90021958:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002195a:	2b00      	cmp	r3, #0
9002195c:	dc03      	bgt.n	90021966 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002195e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90021960:	2b00      	cmp	r3, #0
90021962:	f340 8387 	ble.w	90022074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90021966:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90021968:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002196c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021970:	1e48      	subs	r0, r1, #1
90021972:	1e57      	subs	r7, r2, #1
90021974:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021976:	2b00      	cmp	r3, #0
90021978:	f340 8194 	ble.w	90021ca4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
9002197c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002197e:	142b      	asrs	r3, r5, #16
90021980:	ea5f 4c24 	movs.w	ip, r4, asr #16
90021984:	d406      	bmi.n	90021994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021986:	4584      	cmp	ip, r0
90021988:	da04      	bge.n	90021994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002198a:	2b00      	cmp	r3, #0
9002198c:	db02      	blt.n	90021994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002198e:	42bb      	cmp	r3, r7
90021990:	f2c0 8189 	blt.w	90021ca6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021994:	f11c 0c01 	adds.w	ip, ip, #1
90021998:	f100 8177 	bmi.w	90021c8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002199c:	4561      	cmp	r1, ip
9002199e:	f2c0 8174 	blt.w	90021c8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900219a2:	3301      	adds	r3, #1
900219a4:	f100 8171 	bmi.w	90021c8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900219a8:	429a      	cmp	r2, r3
900219aa:	f2c0 816e 	blt.w	90021c8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900219ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900219b0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900219b2:	931a      	str	r3, [sp, #104]	@ 0x68
900219b4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900219b6:	2b00      	cmp	r3, #0
900219b8:	f340 8193 	ble.w	90021ce2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900219bc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900219be:	ea4f 4c25 	mov.w	ip, r5, asr #16
900219c2:	f3c5 3103 	ubfx	r1, r5, #12, #4
900219c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
900219ca:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900219cc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
900219d0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900219d2:	141b      	asrs	r3, r3, #16
900219d4:	f100 81d6 	bmi.w	90021d84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900219d8:	f100 38ff 	add.w	r8, r0, #4294967295
900219dc:	4543      	cmp	r3, r8
900219de:	f280 81d1 	bge.w	90021d84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900219e2:	f1bc 0f00 	cmp.w	ip, #0
900219e6:	f2c0 81cd 	blt.w	90021d84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900219ea:	f10e 38ff 	add.w	r8, lr, #4294967295
900219ee:	45c4      	cmp	ip, r8
900219f0:	f280 81c8 	bge.w	90021d84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900219f4:	b200      	sxth	r0, r0
900219f6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900219f8:	fb0c 3300 	mla	r3, ip, r0, r3
900219fc:	eb04 0803 	add.w	r8, r4, r3
90021a00:	5ce3      	ldrb	r3, [r4, r3]
90021a02:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021a06:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90021a0a:	2a00      	cmp	r2, #0
90021a0c:	f000 81af 	beq.w	90021d6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021a10:	f898 c001 	ldrb.w	ip, [r8, #1]
90021a14:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90021a18:	940e      	str	r4, [sp, #56]	@ 0x38
90021a1a:	0e24      	lsrs	r4, r4, #24
90021a1c:	9415      	str	r4, [sp, #84]	@ 0x54
90021a1e:	b179      	cbz	r1, 90021a40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021a20:	eb08 0c00 	add.w	ip, r8, r0
90021a24:	f818 0000 	ldrb.w	r0, [r8, r0]
90021a28:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90021a2c:	900a      	str	r0, [sp, #40]	@ 0x28
90021a2e:	0e00      	lsrs	r0, r0, #24
90021a30:	9013      	str	r0, [sp, #76]	@ 0x4c
90021a32:	f89c 0001 	ldrb.w	r0, [ip, #1]
90021a36:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90021a3a:	900f      	str	r0, [sp, #60]	@ 0x3c
90021a3c:	0e00      	lsrs	r0, r0, #24
90021a3e:	9016      	str	r0, [sp, #88]	@ 0x58
90021a40:	b292      	uxth	r2, r2
90021a42:	9815      	ldr	r0, [sp, #84]	@ 0x54
90021a44:	b289      	uxth	r1, r1
90021a46:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021a48:	fb02 f901 	mul.w	r9, r2, r1
90021a4c:	0112      	lsls	r2, r2, #4
90021a4e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021a52:	eba2 0809 	sub.w	r8, r2, r9
90021a56:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90021a5a:	b289      	uxth	r1, r1
90021a5c:	fa1f f888 	uxth.w	r8, r8
90021a60:	1a52      	subs	r2, r2, r1
90021a62:	fb08 f000 	mul.w	r0, r8, r0
90021a66:	b292      	uxth	r2, r2
90021a68:	fb02 000e 	mla	r0, r2, lr, r0
90021a6c:	fb01 0004 	mla	r0, r1, r4, r0
90021a70:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90021a72:	fb09 0004 	mla	r0, r9, r4, r0
90021a76:	f3c0 2007 	ubfx	r0, r0, #8, #8
90021a7a:	2800      	cmp	r0, #0
90021a7c:	f000 80fa 	beq.w	90021c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021a80:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90021a84:	d01b      	beq.n	90021abe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90021a86:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90021a8a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021a8e:	fb0e fa0a 	mul.w	sl, lr, sl
90021a92:	fb0e fe03 	mul.w	lr, lr, r3
90021a96:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021a9a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90021a9e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90021aa2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021aa6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021aaa:	4453      	add	r3, sl
90021aac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021ab0:	0a1b      	lsrs	r3, r3, #8
90021ab2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90021ab6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021aba:	ea43 030c 	orr.w	r3, r3, ip
90021abe:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021ac0:	2cff      	cmp	r4, #255	@ 0xff
90021ac2:	d021      	beq.n	90021b08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90021ac4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021ac6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90021aca:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021acc:	fb04 fb0b 	mul.w	fp, r4, fp
90021ad0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021ad2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021ad6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021ad8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021adc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90021ae0:	fb04 fa0a 	mul.w	sl, r4, sl
90021ae4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021ae8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90021aec:	44de      	add	lr, fp
90021aee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021af2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021af6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021afa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021afe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021b02:	ea4e 040a 	orr.w	r4, lr, sl
90021b06:	940e      	str	r4, [sp, #56]	@ 0x38
90021b08:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021b0a:	2cff      	cmp	r4, #255	@ 0xff
90021b0c:	d021      	beq.n	90021b52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90021b0e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021b10:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90021b14:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021b16:	fb04 fb0b 	mul.w	fp, r4, fp
90021b1a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021b1c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021b20:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021b22:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021b26:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90021b2a:	fb04 fa0a 	mul.w	sl, r4, sl
90021b2e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021b32:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90021b36:	44de      	add	lr, fp
90021b38:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021b3c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021b40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021b44:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021b48:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021b4c:	ea4e 040a 	orr.w	r4, lr, sl
90021b50:	940a      	str	r4, [sp, #40]	@ 0x28
90021b52:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90021b54:	2cff      	cmp	r4, #255	@ 0xff
90021b56:	d021      	beq.n	90021b9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90021b58:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90021b5a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90021b5e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90021b60:	fb04 fb0b 	mul.w	fp, r4, fp
90021b64:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90021b66:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021b6a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90021b6c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021b70:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90021b74:	fb04 fa0a 	mul.w	sl, r4, sl
90021b78:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021b7c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90021b80:	44de      	add	lr, fp
90021b82:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021b86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021b8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021b8e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021b92:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021b96:	ea4e 040a 	orr.w	r4, lr, sl
90021b9a:	940f      	str	r4, [sp, #60]	@ 0x3c
90021b9c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021b9e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90021ba2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021ba6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021baa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021bac:	fb08 fc0c 	mul.w	ip, r8, ip
90021bb0:	fb02 cc0e 	mla	ip, r2, lr, ip
90021bb4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90021bb8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90021bba:	fb01 cc0e 	mla	ip, r1, lr, ip
90021bbe:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90021bc2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021bc4:	fb09 cc0e 	mla	ip, r9, lr, ip
90021bc8:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90021bcc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021bce:	fb08 f80e 	mul.w	r8, r8, lr
90021bd2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021bd6:	fb02 8303 	mla	r3, r2, r3, r8
90021bda:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90021bdc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021be0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90021be4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90021be6:	fb01 330a 	mla	r3, r1, sl, r3
90021bea:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90021bee:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90021bf0:	fb09 3901 	mla	r9, r9, r1, r3
90021bf4:	883b      	ldrh	r3, [r7, #0]
90021bf6:	4342      	muls	r2, r0
90021bf8:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021bfc:	1c50      	adds	r0, r2, #1
90021bfe:	1219      	asrs	r1, r3, #8
90021c00:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90021c04:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90021c08:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021c0c:	ea4c 0c09 	orr.w	ip, ip, r9
90021c10:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90021c14:	ea4f 421c 	mov.w	r2, ip, lsr #16
90021c18:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90021c1c:	b2c0      	uxtb	r0, r0
90021c1e:	fb12 f204 	smulbb	r2, r2, r4
90021c22:	fa5f fc8c 	uxtb.w	ip, ip
90021c26:	fb1e fe04 	smulbb	lr, lr, r4
90021c2a:	fb01 2100 	mla	r1, r1, r0, r2
90021c2e:	10da      	asrs	r2, r3, #3
90021c30:	fb1c fc04 	smulbb	ip, ip, r4
90021c34:	00db      	lsls	r3, r3, #3
90021c36:	b289      	uxth	r1, r1
90021c38:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90021c3c:	b2db      	uxtb	r3, r3
90021c3e:	fb02 e200 	mla	r2, r2, r0, lr
90021c42:	fb03 c300 	mla	r3, r3, r0, ip
90021c46:	b292      	uxth	r2, r2
90021c48:	fa1f fc83 	uxth.w	ip, r3
90021c4c:	1c4b      	adds	r3, r1, #1
90021c4e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90021c52:	f10c 0301 	add.w	r3, ip, #1
90021c56:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90021c5a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90021c5e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021c62:	430b      	orrs	r3, r1
90021c64:	1c51      	adds	r1, r2, #1
90021c66:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90021c6a:	0952      	lsrs	r2, r2, #5
90021c6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021c70:	4313      	orrs	r3, r2
90021c72:	803b      	strh	r3, [r7, #0]
90021c74:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90021c76:	3702      	adds	r7, #2
90021c78:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90021c7a:	441a      	add	r2, r3
90021c7c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021c7e:	441d      	add	r5, r3
90021c80:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90021c82:	9229      	str	r2, [sp, #164]	@ 0xa4
90021c84:	3b01      	subs	r3, #1
90021c86:	931a      	str	r3, [sp, #104]	@ 0x68
90021c88:	e694      	b.n	900219b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90021c8a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90021c8c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90021c8e:	441c      	add	r4, r3
90021c90:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021c92:	441d      	add	r5, r3
90021c94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021c96:	9429      	str	r4, [sp, #164]	@ 0xa4
90021c98:	3b01      	subs	r3, #1
90021c9a:	9309      	str	r3, [sp, #36]	@ 0x24
90021c9c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021c9e:	3302      	adds	r3, #2
90021ca0:	930c      	str	r3, [sp, #48]	@ 0x30
90021ca2:	e667      	b.n	90021974 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90021ca4:	d024      	beq.n	90021cf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90021ca6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021ca8:	982b      	ldr	r0, [sp, #172]	@ 0xac
90021caa:	3b01      	subs	r3, #1
90021cac:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90021cae:	fb00 4003 	mla	r0, r0, r3, r4
90021cb2:	1400      	asrs	r0, r0, #16
90021cb4:	f53f ae7b 	bmi.w	900219ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021cb8:	3901      	subs	r1, #1
90021cba:	4288      	cmp	r0, r1
90021cbc:	f6bf ae77 	bge.w	900219ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021cc0:	992c      	ldr	r1, [sp, #176]	@ 0xb0
90021cc2:	fb01 5303 	mla	r3, r1, r3, r5
90021cc6:	141b      	asrs	r3, r3, #16
90021cc8:	f53f ae71 	bmi.w	900219ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021ccc:	3a01      	subs	r2, #1
90021cce:	4293      	cmp	r3, r2
90021cd0:	f6bf ae6d 	bge.w	900219ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021cd4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90021cd8:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90021cdc:	f1bb 0f00 	cmp.w	fp, #0
90021ce0:	dc70      	bgt.n	90021dc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90021ce2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021ce4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021ce8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021cea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021cee:	930c      	str	r3, [sp, #48]	@ 0x30
90021cf0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90021cf2:	2b00      	cmp	r3, #0
90021cf4:	f340 81be 	ble.w	90022074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90021cf8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021cfc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021cfe:	ee30 0a04 	vadd.f32	s0, s0, s8
90021d02:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021d06:	eef0 6a62 	vmov.f32	s13, s5
90021d0a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021d0e:	ee31 1a05 	vadd.f32	s2, s2, s10
90021d12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021d16:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90021d1a:	eef0 6a43 	vmov.f32	s13, s6
90021d1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021d22:	ee16 5a90 	vmov	r5, s13
90021d26:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021d2a:	ee61 7a27 	vmul.f32	s15, s2, s15
90021d2e:	ee77 2a62 	vsub.f32	s5, s14, s5
90021d32:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021d36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021d3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021d3e:	ee12 2a90 	vmov	r2, s5
90021d42:	eef0 2a47 	vmov.f32	s5, s14
90021d46:	fb92 f3f3 	sdiv	r3, r2, r3
90021d4a:	ee13 2a10 	vmov	r2, s6
90021d4e:	932b      	str	r3, [sp, #172]	@ 0xac
90021d50:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021d52:	eeb0 3a67 	vmov.f32	s6, s15
90021d56:	fb92 f3f3 	sdiv	r3, r2, r3
90021d5a:	932c      	str	r3, [sp, #176]	@ 0xb0
90021d5c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90021d5e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90021d60:	3b01      	subs	r3, #1
90021d62:	9319      	str	r3, [sp, #100]	@ 0x64
90021d64:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021d66:	bf08      	it	eq
90021d68:	4613      	moveq	r3, r2
90021d6a:	9309      	str	r3, [sp, #36]	@ 0x24
90021d6c:	e5f4      	b.n	90021958 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021d6e:	2900      	cmp	r1, #0
90021d70:	f43f ae66 	beq.w	90021a40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021d74:	f818 0000 	ldrb.w	r0, [r8, r0]
90021d78:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90021d7c:	900a      	str	r0, [sp, #40]	@ 0x28
90021d7e:	0e00      	lsrs	r0, r0, #24
90021d80:	9013      	str	r0, [sp, #76]	@ 0x4c
90021d82:	e65d      	b.n	90021a40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021d84:	f113 0801 	adds.w	r8, r3, #1
90021d88:	f53f af74 	bmi.w	90021c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021d8c:	4540      	cmp	r0, r8
90021d8e:	f6ff af71 	blt.w	90021c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021d92:	f11c 0801 	adds.w	r8, ip, #1
90021d96:	f53f af6d 	bmi.w	90021c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021d9a:	45c6      	cmp	lr, r8
90021d9c:	f6ff af6a 	blt.w	90021c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021da0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90021da2:	b200      	sxth	r0, r0
90021da4:	9302      	str	r3, [sp, #8]
90021da6:	fa0f f38e 	sxth.w	r3, lr
90021daa:	9000      	str	r0, [sp, #0]
90021dac:	9301      	str	r3, [sp, #4]
90021dae:	4633      	mov	r3, r6
90021db0:	981d      	ldr	r0, [sp, #116]	@ 0x74
90021db2:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021db6:	e9cd c203 	strd	ip, r2, [sp, #12]
90021dba:	4639      	mov	r1, r7
90021dbc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90021dbe:	f7ff fc63 	bl	90021688 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90021dc2:	e757      	b.n	90021c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021dc4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90021dc6:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021dca:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90021dcc:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021dd0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90021dd2:	1427      	asrs	r7, r4, #16
90021dd4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021dd6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021dda:	142b      	asrs	r3, r5, #16
90021ddc:	fb01 7303 	mla	r3, r1, r3, r7
90021de0:	18e7      	adds	r7, r4, r3
90021de2:	5ce3      	ldrb	r3, [r4, r3]
90021de4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021de8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90021dec:	2a00      	cmp	r2, #0
90021dee:	f000 8137 	beq.w	90022060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90021df2:	f897 e001 	ldrb.w	lr, [r7, #1]
90021df6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90021dfa:	9410      	str	r4, [sp, #64]	@ 0x40
90021dfc:	0e24      	lsrs	r4, r4, #24
90021dfe:	9417      	str	r4, [sp, #92]	@ 0x5c
90021e00:	b170      	cbz	r0, 90021e20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021e02:	eb07 0e01 	add.w	lr, r7, r1
90021e06:	5c79      	ldrb	r1, [r7, r1]
90021e08:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021e0c:	910b      	str	r1, [sp, #44]	@ 0x2c
90021e0e:	0e09      	lsrs	r1, r1, #24
90021e10:	9114      	str	r1, [sp, #80]	@ 0x50
90021e12:	f89e 1001 	ldrb.w	r1, [lr, #1]
90021e16:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021e1a:	9111      	str	r1, [sp, #68]	@ 0x44
90021e1c:	0e09      	lsrs	r1, r1, #24
90021e1e:	9118      	str	r1, [sp, #96]	@ 0x60
90021e20:	b292      	uxth	r2, r2
90021e22:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90021e24:	b280      	uxth	r0, r0
90021e26:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021e28:	fb02 f800 	mul.w	r8, r2, r0
90021e2c:	0112      	lsls	r2, r2, #4
90021e2e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90021e32:	eba2 0e08 	sub.w	lr, r2, r8
90021e36:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90021e3a:	b280      	uxth	r0, r0
90021e3c:	fa1f fe8e 	uxth.w	lr, lr
90021e40:	1a12      	subs	r2, r2, r0
90021e42:	fb0e f101 	mul.w	r1, lr, r1
90021e46:	b292      	uxth	r2, r2
90021e48:	fb02 110c 	mla	r1, r2, ip, r1
90021e4c:	fb00 1104 	mla	r1, r0, r4, r1
90021e50:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021e52:	fb08 1104 	mla	r1, r8, r4, r1
90021e56:	f3c1 2107 	ubfx	r1, r1, #8, #8
90021e5a:	2900      	cmp	r1, #0
90021e5c:	f000 80f5 	beq.w	9002204a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90021e60:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90021e64:	d019      	beq.n	90021e9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90021e66:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90021e6a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021e6e:	fb0c fa0a 	mul.w	sl, ip, sl
90021e72:	fb0c fc03 	mul.w	ip, ip, r3
90021e76:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021e7a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90021e7e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90021e82:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021e86:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90021e8a:	4453      	add	r3, sl
90021e8c:	0a3f      	lsrs	r7, r7, #8
90021e8e:	0a1b      	lsrs	r3, r3, #8
90021e90:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90021e94:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021e98:	433b      	orrs	r3, r7
90021e9a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90021e9c:	2cff      	cmp	r4, #255	@ 0xff
90021e9e:	d020      	beq.n	90021ee2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90021ea0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021ea2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021ea6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90021ea8:	4367      	muls	r7, r4
90021eaa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021eac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021eb0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021eb4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90021eb6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021eba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021ebe:	fb04 fa0a 	mul.w	sl, r4, sl
90021ec2:	44bc      	add	ip, r7
90021ec4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021ec8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021ecc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021ed0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021ed4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021ed8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021edc:	ea4c 040a 	orr.w	r4, ip, sl
90021ee0:	9410      	str	r4, [sp, #64]	@ 0x40
90021ee2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021ee4:	2cff      	cmp	r4, #255	@ 0xff
90021ee6:	d020      	beq.n	90021f2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90021ee8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021eea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021eee:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021ef0:	4367      	muls	r7, r4
90021ef2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021ef4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021ef8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021efc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021efe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021f02:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021f06:	fb04 fa0a 	mul.w	sl, r4, sl
90021f0a:	44bc      	add	ip, r7
90021f0c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021f10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021f14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021f18:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021f1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021f20:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021f24:	ea4c 040a 	orr.w	r4, ip, sl
90021f28:	940b      	str	r4, [sp, #44]	@ 0x2c
90021f2a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021f2c:	2cff      	cmp	r4, #255	@ 0xff
90021f2e:	d020      	beq.n	90021f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90021f30:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021f32:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021f36:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021f38:	4367      	muls	r7, r4
90021f3a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021f3c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021f40:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021f44:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021f46:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021f4a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021f4e:	fb04 fa0a 	mul.w	sl, r4, sl
90021f52:	44bc      	add	ip, r7
90021f54:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021f58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021f5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021f60:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021f64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021f68:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021f6c:	ea4c 040a 	orr.w	r4, ip, sl
90021f70:	9411      	str	r4, [sp, #68]	@ 0x44
90021f72:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021f74:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90021f78:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021f7c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021f80:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021f82:	fb0e f707 	mul.w	r7, lr, r7
90021f86:	fb02 770c 	mla	r7, r2, ip, r7
90021f8a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021f8e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021f90:	fb00 770c 	mla	r7, r0, ip, r7
90021f94:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021f98:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021f9a:	fb08 770c 	mla	r7, r8, ip, r7
90021f9e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90021fa2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021fa4:	fb0e fe0c 	mul.w	lr, lr, ip
90021fa8:	0a3f      	lsrs	r7, r7, #8
90021faa:	fb02 e303 	mla	r3, r2, r3, lr
90021fae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021fb0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90021fb4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90021fb8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90021fba:	fb00 330a 	mla	r3, r0, sl, r3
90021fbe:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90021fc2:	f8b9 0000 	ldrh.w	r0, [r9]
90021fc6:	fb08 3c0c 	mla	ip, r8, ip, r3
90021fca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021fcc:	1202      	asrs	r2, r0, #8
90021fce:	434b      	muls	r3, r1
90021fd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021fd4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90021fd8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90021fdc:	1c59      	adds	r1, r3, #1
90021fde:	ea47 070c 	orr.w	r7, r7, ip
90021fe2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021fe6:	0c3b      	lsrs	r3, r7, #16
90021fe8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90021fec:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90021ff0:	b2ff      	uxtb	r7, r7
90021ff2:	fb13 f304 	smulbb	r3, r3, r4
90021ff6:	b2c9      	uxtb	r1, r1
90021ff8:	fb1c fc04 	smulbb	ip, ip, r4
90021ffc:	fb02 3201 	mla	r2, r2, r1, r3
90022000:	10c3      	asrs	r3, r0, #3
90022002:	fb17 f704 	smulbb	r7, r7, r4
90022006:	00c0      	lsls	r0, r0, #3
90022008:	b292      	uxth	r2, r2
9002200a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002200e:	b2c0      	uxtb	r0, r0
90022010:	fb03 c301 	mla	r3, r3, r1, ip
90022014:	f102 0c01 	add.w	ip, r2, #1
90022018:	fb00 7001 	mla	r0, r0, r1, r7
9002201c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90022020:	b280      	uxth	r0, r0
90022022:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90022026:	b29b      	uxth	r3, r3
90022028:	1c42      	adds	r2, r0, #1
9002202a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002202e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022032:	ea42 020c 	orr.w	r2, r2, ip
90022036:	f103 0c01 	add.w	ip, r3, #1
9002203a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002203e:	095b      	lsrs	r3, r3, #5
90022040:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022044:	431a      	orrs	r2, r3
90022046:	f8a9 2000 	strh.w	r2, [r9]
9002204a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
9002204c:	f109 0902 	add.w	r9, r9, #2
90022050:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90022052:	f10b 3bff 	add.w	fp, fp, #4294967295
90022056:	441a      	add	r2, r3
90022058:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002205a:	9229      	str	r2, [sp, #164]	@ 0xa4
9002205c:	441d      	add	r5, r3
9002205e:	e63d      	b.n	90021cdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90022060:	2800      	cmp	r0, #0
90022062:	f43f aedd 	beq.w	90021e20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022066:	5c79      	ldrb	r1, [r7, r1]
90022068:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002206c:	910b      	str	r1, [sp, #44]	@ 0x2c
9002206e:	0e09      	lsrs	r1, r1, #24
90022070:	9114      	str	r1, [sp, #80]	@ 0x50
90022072:	e6d5      	b.n	90021e20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022074:	b01f      	add	sp, #124	@ 0x7c
90022076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002207a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002207a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002207e:	b089      	sub	sp, #36	@ 0x24
90022080:	9101      	str	r1, [sp, #4]
90022082:	9801      	ldr	r0, [sp, #4]
90022084:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90022088:	8800      	ldrh	r0, [r0, #0]
9002208a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
9002208e:	1206      	asrs	r6, r0, #8
90022090:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90022094:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90022098:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9002209c:	9602      	str	r6, [sp, #8]
9002209e:	10c6      	asrs	r6, r0, #3
900220a0:	00c0      	lsls	r0, r0, #3
900220a2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900220a6:	b2c0      	uxtb	r0, r0
900220a8:	9603      	str	r6, [sp, #12]
900220aa:	9004      	str	r0, [sp, #16]
900220ac:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
900220b0:	fb07 100c 	mla	r0, r7, ip, r1
900220b4:	2f00      	cmp	r7, #0
900220b6:	eb02 0e00 	add.w	lr, r2, r0
900220ba:	f2c0 810a 	blt.w	900222d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900220be:	45b8      	cmp	r8, r7
900220c0:	f340 8107 	ble.w	900222d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900220c4:	2900      	cmp	r1, #0
900220c6:	f2c0 8102 	blt.w	900222ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900220ca:	458c      	cmp	ip, r1
900220cc:	f340 80ff 	ble.w	900222ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900220d0:	5c12      	ldrb	r2, [r2, r0]
900220d2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900220d6:	1c4a      	adds	r2, r1, #1
900220d8:	f100 80fe 	bmi.w	900222d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900220dc:	4594      	cmp	ip, r2
900220de:	f340 80fb 	ble.w	900222d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900220e2:	2d00      	cmp	r5, #0
900220e4:	f000 80fa 	beq.w	900222dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
900220e8:	f89e 2001 	ldrb.w	r2, [lr, #1]
900220ec:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900220f0:	3701      	adds	r7, #1
900220f2:	f100 80f7 	bmi.w	900222e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900220f6:	45b8      	cmp	r8, r7
900220f8:	f340 80f4 	ble.w	900222e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900220fc:	2c00      	cmp	r4, #0
900220fe:	f000 80f4 	beq.w	900222ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90022102:	2900      	cmp	r1, #0
90022104:	eb0e 020c 	add.w	r2, lr, ip
90022108:	f2c0 80ea 	blt.w	900222e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002210c:	458c      	cmp	ip, r1
9002210e:	f340 80e7 	ble.w	900222e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90022112:	f81e 700c 	ldrb.w	r7, [lr, ip]
90022116:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002211a:	3101      	adds	r1, #1
9002211c:	f100 80e8 	bmi.w	900222f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90022120:	458c      	cmp	ip, r1
90022122:	f340 80e5 	ble.w	900222f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90022126:	2d00      	cmp	r5, #0
90022128:	f000 80e4 	beq.w	900222f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
9002212c:	7852      	ldrb	r2, [r2, #1]
9002212e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90022132:	0e0b      	lsrs	r3, r1, #24
90022134:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90022138:	ea4f 6a10 	mov.w	sl, r0, lsr #24
9002213c:	9300      	str	r3, [sp, #0]
9002213e:	b2a4      	uxth	r4, r4
90022140:	b2ab      	uxth	r3, r5
90022142:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90022146:	ea4f 6b16 	mov.w	fp, r6, lsr #24
9002214a:	fb03 f904 	mul.w	r9, r3, r4
9002214e:	011b      	lsls	r3, r3, #4
90022150:	fb0a f505 	mul.w	r5, sl, r5
90022154:	ea4f 6817 	mov.w	r8, r7, lsr #24
90022158:	eba3 0e09 	sub.w	lr, r3, r9
9002215c:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90022160:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90022164:	0a28      	lsrs	r0, r5, #8
90022166:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
9002216a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
9002216e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90022172:	fb0a f303 	mul.w	r3, sl, r3
90022176:	fb08 f707 	mul.w	r7, r8, r7
9002217a:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
9002217e:	4405      	add	r5, r0
90022180:	fb08 fc0c 	mul.w	ip, r8, ip
90022184:	b2a4      	uxth	r4, r4
90022186:	0a2d      	lsrs	r5, r5, #8
90022188:	fa1f fe8e 	uxth.w	lr, lr
9002218c:	1b12      	subs	r2, r2, r4
9002218e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90022192:	b292      	uxth	r2, r2
90022194:	9005      	str	r0, [sp, #20]
90022196:	f503 7080 	add.w	r0, r3, #256	@ 0x100
9002219a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
9002219e:	ea4f 201c 	mov.w	r0, ip, lsr #8
900221a2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900221a6:	0a1b      	lsrs	r3, r3, #8
900221a8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900221ac:	9306      	str	r3, [sp, #24]
900221ae:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900221b2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900221b6:	4460      	add	r0, ip
900221b8:	fb0b f303 	mul.w	r3, fp, r3
900221bc:	fb0b f606 	mul.w	r6, fp, r6
900221c0:	0a00      	lsrs	r0, r0, #8
900221c2:	0a1d      	lsrs	r5, r3, #8
900221c4:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
900221c8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900221cc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900221d0:	441d      	add	r5, r3
900221d2:	f506 7380 	add.w	r3, r6, #256	@ 0x100
900221d6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900221da:	f507 7380 	add.w	r3, r7, #256	@ 0x100
900221de:	0a2d      	lsrs	r5, r5, #8
900221e0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
900221e4:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
900221e8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900221ec:	0a36      	lsrs	r6, r6, #8
900221ee:	0a1b      	lsrs	r3, r3, #8
900221f0:	fb05 f50e 	mul.w	r5, r5, lr
900221f4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900221f8:	9307      	str	r3, [sp, #28]
900221fa:	0e0b      	lsrs	r3, r1, #24
900221fc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90022200:	fb0e f606 	mul.w	r6, lr, r6
90022204:	435f      	muls	r7, r3
90022206:	4359      	muls	r1, r3
90022208:	9b05      	ldr	r3, [sp, #20]
9002220a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002220e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022212:	fb03 5502 	mla	r5, r3, r2, r5
90022216:	9b06      	ldr	r3, [sp, #24]
90022218:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002221c:	fb0e fe0b 	mul.w	lr, lr, fp
90022220:	44bc      	add	ip, r7
90022222:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90022226:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002222a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002222e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022232:	0a09      	lsrs	r1, r1, #8
90022234:	fb0c 5509 	mla	r5, ip, r9, r5
90022238:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002223c:	fb00 5504 	mla	r5, r0, r4, r5
90022240:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90022244:	9b07      	ldr	r3, [sp, #28]
90022246:	fb02 6000 	mla	r0, r2, r0, r6
9002224a:	0a2d      	lsrs	r5, r5, #8
9002224c:	fb02 e20a 	mla	r2, r2, sl, lr
90022250:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022254:	fb09 0001 	mla	r0, r9, r1, r0
90022258:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002225c:	fb04 0003 	mla	r0, r4, r3, r0
90022260:	9b00      	ldr	r3, [sp, #0]
90022262:	fb04 2408 	mla	r4, r4, r8, r2
90022266:	9a04      	ldr	r2, [sp, #16]
90022268:	0a00      	lsrs	r0, r0, #8
9002226a:	fb09 4903 	mla	r9, r9, r3, r4
9002226e:	9b02      	ldr	r3, [sp, #8]
90022270:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90022274:	ea6f 2929 	mvn.w	r9, r9, asr #8
90022278:	4305      	orrs	r5, r0
9002227a:	fa5f f989 	uxtb.w	r9, r9
9002227e:	fb03 f109 	mul.w	r1, r3, r9
90022282:	9b03      	ldr	r3, [sp, #12]
90022284:	fb03 f309 	mul.w	r3, r3, r9
90022288:	fb02 f909 	mul.w	r9, r2, r9
9002228c:	1c4a      	adds	r2, r1, #1
9002228e:	1c58      	adds	r0, r3, #1
90022290:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022294:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90022298:	0c2a      	lsrs	r2, r5, #16
9002229a:	0a2b      	lsrs	r3, r5, #8
9002229c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900222a0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900222a4:	0212      	lsls	r2, r2, #8
900222a6:	00db      	lsls	r3, r3, #3
900222a8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900222ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900222b0:	4313      	orrs	r3, r2
900222b2:	f109 0201 	add.w	r2, r9, #1
900222b6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900222ba:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900222be:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900222c2:	431d      	orrs	r5, r3
900222c4:	9b01      	ldr	r3, [sp, #4]
900222c6:	801d      	strh	r5, [r3, #0]
900222c8:	b009      	add	sp, #36	@ 0x24
900222ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900222ce:	2000      	movs	r0, #0
900222d0:	e701      	b.n	900220d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900222d2:	2600      	movs	r6, #0
900222d4:	4630      	mov	r0, r6
900222d6:	e70b      	b.n	900220f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900222d8:	2600      	movs	r6, #0
900222da:	e709      	b.n	900220f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900222dc:	462e      	mov	r6, r5
900222de:	e707      	b.n	900220f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900222e0:	2700      	movs	r7, #0
900222e2:	e71a      	b.n	9002211a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
900222e4:	2100      	movs	r1, #0
900222e6:	460f      	mov	r7, r1
900222e8:	e723      	b.n	90022132 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900222ea:	4621      	mov	r1, r4
900222ec:	4627      	mov	r7, r4
900222ee:	e720      	b.n	90022132 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900222f0:	2100      	movs	r1, #0
900222f2:	e71e      	b.n	90022132 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900222f4:	4629      	mov	r1, r5
900222f6:	e71c      	b.n	90022132 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

900222f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900222f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900222fc:	b09b      	sub	sp, #108	@ 0x6c
900222fe:	9218      	str	r2, [sp, #96]	@ 0x60
90022300:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90022302:	9019      	str	r0, [sp, #100]	@ 0x64
90022304:	9116      	str	r1, [sp, #88]	@ 0x58
90022306:	6850      	ldr	r0, [r2, #4]
90022308:	9307      	str	r3, [sp, #28]
9002230a:	6812      	ldr	r2, [r2, #0]
9002230c:	9d26      	ldr	r5, [sp, #152]	@ 0x98
9002230e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90022312:	fb00 1303 	mla	r3, r0, r3, r1
90022316:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002231a:	930a      	str	r3, [sp, #40]	@ 0x28
9002231c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002231e:	681b      	ldr	r3, [r3, #0]
90022320:	930f      	str	r3, [sp, #60]	@ 0x3c
90022322:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90022324:	685e      	ldr	r6, [r3, #4]
90022326:	3604      	adds	r6, #4
90022328:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002232a:	2b00      	cmp	r3, #0
9002232c:	dc03      	bgt.n	90022336 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002232e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022330:	2b00      	cmp	r3, #0
90022332:	f340 8373 	ble.w	90022a1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90022336:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90022338:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002233c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022340:	1e48      	subs	r0, r1, #1
90022342:	1e57      	subs	r7, r2, #1
90022344:	9b07      	ldr	r3, [sp, #28]
90022346:	2b00      	cmp	r3, #0
90022348:	f340 818f 	ble.w	9002266a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
9002234c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002234e:	142b      	asrs	r3, r5, #16
90022350:	ea5f 4c24 	movs.w	ip, r4, asr #16
90022354:	d406      	bmi.n	90022364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90022356:	4584      	cmp	ip, r0
90022358:	da04      	bge.n	90022364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002235a:	2b00      	cmp	r3, #0
9002235c:	db02      	blt.n	90022364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002235e:	42bb      	cmp	r3, r7
90022360:	f2c0 8184 	blt.w	9002266c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90022364:	f11c 0c01 	adds.w	ip, ip, #1
90022368:	f100 8172 	bmi.w	90022650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002236c:	4561      	cmp	r1, ip
9002236e:	f2c0 816f 	blt.w	90022650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022372:	3301      	adds	r3, #1
90022374:	f100 816c 	bmi.w	90022650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022378:	429a      	cmp	r2, r3
9002237a:	f2c0 8169 	blt.w	90022650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002237e:	9b07      	ldr	r3, [sp, #28]
90022380:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90022382:	9317      	str	r3, [sp, #92]	@ 0x5c
90022384:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90022386:	2b00      	cmp	r3, #0
90022388:	f340 818e 	ble.w	900226a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
9002238c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002238e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90022392:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022396:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002239a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002239c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900223a0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900223a2:	141b      	asrs	r3, r3, #16
900223a4:	f100 81d1 	bmi.w	9002274a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900223a8:	f101 38ff 	add.w	r8, r1, #4294967295
900223ac:	4543      	cmp	r3, r8
900223ae:	f280 81cc 	bge.w	9002274a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900223b2:	f1bc 0f00 	cmp.w	ip, #0
900223b6:	f2c0 81c8 	blt.w	9002274a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900223ba:	f10e 38ff 	add.w	r8, lr, #4294967295
900223be:	45c4      	cmp	ip, r8
900223c0:	f280 81c3 	bge.w	9002274a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900223c4:	b209      	sxth	r1, r1
900223c6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900223c8:	fb0c 3301 	mla	r3, ip, r1, r3
900223cc:	eb04 0803 	add.w	r8, r4, r3
900223d0:	5ce3      	ldrb	r3, [r4, r3]
900223d2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900223d6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900223da:	2a00      	cmp	r2, #0
900223dc:	f000 81aa 	beq.w	90022734 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
900223e0:	f898 c001 	ldrb.w	ip, [r8, #1]
900223e4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900223e8:	940b      	str	r4, [sp, #44]	@ 0x2c
900223ea:	0e24      	lsrs	r4, r4, #24
900223ec:	9412      	str	r4, [sp, #72]	@ 0x48
900223ee:	b178      	cbz	r0, 90022410 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900223f0:	eb08 0c01 	add.w	ip, r8, r1
900223f4:	f818 1001 	ldrb.w	r1, [r8, r1]
900223f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900223fc:	9108      	str	r1, [sp, #32]
900223fe:	0e09      	lsrs	r1, r1, #24
90022400:	9110      	str	r1, [sp, #64]	@ 0x40
90022402:	f89c 1001 	ldrb.w	r1, [ip, #1]
90022406:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002240a:	910c      	str	r1, [sp, #48]	@ 0x30
9002240c:	0e09      	lsrs	r1, r1, #24
9002240e:	9113      	str	r1, [sp, #76]	@ 0x4c
90022410:	b292      	uxth	r2, r2
90022412:	9912      	ldr	r1, [sp, #72]	@ 0x48
90022414:	b280      	uxth	r0, r0
90022416:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022418:	fb02 f900 	mul.w	r9, r2, r0
9002241c:	0112      	lsls	r2, r2, #4
9002241e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90022422:	eba2 0809 	sub.w	r8, r2, r9
90022426:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002242a:	b280      	uxth	r0, r0
9002242c:	fa1f f888 	uxth.w	r8, r8
90022430:	1a12      	subs	r2, r2, r0
90022432:	fb08 f101 	mul.w	r1, r8, r1
90022436:	b292      	uxth	r2, r2
90022438:	fb02 110e 	mla	r1, r2, lr, r1
9002243c:	fb00 1104 	mla	r1, r0, r4, r1
90022440:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022442:	fb09 1104 	mla	r1, r9, r4, r1
90022446:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002244a:	2900      	cmp	r1, #0
9002244c:	f000 80f5 	beq.w	9002263a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022450:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90022454:	d01b      	beq.n	9002248e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022456:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002245a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002245e:	fb0e fa0a 	mul.w	sl, lr, sl
90022462:	fb0e fe03 	mul.w	lr, lr, r3
90022466:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002246a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002246e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90022472:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022476:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002247a:	4453      	add	r3, sl
9002247c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022480:	0a1b      	lsrs	r3, r3, #8
90022482:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90022486:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002248a:	ea43 030c 	orr.w	r3, r3, ip
9002248e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022490:	2cff      	cmp	r4, #255	@ 0xff
90022492:	d021      	beq.n	900224d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90022494:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022496:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002249a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002249c:	fb04 fb0b 	mul.w	fp, r4, fp
900224a0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900224a2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900224a6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900224a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900224ac:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900224b0:	fb04 fa0a 	mul.w	sl, r4, sl
900224b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900224b8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900224bc:	44de      	add	lr, fp
900224be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900224c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900224c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900224ca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900224ce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900224d2:	ea4e 040a 	orr.w	r4, lr, sl
900224d6:	940b      	str	r4, [sp, #44]	@ 0x2c
900224d8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900224da:	2cff      	cmp	r4, #255	@ 0xff
900224dc:	d021      	beq.n	90022522 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900224de:	9c08      	ldr	r4, [sp, #32]
900224e0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900224e4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900224e6:	fb04 fb0b 	mul.w	fp, r4, fp
900224ea:	9c08      	ldr	r4, [sp, #32]
900224ec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900224f0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900224f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900224f6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900224fa:	fb04 fa0a 	mul.w	sl, r4, sl
900224fe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022502:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022506:	44de      	add	lr, fp
90022508:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002250c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022510:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022514:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022518:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002251c:	ea4e 040a 	orr.w	r4, lr, sl
90022520:	9408      	str	r4, [sp, #32]
90022522:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022524:	2cff      	cmp	r4, #255	@ 0xff
90022526:	d021      	beq.n	9002256c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90022528:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002252a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002252e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022530:	fb04 fb0b 	mul.w	fp, r4, fp
90022534:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90022536:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002253a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002253c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022540:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022544:	fb04 fa0a 	mul.w	sl, r4, sl
90022548:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002254c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022550:	44de      	add	lr, fp
90022552:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022556:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002255a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002255e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022562:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022566:	ea4e 040a 	orr.w	r4, lr, sl
9002256a:	940c      	str	r4, [sp, #48]	@ 0x30
9002256c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002256e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90022572:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022576:	43c9      	mvns	r1, r1
90022578:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002257c:	9c08      	ldr	r4, [sp, #32]
9002257e:	fb08 fc0c 	mul.w	ip, r8, ip
90022582:	fb02 cc0e 	mla	ip, r2, lr, ip
90022586:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
9002258a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002258c:	fb00 cc0e 	mla	ip, r0, lr, ip
90022590:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90022594:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022596:	fb09 cc0e 	mla	ip, r9, lr, ip
9002259a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
9002259e:	fb08 f80e 	mul.w	r8, r8, lr
900225a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900225a6:	fa5f fe81 	uxtb.w	lr, r1
900225aa:	fb02 8303 	mla	r3, r2, r3, r8
900225ae:	9a08      	ldr	r2, [sp, #32]
900225b0:	f8b7 8000 	ldrh.w	r8, [r7]
900225b4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900225b8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900225bc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900225be:	ea4f 01c8 	mov.w	r1, r8, lsl #3
900225c2:	fb00 330a 	mla	r3, r0, sl, r3
900225c6:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
900225ca:	ea4f 2228 	mov.w	r2, r8, asr #8
900225ce:	fb09 3900 	mla	r9, r9, r0, r3
900225d2:	ea4f 00e8 	mov.w	r0, r8, asr #3
900225d6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900225da:	b2c9      	uxtb	r1, r1
900225dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
900225e0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900225e4:	fb02 f20e 	mul.w	r2, r2, lr
900225e8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900225ec:	fb00 f00e 	mul.w	r0, r0, lr
900225f0:	1c53      	adds	r3, r2, #1
900225f2:	fb01 f10e 	mul.w	r1, r1, lr
900225f6:	ea4c 0c09 	orr.w	ip, ip, r9
900225fa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
900225fe:	ea4f 431c 	mov.w	r3, ip, lsr #16
90022602:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022606:	4a60      	ldr	r2, [pc, #384]	@ (90022788 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90022608:	b2db      	uxtb	r3, r3
9002260a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002260e:	1c43      	adds	r3, r0, #1
90022610:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90022614:	ea4f 231c 	mov.w	r3, ip, lsr #8
90022618:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002261c:	00db      	lsls	r3, r3, #3
9002261e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022622:	4313      	orrs	r3, r2
90022624:	1c4a      	adds	r2, r1, #1
90022626:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002262a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002262e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90022632:	ea4c 0c03 	orr.w	ip, ip, r3
90022636:	f8a7 c000 	strh.w	ip, [r7]
9002263a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002263c:	3702      	adds	r7, #2
9002263e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90022640:	441a      	add	r2, r3
90022642:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022644:	441d      	add	r5, r3
90022646:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90022648:	9225      	str	r2, [sp, #148]	@ 0x94
9002264a:	3b01      	subs	r3, #1
9002264c:	9317      	str	r3, [sp, #92]	@ 0x5c
9002264e:	e699      	b.n	90022384 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022650:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90022652:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90022654:	441c      	add	r4, r3
90022656:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022658:	441d      	add	r5, r3
9002265a:	9b07      	ldr	r3, [sp, #28]
9002265c:	9425      	str	r4, [sp, #148]	@ 0x94
9002265e:	3b01      	subs	r3, #1
90022660:	9307      	str	r3, [sp, #28]
90022662:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022664:	3302      	adds	r3, #2
90022666:	930a      	str	r3, [sp, #40]	@ 0x28
90022668:	e66c      	b.n	90022344 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9002266a:	d024      	beq.n	900226b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
9002266c:	9b07      	ldr	r3, [sp, #28]
9002266e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90022670:	3b01      	subs	r3, #1
90022672:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90022674:	fb00 4003 	mla	r0, r0, r3, r4
90022678:	1400      	asrs	r0, r0, #16
9002267a:	f53f ae80 	bmi.w	9002237e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002267e:	3901      	subs	r1, #1
90022680:	4288      	cmp	r0, r1
90022682:	f6bf ae7c 	bge.w	9002237e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022686:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90022688:	fb01 5303 	mla	r3, r1, r3, r5
9002268c:	141b      	asrs	r3, r3, #16
9002268e:	f53f ae76 	bmi.w	9002237e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022692:	3a01      	subs	r2, #1
90022694:	4293      	cmp	r3, r2
90022696:	f6bf ae72 	bge.w	9002237e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002269a:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002269e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900226a2:	f1bb 0f00 	cmp.w	fp, #0
900226a6:	dc71      	bgt.n	9002278c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900226a8:	9b07      	ldr	r3, [sp, #28]
900226aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900226ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900226b0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900226b4:	930a      	str	r3, [sp, #40]	@ 0x28
900226b6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900226b8:	2b00      	cmp	r3, #0
900226ba:	f340 81af 	ble.w	90022a1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900226be:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900226c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900226c4:	ee30 0a04 	vadd.f32	s0, s0, s8
900226c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900226cc:	eef0 6a62 	vmov.f32	s13, s5
900226d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
900226d4:	ee31 1a05 	vadd.f32	s2, s2, s10
900226d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900226dc:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
900226e0:	eef0 6a43 	vmov.f32	s13, s6
900226e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900226e8:	ee16 5a90 	vmov	r5, s13
900226ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
900226f0:	ee61 7a27 	vmul.f32	s15, s2, s15
900226f4:	ee77 2a62 	vsub.f32	s5, s14, s5
900226f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900226fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022700:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022704:	ee12 2a90 	vmov	r2, s5
90022708:	eef0 2a47 	vmov.f32	s5, s14
9002270c:	fb92 f3f3 	sdiv	r3, r2, r3
90022710:	ee13 2a10 	vmov	r2, s6
90022714:	9327      	str	r3, [sp, #156]	@ 0x9c
90022716:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022718:	eeb0 3a67 	vmov.f32	s6, s15
9002271c:	fb92 f3f3 	sdiv	r3, r2, r3
90022720:	9328      	str	r3, [sp, #160]	@ 0xa0
90022722:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90022724:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90022726:	3b01      	subs	r3, #1
90022728:	9316      	str	r3, [sp, #88]	@ 0x58
9002272a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002272c:	bf08      	it	eq
9002272e:	4613      	moveq	r3, r2
90022730:	9307      	str	r3, [sp, #28]
90022732:	e5f9      	b.n	90022328 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90022734:	2800      	cmp	r0, #0
90022736:	f43f ae6b 	beq.w	90022410 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002273a:	f818 1001 	ldrb.w	r1, [r8, r1]
9002273e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022742:	9108      	str	r1, [sp, #32]
90022744:	0e09      	lsrs	r1, r1, #24
90022746:	9110      	str	r1, [sp, #64]	@ 0x40
90022748:	e662      	b.n	90022410 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002274a:	f113 0801 	adds.w	r8, r3, #1
9002274e:	f53f af74 	bmi.w	9002263a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022752:	4541      	cmp	r1, r8
90022754:	f6ff af71 	blt.w	9002263a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022758:	f11c 0801 	adds.w	r8, ip, #1
9002275c:	f53f af6d 	bmi.w	9002263a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022760:	45c6      	cmp	lr, r8
90022762:	f6ff af6a 	blt.w	9002263a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022766:	b209      	sxth	r1, r1
90022768:	e9cd 3c02 	strd	r3, ip, [sp, #8]
9002276c:	fa0f f38e 	sxth.w	r3, lr
90022770:	9100      	str	r1, [sp, #0]
90022772:	4639      	mov	r1, r7
90022774:	9301      	str	r3, [sp, #4]
90022776:	4633      	mov	r3, r6
90022778:	e9cd 2004 	strd	r2, r0, [sp, #16]
9002277c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002277e:	9819      	ldr	r0, [sp, #100]	@ 0x64
90022780:	f7ff fc7b 	bl	9002207a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90022784:	e759      	b.n	9002263a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022786:	bf00      	nop
90022788:	fffff800 	.word	0xfffff800
9002278c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002278e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022792:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90022794:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022798:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002279a:	1427      	asrs	r7, r4, #16
9002279c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002279e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900227a2:	142b      	asrs	r3, r5, #16
900227a4:	fb01 7303 	mla	r3, r1, r3, r7
900227a8:	18e7      	adds	r7, r4, r3
900227aa:	5ce3      	ldrb	r3, [r4, r3]
900227ac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900227b0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900227b4:	2a00      	cmp	r2, #0
900227b6:	f000 8127 	beq.w	90022a08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900227ba:	f897 e001 	ldrb.w	lr, [r7, #1]
900227be:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900227c2:	940d      	str	r4, [sp, #52]	@ 0x34
900227c4:	0e24      	lsrs	r4, r4, #24
900227c6:	9414      	str	r4, [sp, #80]	@ 0x50
900227c8:	b170      	cbz	r0, 900227e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900227ca:	eb07 0e01 	add.w	lr, r7, r1
900227ce:	5c79      	ldrb	r1, [r7, r1]
900227d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900227d4:	9109      	str	r1, [sp, #36]	@ 0x24
900227d6:	0e09      	lsrs	r1, r1, #24
900227d8:	9111      	str	r1, [sp, #68]	@ 0x44
900227da:	f89e 1001 	ldrb.w	r1, [lr, #1]
900227de:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900227e2:	910e      	str	r1, [sp, #56]	@ 0x38
900227e4:	0e09      	lsrs	r1, r1, #24
900227e6:	9115      	str	r1, [sp, #84]	@ 0x54
900227e8:	b292      	uxth	r2, r2
900227ea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900227ec:	b280      	uxth	r0, r0
900227ee:	fb02 f800 	mul.w	r8, r2, r0
900227f2:	0112      	lsls	r2, r2, #4
900227f4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900227f8:	eba2 0e08 	sub.w	lr, r2, r8
900227fc:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90022800:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90022802:	b280      	uxth	r0, r0
90022804:	fa1f fe8e 	uxth.w	lr, lr
90022808:	1a09      	subs	r1, r1, r0
9002280a:	fb0e f202 	mul.w	r2, lr, r2
9002280e:	b289      	uxth	r1, r1
90022810:	fb01 220c 	mla	r2, r1, ip, r2
90022814:	fb00 2204 	mla	r2, r0, r4, r2
90022818:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002281a:	fb08 2204 	mla	r2, r8, r4, r2
9002281e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90022822:	2a00      	cmp	r2, #0
90022824:	f000 80e5 	beq.w	900229f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90022828:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
9002282c:	d019      	beq.n	90022862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002282e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90022832:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022836:	fb0c fa0a 	mul.w	sl, ip, sl
9002283a:	fb0c fc03 	mul.w	ip, ip, r3
9002283e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90022842:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90022846:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002284a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002284e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90022852:	4453      	add	r3, sl
90022854:	0a3f      	lsrs	r7, r7, #8
90022856:	0a1b      	lsrs	r3, r3, #8
90022858:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
9002285c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022860:	433b      	orrs	r3, r7
90022862:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022864:	2cff      	cmp	r4, #255	@ 0xff
90022866:	d020      	beq.n	900228aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90022868:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002286a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002286e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022870:	4367      	muls	r7, r4
90022872:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022874:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022878:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002287c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002287e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022882:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022886:	fb04 fa0a 	mul.w	sl, r4, sl
9002288a:	44bc      	add	ip, r7
9002288c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022890:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022894:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022898:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002289c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900228a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900228a4:	ea4c 040a 	orr.w	r4, ip, sl
900228a8:	940d      	str	r4, [sp, #52]	@ 0x34
900228aa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900228ac:	2cff      	cmp	r4, #255	@ 0xff
900228ae:	d020      	beq.n	900228f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900228b0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900228b2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900228b6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900228b8:	4367      	muls	r7, r4
900228ba:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900228bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900228c0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900228c4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900228c6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900228ca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900228ce:	fb04 fa0a 	mul.w	sl, r4, sl
900228d2:	44bc      	add	ip, r7
900228d4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900228d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900228dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900228e0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900228e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900228e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900228ec:	ea4c 040a 	orr.w	r4, ip, sl
900228f0:	9409      	str	r4, [sp, #36]	@ 0x24
900228f2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900228f4:	2cff      	cmp	r4, #255	@ 0xff
900228f6:	d020      	beq.n	9002293a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
900228f8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900228fa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900228fe:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022900:	4367      	muls	r7, r4
90022902:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022904:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022908:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002290c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002290e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022912:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022916:	fb04 fa0a 	mul.w	sl, r4, sl
9002291a:	44bc      	add	ip, r7
9002291c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022920:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022924:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022928:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002292c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022930:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022934:	ea4c 040a 	orr.w	r4, ip, sl
90022938:	940e      	str	r4, [sp, #56]	@ 0x38
9002293a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002293c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90022940:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022944:	43d2      	mvns	r2, r2
90022946:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002294a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
9002294c:	b2d2      	uxtb	r2, r2
9002294e:	fb0e f707 	mul.w	r7, lr, r7
90022952:	fb01 770c 	mla	r7, r1, ip, r7
90022956:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002295a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002295c:	fb00 770c 	mla	r7, r0, ip, r7
90022960:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022964:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022966:	fb08 770c 	mla	r7, r8, ip, r7
9002296a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
9002296e:	fb0e fe0c 	mul.w	lr, lr, ip
90022972:	0a3f      	lsrs	r7, r7, #8
90022974:	fb01 e303 	mla	r3, r1, r3, lr
90022978:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002297a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
9002297e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90022982:	990e      	ldr	r1, [sp, #56]	@ 0x38
90022984:	fb00 330a 	mla	r3, r0, sl, r3
90022988:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
9002298c:	fb08 3c0c 	mla	ip, r8, ip, r3
90022990:	f8b9 3000 	ldrh.w	r3, [r9]
90022994:	1218      	asrs	r0, r3, #8
90022996:	10d9      	asrs	r1, r3, #3
90022998:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002299c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900229a0:	00db      	lsls	r3, r3, #3
900229a2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900229a6:	4350      	muls	r0, r2
900229a8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900229ac:	b2db      	uxtb	r3, r3
900229ae:	4351      	muls	r1, r2
900229b0:	ea47 070c 	orr.w	r7, r7, ip
900229b4:	4353      	muls	r3, r2
900229b6:	1c42      	adds	r2, r0, #1
900229b8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900229bc:	0c3a      	lsrs	r2, r7, #16
900229be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900229c2:	4a18      	ldr	r2, [pc, #96]	@ (90022a24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900229c4:	b2c0      	uxtb	r0, r0
900229c6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
900229ca:	1c4a      	adds	r2, r1, #1
900229cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900229d0:	0a3a      	lsrs	r2, r7, #8
900229d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900229d6:	00c9      	lsls	r1, r1, #3
900229d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900229dc:	4301      	orrs	r1, r0
900229de:	1c58      	adds	r0, r3, #1
900229e0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900229e4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900229e8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
900229ec:	4308      	orrs	r0, r1
900229ee:	f8a9 0000 	strh.w	r0, [r9]
900229f2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900229f4:	f109 0902 	add.w	r9, r9, #2
900229f8:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900229fa:	f10b 3bff 	add.w	fp, fp, #4294967295
900229fe:	441a      	add	r2, r3
90022a00:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022a02:	9225      	str	r2, [sp, #148]	@ 0x94
90022a04:	441d      	add	r5, r3
90022a06:	e64c      	b.n	900226a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022a08:	2800      	cmp	r0, #0
90022a0a:	f43f aeed 	beq.w	900227e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90022a0e:	5c79      	ldrb	r1, [r7, r1]
90022a10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022a14:	9109      	str	r1, [sp, #36]	@ 0x24
90022a16:	0e09      	lsrs	r1, r1, #24
90022a18:	9111      	str	r1, [sp, #68]	@ 0x44
90022a1a:	e6e5      	b.n	900227e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90022a1c:	b01b      	add	sp, #108	@ 0x6c
90022a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022a22:	bf00      	nop
90022a24:	fffff800 	.word	0xfffff800

90022a28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90022a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022a2c:	b085      	sub	sp, #20
90022a2e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90022a32:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90022a36:	2800      	cmp	r0, #0
90022a38:	9103      	str	r1, [sp, #12]
90022a3a:	fb00 7406 	mla	r4, r0, r6, r7
90022a3e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90022a42:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90022a46:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90022a4a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90022a4e:	eb03 0904 	add.w	r9, r3, r4
90022a52:	9501      	str	r5, [sp, #4]
90022a54:	f2c0 8150 	blt.w	90022cf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90022a58:	4583      	cmp	fp, r0
90022a5a:	f340 814d 	ble.w	90022cf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90022a5e:	2f00      	cmp	r7, #0
90022a60:	f2c0 8146 	blt.w	90022cf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90022a64:	42be      	cmp	r6, r7
90022a66:	f340 8143 	ble.w	90022cf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90022a6a:	f813 c004 	ldrb.w	ip, [r3, r4]
90022a6e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90022a72:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90022a76:	ea4f 02ec 	mov.w	r2, ip, asr #3
90022a7a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90022a7e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022a82:	4355      	muls	r5, r2
90022a84:	fb0c f203 	mul.w	r2, ip, r3
90022a88:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90022a8c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90022a90:	441d      	add	r5, r3
90022a92:	f102 0320 	add.w	r3, r2, #32
90022a96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022a9a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90022a9e:	0a1b      	lsrs	r3, r3, #8
90022aa0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022aa4:	431c      	orrs	r4, r3
90022aa6:	1c7b      	adds	r3, r7, #1
90022aa8:	f100 812b 	bmi.w	90022d02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90022aac:	429e      	cmp	r6, r3
90022aae:	f340 8128 	ble.w	90022d02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90022ab2:	2900      	cmp	r1, #0
90022ab4:	f000 8128 	beq.w	90022d08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90022ab8:	9a01      	ldr	r2, [sp, #4]
90022aba:	f899 3001 	ldrb.w	r3, [r9, #1]
90022abe:	8855      	ldrh	r5, [r2, #2]
90022ac0:	ea4f 08e3 	mov.w	r8, r3, asr #3
90022ac4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90022ac8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022acc:	fb08 f802 	mul.w	r8, r8, r2
90022ad0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90022ad4:	435d      	muls	r5, r3
90022ad6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90022ada:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022ade:	44d0      	add	r8, sl
90022ae0:	f105 0a20 	add.w	sl, r5, #32
90022ae4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90022ae8:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90022aec:	0a2d      	lsrs	r5, r5, #8
90022aee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022af2:	432a      	orrs	r2, r5
90022af4:	3001      	adds	r0, #1
90022af6:	f100 810d 	bmi.w	90022d14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022afa:	4583      	cmp	fp, r0
90022afc:	f340 810a 	ble.w	90022d14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022b00:	f1be 0f00 	cmp.w	lr, #0
90022b04:	f000 810b 	beq.w	90022d1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90022b08:	2f00      	cmp	r7, #0
90022b0a:	f2c0 8100 	blt.w	90022d0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022b0e:	42be      	cmp	r6, r7
90022b10:	f340 80fd 	ble.w	90022d0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022b14:	9801      	ldr	r0, [sp, #4]
90022b16:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90022b1a:	f819 5006 	ldrb.w	r5, [r9, r6]
90022b1e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90022b22:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90022b26:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90022b2a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90022b2e:	fb0a fa00 	mul.w	sl, sl, r0
90022b32:	fb05 f808 	mul.w	r8, r5, r8
90022b36:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90022b3a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90022b3e:	4482      	add	sl, r0
90022b40:	f108 0020 	add.w	r0, r8, #32
90022b44:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022b48:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90022b4c:	0a00      	lsrs	r0, r0, #8
90022b4e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022b52:	ea4b 0b00 	orr.w	fp, fp, r0
90022b56:	3701      	adds	r7, #1
90022b58:	f100 80e6 	bmi.w	90022d28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90022b5c:	42be      	cmp	r6, r7
90022b5e:	f340 80e3 	ble.w	90022d28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90022b62:	2900      	cmp	r1, #0
90022b64:	f000 80e3 	beq.w	90022d2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90022b68:	3601      	adds	r6, #1
90022b6a:	9801      	ldr	r0, [sp, #4]
90022b6c:	f819 7006 	ldrb.w	r7, [r9, r6]
90022b70:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90022b74:	ea4f 09e7 	mov.w	r9, r7, asr #3
90022b78:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90022b7c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022b80:	fb09 f906 	mul.w	r9, r9, r6
90022b84:	fb07 f800 	mul.w	r8, r7, r0
90022b88:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90022b8c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90022b90:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90022b94:	44d1      	add	r9, sl
90022b96:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90022b9a:	f108 0020 	add.w	r0, r8, #32
90022b9e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022ba2:	0a00      	lsrs	r0, r0, #8
90022ba4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022ba8:	4330      	orrs	r0, r6
90022baa:	b28e      	uxth	r6, r1
90022bac:	fa1f f98e 	uxth.w	r9, lr
90022bb0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90022bb4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90022bb8:	fb06 f809 	mul.w	r8, r6, r9
90022bbc:	0136      	lsls	r6, r6, #4
90022bbe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022bc2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90022bc6:	9601      	str	r6, [sp, #4]
90022bc8:	ea4a 0404 	orr.w	r4, sl, r4
90022bcc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022bd0:	fa1f f689 	uxth.w	r6, r9
90022bd4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022bd8:	fb11 f90e 	smulbb	r9, r1, lr
90022bdc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022be0:	9602      	str	r6, [sp, #8]
90022be2:	4626      	mov	r6, r4
90022be4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90022be8:	f1ce 0410 	rsb	r4, lr, #16
90022bec:	ea4a 0202 	orr.w	r2, sl, r2
90022bf0:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022bf4:	1a64      	subs	r4, r4, r1
90022bf6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90022bfa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022bfe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022c02:	434a      	muls	r2, r1
90022c04:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90022c08:	ea4a 0000 	orr.w	r0, sl, r0
90022c0c:	9903      	ldr	r1, [sp, #12]
90022c0e:	fb04 2406 	mla	r4, r4, r6, r2
90022c12:	9e02      	ldr	r6, [sp, #8]
90022c14:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90022c18:	fb09 4200 	mla	r2, r9, r0, r4
90022c1c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90022c20:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90022c24:	8808      	ldrh	r0, [r1, #0]
90022c26:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90022c2a:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90022c2e:	ea44 0b0b 	orr.w	fp, r4, fp
90022c32:	9c01      	ldr	r4, [sp, #4]
90022c34:	b289      	uxth	r1, r1
90022c36:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90022c3a:	fb0e 2e0b 	mla	lr, lr, fp, r2
90022c3e:	1ba4      	subs	r4, r4, r6
90022c40:	9e01      	ldr	r6, [sp, #4]
90022c42:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022c46:	eba6 0608 	sub.w	r6, r6, r8
90022c4a:	b2a4      	uxth	r4, r4
90022c4c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022c50:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022c54:	b2b6      	uxth	r6, r6
90022c56:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022c5a:	4373      	muls	r3, r6
90022c5c:	ea42 0e0e 	orr.w	lr, r2, lr
90022c60:	fb0c 3304 	mla	r3, ip, r4, r3
90022c64:	9c02      	ldr	r4, [sp, #8]
90022c66:	fa1f f28e 	uxth.w	r2, lr
90022c6a:	fb04 3505 	mla	r5, r4, r5, r3
90022c6e:	10d4      	asrs	r4, r2, #3
90022c70:	fb08 5707 	mla	r7, r8, r7, r5
90022c74:	1215      	asrs	r5, r2, #8
90022c76:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90022c7a:	00d2      	lsls	r2, r2, #3
90022c7c:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022c80:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022c84:	b2d2      	uxtb	r2, r2
90022c86:	434f      	muls	r7, r1
90022c88:	1c7b      	adds	r3, r7, #1
90022c8a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022c8e:	1203      	asrs	r3, r0, #8
90022c90:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90022c94:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90022c98:	b2ff      	uxtb	r7, r7
90022c9a:	fb13 f307 	smulbb	r3, r3, r7
90022c9e:	fb05 3501 	mla	r5, r5, r1, r3
90022ca2:	10c3      	asrs	r3, r0, #3
90022ca4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90022ca8:	b2ad      	uxth	r5, r5
90022caa:	fb13 f307 	smulbb	r3, r3, r7
90022cae:	fb04 3401 	mla	r4, r4, r1, r3
90022cb2:	00c3      	lsls	r3, r0, #3
90022cb4:	b2db      	uxtb	r3, r3
90022cb6:	b2a4      	uxth	r4, r4
90022cb8:	fb13 f307 	smulbb	r3, r3, r7
90022cbc:	fb02 3101 	mla	r1, r2, r1, r3
90022cc0:	1c6b      	adds	r3, r5, #1
90022cc2:	1c62      	adds	r2, r4, #1
90022cc4:	b289      	uxth	r1, r1
90022cc6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022cca:	1c4b      	adds	r3, r1, #1
90022ccc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90022cd0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022cd4:	9a03      	ldr	r2, [sp, #12]
90022cd6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022cda:	0964      	lsrs	r4, r4, #5
90022cdc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022ce0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90022ce4:	432b      	orrs	r3, r5
90022ce6:	4323      	orrs	r3, r4
90022ce8:	8013      	strh	r3, [r2, #0]
90022cea:	b005      	add	sp, #20
90022cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022cf0:	f04f 0c00 	mov.w	ip, #0
90022cf4:	4664      	mov	r4, ip
90022cf6:	e6d6      	b.n	90022aa6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90022cf8:	2300      	movs	r3, #0
90022cfa:	469c      	mov	ip, r3
90022cfc:	461a      	mov	r2, r3
90022cfe:	461c      	mov	r4, r3
90022d00:	e6f8      	b.n	90022af4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022d02:	2300      	movs	r3, #0
90022d04:	461a      	mov	r2, r3
90022d06:	e6f5      	b.n	90022af4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022d08:	460b      	mov	r3, r1
90022d0a:	460a      	mov	r2, r1
90022d0c:	e6f2      	b.n	90022af4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022d0e:	2500      	movs	r5, #0
90022d10:	46ab      	mov	fp, r5
90022d12:	e720      	b.n	90022b56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90022d14:	2700      	movs	r7, #0
90022d16:	463d      	mov	r5, r7
90022d18:	4638      	mov	r0, r7
90022d1a:	46bb      	mov	fp, r7
90022d1c:	e745      	b.n	90022baa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022d1e:	4677      	mov	r7, lr
90022d20:	4675      	mov	r5, lr
90022d22:	4670      	mov	r0, lr
90022d24:	46f3      	mov	fp, lr
90022d26:	e740      	b.n	90022baa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022d28:	2700      	movs	r7, #0
90022d2a:	4638      	mov	r0, r7
90022d2c:	e73d      	b.n	90022baa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022d2e:	460f      	mov	r7, r1
90022d30:	4608      	mov	r0, r1
90022d32:	e73a      	b.n	90022baa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90022d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022d38:	b097      	sub	sp, #92	@ 0x5c
90022d3a:	9214      	str	r2, [sp, #80]	@ 0x50
90022d3c:	9308      	str	r3, [sp, #32]
90022d3e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90022d40:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90022d44:	9015      	str	r0, [sp, #84]	@ 0x54
90022d46:	9312      	str	r3, [sp, #72]	@ 0x48
90022d48:	6850      	ldr	r0, [r2, #4]
90022d4a:	9111      	str	r1, [sp, #68]	@ 0x44
90022d4c:	6812      	ldr	r2, [r2, #0]
90022d4e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90022d52:	fb00 1303 	mla	r3, r0, r3, r1
90022d56:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022d5a:	9309      	str	r3, [sp, #36]	@ 0x24
90022d5c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022d5e:	681b      	ldr	r3, [r3, #0]
90022d60:	930b      	str	r3, [sp, #44]	@ 0x2c
90022d62:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022d64:	685b      	ldr	r3, [r3, #4]
90022d66:	930c      	str	r3, [sp, #48]	@ 0x30
90022d68:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90022d6c:	930a      	str	r3, [sp, #40]	@ 0x28
90022d6e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022d70:	2b00      	cmp	r3, #0
90022d72:	dc03      	bgt.n	90022d7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022d74:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90022d76:	2b00      	cmp	r3, #0
90022d78:	f340 83cd 	ble.w	90023516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90022d7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022d7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022d82:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022d86:	1e48      	subs	r0, r1, #1
90022d88:	1e55      	subs	r5, r2, #1
90022d8a:	9b08      	ldr	r3, [sp, #32]
90022d8c:	2b00      	cmp	r3, #0
90022d8e:	f340 81a5 	ble.w	900230dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90022d92:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90022d94:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022d96:	1436      	asrs	r6, r6, #16
90022d98:	ea4f 4323 	mov.w	r3, r3, asr #16
90022d9c:	d406      	bmi.n	90022dac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022d9e:	4286      	cmp	r6, r0
90022da0:	da04      	bge.n	90022dac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022da2:	2b00      	cmp	r3, #0
90022da4:	db02      	blt.n	90022dac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022da6:	42ab      	cmp	r3, r5
90022da8:	f2c0 8199 	blt.w	900230de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022dac:	3601      	adds	r6, #1
90022dae:	f100 8186 	bmi.w	900230be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022db2:	42b1      	cmp	r1, r6
90022db4:	f2c0 8183 	blt.w	900230be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022db8:	3301      	adds	r3, #1
90022dba:	f100 8180 	bmi.w	900230be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022dbe:	429a      	cmp	r2, r3
90022dc0:	f2c0 817d 	blt.w	900230be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022dc4:	9b08      	ldr	r3, [sp, #32]
90022dc6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90022dca:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90022dcc:	9313      	str	r3, [sp, #76]	@ 0x4c
90022dce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90022dd0:	2b00      	cmp	r3, #0
90022dd2:	f340 81a6 	ble.w	90023122 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90022dd6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022dd8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90022dda:	1418      	asrs	r0, r3, #16
90022ddc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022dde:	142d      	asrs	r5, r5, #16
90022de0:	f3c3 3103 	ubfx	r1, r3, #12, #4
90022de4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022de6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90022dea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022dec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90022df0:	f100 81fa 	bmi.w	900231e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022df4:	f102 3eff 	add.w	lr, r2, #4294967295
90022df8:	4575      	cmp	r5, lr
90022dfa:	f280 81f5 	bge.w	900231e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022dfe:	2800      	cmp	r0, #0
90022e00:	f2c0 81f2 	blt.w	900231e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022e04:	f103 3eff 	add.w	lr, r3, #4294967295
90022e08:	4570      	cmp	r0, lr
90022e0a:	f280 81ed 	bge.w	900231e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022e0e:	b212      	sxth	r2, r2
90022e10:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022e12:	fa1f fe81 	uxth.w	lr, r1
90022e16:	fb00 5002 	mla	r0, r0, r2, r5
90022e1a:	ea4f 150e 	mov.w	r5, lr, lsl #4
90022e1e:	eb03 0a00 	add.w	sl, r3, r0
90022e22:	f813 9000 	ldrb.w	r9, [r3, r0]
90022e26:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90022e2a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022e2e:	b29b      	uxth	r3, r3
90022e30:	f1bc 0f00 	cmp.w	ip, #0
90022e34:	f000 81bb 	beq.w	900231ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90022e38:	f81a 4002 	ldrb.w	r4, [sl, r2]
90022e3c:	eb0a 0b02 	add.w	fp, sl, r2
90022e40:	fa1f fa8c 	uxth.w	sl, ip
90022e44:	940d      	str	r4, [sp, #52]	@ 0x34
90022e46:	fb0a fe0e 	mul.w	lr, sl, lr
90022e4a:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022e4e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90022e52:	eba5 050e 	sub.w	r5, r5, lr
90022e56:	940e      	str	r4, [sp, #56]	@ 0x38
90022e58:	fa1f fa8a 	uxth.w	sl, sl
90022e5c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022e5e:	b2ad      	uxth	r5, r5
90022e60:	eba3 030a 	sub.w	r3, r3, sl
90022e64:	fb08 f505 	mul.w	r5, r8, r5
90022e68:	b29b      	uxth	r3, r3
90022e6a:	fb09 5303 	mla	r3, r9, r3, r5
90022e6e:	fb0a 3304 	mla	r3, sl, r4, r3
90022e72:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022e74:	fb0e 3304 	mla	r3, lr, r4, r3
90022e78:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022e7c:	2b00      	cmp	r3, #0
90022e7e:	f000 8111 	beq.w	900230a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022e82:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022e84:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90022e88:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90022e8c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90022e90:	f000 8192 	beq.w	900231b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90022e94:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90022e98:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022e9c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022ea0:	fb0a fe0e 	mul.w	lr, sl, lr
90022ea4:	fb09 f000 	mul.w	r0, r9, r0
90022ea8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90022eac:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90022eb0:	f100 0b20 	add.w	fp, r0, #32
90022eb4:	44ce      	add	lr, r9
90022eb6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90022eba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90022ebe:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022ec2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90022ec6:	ea4e 0909 	orr.w	r9, lr, r9
90022eca:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90022ece:	8868      	ldrh	r0, [r5, #2]
90022ed0:	d019      	beq.n	90022f06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90022ed2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90022ed6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022eda:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022ede:	fb0a fe0e 	mul.w	lr, sl, lr
90022ee2:	fb08 f800 	mul.w	r8, r8, r0
90022ee6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90022eea:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90022eee:	f108 0b20 	add.w	fp, r8, #32
90022ef2:	4486      	add	lr, r0
90022ef4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90022ef8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90022efc:	0a00      	lsrs	r0, r0, #8
90022efe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022f02:	ea4e 0000 	orr.w	r0, lr, r0
90022f06:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90022f0a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90022f0e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022f12:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022f16:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90022f1a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022f1e:	ea4e 0909 	orr.w	r9, lr, r9
90022f22:	ea4a 0000 	orr.w	r0, sl, r0
90022f26:	f1bc 0f00 	cmp.w	ip, #0
90022f2a:	f000 8147 	beq.w	900231bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90022f2e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90022f32:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022f34:	3a01      	subs	r2, #1
90022f36:	2cff      	cmp	r4, #255	@ 0xff
90022f38:	ea4f 0242 	mov.w	r2, r2, lsl #1
90022f3c:	f102 0202 	add.w	r2, r2, #2
90022f40:	eb05 0e02 	add.w	lr, r5, r2
90022f44:	5aaa      	ldrh	r2, [r5, r2]
90022f46:	d018      	beq.n	90022f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90022f48:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90022f4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022f50:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022f54:	fb04 fa02 	mul.w	sl, r4, r2
90022f58:	fb08 f805 	mul.w	r8, r8, r5
90022f5c:	f10a 0520 	add.w	r5, sl, #32
90022f60:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90022f64:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022f68:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90022f6c:	4442      	add	r2, r8
90022f6e:	0a2d      	lsrs	r5, r5, #8
90022f70:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90022f74:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022f78:	432a      	orrs	r2, r5
90022f7a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022f7c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90022f80:	2cff      	cmp	r4, #255	@ 0xff
90022f82:	d01a      	beq.n	90022fba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90022f84:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90022f88:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022f8c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022f90:	fb04 fa05 	mul.w	sl, r4, r5
90022f94:	fb08 f80e 	mul.w	r8, r8, lr
90022f98:	f10a 0e20 	add.w	lr, sl, #32
90022f9c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022fa0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022fa4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90022fa8:	4445      	add	r5, r8
90022faa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022fae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90022fb2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90022fb6:	ea45 050e 	orr.w	r5, r5, lr
90022fba:	fb1c fe01 	smulbb	lr, ip, r1
90022fbe:	f1cc 0810 	rsb	r8, ip, #16
90022fc2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022fc6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022fca:	ea4f 0eee 	mov.w	lr, lr, asr #3
90022fce:	eba8 0801 	sub.w	r8, r8, r1
90022fd2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90022fd6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022fda:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90022fde:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022fe2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90022fe6:	ea4a 0202 	orr.w	r2, sl, r2
90022fea:	4341      	muls	r1, r0
90022fec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90022ff0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022ff4:	fb09 1108 	mla	r1, r9, r8, r1
90022ff8:	ea4b 0505 	orr.w	r5, fp, r5
90022ffc:	fb0c 1102 	mla	r1, ip, r2, r1
90023000:	fb0e 1e05 	mla	lr, lr, r5, r1
90023004:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023008:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002300c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023010:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023014:	ea42 0e0e 	orr.w	lr, r2, lr
90023018:	fa1f f28e 	uxth.w	r2, lr
9002301c:	2bff      	cmp	r3, #255	@ 0xff
9002301e:	d103      	bne.n	90023028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023020:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023022:	29ff      	cmp	r1, #255	@ 0xff
90023024:	f000 80de 	beq.w	900231e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90023028:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002302a:	1215      	asrs	r5, r2, #8
9002302c:	8838      	ldrh	r0, [r7, #0]
9002302e:	434b      	muls	r3, r1
90023030:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023034:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023036:	f103 0c01 	add.w	ip, r3, #1
9002303a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
9002303e:	ea6f 2323 	mvn.w	r3, r3, asr #8
90023042:	fa5f fc83 	uxtb.w	ip, r3
90023046:	1203      	asrs	r3, r0, #8
90023048:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002304c:	fb13 f30c 	smulbb	r3, r3, ip
90023050:	fb05 3501 	mla	r5, r5, r1, r3
90023054:	10c3      	asrs	r3, r0, #3
90023056:	10d1      	asrs	r1, r2, #3
90023058:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002305c:	00d2      	lsls	r2, r2, #3
9002305e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023062:	b2ad      	uxth	r5, r5
90023064:	fb13 f30c 	smulbb	r3, r3, ip
90023068:	b2d2      	uxtb	r2, r2
9002306a:	fb01 3104 	mla	r1, r1, r4, r3
9002306e:	00c3      	lsls	r3, r0, #3
90023070:	b2db      	uxtb	r3, r3
90023072:	b289      	uxth	r1, r1
90023074:	fb13 f30c 	smulbb	r3, r3, ip
90023078:	fb02 3304 	mla	r3, r2, r4, r3
9002307c:	b29a      	uxth	r2, r3
9002307e:	1c6b      	adds	r3, r5, #1
90023080:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023084:	1c53      	adds	r3, r2, #1
90023086:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002308a:	1c4a      	adds	r2, r1, #1
9002308c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023090:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023094:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023098:	0949      	lsrs	r1, r1, #5
9002309a:	432b      	orrs	r3, r5
9002309c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900230a0:	430b      	orrs	r3, r1
900230a2:	803b      	strh	r3, [r7, #0]
900230a4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900230a6:	3702      	adds	r7, #2
900230a8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900230aa:	4413      	add	r3, r2
900230ac:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900230ae:	9321      	str	r3, [sp, #132]	@ 0x84
900230b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900230b2:	441a      	add	r2, r3
900230b4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900230b6:	3b01      	subs	r3, #1
900230b8:	9222      	str	r2, [sp, #136]	@ 0x88
900230ba:	9313      	str	r3, [sp, #76]	@ 0x4c
900230bc:	e687      	b.n	90022dce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900230be:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900230c0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
900230c2:	9c22      	ldr	r4, [sp, #136]	@ 0x88
900230c4:	4433      	add	r3, r6
900230c6:	9321      	str	r3, [sp, #132]	@ 0x84
900230c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900230ca:	441c      	add	r4, r3
900230cc:	9b08      	ldr	r3, [sp, #32]
900230ce:	3b01      	subs	r3, #1
900230d0:	9422      	str	r4, [sp, #136]	@ 0x88
900230d2:	9308      	str	r3, [sp, #32]
900230d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900230d6:	3302      	adds	r3, #2
900230d8:	9309      	str	r3, [sp, #36]	@ 0x24
900230da:	e656      	b.n	90022d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900230dc:	d028      	beq.n	90023130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900230de:	9b08      	ldr	r3, [sp, #32]
900230e0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
900230e2:	3b01      	subs	r3, #1
900230e4:	9d21      	ldr	r5, [sp, #132]	@ 0x84
900230e6:	fb00 5003 	mla	r0, r0, r3, r5
900230ea:	1400      	asrs	r0, r0, #16
900230ec:	f53f ae6a 	bmi.w	90022dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900230f0:	3901      	subs	r1, #1
900230f2:	4288      	cmp	r0, r1
900230f4:	f6bf ae66 	bge.w	90022dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900230f8:	9924      	ldr	r1, [sp, #144]	@ 0x90
900230fa:	9822      	ldr	r0, [sp, #136]	@ 0x88
900230fc:	fb01 0303 	mla	r3, r1, r3, r0
90023100:	141b      	asrs	r3, r3, #16
90023102:	f53f ae5f 	bmi.w	90022dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023106:	3a01      	subs	r2, #1
90023108:	4293      	cmp	r3, r2
9002310a:	f6bf ae5b 	bge.w	90022dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002310e:	9b08      	ldr	r3, [sp, #32]
90023110:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90023114:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90023118:	9313      	str	r3, [sp, #76]	@ 0x4c
9002311a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002311c:	2b00      	cmp	r3, #0
9002311e:	f300 8082 	bgt.w	90023226 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90023122:	9b08      	ldr	r3, [sp, #32]
90023124:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023128:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002312a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002312e:	9309      	str	r3, [sp, #36]	@ 0x24
90023130:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023132:	2b00      	cmp	r3, #0
90023134:	f340 81ef 	ble.w	90023516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90023138:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002313c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002313e:	ee30 0a04 	vadd.f32	s0, s0, s8
90023142:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023146:	eef0 6a62 	vmov.f32	s13, s5
9002314a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002314e:	ee31 1a05 	vadd.f32	s2, s2, s10
90023152:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023156:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
9002315a:	eef0 6a43 	vmov.f32	s13, s6
9002315e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023162:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90023166:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002316a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002316e:	ee77 2a62 	vsub.f32	s5, s14, s5
90023172:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023176:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002317a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002317e:	ee12 2a90 	vmov	r2, s5
90023182:	eef0 2a47 	vmov.f32	s5, s14
90023186:	fb92 f3f3 	sdiv	r3, r2, r3
9002318a:	ee13 2a10 	vmov	r2, s6
9002318e:	9323      	str	r3, [sp, #140]	@ 0x8c
90023190:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023192:	eeb0 3a67 	vmov.f32	s6, s15
90023196:	fb92 f3f3 	sdiv	r3, r2, r3
9002319a:	9324      	str	r3, [sp, #144]	@ 0x90
9002319c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002319e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900231a0:	3b01      	subs	r3, #1
900231a2:	9311      	str	r3, [sp, #68]	@ 0x44
900231a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900231a6:	bf08      	it	eq
900231a8:	4613      	moveq	r3, r2
900231aa:	9308      	str	r3, [sp, #32]
900231ac:	e5df      	b.n	90022d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900231ae:	fb08 f505 	mul.w	r5, r8, r5
900231b2:	fb09 5303 	mla	r3, r9, r3, r5
900231b6:	e65f      	b.n	90022e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900231b8:	4681      	mov	r9, r0
900231ba:	e686      	b.n	90022eca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900231bc:	f1c1 0210 	rsb	r2, r1, #16
900231c0:	4341      	muls	r1, r0
900231c2:	fb09 1902 	mla	r9, r9, r2, r1
900231c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
900231ca:	ea4f 5259 	mov.w	r2, r9, lsr #21
900231ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
900231d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900231d6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900231da:	ea42 0909 	orr.w	r9, r2, r9
900231de:	fa1f f289 	uxth.w	r2, r9
900231e2:	e71b      	b.n	9002301c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900231e4:	803a      	strh	r2, [r7, #0]
900231e6:	e75d      	b.n	900230a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900231e8:	f115 0e01 	adds.w	lr, r5, #1
900231ec:	f53f af5a 	bmi.w	900230a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900231f0:	4572      	cmp	r2, lr
900231f2:	f6ff af57 	blt.w	900230a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900231f6:	f110 0e01 	adds.w	lr, r0, #1
900231fa:	f53f af53 	bmi.w	900230a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900231fe:	4573      	cmp	r3, lr
90023200:	f6ff af50 	blt.w	900230a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023204:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023206:	b21b      	sxth	r3, r3
90023208:	b212      	sxth	r2, r2
9002320a:	9502      	str	r5, [sp, #8]
9002320c:	9301      	str	r3, [sp, #4]
9002320e:	9200      	str	r2, [sp, #0]
90023210:	e9cd 0103 	strd	r0, r1, [sp, #12]
90023214:	e9cd c405 	strd	ip, r4, [sp, #20]
90023218:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9002321c:	4639      	mov	r1, r7
9002321e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90023220:	f7ff fc02 	bl	90022a28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90023224:	e73e      	b.n	900230a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023226:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023228:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002322c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002322e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90023232:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023234:	fa1f fc82 	uxth.w	ip, r2
90023238:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002323c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002323e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90023242:	141f      	asrs	r7, r3, #16
90023244:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023246:	141b      	asrs	r3, r3, #16
90023248:	fb01 3707 	mla	r7, r1, r7, r3
9002324c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002324e:	eb03 0a07 	add.w	sl, r3, r7
90023252:	f813 9007 	ldrb.w	r9, [r3, r7]
90023256:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002325a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002325e:	b29b      	uxth	r3, r3
90023260:	2d00      	cmp	r5, #0
90023262:	f000 813d 	beq.w	900234e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90023266:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002326a:	eb0a 0b01 	add.w	fp, sl, r1
9002326e:	fa1f fa85 	uxth.w	sl, r5
90023272:	940f      	str	r4, [sp, #60]	@ 0x3c
90023274:	fb0a fc0c 	mul.w	ip, sl, ip
90023278:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002327c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90023280:	eba0 000c 	sub.w	r0, r0, ip
90023284:	9410      	str	r4, [sp, #64]	@ 0x40
90023286:	fa1f fa8a 	uxth.w	sl, sl
9002328a:	b280      	uxth	r0, r0
9002328c:	eba3 030a 	sub.w	r3, r3, sl
90023290:	fb08 f000 	mul.w	r0, r8, r0
90023294:	b29b      	uxth	r3, r3
90023296:	fb09 0303 	mla	r3, r9, r3, r0
9002329a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9002329c:	fb0a 3300 	mla	r3, sl, r0, r3
900232a0:	fb0c 3304 	mla	r3, ip, r4, r3
900232a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900232a8:	2b00      	cmp	r3, #0
900232aa:	f000 810b 	beq.w	900234c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900232ae:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900232b0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900232b4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900232b6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900232ba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900232be:	f000 8114 	beq.w	900234ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900232c2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900232c6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900232ca:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900232ce:	fb0a fc0c 	mul.w	ip, sl, ip
900232d2:	fb09 f707 	mul.w	r7, r9, r7
900232d6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900232da:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900232de:	f107 0b20 	add.w	fp, r7, #32
900232e2:	44cc      	add	ip, r9
900232e4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900232e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900232ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
900232f0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900232f4:	ea4c 0909 	orr.w	r9, ip, r9
900232f8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900232fc:	8847      	ldrh	r7, [r0, #2]
900232fe:	d019      	beq.n	90023334 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90023300:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90023304:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023308:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002330c:	fb0a fc0c 	mul.w	ip, sl, ip
90023310:	fb08 f807 	mul.w	r8, r8, r7
90023314:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90023318:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002331c:	f108 0b20 	add.w	fp, r8, #32
90023320:	44bc      	add	ip, r7
90023322:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90023326:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002332a:	0a3f      	lsrs	r7, r7, #8
9002332c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023330:	ea4c 0707 	orr.w	r7, ip, r7
90023334:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90023338:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002333c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90023340:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90023344:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023348:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002334c:	ea4c 0909 	orr.w	r9, ip, r9
90023350:	ea4a 0707 	orr.w	r7, sl, r7
90023354:	2d00      	cmp	r5, #0
90023356:	f000 80ca 	beq.w	900234ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
9002335a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002335e:	3901      	subs	r1, #1
90023360:	0049      	lsls	r1, r1, #1
90023362:	3102      	adds	r1, #2
90023364:	eb00 0c01 	add.w	ip, r0, r1
90023368:	5a41      	ldrh	r1, [r0, r1]
9002336a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9002336c:	28ff      	cmp	r0, #255	@ 0xff
9002336e:	d019      	beq.n	900233a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90023370:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90023374:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023376:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002337a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002337e:	fb04 fa01 	mul.w	sl, r4, r1
90023382:	fb08 f800 	mul.w	r8, r8, r0
90023386:	f10a 0020 	add.w	r0, sl, #32
9002338a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9002338e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023392:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90023396:	4441      	add	r1, r8
90023398:	0a00      	lsrs	r0, r0, #8
9002339a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9002339e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900233a2:	4301      	orrs	r1, r0
900233a4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900233a6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900233aa:	2cff      	cmp	r4, #255	@ 0xff
900233ac:	d01a      	beq.n	900233e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900233ae:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900233b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900233b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
900233ba:	fb04 fa00 	mul.w	sl, r4, r0
900233be:	fb08 f80c 	mul.w	r8, r8, ip
900233c2:	f10a 0c20 	add.w	ip, sl, #32
900233c6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900233ca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900233ce:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900233d2:	4440      	add	r0, r8
900233d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900233d8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900233dc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900233e0:	ea40 000c 	orr.w	r0, r0, ip
900233e4:	fb15 fc02 	smulbb	ip, r5, r2
900233e8:	f1c5 0810 	rsb	r8, r5, #16
900233ec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900233f0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900233f4:	ea4f 0cec 	mov.w	ip, ip, asr #3
900233f8:	eba8 0802 	sub.w	r8, r8, r2
900233fc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023400:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023404:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90023408:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002340c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90023410:	ea4a 0101 	orr.w	r1, sl, r1
90023414:	437a      	muls	r2, r7
90023416:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002341a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002341e:	fb09 2208 	mla	r2, r9, r8, r2
90023422:	ea4b 0000 	orr.w	r0, fp, r0
90023426:	fb05 2201 	mla	r2, r5, r1, r2
9002342a:	fb0c 2200 	mla	r2, ip, r0, r2
9002342e:	0d57      	lsrs	r7, r2, #21
90023430:	0952      	lsrs	r2, r2, #5
90023432:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023436:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002343a:	433a      	orrs	r2, r7
9002343c:	2bff      	cmp	r3, #255	@ 0xff
9002343e:	b292      	uxth	r2, r2
90023440:	d102      	bne.n	90023448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90023442:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023444:	29ff      	cmp	r1, #255	@ 0xff
90023446:	d063      	beq.n	90023510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90023448:	980a      	ldr	r0, [sp, #40]	@ 0x28
9002344a:	1215      	asrs	r5, r2, #8
9002344c:	f8be 1000 	ldrh.w	r1, [lr]
90023450:	4343      	muls	r3, r0
90023452:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023454:	10cf      	asrs	r7, r1, #3
90023456:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002345a:	1c58      	adds	r0, r3, #1
9002345c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90023460:	eb00 2323 	add.w	r3, r0, r3, asr #8
90023464:	1208      	asrs	r0, r1, #8
90023466:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002346a:	00c9      	lsls	r1, r1, #3
9002346c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023470:	b2db      	uxtb	r3, r3
90023472:	b2c9      	uxtb	r1, r1
90023474:	fb10 f003 	smulbb	r0, r0, r3
90023478:	fb11 f103 	smulbb	r1, r1, r3
9002347c:	fb05 0504 	mla	r5, r5, r4, r0
90023480:	10d0      	asrs	r0, r2, #3
90023482:	fb17 f703 	smulbb	r7, r7, r3
90023486:	00d2      	lsls	r2, r2, #3
90023488:	b2ad      	uxth	r5, r5
9002348a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002348e:	b2d2      	uxtb	r2, r2
90023490:	fb00 7004 	mla	r0, r0, r4, r7
90023494:	1c6b      	adds	r3, r5, #1
90023496:	fb02 1204 	mla	r2, r2, r4, r1
9002349a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002349e:	b292      	uxth	r2, r2
900234a0:	b280      	uxth	r0, r0
900234a2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900234a6:	1c57      	adds	r7, r2, #1
900234a8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900234ac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900234b0:	433d      	orrs	r5, r7
900234b2:	1c47      	adds	r7, r0, #1
900234b4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900234b8:	097f      	lsrs	r7, r7, #5
900234ba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900234be:	433d      	orrs	r5, r7
900234c0:	f8ae 5000 	strh.w	r5, [lr]
900234c4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900234c6:	f10e 0e02 	add.w	lr, lr, #2
900234ca:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900234cc:	4413      	add	r3, r2
900234ce:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900234d0:	9321      	str	r3, [sp, #132]	@ 0x84
900234d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900234d4:	441a      	add	r2, r3
900234d6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900234d8:	3b01      	subs	r3, #1
900234da:	9222      	str	r2, [sp, #136]	@ 0x88
900234dc:	9313      	str	r3, [sp, #76]	@ 0x4c
900234de:	e61c      	b.n	9002311a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900234e0:	fb08 f000 	mul.w	r0, r8, r0
900234e4:	fb09 0303 	mla	r3, r9, r3, r0
900234e8:	e6dc      	b.n	900232a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
900234ea:	46b9      	mov	r9, r7
900234ec:	e704      	b.n	900232f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
900234ee:	f1c2 0110 	rsb	r1, r2, #16
900234f2:	437a      	muls	r2, r7
900234f4:	fb09 2901 	mla	r9, r9, r1, r2
900234f8:	ea4f 0949 	mov.w	r9, r9, lsl #1
900234fc:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023500:	ea4f 1259 	mov.w	r2, r9, lsr #5
90023504:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023508:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002350c:	4302      	orrs	r2, r0
9002350e:	e795      	b.n	9002343c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90023510:	f8ae 2000 	strh.w	r2, [lr]
90023514:	e7d6      	b.n	900234c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90023516:	b017      	add	sp, #92	@ 0x5c
90023518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002351c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002351c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023520:	b085      	sub	sp, #20
90023522:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90023526:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
9002352a:	2800      	cmp	r0, #0
9002352c:	9103      	str	r1, [sp, #12]
9002352e:	fb00 7406 	mla	r4, r0, r6, r7
90023532:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90023536:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
9002353a:	eb03 0544 	add.w	r5, r3, r4, lsl #1
9002353e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90023542:	eb02 0904 	add.w	r9, r2, r4
90023546:	9501      	str	r5, [sp, #4]
90023548:	f2c0 8141 	blt.w	900237ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002354c:	4583      	cmp	fp, r0
9002354e:	f340 813e 	ble.w	900237ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90023552:	2f00      	cmp	r7, #0
90023554:	f2c0 8137 	blt.w	900237c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90023558:	42be      	cmp	r6, r7
9002355a:	f340 8134 	ble.w	900237c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002355e:	f812 c004 	ldrb.w	ip, [r2, r4]
90023562:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90023566:	f64f 041f 	movw	r4, #63519	@ 0xf81f
9002356a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002356e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90023572:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023576:	4355      	muls	r5, r2
90023578:	fb0c f203 	mul.w	r2, ip, r3
9002357c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90023580:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90023584:	441d      	add	r5, r3
90023586:	f102 0320 	add.w	r3, r2, #32
9002358a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002358e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90023592:	0a1b      	lsrs	r3, r3, #8
90023594:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023598:	431c      	orrs	r4, r3
9002359a:	1c7b      	adds	r3, r7, #1
9002359c:	f100 811c 	bmi.w	900237d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900235a0:	429e      	cmp	r6, r3
900235a2:	f340 8119 	ble.w	900237d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900235a6:	2900      	cmp	r1, #0
900235a8:	f000 8119 	beq.w	900237de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900235ac:	9a01      	ldr	r2, [sp, #4]
900235ae:	f899 3001 	ldrb.w	r3, [r9, #1]
900235b2:	8855      	ldrh	r5, [r2, #2]
900235b4:	ea4f 08e3 	mov.w	r8, r3, asr #3
900235b8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900235bc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900235c0:	fb08 f802 	mul.w	r8, r8, r2
900235c4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
900235c8:	435d      	muls	r5, r3
900235ca:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900235ce:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900235d2:	44d0      	add	r8, sl
900235d4:	f105 0a20 	add.w	sl, r5, #32
900235d8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900235dc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900235e0:	0a2d      	lsrs	r5, r5, #8
900235e2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900235e6:	432a      	orrs	r2, r5
900235e8:	3001      	adds	r0, #1
900235ea:	f100 80fe 	bmi.w	900237ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
900235ee:	4583      	cmp	fp, r0
900235f0:	f340 80fb 	ble.w	900237ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
900235f4:	f1be 0f00 	cmp.w	lr, #0
900235f8:	f000 80fc 	beq.w	900237f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
900235fc:	2f00      	cmp	r7, #0
900235fe:	f2c0 80f1 	blt.w	900237e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023602:	42be      	cmp	r6, r7
90023604:	f340 80ee 	ble.w	900237e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023608:	9801      	ldr	r0, [sp, #4]
9002360a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002360e:	f819 5006 	ldrb.w	r5, [r9, r6]
90023612:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90023616:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002361a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002361e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90023622:	fb0a fa00 	mul.w	sl, sl, r0
90023626:	fb05 f808 	mul.w	r8, r5, r8
9002362a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002362e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90023632:	4482      	add	sl, r0
90023634:	f108 0020 	add.w	r0, r8, #32
90023638:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002363c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90023640:	0a00      	lsrs	r0, r0, #8
90023642:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023646:	ea4b 0b00 	orr.w	fp, fp, r0
9002364a:	3701      	adds	r7, #1
9002364c:	f100 80d7 	bmi.w	900237fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90023650:	42be      	cmp	r6, r7
90023652:	f340 80d4 	ble.w	900237fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90023656:	2900      	cmp	r1, #0
90023658:	f000 80d4 	beq.w	90023804 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
9002365c:	3601      	adds	r6, #1
9002365e:	9801      	ldr	r0, [sp, #4]
90023660:	f819 7006 	ldrb.w	r7, [r9, r6]
90023664:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90023668:	ea4f 09e7 	mov.w	r9, r7, asr #3
9002366c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90023670:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023674:	fb09 f906 	mul.w	r9, r9, r6
90023678:	fb07 f800 	mul.w	r8, r7, r0
9002367c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90023680:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90023684:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90023688:	44d1      	add	r9, sl
9002368a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002368e:	f108 0020 	add.w	r0, r8, #32
90023692:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023696:	0a00      	lsrs	r0, r0, #8
90023698:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002369c:	4330      	orrs	r0, r6
9002369e:	b28e      	uxth	r6, r1
900236a0:	fa1f f98e 	uxth.w	r9, lr
900236a4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900236a8:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900236ac:	fb06 f809 	mul.w	r8, r6, r9
900236b0:	0136      	lsls	r6, r6, #4
900236b2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900236b6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900236ba:	9601      	str	r6, [sp, #4]
900236bc:	ea4a 0404 	orr.w	r4, sl, r4
900236c0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900236c4:	fa1f f689 	uxth.w	r6, r9
900236c8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900236cc:	fb11 f90e 	smulbb	r9, r1, lr
900236d0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900236d4:	9602      	str	r6, [sp, #8]
900236d6:	4626      	mov	r6, r4
900236d8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900236dc:	f1ce 0410 	rsb	r4, lr, #16
900236e0:	ea4a 0202 	orr.w	r2, sl, r2
900236e4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900236e8:	1a64      	subs	r4, r4, r1
900236ea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900236ee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900236f2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900236f6:	434a      	muls	r2, r1
900236f8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900236fc:	ea4a 0000 	orr.w	r0, sl, r0
90023700:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90023704:	fb04 2406 	mla	r4, r4, r6, r2
90023708:	9903      	ldr	r1, [sp, #12]
9002370a:	fb09 4200 	mla	r2, r9, r0, r4
9002370e:	ea4f 440b 	mov.w	r4, fp, lsl #16
90023712:	9801      	ldr	r0, [sp, #4]
90023714:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90023718:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002371c:	8809      	ldrh	r1, [r1, #0]
9002371e:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90023722:	ea44 0b0b 	orr.w	fp, r4, fp
90023726:	9c02      	ldr	r4, [sp, #8]
90023728:	1b00      	subs	r0, r0, r4
9002372a:	9c01      	ldr	r4, [sp, #4]
9002372c:	fb0e 2e0b 	mla	lr, lr, fp, r2
90023730:	eba4 0608 	sub.w	r6, r4, r8
90023734:	b280      	uxth	r0, r0
90023736:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002373a:	b2b6      	uxth	r6, r6
9002373c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023740:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023744:	4373      	muls	r3, r6
90023746:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002374a:	fb0c 3300 	mla	r3, ip, r0, r3
9002374e:	9802      	ldr	r0, [sp, #8]
90023750:	ea42 0e0e 	orr.w	lr, r2, lr
90023754:	fb00 3505 	mla	r5, r0, r5, r3
90023758:	120b      	asrs	r3, r1, #8
9002375a:	10c8      	asrs	r0, r1, #3
9002375c:	fb08 5707 	mla	r7, r8, r7, r5
90023760:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90023764:	00c9      	lsls	r1, r1, #3
90023766:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002376a:	ea6f 2727 	mvn.w	r7, r7, asr #8
9002376e:	fa1f f28e 	uxth.w	r2, lr
90023772:	b2c9      	uxtb	r1, r1
90023774:	b2ff      	uxtb	r7, r7
90023776:	437b      	muls	r3, r7
90023778:	4378      	muls	r0, r7
9002377a:	434f      	muls	r7, r1
9002377c:	1c59      	adds	r1, r3, #1
9002377e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90023782:	1213      	asrs	r3, r2, #8
90023784:	f023 0307 	bic.w	r3, r3, #7
90023788:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002378c:	1c41      	adds	r1, r0, #1
9002378e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023792:	10d1      	asrs	r1, r2, #3
90023794:	021b      	lsls	r3, r3, #8
90023796:	f021 0103 	bic.w	r1, r1, #3
9002379a:	00d2      	lsls	r2, r2, #3
9002379c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900237a0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900237a4:	00c9      	lsls	r1, r1, #3
900237a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900237aa:	430b      	orrs	r3, r1
900237ac:	1c79      	adds	r1, r7, #1
900237ae:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900237b2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900237b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900237ba:	431a      	orrs	r2, r3
900237bc:	9b03      	ldr	r3, [sp, #12]
900237be:	801a      	strh	r2, [r3, #0]
900237c0:	b005      	add	sp, #20
900237c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900237c6:	f04f 0c00 	mov.w	ip, #0
900237ca:	4664      	mov	r4, ip
900237cc:	e6e5      	b.n	9002359a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
900237ce:	2300      	movs	r3, #0
900237d0:	469c      	mov	ip, r3
900237d2:	461a      	mov	r2, r3
900237d4:	461c      	mov	r4, r3
900237d6:	e707      	b.n	900235e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900237d8:	2300      	movs	r3, #0
900237da:	461a      	mov	r2, r3
900237dc:	e704      	b.n	900235e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900237de:	460b      	mov	r3, r1
900237e0:	460a      	mov	r2, r1
900237e2:	e701      	b.n	900235e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900237e4:	2500      	movs	r5, #0
900237e6:	46ab      	mov	fp, r5
900237e8:	e72f      	b.n	9002364a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
900237ea:	2700      	movs	r7, #0
900237ec:	463d      	mov	r5, r7
900237ee:	4638      	mov	r0, r7
900237f0:	46bb      	mov	fp, r7
900237f2:	e754      	b.n	9002369e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900237f4:	4677      	mov	r7, lr
900237f6:	4675      	mov	r5, lr
900237f8:	4670      	mov	r0, lr
900237fa:	46f3      	mov	fp, lr
900237fc:	e74f      	b.n	9002369e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900237fe:	2700      	movs	r7, #0
90023800:	4638      	mov	r0, r7
90023802:	e74c      	b.n	9002369e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023804:	460f      	mov	r7, r1
90023806:	4608      	mov	r0, r1
90023808:	e749      	b.n	9002369e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

9002380c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002380c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023810:	b093      	sub	sp, #76	@ 0x4c
90023812:	9210      	str	r2, [sp, #64]	@ 0x40
90023814:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023816:	9011      	str	r0, [sp, #68]	@ 0x44
90023818:	910e      	str	r1, [sp, #56]	@ 0x38
9002381a:	6850      	ldr	r0, [r2, #4]
9002381c:	9306      	str	r3, [sp, #24]
9002381e:	6812      	ldr	r2, [r2, #0]
90023820:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90023824:	fb00 1303 	mla	r3, r0, r3, r1
90023828:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002382c:	9307      	str	r3, [sp, #28]
9002382e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023830:	681b      	ldr	r3, [r3, #0]
90023832:	9308      	str	r3, [sp, #32]
90023834:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023836:	685b      	ldr	r3, [r3, #4]
90023838:	9309      	str	r3, [sp, #36]	@ 0x24
9002383a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002383c:	2b00      	cmp	r3, #0
9002383e:	dc03      	bgt.n	90023848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023840:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023842:	2b00      	cmp	r3, #0
90023844:	f340 83b6 	ble.w	90023fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90023848:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002384a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002384e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023852:	1e48      	subs	r0, r1, #1
90023854:	1e55      	subs	r5, r2, #1
90023856:	9b06      	ldr	r3, [sp, #24]
90023858:	2b00      	cmp	r3, #0
9002385a:	f340 8165 	ble.w	90023b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002385e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
90023860:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023862:	1436      	asrs	r6, r6, #16
90023864:	ea4f 4323 	mov.w	r3, r3, asr #16
90023868:	d406      	bmi.n	90023878 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002386a:	4286      	cmp	r6, r0
9002386c:	da04      	bge.n	90023878 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002386e:	2b00      	cmp	r3, #0
90023870:	db02      	blt.n	90023878 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023872:	42ab      	cmp	r3, r5
90023874:	f2c0 8159 	blt.w	90023b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90023878:	3601      	adds	r6, #1
9002387a:	f100 8146 	bmi.w	90023b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002387e:	42b1      	cmp	r1, r6
90023880:	f2c0 8143 	blt.w	90023b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023884:	3301      	adds	r3, #1
90023886:	f100 8140 	bmi.w	90023b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002388a:	429a      	cmp	r2, r3
9002388c:	f2c0 813d 	blt.w	90023b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023890:	9b06      	ldr	r3, [sp, #24]
90023892:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90023896:	9f07      	ldr	r7, [sp, #28]
90023898:	930f      	str	r3, [sp, #60]	@ 0x3c
9002389a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002389c:	2b00      	cmp	r3, #0
9002389e:	f340 8166 	ble.w	90023b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900238a2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900238a4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900238a6:	1418      	asrs	r0, r3, #16
900238a8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900238aa:	142d      	asrs	r5, r5, #16
900238ac:	f3c3 3103 	ubfx	r1, r3, #12, #4
900238b0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900238b2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900238b6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900238b8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900238bc:	f100 81f0 	bmi.w	90023ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900238c0:	f102 3eff 	add.w	lr, r2, #4294967295
900238c4:	4575      	cmp	r5, lr
900238c6:	f280 81eb 	bge.w	90023ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900238ca:	2800      	cmp	r0, #0
900238cc:	f2c0 81e8 	blt.w	90023ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900238d0:	f103 3eff 	add.w	lr, r3, #4294967295
900238d4:	4570      	cmp	r0, lr
900238d6:	f280 81e3 	bge.w	90023ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900238da:	b212      	sxth	r2, r2
900238dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900238de:	fa1f fe81 	uxth.w	lr, r1
900238e2:	fb00 5002 	mla	r0, r0, r2, r5
900238e6:	ea4f 150e 	mov.w	r5, lr, lsl #4
900238ea:	eb03 0a00 	add.w	sl, r3, r0
900238ee:	f813 9000 	ldrb.w	r9, [r3, r0]
900238f2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
900238f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
900238fa:	b29b      	uxth	r3, r3
900238fc:	f1bc 0f00 	cmp.w	ip, #0
90023900:	f000 817b 	beq.w	90023bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90023904:	f81a 4002 	ldrb.w	r4, [sl, r2]
90023908:	eb0a 0b02 	add.w	fp, sl, r2
9002390c:	fa1f fa8c 	uxth.w	sl, ip
90023910:	940a      	str	r4, [sp, #40]	@ 0x28
90023912:	fb0a fe0e 	mul.w	lr, sl, lr
90023916:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002391a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002391e:	eba5 050e 	sub.w	r5, r5, lr
90023922:	940b      	str	r4, [sp, #44]	@ 0x2c
90023924:	fa1f fa8a 	uxth.w	sl, sl
90023928:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002392a:	b2ad      	uxth	r5, r5
9002392c:	eba3 030a 	sub.w	r3, r3, sl
90023930:	fb08 f505 	mul.w	r5, r8, r5
90023934:	b29b      	uxth	r3, r3
90023936:	fb09 5303 	mla	r3, r9, r3, r5
9002393a:	fb0a 3304 	mla	r3, sl, r4, r3
9002393e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023940:	fb0e 3304 	mla	r3, lr, r4, r3
90023944:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023948:	2b00      	cmp	r3, #0
9002394a:	f000 80d1 	beq.w	90023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002394e:	9c08      	ldr	r4, [sp, #32]
90023950:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90023954:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90023958:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
9002395c:	f000 8152 	beq.w	90023c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90023960:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90023964:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90023968:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002396c:	fb0a fe0e 	mul.w	lr, sl, lr
90023970:	fb09 f000 	mul.w	r0, r9, r0
90023974:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90023978:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002397c:	f100 0b20 	add.w	fp, r0, #32
90023980:	44ce      	add	lr, r9
90023982:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90023986:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002398a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002398e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90023992:	ea4e 0909 	orr.w	r9, lr, r9
90023996:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002399a:	8868      	ldrh	r0, [r5, #2]
9002399c:	d019      	beq.n	900239d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002399e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900239a2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900239a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900239aa:	fb0a fe0e 	mul.w	lr, sl, lr
900239ae:	fb08 f800 	mul.w	r8, r8, r0
900239b2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900239b6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900239ba:	f108 0b20 	add.w	fp, r8, #32
900239be:	4486      	add	lr, r0
900239c0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900239c4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900239c8:	0a00      	lsrs	r0, r0, #8
900239ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900239ce:	ea4e 0000 	orr.w	r0, lr, r0
900239d2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900239d6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900239da:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900239de:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900239e2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900239e6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900239ea:	ea4e 0909 	orr.w	r9, lr, r9
900239ee:	ea4a 0000 	orr.w	r0, sl, r0
900239f2:	f1bc 0f00 	cmp.w	ip, #0
900239f6:	f000 8107 	beq.w	90023c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900239fa:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
900239fe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023a00:	3a01      	subs	r2, #1
90023a02:	2cff      	cmp	r4, #255	@ 0xff
90023a04:	ea4f 0242 	mov.w	r2, r2, lsl #1
90023a08:	f102 0202 	add.w	r2, r2, #2
90023a0c:	eb05 0e02 	add.w	lr, r5, r2
90023a10:	5aaa      	ldrh	r2, [r5, r2]
90023a12:	d018      	beq.n	90023a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90023a14:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90023a18:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023a1c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023a20:	fb04 fa02 	mul.w	sl, r4, r2
90023a24:	fb08 f805 	mul.w	r8, r8, r5
90023a28:	f10a 0520 	add.w	r5, sl, #32
90023a2c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90023a30:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023a34:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90023a38:	4442      	add	r2, r8
90023a3a:	0a2d      	lsrs	r5, r5, #8
90023a3c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90023a40:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023a44:	432a      	orrs	r2, r5
90023a46:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023a48:	f8be 5002 	ldrh.w	r5, [lr, #2]
90023a4c:	2cff      	cmp	r4, #255	@ 0xff
90023a4e:	d01a      	beq.n	90023a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90023a50:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90023a54:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023a58:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023a5c:	fb04 fa05 	mul.w	sl, r4, r5
90023a60:	fb08 f80e 	mul.w	r8, r8, lr
90023a64:	f10a 0e20 	add.w	lr, sl, #32
90023a68:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90023a6c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023a70:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90023a74:	4445      	add	r5, r8
90023a76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023a7a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90023a7e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90023a82:	ea45 050e 	orr.w	r5, r5, lr
90023a86:	fb1c fe01 	smulbb	lr, ip, r1
90023a8a:	f1cc 0810 	rsb	r8, ip, #16
90023a8e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023a92:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023a96:	ea4f 0eee 	mov.w	lr, lr, asr #3
90023a9a:	eba8 0801 	sub.w	r8, r8, r1
90023a9e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90023aa2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023aa6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90023aaa:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023aae:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90023ab2:	ea4a 0202 	orr.w	r2, sl, r2
90023ab6:	4341      	muls	r1, r0
90023ab8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90023abc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023ac0:	fb09 1108 	mla	r1, r9, r8, r1
90023ac4:	ea4b 0505 	orr.w	r5, fp, r5
90023ac8:	fb0c 1102 	mla	r1, ip, r2, r1
90023acc:	fb0e 1e05 	mla	lr, lr, r5, r1
90023ad0:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023ad4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023ad8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023adc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023ae0:	ea42 0e0e 	orr.w	lr, r2, lr
90023ae4:	fa1f f28e 	uxth.w	r2, lr
90023ae8:	2bff      	cmp	r3, #255	@ 0xff
90023aea:	f040 80a1 	bne.w	90023c30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90023aee:	803a      	strh	r2, [r7, #0]
90023af0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023af2:	3702      	adds	r7, #2
90023af4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90023af6:	4413      	add	r3, r2
90023af8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90023afa:	931d      	str	r3, [sp, #116]	@ 0x74
90023afc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023afe:	441a      	add	r2, r3
90023b00:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023b02:	3b01      	subs	r3, #1
90023b04:	921e      	str	r2, [sp, #120]	@ 0x78
90023b06:	930f      	str	r3, [sp, #60]	@ 0x3c
90023b08:	e6c7      	b.n	9002389a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023b0a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023b0c:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90023b0e:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90023b10:	4433      	add	r3, r6
90023b12:	931d      	str	r3, [sp, #116]	@ 0x74
90023b14:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023b16:	441c      	add	r4, r3
90023b18:	9b06      	ldr	r3, [sp, #24]
90023b1a:	3b01      	subs	r3, #1
90023b1c:	941e      	str	r4, [sp, #120]	@ 0x78
90023b1e:	9306      	str	r3, [sp, #24]
90023b20:	9b07      	ldr	r3, [sp, #28]
90023b22:	3302      	adds	r3, #2
90023b24:	9307      	str	r3, [sp, #28]
90023b26:	e696      	b.n	90023856 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023b28:	d028      	beq.n	90023b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023b2a:	9b06      	ldr	r3, [sp, #24]
90023b2c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90023b2e:	3b01      	subs	r3, #1
90023b30:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90023b32:	fb00 5003 	mla	r0, r0, r3, r5
90023b36:	1400      	asrs	r0, r0, #16
90023b38:	f53f aeaa 	bmi.w	90023890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023b3c:	3901      	subs	r1, #1
90023b3e:	4288      	cmp	r0, r1
90023b40:	f6bf aea6 	bge.w	90023890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023b44:	9920      	ldr	r1, [sp, #128]	@ 0x80
90023b46:	981e      	ldr	r0, [sp, #120]	@ 0x78
90023b48:	fb01 0303 	mla	r3, r1, r3, r0
90023b4c:	141b      	asrs	r3, r3, #16
90023b4e:	f53f ae9f 	bmi.w	90023890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023b52:	3a01      	subs	r2, #1
90023b54:	4293      	cmp	r3, r2
90023b56:	f6bf ae9b 	bge.w	90023890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023b5a:	9b06      	ldr	r3, [sp, #24]
90023b5c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90023b60:	f8dd e01c 	ldr.w	lr, [sp, #28]
90023b64:	930f      	str	r3, [sp, #60]	@ 0x3c
90023b66:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023b68:	2b00      	cmp	r3, #0
90023b6a:	f300 80b6 	bgt.w	90023cda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90023b6e:	9b06      	ldr	r3, [sp, #24]
90023b70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023b74:	9b07      	ldr	r3, [sp, #28]
90023b76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023b7a:	9307      	str	r3, [sp, #28]
90023b7c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023b7e:	2b00      	cmp	r3, #0
90023b80:	f340 8218 	ble.w	90023fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90023b84:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023b88:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023b8a:	ee30 0a04 	vadd.f32	s0, s0, s8
90023b8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023b92:	eef0 6a62 	vmov.f32	s13, s5
90023b96:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023b9a:	ee31 1a05 	vadd.f32	s2, s2, s10
90023b9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023ba2:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90023ba6:	eef0 6a43 	vmov.f32	s13, s6
90023baa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023bae:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
90023bb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023bb6:	ee61 7a27 	vmul.f32	s15, s2, s15
90023bba:	ee77 2a62 	vsub.f32	s5, s14, s5
90023bbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023bc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023bc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023bca:	ee12 2a90 	vmov	r2, s5
90023bce:	eef0 2a47 	vmov.f32	s5, s14
90023bd2:	fb92 f3f3 	sdiv	r3, r2, r3
90023bd6:	ee13 2a10 	vmov	r2, s6
90023bda:	931f      	str	r3, [sp, #124]	@ 0x7c
90023bdc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023bde:	eeb0 3a67 	vmov.f32	s6, s15
90023be2:	fb92 f3f3 	sdiv	r3, r2, r3
90023be6:	9320      	str	r3, [sp, #128]	@ 0x80
90023be8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023bea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90023bec:	3b01      	subs	r3, #1
90023bee:	930e      	str	r3, [sp, #56]	@ 0x38
90023bf0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023bf2:	bf08      	it	eq
90023bf4:	4613      	moveq	r3, r2
90023bf6:	9306      	str	r3, [sp, #24]
90023bf8:	e61f      	b.n	9002383a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90023bfa:	fb08 f505 	mul.w	r5, r8, r5
90023bfe:	fb09 5303 	mla	r3, r9, r3, r5
90023c02:	e69f      	b.n	90023944 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90023c04:	4681      	mov	r9, r0
90023c06:	e6c6      	b.n	90023996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90023c08:	f1c1 0210 	rsb	r2, r1, #16
90023c0c:	4341      	muls	r1, r0
90023c0e:	fb09 1902 	mla	r9, r9, r2, r1
90023c12:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023c16:	ea4f 5259 	mov.w	r2, r9, lsr #21
90023c1a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90023c1e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023c22:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90023c26:	ea42 0909 	orr.w	r9, r2, r9
90023c2a:	fa1f f289 	uxth.w	r2, r9
90023c2e:	e75b      	b.n	90023ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90023c30:	f8b7 c000 	ldrh.w	ip, [r7]
90023c34:	43db      	mvns	r3, r3
90023c36:	ea4f 202c 	mov.w	r0, ip, asr #8
90023c3a:	fa5f fe83 	uxtb.w	lr, r3
90023c3e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023c42:	ea4f 05ec 	mov.w	r5, ip, asr #3
90023c46:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90023c4a:	fb00 f00e 	mul.w	r0, r0, lr
90023c4e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90023c52:	b2db      	uxtb	r3, r3
90023c54:	1c41      	adds	r1, r0, #1
90023c56:	fb05 f50e 	mul.w	r5, r5, lr
90023c5a:	fb03 f30e 	mul.w	r3, r3, lr
90023c5e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023c62:	1211      	asrs	r1, r2, #8
90023c64:	f021 0107 	bic.w	r1, r1, #7
90023c68:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90023c6c:	48d3      	ldr	r0, [pc, #844]	@ (90023fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90023c6e:	b2c9      	uxtb	r1, r1
90023c70:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90023c74:	1c69      	adds	r1, r5, #1
90023c76:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90023c7a:	10d1      	asrs	r1, r2, #3
90023c7c:	00d2      	lsls	r2, r2, #3
90023c7e:	f021 0103 	bic.w	r1, r1, #3
90023c82:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023c86:	00c9      	lsls	r1, r1, #3
90023c88:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023c8c:	4301      	orrs	r1, r0
90023c8e:	1c58      	adds	r0, r3, #1
90023c90:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023c94:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023c98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90023c9c:	430a      	orrs	r2, r1
90023c9e:	e726      	b.n	90023aee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90023ca0:	f115 0e01 	adds.w	lr, r5, #1
90023ca4:	f53f af24 	bmi.w	90023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023ca8:	4572      	cmp	r2, lr
90023caa:	f6ff af21 	blt.w	90023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023cae:	f110 0e01 	adds.w	lr, r0, #1
90023cb2:	f53f af1d 	bmi.w	90023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023cb6:	4573      	cmp	r3, lr
90023cb8:	f6ff af1a 	blt.w	90023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023cbc:	b21b      	sxth	r3, r3
90023cbe:	b212      	sxth	r2, r2
90023cc0:	9301      	str	r3, [sp, #4]
90023cc2:	9200      	str	r2, [sp, #0]
90023cc4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90023cc8:	e9cd 5002 	strd	r5, r0, [sp, #8]
90023ccc:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90023cd0:	4639      	mov	r1, r7
90023cd2:	9811      	ldr	r0, [sp, #68]	@ 0x44
90023cd4:	f7ff fc22 	bl	9002351c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90023cd8:	e70a      	b.n	90023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023cda:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023cdc:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023ce0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023ce2:	f3c3 3503 	ubfx	r5, r3, #12, #4
90023ce6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023ce8:	fa1f fc82 	uxth.w	ip, r2
90023cec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023cf0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023cf2:	ea4f 100c 	mov.w	r0, ip, lsl #4
90023cf6:	141f      	asrs	r7, r3, #16
90023cf8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023cfa:	141b      	asrs	r3, r3, #16
90023cfc:	fb01 3707 	mla	r7, r1, r7, r3
90023d00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023d02:	eb03 0a07 	add.w	sl, r3, r7
90023d06:	f813 9007 	ldrb.w	r9, [r3, r7]
90023d0a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90023d0e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023d12:	b29b      	uxth	r3, r3
90023d14:	2d00      	cmp	r5, #0
90023d16:	f000 80fe 	beq.w	90023f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90023d1a:	f81a 4001 	ldrb.w	r4, [sl, r1]
90023d1e:	eb0a 0b01 	add.w	fp, sl, r1
90023d22:	fa1f fa85 	uxth.w	sl, r5
90023d26:	940c      	str	r4, [sp, #48]	@ 0x30
90023d28:	fb0a fc0c 	mul.w	ip, sl, ip
90023d2c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023d30:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90023d34:	eba0 000c 	sub.w	r0, r0, ip
90023d38:	940d      	str	r4, [sp, #52]	@ 0x34
90023d3a:	fa1f fa8a 	uxth.w	sl, sl
90023d3e:	b280      	uxth	r0, r0
90023d40:	eba3 030a 	sub.w	r3, r3, sl
90023d44:	fb08 f000 	mul.w	r0, r8, r0
90023d48:	b29b      	uxth	r3, r3
90023d4a:	fb09 0303 	mla	r3, r9, r3, r0
90023d4e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90023d50:	fb0a 3300 	mla	r3, sl, r0, r3
90023d54:	fb0c 3304 	mla	r3, ip, r4, r3
90023d58:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023d5c:	2b00      	cmp	r3, #0
90023d5e:	f000 80cc 	beq.w	90023efa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023d62:	9808      	ldr	r0, [sp, #32]
90023d64:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90023d68:	9c08      	ldr	r4, [sp, #32]
90023d6a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90023d6e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90023d72:	f000 80d5 	beq.w	90023f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90023d76:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90023d7a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90023d7e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023d82:	fb0a fc0c 	mul.w	ip, sl, ip
90023d86:	fb09 f707 	mul.w	r7, r9, r7
90023d8a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90023d8e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90023d92:	f107 0b20 	add.w	fp, r7, #32
90023d96:	44cc      	add	ip, r9
90023d98:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90023d9c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90023da0:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023da4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90023da8:	ea4c 0909 	orr.w	r9, ip, r9
90023dac:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90023db0:	8847      	ldrh	r7, [r0, #2]
90023db2:	d019      	beq.n	90023de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90023db4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90023db8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023dbc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023dc0:	fb0a fc0c 	mul.w	ip, sl, ip
90023dc4:	fb08 f807 	mul.w	r8, r8, r7
90023dc8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90023dcc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90023dd0:	f108 0b20 	add.w	fp, r8, #32
90023dd4:	44bc      	add	ip, r7
90023dd6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90023dda:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90023dde:	0a3f      	lsrs	r7, r7, #8
90023de0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023de4:	ea4c 0707 	orr.w	r7, ip, r7
90023de8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90023dec:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90023df0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90023df4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90023df8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023dfc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023e00:	ea4c 0909 	orr.w	r9, ip, r9
90023e04:	ea4a 0707 	orr.w	r7, sl, r7
90023e08:	2d00      	cmp	r5, #0
90023e0a:	f000 808b 	beq.w	90023f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90023e0e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90023e12:	3901      	subs	r1, #1
90023e14:	0049      	lsls	r1, r1, #1
90023e16:	3102      	adds	r1, #2
90023e18:	eb00 0c01 	add.w	ip, r0, r1
90023e1c:	5a41      	ldrh	r1, [r0, r1]
90023e1e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90023e20:	28ff      	cmp	r0, #255	@ 0xff
90023e22:	d019      	beq.n	90023e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90023e24:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90023e28:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023e2a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023e2e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023e32:	fb04 fa01 	mul.w	sl, r4, r1
90023e36:	fb08 f800 	mul.w	r8, r8, r0
90023e3a:	f10a 0020 	add.w	r0, sl, #32
90023e3e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90023e42:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023e46:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90023e4a:	4441      	add	r1, r8
90023e4c:	0a00      	lsrs	r0, r0, #8
90023e4e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90023e52:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023e56:	4301      	orrs	r1, r0
90023e58:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023e5a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90023e5e:	2cff      	cmp	r4, #255	@ 0xff
90023e60:	d01a      	beq.n	90023e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90023e62:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90023e66:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023e6a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023e6e:	fb04 fa00 	mul.w	sl, r4, r0
90023e72:	fb08 f80c 	mul.w	r8, r8, ip
90023e76:	f10a 0c20 	add.w	ip, sl, #32
90023e7a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90023e7e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023e82:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90023e86:	4440      	add	r0, r8
90023e88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e8c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90023e90:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90023e94:	ea40 000c 	orr.w	r0, r0, ip
90023e98:	fb15 fc02 	smulbb	ip, r5, r2
90023e9c:	f1c5 0810 	rsb	r8, r5, #16
90023ea0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023ea4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023ea8:	ea4f 0cec 	mov.w	ip, ip, asr #3
90023eac:	eba8 0802 	sub.w	r8, r8, r2
90023eb0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023eb4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023eb8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90023ebc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023ec0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90023ec4:	ea4a 0101 	orr.w	r1, sl, r1
90023ec8:	437a      	muls	r2, r7
90023eca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90023ece:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023ed2:	fb09 2208 	mla	r2, r9, r8, r2
90023ed6:	ea4b 0000 	orr.w	r0, fp, r0
90023eda:	fb05 2201 	mla	r2, r5, r1, r2
90023ede:	fb0c 2200 	mla	r2, ip, r0, r2
90023ee2:	0d57      	lsrs	r7, r2, #21
90023ee4:	0952      	lsrs	r2, r2, #5
90023ee6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023eea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023eee:	433a      	orrs	r2, r7
90023ef0:	2bff      	cmp	r3, #255	@ 0xff
90023ef2:	b292      	uxth	r2, r2
90023ef4:	d127      	bne.n	90023f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90023ef6:	f8ae 2000 	strh.w	r2, [lr]
90023efa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023efc:	f10e 0e02 	add.w	lr, lr, #2
90023f00:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90023f02:	4413      	add	r3, r2
90023f04:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90023f06:	931d      	str	r3, [sp, #116]	@ 0x74
90023f08:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023f0a:	441a      	add	r2, r3
90023f0c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023f0e:	3b01      	subs	r3, #1
90023f10:	921e      	str	r2, [sp, #120]	@ 0x78
90023f12:	930f      	str	r3, [sp, #60]	@ 0x3c
90023f14:	e627      	b.n	90023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023f16:	fb08 f000 	mul.w	r0, r8, r0
90023f1a:	fb09 0303 	mla	r3, r9, r3, r0
90023f1e:	e71b      	b.n	90023d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90023f20:	46b9      	mov	r9, r7
90023f22:	e743      	b.n	90023dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90023f24:	f1c2 0110 	rsb	r1, r2, #16
90023f28:	437a      	muls	r2, r7
90023f2a:	fb09 2901 	mla	r9, r9, r1, r2
90023f2e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023f32:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023f36:	ea4f 1259 	mov.w	r2, r9, lsr #5
90023f3a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023f3e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023f42:	4302      	orrs	r2, r0
90023f44:	e7d4      	b.n	90023ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90023f46:	f8be 7000 	ldrh.w	r7, [lr]
90023f4a:	43db      	mvns	r3, r3
90023f4c:	4c1b      	ldr	r4, [pc, #108]	@ (90023fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90023f4e:	1238      	asrs	r0, r7, #8
90023f50:	fa5f fc83 	uxtb.w	ip, r3
90023f54:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023f58:	10fd      	asrs	r5, r7, #3
90023f5a:	00fb      	lsls	r3, r7, #3
90023f5c:	fb00 f00c 	mul.w	r0, r0, ip
90023f60:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90023f64:	b2db      	uxtb	r3, r3
90023f66:	fb05 f10c 	mul.w	r1, r5, ip
90023f6a:	1c45      	adds	r5, r0, #1
90023f6c:	fb03 f30c 	mul.w	r3, r3, ip
90023f70:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023f74:	1215      	asrs	r5, r2, #8
90023f76:	f025 0507 	bic.w	r5, r5, #7
90023f7a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023f7e:	1c4d      	adds	r5, r1, #1
90023f80:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90023f84:	10d1      	asrs	r1, r2, #3
90023f86:	b2c0      	uxtb	r0, r0
90023f88:	f021 0103 	bic.w	r1, r1, #3
90023f8c:	00d2      	lsls	r2, r2, #3
90023f8e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90023f92:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023f96:	00c9      	lsls	r1, r1, #3
90023f98:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023f9c:	4308      	orrs	r0, r1
90023f9e:	1c59      	adds	r1, r3, #1
90023fa0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023fa4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90023fa8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90023fac:	4318      	orrs	r0, r3
90023fae:	f8ae 0000 	strh.w	r0, [lr]
90023fb2:	e7a2      	b.n	90023efa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023fb4:	b013      	add	sp, #76	@ 0x4c
90023fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023fba:	bf00      	nop
90023fbc:	fffff800 	.word	0xfffff800

90023fc0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90023fc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023fc4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90023fc8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90023fcc:	fb05 4c03 	mla	ip, r5, r3, r4
90023fd0:	2d00      	cmp	r5, #0
90023fd2:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90023fd6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90023fda:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90023fde:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90023fe2:	8808      	ldrh	r0, [r1, #0]
90023fe4:	f2c0 80a7 	blt.w	90024136 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023fe8:	45aa      	cmp	sl, r5
90023fea:	f340 80a4 	ble.w	90024136 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023fee:	2c00      	cmp	r4, #0
90023ff0:	f2c0 809f 	blt.w	90024132 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023ff4:	42a3      	cmp	r3, r4
90023ff6:	f340 809c 	ble.w	90024132 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023ffa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90023ffe:	1c62      	adds	r2, r4, #1
90024000:	f100 809c 	bmi.w	9002413c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024004:	4293      	cmp	r3, r2
90024006:	f340 8099 	ble.w	9002413c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002400a:	f1b9 0f00 	cmp.w	r9, #0
9002400e:	f000 8095 	beq.w	9002413c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024012:	f8be c002 	ldrh.w	ip, [lr, #2]
90024016:	3501      	adds	r5, #1
90024018:	f100 8094 	bmi.w	90024144 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002401c:	45aa      	cmp	sl, r5
9002401e:	f340 8091 	ble.w	90024144 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90024022:	2f00      	cmp	r7, #0
90024024:	f000 808e 	beq.w	90024144 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90024028:	2c00      	cmp	r4, #0
9002402a:	f2c0 8089 	blt.w	90024140 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002402e:	42a3      	cmp	r3, r4
90024030:	f340 8086 	ble.w	90024140 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90024034:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90024038:	3401      	adds	r4, #1
9002403a:	f100 8086 	bmi.w	9002414a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002403e:	42a3      	cmp	r3, r4
90024040:	f340 8083 	ble.w	9002414a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90024044:	f1b9 0f00 	cmp.w	r9, #0
90024048:	d07f      	beq.n	9002414a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002404a:	3301      	adds	r3, #1
9002404c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90024050:	ea4f 4408 	mov.w	r4, r8, lsl #16
90024054:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90024058:	fb19 fe07 	smulbb	lr, r9, r7
9002405c:	f1c7 0210 	rsb	r2, r7, #16
90024060:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024064:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90024068:	eba2 0209 	sub.w	r2, r2, r9
9002406c:	ea44 0808 	orr.w	r8, r4, r8
90024070:	ea4f 440c 	mov.w	r4, ip, lsl #16
90024074:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90024078:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9002407c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024080:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90024084:	ea44 0c0c 	orr.w	ip, r4, ip
90024088:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002408c:	fb04 f40c 	mul.w	r4, r4, ip
90024090:	fb02 4808 	mla	r8, r2, r8, r4
90024094:	041a      	lsls	r2, r3, #16
90024096:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002409a:	b2b4      	uxth	r4, r6
9002409c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900240a0:	43f6      	mvns	r6, r6
900240a2:	4313      	orrs	r3, r2
900240a4:	042a      	lsls	r2, r5, #16
900240a6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900240aa:	b2f6      	uxtb	r6, r6
900240ac:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900240b0:	fb0e 8303 	mla	r3, lr, r3, r8
900240b4:	432a      	orrs	r2, r5
900240b6:	fb07 3202 	mla	r2, r7, r2, r3
900240ba:	10c7      	asrs	r7, r0, #3
900240bc:	0d53      	lsrs	r3, r2, #21
900240be:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900240c2:	0952      	lsrs	r2, r2, #5
900240c4:	fb17 f706 	smulbb	r7, r7, r6
900240c8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900240cc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900240d0:	431a      	orrs	r2, r3
900240d2:	b293      	uxth	r3, r2
900240d4:	1202      	asrs	r2, r0, #8
900240d6:	121d      	asrs	r5, r3, #8
900240d8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900240dc:	00c0      	lsls	r0, r0, #3
900240de:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900240e2:	fb12 f206 	smulbb	r2, r2, r6
900240e6:	b2c0      	uxtb	r0, r0
900240e8:	fb05 2504 	mla	r5, r5, r4, r2
900240ec:	10da      	asrs	r2, r3, #3
900240ee:	fb10 f006 	smulbb	r0, r0, r6
900240f2:	00db      	lsls	r3, r3, #3
900240f4:	b2ad      	uxth	r5, r5
900240f6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900240fa:	b2db      	uxtb	r3, r3
900240fc:	fb02 7204 	mla	r2, r2, r4, r7
90024100:	fb03 0004 	mla	r0, r3, r4, r0
90024104:	1c6b      	adds	r3, r5, #1
90024106:	b292      	uxth	r2, r2
90024108:	b280      	uxth	r0, r0
9002410a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002410e:	1c43      	adds	r3, r0, #1
90024110:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024114:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024118:	1c50      	adds	r0, r2, #1
9002411a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002411e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024122:	0952      	lsrs	r2, r2, #5
90024124:	432b      	orrs	r3, r5
90024126:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002412a:	4313      	orrs	r3, r2
9002412c:	800b      	strh	r3, [r1, #0]
9002412e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90024132:	4680      	mov	r8, r0
90024134:	e763      	b.n	90023ffe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90024136:	4684      	mov	ip, r0
90024138:	4680      	mov	r8, r0
9002413a:	e76c      	b.n	90024016 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
9002413c:	4684      	mov	ip, r0
9002413e:	e76a      	b.n	90024016 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90024140:	4605      	mov	r5, r0
90024142:	e779      	b.n	90024038 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90024144:	4603      	mov	r3, r0
90024146:	4605      	mov	r5, r0
90024148:	e782      	b.n	90024050 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
9002414a:	4603      	mov	r3, r0
9002414c:	e780      	b.n	90024050 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

9002414e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002414e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024152:	b093      	sub	sp, #76	@ 0x4c
90024154:	461d      	mov	r5, r3
90024156:	9210      	str	r2, [sp, #64]	@ 0x40
90024158:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002415a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
9002415e:	910a      	str	r1, [sp, #40]	@ 0x28
90024160:	920b      	str	r2, [sp, #44]	@ 0x2c
90024162:	6859      	ldr	r1, [r3, #4]
90024164:	681b      	ldr	r3, [r3, #0]
90024166:	9011      	str	r0, [sp, #68]	@ 0x44
90024168:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
9002416c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90024170:	fb01 2707 	mla	r7, r1, r7, r2
90024174:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90024178:	9307      	str	r3, [sp, #28]
9002417a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002417c:	681b      	ldr	r3, [r3, #0]
9002417e:	9309      	str	r3, [sp, #36]	@ 0x24
90024180:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024182:	43db      	mvns	r3, r3
90024184:	b2db      	uxtb	r3, r3
90024186:	9308      	str	r3, [sp, #32]
90024188:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002418a:	2b00      	cmp	r3, #0
9002418c:	dc03      	bgt.n	90024196 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002418e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024190:	2b00      	cmp	r3, #0
90024192:	f340 8205 	ble.w	900245a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024196:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024198:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002419c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900241a0:	1e48      	subs	r0, r1, #1
900241a2:	f102 3cff 	add.w	ip, r2, #4294967295
900241a6:	2d00      	cmp	r5, #0
900241a8:	f340 80da 	ble.w	90024360 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900241ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
900241b0:	ea4f 4326 	mov.w	r3, r6, asr #16
900241b4:	d406      	bmi.n	900241c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900241b6:	4586      	cmp	lr, r0
900241b8:	da04      	bge.n	900241c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900241ba:	2b00      	cmp	r3, #0
900241bc:	db02      	blt.n	900241c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900241be:	4563      	cmp	r3, ip
900241c0:	f2c0 80cf 	blt.w	90024362 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900241c4:	f11e 0e01 	adds.w	lr, lr, #1
900241c8:	f100 80c1 	bmi.w	9002434e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900241cc:	4571      	cmp	r1, lr
900241ce:	f2c0 80be 	blt.w	9002434e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900241d2:	3301      	adds	r3, #1
900241d4:	f100 80bb 	bmi.w	9002434e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900241d8:	429a      	cmp	r2, r3
900241da:	f2c0 80b8 	blt.w	9002434e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900241de:	46a9      	mov	r9, r5
900241e0:	f8dd 801c 	ldr.w	r8, [sp, #28]
900241e4:	f1b9 0f00 	cmp.w	r9, #0
900241e8:	f340 80d8 	ble.w	9002439c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
900241ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900241ee:	1421      	asrs	r1, r4, #16
900241f0:	ea4f 4026 	mov.w	r0, r6, asr #16
900241f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
900241f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900241fc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90024200:	f100 8112 	bmi.w	90024428 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90024204:	f10e 3aff 	add.w	sl, lr, #4294967295
90024208:	4551      	cmp	r1, sl
9002420a:	f280 810d 	bge.w	90024428 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002420e:	2800      	cmp	r0, #0
90024210:	f2c0 810a 	blt.w	90024428 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90024214:	f103 3aff 	add.w	sl, r3, #4294967295
90024218:	4550      	cmp	r0, sl
9002421a:	f280 8105 	bge.w	90024428 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002421e:	fa0f f38e 	sxth.w	r3, lr
90024222:	fb00 1103 	mla	r1, r0, r3, r1
90024226:	9809      	ldr	r0, [sp, #36]	@ 0x24
90024228:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
9002422c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90024230:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90024234:	f1bc 0f00 	cmp.w	ip, #0
90024238:	d007      	beq.n	9002424a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
9002423a:	005b      	lsls	r3, r3, #1
9002423c:	eb0a 0003 	add.w	r0, sl, r3
90024240:	f83a 3003 	ldrh.w	r3, [sl, r3]
90024244:	930c      	str	r3, [sp, #48]	@ 0x30
90024246:	8843      	ldrh	r3, [r0, #2]
90024248:	930d      	str	r3, [sp, #52]	@ 0x34
9002424a:	ea4f 400e 	mov.w	r0, lr, lsl #16
9002424e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024252:	fb12 f30c 	smulbb	r3, r2, ip
90024256:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002425a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002425e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024262:	10db      	asrs	r3, r3, #3
90024264:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024268:	ea40 000e 	orr.w	r0, r0, lr
9002426c:	f1cc 0e10 	rsb	lr, ip, #16
90024270:	ea4a 0101 	orr.w	r1, sl, r1
90024274:	9f08      	ldr	r7, [sp, #32]
90024276:	ebae 0e02 	sub.w	lr, lr, r2
9002427a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002427e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90024282:	4351      	muls	r1, r2
90024284:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90024286:	fb0e 1e00 	mla	lr, lr, r0, r1
9002428a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002428c:	0410      	lsls	r0, r2, #16
9002428e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024292:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90024296:	4310      	orrs	r0, r2
90024298:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002429a:	0412      	lsls	r2, r2, #16
9002429c:	fb03 e000 	mla	r0, r3, r0, lr
900242a0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900242a4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900242a8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900242ac:	ea42 020e 	orr.w	r2, r2, lr
900242b0:	fb03 0302 	mla	r3, r3, r2, r0
900242b4:	f8b8 0000 	ldrh.w	r0, [r8]
900242b8:	0d5a      	lsrs	r2, r3, #21
900242ba:	095b      	lsrs	r3, r3, #5
900242bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900242c0:	1201      	asrs	r1, r0, #8
900242c2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900242c6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900242ca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900242ce:	00c0      	lsls	r0, r0, #3
900242d0:	4313      	orrs	r3, r2
900242d2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900242d6:	fb11 f107 	smulbb	r1, r1, r7
900242da:	b2c0      	uxtb	r0, r0
900242dc:	b29b      	uxth	r3, r3
900242de:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900242e2:	fb10 f007 	smulbb	r0, r0, r7
900242e6:	fb1e fe07 	smulbb	lr, lr, r7
900242ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
900242ee:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900242f2:	fb0c 1c02 	mla	ip, ip, r2, r1
900242f6:	10d9      	asrs	r1, r3, #3
900242f8:	00db      	lsls	r3, r3, #3
900242fa:	fa1f fc8c 	uxth.w	ip, ip
900242fe:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024302:	b2db      	uxtb	r3, r3
90024304:	fb01 e102 	mla	r1, r1, r2, lr
90024308:	fb03 0302 	mla	r3, r3, r2, r0
9002430c:	b289      	uxth	r1, r1
9002430e:	b29a      	uxth	r2, r3
90024310:	f10c 0301 	add.w	r3, ip, #1
90024314:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90024318:	1c53      	adds	r3, r2, #1
9002431a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002431e:	1c4a      	adds	r2, r1, #1
90024320:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90024324:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024328:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002432c:	0949      	lsrs	r1, r1, #5
9002432e:	ea43 030c 	orr.w	r3, r3, ip
90024332:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024336:	430b      	orrs	r3, r1
90024338:	f8a8 3000 	strh.w	r3, [r8]
9002433c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002433e:	f108 0802 	add.w	r8, r8, #2
90024342:	f109 39ff 	add.w	r9, r9, #4294967295
90024346:	441c      	add	r4, r3
90024348:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002434a:	441e      	add	r6, r3
9002434c:	e74a      	b.n	900241e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9002434e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024350:	3d01      	subs	r5, #1
90024352:	441c      	add	r4, r3
90024354:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024356:	441e      	add	r6, r3
90024358:	9b07      	ldr	r3, [sp, #28]
9002435a:	3302      	adds	r3, #2
9002435c:	9307      	str	r3, [sp, #28]
9002435e:	e722      	b.n	900241a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90024360:	d022      	beq.n	900243a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90024362:	1e6b      	subs	r3, r5, #1
90024364:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024366:	fb00 4003 	mla	r0, r0, r3, r4
9002436a:	1400      	asrs	r0, r0, #16
9002436c:	f53f af37 	bmi.w	900241de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024370:	3901      	subs	r1, #1
90024372:	4288      	cmp	r0, r1
90024374:	f6bf af33 	bge.w	900241de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024378:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002437a:	fb01 6303 	mla	r3, r1, r3, r6
9002437e:	141b      	asrs	r3, r3, #16
90024380:	f53f af2d 	bmi.w	900241de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024384:	3a01      	subs	r2, #1
90024386:	4293      	cmp	r3, r2
90024388:	f6bf af29 	bge.w	900241de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002438c:	46a8      	mov	r8, r5
9002438e:	f8dd 901c 	ldr.w	r9, [sp, #28]
90024392:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90024396:	f1b8 0f00 	cmp.w	r8, #0
9002439a:	dc60      	bgt.n	9002445e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
9002439c:	9b07      	ldr	r3, [sp, #28]
9002439e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900243a2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900243a6:	9307      	str	r3, [sp, #28]
900243a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900243aa:	2b00      	cmp	r3, #0
900243ac:	f340 80f8 	ble.w	900245a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900243b0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900243b4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900243b6:	ee30 0a04 	vadd.f32	s0, s0, s8
900243ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
900243be:	eef0 6a62 	vmov.f32	s13, s5
900243c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900243c6:	ee31 1a05 	vadd.f32	s2, s2, s10
900243ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900243ce:	ee16 4a90 	vmov	r4, s13
900243d2:	eef0 6a43 	vmov.f32	s13, s6
900243d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900243da:	ee16 6a90 	vmov	r6, s13
900243de:	ee20 7aa7 	vmul.f32	s14, s1, s15
900243e2:	ee61 7a27 	vmul.f32	s15, s2, s15
900243e6:	ee77 2a62 	vsub.f32	s5, s14, s5
900243ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
900243ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900243f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900243f6:	ee12 2a90 	vmov	r2, s5
900243fa:	eef0 2a47 	vmov.f32	s5, s14
900243fe:	fb92 f3f3 	sdiv	r3, r2, r3
90024402:	ee13 2a10 	vmov	r2, s6
90024406:	931f      	str	r3, [sp, #124]	@ 0x7c
90024408:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002440a:	eeb0 3a67 	vmov.f32	s6, s15
9002440e:	fb92 f3f3 	sdiv	r3, r2, r3
90024412:	9320      	str	r3, [sp, #128]	@ 0x80
90024414:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024416:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90024418:	3b01      	subs	r3, #1
9002441a:	930a      	str	r3, [sp, #40]	@ 0x28
9002441c:	bf08      	it	eq
9002441e:	4615      	moveq	r5, r2
90024420:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024422:	bf18      	it	ne
90024424:	461d      	movne	r5, r3
90024426:	e6af      	b.n	90024188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024428:	f111 0a01 	adds.w	sl, r1, #1
9002442c:	d486      	bmi.n	9002433c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002442e:	45d6      	cmp	lr, sl
90024430:	db84      	blt.n	9002433c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90024432:	f110 0a01 	adds.w	sl, r0, #1
90024436:	d481      	bmi.n	9002433c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90024438:	4553      	cmp	r3, sl
9002443a:	f6ff af7f 	blt.w	9002433c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002443e:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90024440:	b21b      	sxth	r3, r3
90024442:	9101      	str	r1, [sp, #4]
90024444:	4641      	mov	r1, r8
90024446:	9300      	str	r3, [sp, #0]
90024448:	fa0f f38e 	sxth.w	r3, lr
9002444c:	e9cd 0202 	strd	r0, r2, [sp, #8]
90024450:	e9cd c704 	strd	ip, r7, [sp, #16]
90024454:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90024456:	9811      	ldr	r0, [sp, #68]	@ 0x44
90024458:	f7ff fdb2 	bl	90023fc0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
9002445c:	e76e      	b.n	9002433c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002445e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024460:	1430      	asrs	r0, r6, #16
90024462:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90024464:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90024468:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002446c:	1423      	asrs	r3, r4, #16
9002446e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024472:	fb01 3000 	mla	r0, r1, r0, r3
90024476:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024478:	eb03 0340 	add.w	r3, r3, r0, lsl #1
9002447c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90024480:	8858      	ldrh	r0, [r3, #2]
90024482:	f1be 0f00 	cmp.w	lr, #0
90024486:	d00b      	beq.n	900244a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90024488:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002448c:	3901      	subs	r1, #1
9002448e:	0049      	lsls	r1, r1, #1
90024490:	3102      	adds	r1, #2
90024492:	eb03 0b01 	add.w	fp, r3, r1
90024496:	5a5b      	ldrh	r3, [r3, r1]
90024498:	930e      	str	r3, [sp, #56]	@ 0x38
9002449a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002449e:	930f      	str	r3, [sp, #60]	@ 0x3c
900244a0:	ea4f 410c 	mov.w	r1, ip, lsl #16
900244a4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900244a8:	fb12 f30e 	smulbb	r3, r2, lr
900244ac:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900244b0:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900244b4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900244b8:	10db      	asrs	r3, r3, #3
900244ba:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900244be:	ea41 010c 	orr.w	r1, r1, ip
900244c2:	f1ce 0c10 	rsb	ip, lr, #16
900244c6:	ea4b 0000 	orr.w	r0, fp, r0
900244ca:	9f08      	ldr	r7, [sp, #32]
900244cc:	ebac 0c02 	sub.w	ip, ip, r2
900244d0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900244d4:	f108 38ff 	add.w	r8, r8, #4294967295
900244d8:	4350      	muls	r0, r2
900244da:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900244de:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900244e0:	fb0c 0c01 	mla	ip, ip, r1, r0
900244e4:	980e      	ldr	r0, [sp, #56]	@ 0x38
900244e6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900244ea:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
900244ee:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900244f0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900244f4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900244f8:	0412      	lsls	r2, r2, #16
900244fa:	ea4b 0101 	orr.w	r1, fp, r1
900244fe:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90024502:	fb03 c101 	mla	r1, r3, r1, ip
90024506:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002450a:	4302      	orrs	r2, r0
9002450c:	fb03 1202 	mla	r2, r3, r2, r1
90024510:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90024514:	0952      	lsrs	r2, r2, #5
90024516:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9002451a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
9002451e:	f8b9 2000 	ldrh.w	r2, [r9]
90024522:	ea4b 0303 	orr.w	r3, fp, r3
90024526:	1211      	asrs	r1, r2, #8
90024528:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9002452c:	b29b      	uxth	r3, r3
9002452e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90024532:	00d2      	lsls	r2, r2, #3
90024534:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90024538:	fb11 f107 	smulbb	r1, r1, r7
9002453c:	1218      	asrs	r0, r3, #8
9002453e:	fb1c fc07 	smulbb	ip, ip, r7
90024542:	b2d2      	uxtb	r2, r2
90024544:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024548:	fb12 f207 	smulbb	r2, r2, r7
9002454c:	fb00 100a 	mla	r0, r0, sl, r1
90024550:	10d9      	asrs	r1, r3, #3
90024552:	00db      	lsls	r3, r3, #3
90024554:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024558:	b280      	uxth	r0, r0
9002455a:	b2db      	uxtb	r3, r3
9002455c:	fb01 c10a 	mla	r1, r1, sl, ip
90024560:	fb03 230a 	mla	r3, r3, sl, r2
90024564:	1c42      	adds	r2, r0, #1
90024566:	b289      	uxth	r1, r1
90024568:	b29b      	uxth	r3, r3
9002456a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002456e:	f101 0c01 	add.w	ip, r1, #1
90024572:	1c5a      	adds	r2, r3, #1
90024574:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90024578:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9002457c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90024580:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024582:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024586:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002458a:	441c      	add	r4, r3
9002458c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90024590:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024592:	4310      	orrs	r0, r2
90024594:	441e      	add	r6, r3
90024596:	ea40 000c 	orr.w	r0, r0, ip
9002459a:	f829 0b02 	strh.w	r0, [r9], #2
9002459e:	e6fa      	b.n	90024396 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900245a0:	b013      	add	sp, #76	@ 0x4c
900245a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900245a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900245a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900245aa:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900245ae:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900245b2:	fb0e 4703 	mla	r7, lr, r3, r4
900245b6:	f1be 0f00 	cmp.w	lr, #0
900245ba:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
900245be:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
900245c2:	eb02 0847 	add.w	r8, r2, r7, lsl #1
900245c6:	8808      	ldrh	r0, [r1, #0]
900245c8:	db60      	blt.n	9002468c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900245ca:	45f1      	cmp	r9, lr
900245cc:	dd5e      	ble.n	9002468c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900245ce:	2c00      	cmp	r4, #0
900245d0:	db5a      	blt.n	90024688 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900245d2:	42a3      	cmp	r3, r4
900245d4:	dd58      	ble.n	90024688 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900245d6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
900245da:	1c62      	adds	r2, r4, #1
900245dc:	d459      	bmi.n	90024692 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900245de:	4293      	cmp	r3, r2
900245e0:	dd57      	ble.n	90024692 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900245e2:	2d00      	cmp	r5, #0
900245e4:	d055      	beq.n	90024692 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900245e6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
900245ea:	f11e 0e01 	adds.w	lr, lr, #1
900245ee:	d454      	bmi.n	9002469a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900245f0:	45f1      	cmp	r9, lr
900245f2:	dd52      	ble.n	9002469a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900245f4:	2e00      	cmp	r6, #0
900245f6:	d050      	beq.n	9002469a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900245f8:	2c00      	cmp	r4, #0
900245fa:	db4c      	blt.n	90024696 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
900245fc:	42a3      	cmp	r3, r4
900245fe:	dd4a      	ble.n	90024696 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90024600:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90024604:	3401      	adds	r4, #1
90024606:	d405      	bmi.n	90024614 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024608:	42a3      	cmp	r3, r4
9002460a:	dd03      	ble.n	90024614 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002460c:	b115      	cbz	r5, 90024614 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002460e:	3301      	adds	r3, #1
90024610:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90024614:	fb15 f406 	smulbb	r4, r5, r6
90024618:	ea4f 430c 	mov.w	r3, ip, lsl #16
9002461c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90024620:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90024624:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90024628:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9002462c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024630:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024634:	ea43 0c0c 	orr.w	ip, r3, ip
90024638:	f1c6 0310 	rsb	r3, r6, #16
9002463c:	ea4e 0707 	orr.w	r7, lr, r7
90024640:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90024644:	1b5b      	subs	r3, r3, r5
90024646:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002464a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002464e:	437d      	muls	r5, r7
90024650:	fb03 5c0c 	mla	ip, r3, ip, r5
90024654:	0403      	lsls	r3, r0, #16
90024656:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002465a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002465e:	4318      	orrs	r0, r3
90024660:	0413      	lsls	r3, r2, #16
90024662:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024666:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002466a:	fb04 c000 	mla	r0, r4, r0, ip
9002466e:	4313      	orrs	r3, r2
90024670:	fb06 0003 	mla	r0, r6, r3, r0
90024674:	0d43      	lsrs	r3, r0, #21
90024676:	0940      	lsrs	r0, r0, #5
90024678:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002467c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024680:	4318      	orrs	r0, r3
90024682:	8008      	strh	r0, [r1, #0]
90024684:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90024688:	4684      	mov	ip, r0
9002468a:	e7a6      	b.n	900245da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
9002468c:	4607      	mov	r7, r0
9002468e:	4684      	mov	ip, r0
90024690:	e7ab      	b.n	900245ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024692:	4607      	mov	r7, r0
90024694:	e7a9      	b.n	900245ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024696:	4602      	mov	r2, r0
90024698:	e7b4      	b.n	90024604 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
9002469a:	4602      	mov	r2, r0
9002469c:	e7ba      	b.n	90024614 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

9002469e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002469e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900246a2:	b08f      	sub	sp, #60	@ 0x3c
900246a4:	461d      	mov	r5, r3
900246a6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900246a8:	9107      	str	r1, [sp, #28]
900246aa:	920c      	str	r2, [sp, #48]	@ 0x30
900246ac:	6859      	ldr	r1, [r3, #4]
900246ae:	681b      	ldr	r3, [r3, #0]
900246b0:	900d      	str	r0, [sp, #52]	@ 0x34
900246b2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
900246b6:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
900246ba:	fb01 2707 	mla	r7, r1, r7, r2
900246be:	eb03 0747 	add.w	r7, r3, r7, lsl #1
900246c2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900246c4:	f8d3 8000 	ldr.w	r8, [r3]
900246c8:	9b07      	ldr	r3, [sp, #28]
900246ca:	2b00      	cmp	r3, #0
900246cc:	dc03      	bgt.n	900246d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900246ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900246d0:	2b00      	cmp	r3, #0
900246d2:	f340 8182 	ble.w	900249da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900246d6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900246d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900246dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900246e0:	1e48      	subs	r0, r1, #1
900246e2:	f102 3cff 	add.w	ip, r2, #4294967295
900246e6:	2d00      	cmp	r5, #0
900246e8:	f340 809b 	ble.w	90024822 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
900246ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
900246f0:	ea4f 4326 	mov.w	r3, r6, asr #16
900246f4:	d406      	bmi.n	90024704 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900246f6:	4586      	cmp	lr, r0
900246f8:	da04      	bge.n	90024704 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900246fa:	2b00      	cmp	r3, #0
900246fc:	db02      	blt.n	90024704 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900246fe:	4563      	cmp	r3, ip
90024700:	f2c0 8090 	blt.w	90024824 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024704:	f11e 0e01 	adds.w	lr, lr, #1
90024708:	f100 8084 	bmi.w	90024814 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002470c:	4571      	cmp	r1, lr
9002470e:	f2c0 8081 	blt.w	90024814 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024712:	3301      	adds	r3, #1
90024714:	d47e      	bmi.n	90024814 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024716:	429a      	cmp	r2, r3
90024718:	db7c      	blt.n	90024814 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002471a:	46aa      	mov	sl, r5
9002471c:	46b9      	mov	r9, r7
9002471e:	f1ba 0f00 	cmp.w	sl, #0
90024722:	f340 8099 	ble.w	90024858 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90024726:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024728:	1421      	asrs	r1, r4, #16
9002472a:	ea4f 4026 	mov.w	r0, r6, asr #16
9002472e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024732:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90024736:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002473a:	f100 80d1 	bmi.w	900248e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002473e:	f10e 3bff 	add.w	fp, lr, #4294967295
90024742:	4559      	cmp	r1, fp
90024744:	f280 80cc 	bge.w	900248e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024748:	2800      	cmp	r0, #0
9002474a:	f2c0 80c9 	blt.w	900248e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002474e:	f103 3bff 	add.w	fp, r3, #4294967295
90024752:	4558      	cmp	r0, fp
90024754:	f280 80c4 	bge.w	900248e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024758:	fa0f fe8e 	sxth.w	lr, lr
9002475c:	fb00 110e 	mla	r1, r0, lr, r1
90024760:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90024764:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90024768:	8841      	ldrh	r1, [r0, #2]
9002476a:	f1bc 0f00 	cmp.w	ip, #0
9002476e:	d00b      	beq.n	90024788 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90024770:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90024774:	3b01      	subs	r3, #1
90024776:	005b      	lsls	r3, r3, #1
90024778:	3302      	adds	r3, #2
9002477a:	eb00 0e03 	add.w	lr, r0, r3
9002477e:	5ac3      	ldrh	r3, [r0, r3]
90024780:	9308      	str	r3, [sp, #32]
90024782:	f8be 3002 	ldrh.w	r3, [lr, #2]
90024786:	9309      	str	r3, [sp, #36]	@ 0x24
90024788:	ea4f 400b 	mov.w	r0, fp, lsl #16
9002478c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024790:	fb12 f30c 	smulbb	r3, r2, ip
90024794:	f1cc 0e10 	rsb	lr, ip, #16
90024798:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002479c:	10db      	asrs	r3, r3, #3
9002479e:	ebae 0e02 	sub.w	lr, lr, r2
900247a2:	ea40 000b 	orr.w	r0, r0, fp
900247a6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900247aa:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900247ae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900247b2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900247b6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900247ba:	ea4b 0101 	orr.w	r1, fp, r1
900247be:	4351      	muls	r1, r2
900247c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900247c2:	fb0e 1e00 	mla	lr, lr, r0, r1
900247c6:	0410      	lsls	r0, r2, #16
900247c8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900247cc:	9908      	ldr	r1, [sp, #32]
900247ce:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900247d2:	4310      	orrs	r0, r2
900247d4:	9a08      	ldr	r2, [sp, #32]
900247d6:	0412      	lsls	r2, r2, #16
900247d8:	fb03 e000 	mla	r0, r3, r0, lr
900247dc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900247e0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900247e4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900247e8:	ea42 020e 	orr.w	r2, r2, lr
900247ec:	fb03 0302 	mla	r3, r3, r2, r0
900247f0:	0d5a      	lsrs	r2, r3, #21
900247f2:	095b      	lsrs	r3, r3, #5
900247f4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900247f8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900247fc:	4313      	orrs	r3, r2
900247fe:	f8a9 3000 	strh.w	r3, [r9]
90024802:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024804:	f109 0902 	add.w	r9, r9, #2
90024808:	f10a 3aff 	add.w	sl, sl, #4294967295
9002480c:	441c      	add	r4, r3
9002480e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024810:	441e      	add	r6, r3
90024812:	e784      	b.n	9002471e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90024814:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024816:	3d01      	subs	r5, #1
90024818:	3702      	adds	r7, #2
9002481a:	441c      	add	r4, r3
9002481c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002481e:	441e      	add	r6, r3
90024820:	e761      	b.n	900246e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024822:	d01d      	beq.n	90024860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024824:	1e6b      	subs	r3, r5, #1
90024826:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90024828:	fb00 4003 	mla	r0, r0, r3, r4
9002482c:	1400      	asrs	r0, r0, #16
9002482e:	f53f af74 	bmi.w	9002471a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024832:	3901      	subs	r1, #1
90024834:	4288      	cmp	r0, r1
90024836:	f6bf af70 	bge.w	9002471a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002483a:	991c      	ldr	r1, [sp, #112]	@ 0x70
9002483c:	fb01 6303 	mla	r3, r1, r3, r6
90024840:	141b      	asrs	r3, r3, #16
90024842:	f53f af6a 	bmi.w	9002471a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024846:	3a01      	subs	r2, #1
90024848:	4293      	cmp	r3, r2
9002484a:	f6bf af66 	bge.w	9002471a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002484e:	46a9      	mov	r9, r5
90024850:	46ba      	mov	sl, r7
90024852:	f1b9 0f00 	cmp.w	r9, #0
90024856:	dc5b      	bgt.n	90024910 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90024858:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002485c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90024860:	9b07      	ldr	r3, [sp, #28]
90024862:	2b00      	cmp	r3, #0
90024864:	f340 80b9 	ble.w	900249da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90024868:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002486c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002486e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024872:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024876:	eef0 6a62 	vmov.f32	s13, s5
9002487a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002487e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024882:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024886:	ee16 4a90 	vmov	r4, s13
9002488a:	eef0 6a43 	vmov.f32	s13, s6
9002488e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024892:	ee16 6a90 	vmov	r6, s13
90024896:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002489a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002489e:	ee77 2a62 	vsub.f32	s5, s14, s5
900248a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900248a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900248aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900248ae:	ee12 2a90 	vmov	r2, s5
900248b2:	eef0 2a47 	vmov.f32	s5, s14
900248b6:	fb92 f3f3 	sdiv	r3, r2, r3
900248ba:	ee13 2a10 	vmov	r2, s6
900248be:	931b      	str	r3, [sp, #108]	@ 0x6c
900248c0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900248c2:	eeb0 3a67 	vmov.f32	s6, s15
900248c6:	fb92 f3f3 	sdiv	r3, r2, r3
900248ca:	931c      	str	r3, [sp, #112]	@ 0x70
900248cc:	9b07      	ldr	r3, [sp, #28]
900248ce:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900248d0:	3b01      	subs	r3, #1
900248d2:	9307      	str	r3, [sp, #28]
900248d4:	bf08      	it	eq
900248d6:	4615      	moveq	r5, r2
900248d8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900248da:	bf18      	it	ne
900248dc:	461d      	movne	r5, r3
900248de:	e6f3      	b.n	900246c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
900248e0:	f111 0b01 	adds.w	fp, r1, #1
900248e4:	d48d      	bmi.n	90024802 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900248e6:	45de      	cmp	lr, fp
900248e8:	db8b      	blt.n	90024802 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900248ea:	f110 0b01 	adds.w	fp, r0, #1
900248ee:	d488      	bmi.n	90024802 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900248f0:	455b      	cmp	r3, fp
900248f2:	db86      	blt.n	90024802 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900248f4:	b21b      	sxth	r3, r3
900248f6:	e9cd 1001 	strd	r1, r0, [sp, #4]
900248fa:	e9cd 2c03 	strd	r2, ip, [sp, #12]
900248fe:	9300      	str	r3, [sp, #0]
90024900:	4642      	mov	r2, r8
90024902:	fa0f f38e 	sxth.w	r3, lr
90024906:	4649      	mov	r1, r9
90024908:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002490a:	f7ff fe4c 	bl	900245a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002490e:	e778      	b.n	90024802 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024910:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024912:	1420      	asrs	r0, r4, #16
90024914:	1431      	asrs	r1, r6, #16
90024916:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002491a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002491e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024922:	fb03 0101 	mla	r1, r3, r1, r0
90024926:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9002492a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002492e:	8841      	ldrh	r1, [r0, #2]
90024930:	f1be 0f00 	cmp.w	lr, #0
90024934:	d00b      	beq.n	9002494e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90024936:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002493a:	3b01      	subs	r3, #1
9002493c:	005b      	lsls	r3, r3, #1
9002493e:	3302      	adds	r3, #2
90024940:	eb00 0b03 	add.w	fp, r0, r3
90024944:	5ac3      	ldrh	r3, [r0, r3]
90024946:	930a      	str	r3, [sp, #40]	@ 0x28
90024948:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002494c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002494e:	ea4f 400c 	mov.w	r0, ip, lsl #16
90024952:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90024956:	fb12 f30e 	smulbb	r3, r2, lr
9002495a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002495e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90024962:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024966:	10db      	asrs	r3, r3, #3
90024968:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002496c:	ea40 000c 	orr.w	r0, r0, ip
90024970:	f1ce 0c10 	rsb	ip, lr, #16
90024974:	ea4b 0101 	orr.w	r1, fp, r1
90024978:	f109 39ff 	add.w	r9, r9, #4294967295
9002497c:	ebac 0c02 	sub.w	ip, ip, r2
90024980:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024984:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90024988:	4351      	muls	r1, r2
9002498a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002498c:	fb0c 1c00 	mla	ip, ip, r0, r1
90024990:	990a      	ldr	r1, [sp, #40]	@ 0x28
90024992:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90024996:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
9002499a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002499c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900249a0:	0412      	lsls	r2, r2, #16
900249a2:	ea4b 0000 	orr.w	r0, fp, r0
900249a6:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
900249aa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900249ae:	fb03 c000 	mla	r0, r3, r0, ip
900249b2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900249b6:	ea42 0b0b 	orr.w	fp, r2, fp
900249ba:	fb03 000b 	mla	r0, r3, fp, r0
900249be:	0d43      	lsrs	r3, r0, #21
900249c0:	0940      	lsrs	r0, r0, #5
900249c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900249c6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900249ca:	4318      	orrs	r0, r3
900249cc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900249ce:	441c      	add	r4, r3
900249d0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900249d2:	f82a 0b02 	strh.w	r0, [sl], #2
900249d6:	441e      	add	r6, r3
900249d8:	e73b      	b.n	90024852 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
900249da:	b00f      	add	sp, #60	@ 0x3c
900249dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900249e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
900249e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900249e4:	b085      	sub	sp, #20
900249e6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900249ea:	9102      	str	r1, [sp, #8]
900249ec:	2c00      	cmp	r4, #0
900249ee:	fb04 7103 	mla	r1, r4, r3, r7
900249f2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900249f6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900249fa:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900249fe:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90024a02:	f2c0 811b 	blt.w	90024c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90024a06:	45a6      	cmp	lr, r4
90024a08:	f340 8118 	ble.w	90024c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90024a0c:	2f00      	cmp	r7, #0
90024a0e:	f2c0 8113 	blt.w	90024c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024a12:	42bb      	cmp	r3, r7
90024a14:	f340 8110 	ble.w	90024c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024a18:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90024a1c:	1c7a      	adds	r2, r7, #1
90024a1e:	f100 8110 	bmi.w	90024c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024a22:	4293      	cmp	r3, r2
90024a24:	f340 810d 	ble.w	90024c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024a28:	2e00      	cmp	r6, #0
90024a2a:	f000 810c 	beq.w	90024c46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90024a2e:	f8dc 1004 	ldr.w	r1, [ip, #4]
90024a32:	3401      	adds	r4, #1
90024a34:	f100 810b 	bmi.w	90024c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90024a38:	45a6      	cmp	lr, r4
90024a3a:	f340 8108 	ble.w	90024c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90024a3e:	2800      	cmp	r0, #0
90024a40:	f000 8108 	beq.w	90024c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90024a44:	2f00      	cmp	r7, #0
90024a46:	f2c0 8100 	blt.w	90024c4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90024a4a:	42bb      	cmp	r3, r7
90024a4c:	f340 80fd 	ble.w	90024c4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90024a50:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90024a54:	3701      	adds	r7, #1
90024a56:	f100 8100 	bmi.w	90024c5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90024a5a:	42bb      	cmp	r3, r7
90024a5c:	f340 80fd 	ble.w	90024c5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90024a60:	2e00      	cmp	r6, #0
90024a62:	f000 80fc 	beq.w	90024c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90024a66:	3301      	adds	r3, #1
90024a68:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90024a6c:	b2b6      	uxth	r6, r6
90024a6e:	b280      	uxth	r0, r0
90024a70:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90024a74:	fb00 fe06 	mul.w	lr, r0, r6
90024a78:	0136      	lsls	r6, r6, #4
90024a7a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024a7e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90024a82:	eba6 070e 	sub.w	r7, r6, lr
90024a86:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90024a8a:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024a8e:	b280      	uxth	r0, r0
90024a90:	b2bf      	uxth	r7, r7
90024a92:	1a1b      	subs	r3, r3, r0
90024a94:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024a98:	fb0a f607 	mul.w	r6, sl, r7
90024a9c:	b29b      	uxth	r3, r3
90024a9e:	fb0b 6603 	mla	r6, fp, r3, r6
90024aa2:	fb00 6609 	mla	r6, r0, r9, r6
90024aa6:	fb0e 6608 	mla	r6, lr, r8, r6
90024aaa:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024aae:	9600      	str	r6, [sp, #0]
90024ab0:	2e00      	cmp	r6, #0
90024ab2:	f000 80be 	beq.w	90024c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90024ab6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024aba:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90024abe:	9e02      	ldr	r6, [sp, #8]
90024ac0:	fb0b fc0c 	mul.w	ip, fp, ip
90024ac4:	fb0b f505 	mul.w	r5, fp, r5
90024ac8:	8836      	ldrh	r6, [r6, #0]
90024aca:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024ace:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024ad2:	9501      	str	r5, [sp, #4]
90024ad4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90024ad8:	44dc      	add	ip, fp
90024ada:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024ade:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90024ae2:	9503      	str	r5, [sp, #12]
90024ae4:	9d01      	ldr	r5, [sp, #4]
90024ae6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90024aea:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90024aee:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90024af2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024af6:	fb0a fc0c 	mul.w	ip, sl, ip
90024afa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90024afe:	fb0a fa01 	mul.w	sl, sl, r1
90024b02:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024b06:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024b0a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90024b0e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024b12:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024b16:	4465      	add	r5, ip
90024b18:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024b1c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90024b20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024b24:	fb09 fc0c 	mul.w	ip, r9, ip
90024b28:	0a2d      	lsrs	r5, r5, #8
90024b2a:	fb09 f904 	mul.w	r9, r9, r4
90024b2e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024b32:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024b36:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024b3a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90024b3e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024b42:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90024b46:	437d      	muls	r5, r7
90024b48:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90024b4c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90024b50:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024b54:	4461      	add	r1, ip
90024b56:	fb08 f404 	mul.w	r4, r8, r4
90024b5a:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024b5e:	fb08 f802 	mul.w	r8, r8, r2
90024b62:	0a09      	lsrs	r1, r1, #8
90024b64:	0a22      	lsrs	r2, r4, #8
90024b66:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90024b6a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90024b6e:	fb07 f70a 	mul.w	r7, r7, sl
90024b72:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024b76:	4414      	add	r4, r2
90024b78:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90024b7c:	0a24      	lsrs	r4, r4, #8
90024b7e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90024b82:	9a03      	ldr	r2, [sp, #12]
90024b84:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90024b88:	fb02 5503 	mla	r5, r2, r3, r5
90024b8c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024b90:	9a00      	ldr	r2, [sp, #0]
90024b92:	fb04 540e 	mla	r4, r4, lr, r5
90024b96:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90024b9a:	1235      	asrs	r5, r6, #8
90024b9c:	fb01 4100 	mla	r1, r1, r0, r4
90024ba0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024ba4:	0a09      	lsrs	r1, r1, #8
90024ba6:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90024baa:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90024bae:	fb03 7101 	mla	r1, r3, r1, r7
90024bb2:	fb0e 1e08 	mla	lr, lr, r8, r1
90024bb6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90024bba:	fb00 e101 	mla	r1, r0, r1, lr
90024bbe:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90024bc2:	b287      	uxth	r7, r0
90024bc4:	0a09      	lsrs	r1, r1, #8
90024bc6:	437a      	muls	r2, r7
90024bc8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024bcc:	1c53      	adds	r3, r2, #1
90024bce:	4321      	orrs	r1, r4
90024bd0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024bd4:	0c0a      	lsrs	r2, r1, #16
90024bd6:	f3c1 2407 	ubfx	r4, r1, #8, #8
90024bda:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90024bde:	b2c8      	uxtb	r0, r1
90024be0:	fb12 f207 	smulbb	r2, r2, r7
90024be4:	fb14 f407 	smulbb	r4, r4, r7
90024be8:	b2db      	uxtb	r3, r3
90024bea:	fb10 f007 	smulbb	r0, r0, r7
90024bee:	fb05 2503 	mla	r5, r5, r3, r2
90024bf2:	10f2      	asrs	r2, r6, #3
90024bf4:	00f6      	lsls	r6, r6, #3
90024bf6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024bfa:	b2ad      	uxth	r5, r5
90024bfc:	b2f6      	uxtb	r6, r6
90024bfe:	fb02 4203 	mla	r2, r2, r3, r4
90024c02:	fb06 0303 	mla	r3, r6, r3, r0
90024c06:	b294      	uxth	r4, r2
90024c08:	b299      	uxth	r1, r3
90024c0a:	1c6b      	adds	r3, r5, #1
90024c0c:	1c62      	adds	r2, r4, #1
90024c0e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024c12:	1c4b      	adds	r3, r1, #1
90024c14:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90024c18:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024c1c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024c20:	0952      	lsrs	r2, r2, #5
90024c22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024c26:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024c2a:	432b      	orrs	r3, r5
90024c2c:	4313      	orrs	r3, r2
90024c2e:	9a02      	ldr	r2, [sp, #8]
90024c30:	8013      	strh	r3, [r2, #0]
90024c32:	b005      	add	sp, #20
90024c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024c38:	2500      	movs	r5, #0
90024c3a:	e6ef      	b.n	90024a1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90024c3c:	2100      	movs	r1, #0
90024c3e:	460d      	mov	r5, r1
90024c40:	e6f7      	b.n	90024a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024c42:	2100      	movs	r1, #0
90024c44:	e6f5      	b.n	90024a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024c46:	4631      	mov	r1, r6
90024c48:	e6f3      	b.n	90024a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024c4a:	2400      	movs	r4, #0
90024c4c:	e702      	b.n	90024a54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90024c4e:	2200      	movs	r2, #0
90024c50:	4614      	mov	r4, r2
90024c52:	e70b      	b.n	90024a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90024c54:	4602      	mov	r2, r0
90024c56:	4604      	mov	r4, r0
90024c58:	e708      	b.n	90024a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90024c5a:	2200      	movs	r2, #0
90024c5c:	e706      	b.n	90024a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90024c5e:	4632      	mov	r2, r6
90024c60:	e704      	b.n	90024a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90024c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024c62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024c66:	b09d      	sub	sp, #116	@ 0x74
90024c68:	9219      	str	r2, [sp, #100]	@ 0x64
90024c6a:	9307      	str	r3, [sp, #28]
90024c6c:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90024c6e:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90024c72:	901b      	str	r0, [sp, #108]	@ 0x6c
90024c74:	931a      	str	r3, [sp, #104]	@ 0x68
90024c76:	6850      	ldr	r0, [r2, #4]
90024c78:	9117      	str	r1, [sp, #92]	@ 0x5c
90024c7a:	6812      	ldr	r2, [r2, #0]
90024c7c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90024c80:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90024c84:	fb00 1303 	mla	r3, r0, r3, r1
90024c88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024c8c:	930a      	str	r3, [sp, #40]	@ 0x28
90024c8e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90024c90:	681b      	ldr	r3, [r3, #0]
90024c92:	9310      	str	r3, [sp, #64]	@ 0x40
90024c94:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90024c98:	930b      	str	r3, [sp, #44]	@ 0x2c
90024c9a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024c9c:	2b00      	cmp	r3, #0
90024c9e:	dc03      	bgt.n	90024ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90024ca0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90024ca2:	2b00      	cmp	r3, #0
90024ca4:	f340 8375 	ble.w	90025392 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90024ca8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90024caa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024cae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024cb2:	1e48      	subs	r0, r1, #1
90024cb4:	1e57      	subs	r7, r2, #1
90024cb6:	9b07      	ldr	r3, [sp, #28]
90024cb8:	2b00      	cmp	r3, #0
90024cba:	f340 818e 	ble.w	90024fda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90024cbe:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024cc2:	ea4f 4326 	mov.w	r3, r6, asr #16
90024cc6:	d406      	bmi.n	90024cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024cc8:	4584      	cmp	ip, r0
90024cca:	da04      	bge.n	90024cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024ccc:	2b00      	cmp	r3, #0
90024cce:	db02      	blt.n	90024cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024cd0:	42bb      	cmp	r3, r7
90024cd2:	f2c0 8183 	blt.w	90024fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90024cd6:	f11c 0c01 	adds.w	ip, ip, #1
90024cda:	f100 8173 	bmi.w	90024fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024cde:	4561      	cmp	r1, ip
90024ce0:	f2c0 8170 	blt.w	90024fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024ce4:	3301      	adds	r3, #1
90024ce6:	f100 816d 	bmi.w	90024fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024cea:	429a      	cmp	r2, r3
90024cec:	f2c0 816a 	blt.w	90024fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024cf0:	9b07      	ldr	r3, [sp, #28]
90024cf2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90024cf4:	9318      	str	r3, [sp, #96]	@ 0x60
90024cf6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024cf8:	2b00      	cmp	r3, #0
90024cfa:	f340 818c 	ble.w	90025016 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90024cfe:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90024d00:	ea4f 4c26 	mov.w	ip, r6, asr #16
90024d04:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90024d06:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024d0a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90024d0e:	1422      	asrs	r2, r4, #16
90024d10:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024d14:	689b      	ldr	r3, [r3, #8]
90024d16:	f100 81cd 	bmi.w	900250b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024d1a:	f103 38ff 	add.w	r8, r3, #4294967295
90024d1e:	4542      	cmp	r2, r8
90024d20:	f280 81c8 	bge.w	900250b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024d24:	f1bc 0f00 	cmp.w	ip, #0
90024d28:	f2c0 81c4 	blt.w	900250b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024d2c:	f10e 38ff 	add.w	r8, lr, #4294967295
90024d30:	45c4      	cmp	ip, r8
90024d32:	f280 81bf 	bge.w	900250b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024d36:	b21b      	sxth	r3, r3
90024d38:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90024d3a:	fb0c 2203 	mla	r2, ip, r3, r2
90024d3e:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90024d42:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90024d46:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90024d4a:	2800      	cmp	r0, #0
90024d4c:	f000 81a9 	beq.w	900250a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90024d50:	f8d8 5004 	ldr.w	r5, [r8, #4]
90024d54:	950c      	str	r5, [sp, #48]	@ 0x30
90024d56:	0e2d      	lsrs	r5, r5, #24
90024d58:	9513      	str	r5, [sp, #76]	@ 0x4c
90024d5a:	b181      	cbz	r1, 90024d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024d5c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90024d60:	3b01      	subs	r3, #1
90024d62:	009b      	lsls	r3, r3, #2
90024d64:	3304      	adds	r3, #4
90024d66:	eb08 0c03 	add.w	ip, r8, r3
90024d6a:	f858 3003 	ldr.w	r3, [r8, r3]
90024d6e:	9308      	str	r3, [sp, #32]
90024d70:	0e1b      	lsrs	r3, r3, #24
90024d72:	9311      	str	r3, [sp, #68]	@ 0x44
90024d74:	f8dc 3004 	ldr.w	r3, [ip, #4]
90024d78:	930d      	str	r3, [sp, #52]	@ 0x34
90024d7a:	0e1b      	lsrs	r3, r3, #24
90024d7c:	9314      	str	r3, [sp, #80]	@ 0x50
90024d7e:	b280      	uxth	r0, r0
90024d80:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024d82:	b289      	uxth	r1, r1
90024d84:	fb00 f901 	mul.w	r9, r0, r1
90024d88:	0100      	lsls	r0, r0, #4
90024d8a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024d8e:	eba0 0809 	sub.w	r8, r0, r9
90024d92:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90024d96:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90024d98:	b289      	uxth	r1, r1
90024d9a:	fa1f f888 	uxth.w	r8, r8
90024d9e:	1a5b      	subs	r3, r3, r1
90024da0:	fb08 f000 	mul.w	r0, r8, r0
90024da4:	b29b      	uxth	r3, r3
90024da6:	fb03 000e 	mla	r0, r3, lr, r0
90024daa:	fb01 0005 	mla	r0, r1, r5, r0
90024dae:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024db0:	fb09 0005 	mla	r0, r9, r5, r0
90024db4:	f3c0 2007 	ubfx	r0, r0, #8, #8
90024db8:	2800      	cmp	r0, #0
90024dba:	f000 80fa 	beq.w	90024fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024dbe:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024dc2:	d01b      	beq.n	90024dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90024dc4:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90024dc8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024dcc:	fb0e fa0a 	mul.w	sl, lr, sl
90024dd0:	fb0e fe02 	mul.w	lr, lr, r2
90024dd4:	ea4f 221a 	mov.w	r2, sl, lsr #8
90024dd8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024ddc:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90024de0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024de4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024de8:	4452      	add	r2, sl
90024dea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024dee:	0a12      	lsrs	r2, r2, #8
90024df0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024df4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024df8:	ea42 020c 	orr.w	r2, r2, ip
90024dfc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024dfe:	2dff      	cmp	r5, #255	@ 0xff
90024e00:	d021      	beq.n	90024e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90024e02:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024e04:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024e08:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024e0a:	fb05 fb0b 	mul.w	fp, r5, fp
90024e0e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024e10:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024e14:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024e16:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024e1a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024e1e:	fb05 fa0a 	mul.w	sl, r5, sl
90024e22:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024e26:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024e2a:	44de      	add	lr, fp
90024e2c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024e30:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024e34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e38:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024e3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024e40:	ea4e 050a 	orr.w	r5, lr, sl
90024e44:	950c      	str	r5, [sp, #48]	@ 0x30
90024e46:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024e48:	2dff      	cmp	r5, #255	@ 0xff
90024e4a:	d021      	beq.n	90024e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90024e4c:	9d08      	ldr	r5, [sp, #32]
90024e4e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024e52:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024e54:	fb05 fb0b 	mul.w	fp, r5, fp
90024e58:	9d08      	ldr	r5, [sp, #32]
90024e5a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024e5e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024e60:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024e64:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024e68:	fb05 fa0a 	mul.w	sl, r5, sl
90024e6c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024e70:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024e74:	44de      	add	lr, fp
90024e76:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024e7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024e7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e82:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024e86:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024e8a:	ea4e 050a 	orr.w	r5, lr, sl
90024e8e:	9508      	str	r5, [sp, #32]
90024e90:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024e92:	2dff      	cmp	r5, #255	@ 0xff
90024e94:	d021      	beq.n	90024eda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90024e96:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024e98:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024e9c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024e9e:	fb05 fb0b 	mul.w	fp, r5, fp
90024ea2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024ea4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024ea8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024eaa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024eae:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024eb2:	fb05 fa0a 	mul.w	sl, r5, sl
90024eb6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024eba:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024ebe:	44de      	add	lr, fp
90024ec0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024ec4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024ec8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024ecc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024ed0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024ed4:	ea4e 050a 	orr.w	r5, lr, sl
90024ed8:	950d      	str	r5, [sp, #52]	@ 0x34
90024eda:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024edc:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90024ee0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024ee4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024ee8:	9d08      	ldr	r5, [sp, #32]
90024eea:	fb08 fc0c 	mul.w	ip, r8, ip
90024eee:	fb03 cc0e 	mla	ip, r3, lr, ip
90024ef2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90024ef6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024ef8:	fb01 cc0e 	mla	ip, r1, lr, ip
90024efc:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90024f00:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024f02:	fb09 cc0e 	mla	ip, r9, lr, ip
90024f06:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90024f0a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90024f0c:	fb08 f80e 	mul.w	r8, r8, lr
90024f10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024f14:	fb03 8202 	mla	r2, r3, r2, r8
90024f18:	9b08      	ldr	r3, [sp, #32]
90024f1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024f1e:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90024f22:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90024f24:	fb01 220a 	mla	r2, r1, sl, r2
90024f28:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90024f2c:	883b      	ldrh	r3, [r7, #0]
90024f2e:	fb09 2901 	mla	r9, r9, r1, r2
90024f32:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90024f34:	1219      	asrs	r1, r3, #8
90024f36:	4342      	muls	r2, r0
90024f38:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024f3c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90024f40:	1c50      	adds	r0, r2, #1
90024f42:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024f46:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90024f4a:	ea4c 0c09 	orr.w	ip, ip, r9
90024f4e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90024f52:	ea4f 421c 	mov.w	r2, ip, lsr #16
90024f56:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90024f5a:	fa5f fc8c 	uxtb.w	ip, ip
90024f5e:	fb12 f205 	smulbb	r2, r2, r5
90024f62:	b2c0      	uxtb	r0, r0
90024f64:	fb1c fc05 	smulbb	ip, ip, r5
90024f68:	fb01 2100 	mla	r1, r1, r0, r2
90024f6c:	10da      	asrs	r2, r3, #3
90024f6e:	fb1e fe05 	smulbb	lr, lr, r5
90024f72:	00db      	lsls	r3, r3, #3
90024f74:	b289      	uxth	r1, r1
90024f76:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024f7a:	b2db      	uxtb	r3, r3
90024f7c:	fb02 e200 	mla	r2, r2, r0, lr
90024f80:	fb03 c300 	mla	r3, r3, r0, ip
90024f84:	b292      	uxth	r2, r2
90024f86:	fa1f fc83 	uxth.w	ip, r3
90024f8a:	1c4b      	adds	r3, r1, #1
90024f8c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024f90:	f10c 0301 	add.w	r3, ip, #1
90024f94:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024f98:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90024f9c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024fa0:	430b      	orrs	r3, r1
90024fa2:	1c51      	adds	r1, r2, #1
90024fa4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024fa8:	0952      	lsrs	r2, r2, #5
90024faa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024fae:	4313      	orrs	r3, r2
90024fb0:	803b      	strh	r3, [r7, #0]
90024fb2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024fb4:	3702      	adds	r7, #2
90024fb6:	441c      	add	r4, r3
90024fb8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90024fba:	441e      	add	r6, r3
90024fbc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024fbe:	3b01      	subs	r3, #1
90024fc0:	9318      	str	r3, [sp, #96]	@ 0x60
90024fc2:	e698      	b.n	90024cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90024fc4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024fc6:	441c      	add	r4, r3
90024fc8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90024fca:	441e      	add	r6, r3
90024fcc:	9b07      	ldr	r3, [sp, #28]
90024fce:	3b01      	subs	r3, #1
90024fd0:	9307      	str	r3, [sp, #28]
90024fd2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024fd4:	3302      	adds	r3, #2
90024fd6:	930a      	str	r3, [sp, #40]	@ 0x28
90024fd8:	e66d      	b.n	90024cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90024fda:	d023      	beq.n	90025024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90024fdc:	9b07      	ldr	r3, [sp, #28]
90024fde:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90024fe0:	3b01      	subs	r3, #1
90024fe2:	fb00 4003 	mla	r0, r0, r3, r4
90024fe6:	1400      	asrs	r0, r0, #16
90024fe8:	f53f ae82 	bmi.w	90024cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024fec:	3901      	subs	r1, #1
90024fee:	4288      	cmp	r0, r1
90024ff0:	f6bf ae7e 	bge.w	90024cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024ff4:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90024ff6:	fb01 6303 	mla	r3, r1, r3, r6
90024ffa:	141b      	asrs	r3, r3, #16
90024ffc:	f53f ae78 	bmi.w	90024cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025000:	3a01      	subs	r2, #1
90025002:	4293      	cmp	r3, r2
90025004:	f6bf ae74 	bge.w	90024cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025008:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002500c:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90025010:	f1bb 0f00 	cmp.w	fp, #0
90025014:	dc6c      	bgt.n	900250f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90025016:	9b07      	ldr	r3, [sp, #28]
90025018:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002501c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002501e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025022:	930a      	str	r3, [sp, #40]	@ 0x28
90025024:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025026:	2b00      	cmp	r3, #0
90025028:	f340 81b3 	ble.w	90025392 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002502c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025030:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90025032:	ee30 0a04 	vadd.f32	s0, s0, s8
90025036:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002503a:	eef0 6a62 	vmov.f32	s13, s5
9002503e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025042:	ee31 1a05 	vadd.f32	s2, s2, s10
90025046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002504a:	ee16 4a90 	vmov	r4, s13
9002504e:	eef0 6a43 	vmov.f32	s13, s6
90025052:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025056:	ee16 6a90 	vmov	r6, s13
9002505a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002505e:	ee61 7a27 	vmul.f32	s15, s2, s15
90025062:	ee77 2a62 	vsub.f32	s5, s14, s5
90025066:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002506a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002506e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025072:	ee12 2a90 	vmov	r2, s5
90025076:	eef0 2a47 	vmov.f32	s5, s14
9002507a:	fb92 f3f3 	sdiv	r3, r2, r3
9002507e:	ee13 2a10 	vmov	r2, s6
90025082:	9329      	str	r3, [sp, #164]	@ 0xa4
90025084:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90025086:	eeb0 3a67 	vmov.f32	s6, s15
9002508a:	fb92 f3f3 	sdiv	r3, r2, r3
9002508e:	932a      	str	r3, [sp, #168]	@ 0xa8
90025090:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025092:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90025094:	3b01      	subs	r3, #1
90025096:	9317      	str	r3, [sp, #92]	@ 0x5c
90025098:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002509a:	bf08      	it	eq
9002509c:	4613      	moveq	r3, r2
9002509e:	9307      	str	r3, [sp, #28]
900250a0:	e5fb      	b.n	90024c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900250a2:	2900      	cmp	r1, #0
900250a4:	f43f ae6b 	beq.w	90024d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900250a8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900250ac:	9308      	str	r3, [sp, #32]
900250ae:	0e1b      	lsrs	r3, r3, #24
900250b0:	9311      	str	r3, [sp, #68]	@ 0x44
900250b2:	e664      	b.n	90024d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900250b4:	f112 0801 	adds.w	r8, r2, #1
900250b8:	f53f af7b 	bmi.w	90024fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900250bc:	4543      	cmp	r3, r8
900250be:	f6ff af78 	blt.w	90024fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900250c2:	f11c 0801 	adds.w	r8, ip, #1
900250c6:	f53f af74 	bmi.w	90024fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900250ca:	45c6      	cmp	lr, r8
900250cc:	f6ff af71 	blt.w	90024fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900250d0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
900250d2:	b21b      	sxth	r3, r3
900250d4:	9201      	str	r2, [sp, #4]
900250d6:	fa0f f28e 	sxth.w	r2, lr
900250da:	e9cd 1504 	strd	r1, r5, [sp, #16]
900250de:	e9cd c002 	strd	ip, r0, [sp, #8]
900250e2:	9200      	str	r2, [sp, #0]
900250e4:	4639      	mov	r1, r7
900250e6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900250e8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900250ea:	f7ff fc79 	bl	900249e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
900250ee:	e760      	b.n	90024fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900250f0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900250f2:	1427      	asrs	r7, r4, #16
900250f4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900250f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
900250fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900250fe:	1433      	asrs	r3, r6, #16
90025100:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025104:	fb01 7303 	mla	r3, r1, r3, r7
90025108:	eb05 0783 	add.w	r7, r5, r3, lsl #2
9002510c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90025110:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025114:	2a00      	cmp	r2, #0
90025116:	f000 8133 	beq.w	90025380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002511a:	687d      	ldr	r5, [r7, #4]
9002511c:	950e      	str	r5, [sp, #56]	@ 0x38
9002511e:	0e2d      	lsrs	r5, r5, #24
90025120:	9515      	str	r5, [sp, #84]	@ 0x54
90025122:	b178      	cbz	r0, 90025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90025124:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90025128:	3901      	subs	r1, #1
9002512a:	0089      	lsls	r1, r1, #2
9002512c:	3104      	adds	r1, #4
9002512e:	eb07 0e01 	add.w	lr, r7, r1
90025132:	5879      	ldr	r1, [r7, r1]
90025134:	9109      	str	r1, [sp, #36]	@ 0x24
90025136:	0e09      	lsrs	r1, r1, #24
90025138:	9112      	str	r1, [sp, #72]	@ 0x48
9002513a:	f8de 1004 	ldr.w	r1, [lr, #4]
9002513e:	910f      	str	r1, [sp, #60]	@ 0x3c
90025140:	0e09      	lsrs	r1, r1, #24
90025142:	9116      	str	r1, [sp, #88]	@ 0x58
90025144:	b292      	uxth	r2, r2
90025146:	9915      	ldr	r1, [sp, #84]	@ 0x54
90025148:	b280      	uxth	r0, r0
9002514a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002514c:	fb02 f800 	mul.w	r8, r2, r0
90025150:	0112      	lsls	r2, r2, #4
90025152:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90025156:	eba2 0e08 	sub.w	lr, r2, r8
9002515a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002515e:	b280      	uxth	r0, r0
90025160:	fa1f fe8e 	uxth.w	lr, lr
90025164:	1a12      	subs	r2, r2, r0
90025166:	fb0e f101 	mul.w	r1, lr, r1
9002516a:	b292      	uxth	r2, r2
9002516c:	fb02 110c 	mla	r1, r2, ip, r1
90025170:	fb00 1105 	mla	r1, r0, r5, r1
90025174:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90025176:	fb08 1105 	mla	r1, r8, r5, r1
9002517a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002517e:	2900      	cmp	r1, #0
90025180:	f000 80f5 	beq.w	9002536e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90025184:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90025188:	d019      	beq.n	900251be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002518a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002518e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025192:	fb0c fa0a 	mul.w	sl, ip, sl
90025196:	fb0c fc03 	mul.w	ip, ip, r3
9002519a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002519e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900251a2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900251a6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900251aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900251ae:	4453      	add	r3, sl
900251b0:	0a3f      	lsrs	r7, r7, #8
900251b2:	0a1b      	lsrs	r3, r3, #8
900251b4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900251b8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900251bc:	433b      	orrs	r3, r7
900251be:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900251c0:	2dff      	cmp	r5, #255	@ 0xff
900251c2:	d020      	beq.n	90025206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
900251c4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900251c6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900251ca:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900251cc:	436f      	muls	r7, r5
900251ce:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900251d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900251d4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900251d8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900251da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900251de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900251e2:	fb05 fa0a 	mul.w	sl, r5, sl
900251e6:	44bc      	add	ip, r7
900251e8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900251ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900251f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900251f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900251f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900251fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025200:	ea4c 050a 	orr.w	r5, ip, sl
90025204:	950e      	str	r5, [sp, #56]	@ 0x38
90025206:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90025208:	2dff      	cmp	r5, #255	@ 0xff
9002520a:	d020      	beq.n	9002524e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
9002520c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002520e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90025212:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90025214:	436f      	muls	r7, r5
90025216:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90025218:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002521c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025220:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90025222:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025226:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002522a:	fb05 fa0a 	mul.w	sl, r5, sl
9002522e:	44bc      	add	ip, r7
90025230:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025234:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025238:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002523c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025240:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025244:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025248:	ea4c 050a 	orr.w	r5, ip, sl
9002524c:	9509      	str	r5, [sp, #36]	@ 0x24
9002524e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90025250:	2dff      	cmp	r5, #255	@ 0xff
90025252:	d020      	beq.n	90025296 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90025254:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90025256:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002525a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002525c:	436f      	muls	r7, r5
9002525e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90025260:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025264:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025268:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002526a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002526e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025272:	fb05 fa0a 	mul.w	sl, r5, sl
90025276:	44bc      	add	ip, r7
90025278:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002527c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025280:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025284:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025288:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002528c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025290:	ea4c 050a 	orr.w	r5, ip, sl
90025294:	950f      	str	r5, [sp, #60]	@ 0x3c
90025296:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90025298:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002529c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900252a0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900252a4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900252a6:	fb0e f707 	mul.w	r7, lr, r7
900252aa:	fb02 770c 	mla	r7, r2, ip, r7
900252ae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900252b2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900252b4:	fb00 770c 	mla	r7, r0, ip, r7
900252b8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900252bc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900252be:	fb08 770c 	mla	r7, r8, ip, r7
900252c2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900252c6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900252c8:	fb0e fe0c 	mul.w	lr, lr, ip
900252cc:	0a3f      	lsrs	r7, r7, #8
900252ce:	fb02 e303 	mla	r3, r2, r3, lr
900252d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900252d4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900252d8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900252dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900252de:	fb00 330a 	mla	r3, r0, sl, r3
900252e2:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900252e6:	f8b9 0000 	ldrh.w	r0, [r9]
900252ea:	fb08 3c0c 	mla	ip, r8, ip, r3
900252ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900252f0:	1202      	asrs	r2, r0, #8
900252f2:	4359      	muls	r1, r3
900252f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900252f8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900252fc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025300:	1c4b      	adds	r3, r1, #1
90025302:	ea47 070c 	orr.w	r7, r7, ip
90025306:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002530a:	0c3b      	lsrs	r3, r7, #16
9002530c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90025310:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90025314:	b2ff      	uxtb	r7, r7
90025316:	fb13 f305 	smulbb	r3, r3, r5
9002531a:	b2c9      	uxtb	r1, r1
9002531c:	fb17 f705 	smulbb	r7, r7, r5
90025320:	fb02 3201 	mla	r2, r2, r1, r3
90025324:	10c3      	asrs	r3, r0, #3
90025326:	fb1c fc05 	smulbb	ip, ip, r5
9002532a:	00c0      	lsls	r0, r0, #3
9002532c:	b292      	uxth	r2, r2
9002532e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90025332:	b2c0      	uxtb	r0, r0
90025334:	fb03 c301 	mla	r3, r3, r1, ip
90025338:	fb00 7001 	mla	r0, r0, r1, r7
9002533c:	1c51      	adds	r1, r2, #1
9002533e:	b29b      	uxth	r3, r3
90025340:	b280      	uxth	r0, r0
90025342:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025346:	f100 0c01 	add.w	ip, r0, #1
9002534a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002534e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90025352:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90025356:	ea4c 0202 	orr.w	r2, ip, r2
9002535a:	f103 0c01 	add.w	ip, r3, #1
9002535e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90025362:	095b      	lsrs	r3, r3, #5
90025364:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025368:	431a      	orrs	r2, r3
9002536a:	f8a9 2000 	strh.w	r2, [r9]
9002536e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025370:	f109 0902 	add.w	r9, r9, #2
90025374:	f10b 3bff 	add.w	fp, fp, #4294967295
90025378:	441c      	add	r4, r3
9002537a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002537c:	441e      	add	r6, r3
9002537e:	e647      	b.n	90025010 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90025380:	2800      	cmp	r0, #0
90025382:	f43f aedf 	beq.w	90025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90025386:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002538a:	9109      	str	r1, [sp, #36]	@ 0x24
9002538c:	0e09      	lsrs	r1, r1, #24
9002538e:	9112      	str	r1, [sp, #72]	@ 0x48
90025390:	e6d8      	b.n	90025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90025392:	b01d      	add	sp, #116	@ 0x74
90025394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025398 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90025398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002539c:	b085      	sub	sp, #20
9002539e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900253a2:	9102      	str	r1, [sp, #8]
900253a4:	2c00      	cmp	r4, #0
900253a6:	fb04 7103 	mla	r1, r4, r3, r7
900253aa:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900253ae:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900253b2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900253b6:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900253ba:	f2c0 810c 	blt.w	900255d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900253be:	45a6      	cmp	lr, r4
900253c0:	f340 8109 	ble.w	900255d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900253c4:	2f00      	cmp	r7, #0
900253c6:	f2c0 8104 	blt.w	900255d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900253ca:	42bb      	cmp	r3, r7
900253cc:	f340 8101 	ble.w	900255d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900253d0:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900253d4:	1c7a      	adds	r2, r7, #1
900253d6:	f100 8101 	bmi.w	900255dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900253da:	4293      	cmp	r3, r2
900253dc:	f340 80fe 	ble.w	900255dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900253e0:	2e00      	cmp	r6, #0
900253e2:	f000 80fd 	beq.w	900255e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
900253e6:	f8dc 1004 	ldr.w	r1, [ip, #4]
900253ea:	3401      	adds	r4, #1
900253ec:	f100 80fc 	bmi.w	900255e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
900253f0:	45a6      	cmp	lr, r4
900253f2:	f340 80f9 	ble.w	900255e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
900253f6:	2800      	cmp	r0, #0
900253f8:	f000 80f9 	beq.w	900255ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
900253fc:	2f00      	cmp	r7, #0
900253fe:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90025402:	f2c0 80ef 	blt.w	900255e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90025406:	42bb      	cmp	r3, r7
90025408:	f340 80ec 	ble.w	900255e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002540c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90025410:	3701      	adds	r7, #1
90025412:	f100 80ef 	bmi.w	900255f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90025416:	42bb      	cmp	r3, r7
90025418:	f340 80ec 	ble.w	900255f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002541c:	2e00      	cmp	r6, #0
9002541e:	f000 80eb 	beq.w	900255f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90025422:	6852      	ldr	r2, [r2, #4]
90025424:	b2b6      	uxth	r6, r6
90025426:	b280      	uxth	r0, r0
90025428:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002542c:	fb00 fe06 	mul.w	lr, r0, r6
90025430:	0136      	lsls	r6, r6, #4
90025432:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90025436:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002543a:	eba6 070e 	sub.w	r7, r6, lr
9002543e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90025442:	ea4f 6914 	mov.w	r9, r4, lsr #24
90025446:	b280      	uxth	r0, r0
90025448:	b2bf      	uxth	r7, r7
9002544a:	1a1b      	subs	r3, r3, r0
9002544c:	ea4f 6812 	mov.w	r8, r2, lsr #24
90025450:	fb07 f60a 	mul.w	r6, r7, sl
90025454:	b29b      	uxth	r3, r3
90025456:	fb0b 6603 	mla	r6, fp, r3, r6
9002545a:	fb00 6609 	mla	r6, r0, r9, r6
9002545e:	fb0e 6608 	mla	r6, lr, r8, r6
90025462:	f3c6 2607 	ubfx	r6, r6, #8, #8
90025466:	9600      	str	r6, [sp, #0]
90025468:	2e00      	cmp	r6, #0
9002546a:	f000 80af 	beq.w	900255cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
9002546e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025472:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90025476:	9e02      	ldr	r6, [sp, #8]
90025478:	fb0b fc0c 	mul.w	ip, fp, ip
9002547c:	fb0b f505 	mul.w	r5, fp, r5
90025480:	8836      	ldrh	r6, [r6, #0]
90025482:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90025486:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002548a:	9501      	str	r5, [sp, #4]
9002548c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90025490:	44dc      	add	ip, fp
90025492:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025496:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002549a:	9503      	str	r5, [sp, #12]
9002549c:	9d01      	ldr	r5, [sp, #4]
9002549e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900254a2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900254a6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900254aa:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900254ae:	fb0a fc0c 	mul.w	ip, sl, ip
900254b2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900254b6:	fb0a fa01 	mul.w	sl, sl, r1
900254ba:	ea4f 251c 	mov.w	r5, ip, lsr #8
900254be:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900254c2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900254c6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900254ca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900254ce:	4465      	add	r5, ip
900254d0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900254d4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900254d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900254dc:	fb09 fc0c 	mul.w	ip, r9, ip
900254e0:	0a2d      	lsrs	r5, r5, #8
900254e2:	fb09 f904 	mul.w	r9, r9, r4
900254e6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900254ea:	ea4f 211c 	mov.w	r1, ip, lsr #8
900254ee:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900254f2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900254f6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900254fa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900254fe:	437d      	muls	r5, r7
90025500:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90025504:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90025508:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002550c:	4461      	add	r1, ip
9002550e:	fb08 f404 	mul.w	r4, r8, r4
90025512:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025516:	fb08 f802 	mul.w	r8, r8, r2
9002551a:	0a09      	lsrs	r1, r1, #8
9002551c:	0a22      	lsrs	r2, r4, #8
9002551e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90025522:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025526:	fb07 f70a 	mul.w	r7, r7, sl
9002552a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002552e:	4414      	add	r4, r2
90025530:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90025534:	0a24      	lsrs	r4, r4, #8
90025536:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002553a:	9a03      	ldr	r2, [sp, #12]
9002553c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90025540:	fb02 5503 	mla	r5, r2, r3, r5
90025544:	ea4f 2818 	mov.w	r8, r8, lsr #8
90025548:	fb04 540e 	mla	r4, r4, lr, r5
9002554c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90025550:	fb01 4100 	mla	r1, r1, r0, r4
90025554:	0a09      	lsrs	r1, r1, #8
90025556:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
9002555a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002555e:	fb03 7101 	mla	r1, r3, r1, r7
90025562:	9b00      	ldr	r3, [sp, #0]
90025564:	fb0e 1e08 	mla	lr, lr, r8, r1
90025568:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
9002556c:	43da      	mvns	r2, r3
9002556e:	1233      	asrs	r3, r6, #8
90025570:	fb00 e101 	mla	r1, r0, r1, lr
90025574:	10f0      	asrs	r0, r6, #3
90025576:	b2d2      	uxtb	r2, r2
90025578:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002557c:	0a09      	lsrs	r1, r1, #8
9002557e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025582:	00f6      	lsls	r6, r6, #3
90025584:	4353      	muls	r3, r2
90025586:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002558a:	4350      	muls	r0, r2
9002558c:	b2f6      	uxtb	r6, r6
9002558e:	4321      	orrs	r1, r4
90025590:	4356      	muls	r6, r2
90025592:	1c5a      	adds	r2, r3, #1
90025594:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025598:	0c0b      	lsrs	r3, r1, #16
9002559a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002559e:	1c42      	adds	r2, r0, #1
900255a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900255a4:	0a0a      	lsrs	r2, r1, #8
900255a6:	021b      	lsls	r3, r3, #8
900255a8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900255ac:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900255b0:	00d2      	lsls	r2, r2, #3
900255b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900255b6:	4313      	orrs	r3, r2
900255b8:	1c72      	adds	r2, r6, #1
900255ba:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900255be:	eb01 2116 	add.w	r1, r1, r6, lsr #8
900255c2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900255c6:	4319      	orrs	r1, r3
900255c8:	9b02      	ldr	r3, [sp, #8]
900255ca:	8019      	strh	r1, [r3, #0]
900255cc:	b005      	add	sp, #20
900255ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900255d2:	2500      	movs	r5, #0
900255d4:	e6fe      	b.n	900253d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
900255d6:	2100      	movs	r1, #0
900255d8:	460d      	mov	r5, r1
900255da:	e706      	b.n	900253ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900255dc:	2100      	movs	r1, #0
900255de:	e704      	b.n	900253ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900255e0:	4631      	mov	r1, r6
900255e2:	e702      	b.n	900253ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900255e4:	2400      	movs	r4, #0
900255e6:	e713      	b.n	90025410 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
900255e8:	2200      	movs	r2, #0
900255ea:	4614      	mov	r4, r2
900255ec:	e71a      	b.n	90025424 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900255ee:	4602      	mov	r2, r0
900255f0:	4604      	mov	r4, r0
900255f2:	e717      	b.n	90025424 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900255f4:	2200      	movs	r2, #0
900255f6:	e715      	b.n	90025424 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900255f8:	4632      	mov	r2, r6
900255fa:	e713      	b.n	90025424 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

900255fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900255fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025600:	b09b      	sub	sp, #108	@ 0x6c
90025602:	9218      	str	r2, [sp, #96]	@ 0x60
90025604:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025606:	9019      	str	r0, [sp, #100]	@ 0x64
90025608:	9116      	str	r1, [sp, #88]	@ 0x58
9002560a:	6850      	ldr	r0, [r2, #4]
9002560c:	9307      	str	r3, [sp, #28]
9002560e:	6812      	ldr	r2, [r2, #0]
90025610:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90025614:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90025618:	fb00 1303 	mla	r3, r0, r3, r1
9002561c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025620:	930a      	str	r3, [sp, #40]	@ 0x28
90025622:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025624:	681b      	ldr	r3, [r3, #0]
90025626:	930f      	str	r3, [sp, #60]	@ 0x3c
90025628:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002562a:	2b00      	cmp	r3, #0
9002562c:	dc03      	bgt.n	90025636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002562e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025630:	2b00      	cmp	r3, #0
90025632:	f340 8387 	ble.w	90025d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90025636:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025638:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002563c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025640:	1e48      	subs	r0, r1, #1
90025642:	1e57      	subs	r7, r2, #1
90025644:	9b07      	ldr	r3, [sp, #28]
90025646:	2b00      	cmp	r3, #0
90025648:	f340 8166 	ble.w	90025918 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002564c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025650:	ea4f 4326 	mov.w	r3, r6, asr #16
90025654:	d406      	bmi.n	90025664 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90025656:	4584      	cmp	ip, r0
90025658:	da04      	bge.n	90025664 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002565a:	2b00      	cmp	r3, #0
9002565c:	db02      	blt.n	90025664 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002565e:	42bb      	cmp	r3, r7
90025660:	f2c0 815b 	blt.w	9002591a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90025664:	f11c 0c01 	adds.w	ip, ip, #1
90025668:	f100 814b 	bmi.w	90025902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002566c:	4561      	cmp	r1, ip
9002566e:	f2c0 8148 	blt.w	90025902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90025672:	3301      	adds	r3, #1
90025674:	f100 8145 	bmi.w	90025902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90025678:	429a      	cmp	r2, r3
9002567a:	f2c0 8142 	blt.w	90025902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002567e:	9b07      	ldr	r3, [sp, #28]
90025680:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90025682:	9317      	str	r3, [sp, #92]	@ 0x5c
90025684:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025686:	2b00      	cmp	r3, #0
90025688:	f340 8165 	ble.w	90025956 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002568c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
9002568e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90025692:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025694:	f3c4 3103 	ubfx	r1, r4, #12, #4
90025698:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002569c:	1422      	asrs	r2, r4, #16
9002569e:	f3c6 3003 	ubfx	r0, r6, #12, #4
900256a2:	689b      	ldr	r3, [r3, #8]
900256a4:	f100 81d5 	bmi.w	90025a52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900256a8:	f103 38ff 	add.w	r8, r3, #4294967295
900256ac:	4542      	cmp	r2, r8
900256ae:	f280 81d0 	bge.w	90025a52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900256b2:	f1bc 0f00 	cmp.w	ip, #0
900256b6:	f2c0 81cc 	blt.w	90025a52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900256ba:	f10e 38ff 	add.w	r8, lr, #4294967295
900256be:	45c4      	cmp	ip, r8
900256c0:	f280 81c7 	bge.w	90025a52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900256c4:	b21b      	sxth	r3, r3
900256c6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900256c8:	fb0c 2203 	mla	r2, ip, r3, r2
900256cc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900256d0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900256d4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900256d8:	2900      	cmp	r1, #0
900256da:	f000 8182 	beq.w	900259e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900256de:	f8d8 5004 	ldr.w	r5, [r8, #4]
900256e2:	950b      	str	r5, [sp, #44]	@ 0x2c
900256e4:	0e2d      	lsrs	r5, r5, #24
900256e6:	9512      	str	r5, [sp, #72]	@ 0x48
900256e8:	b180      	cbz	r0, 9002570c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900256ea:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
900256ee:	3b01      	subs	r3, #1
900256f0:	009b      	lsls	r3, r3, #2
900256f2:	3304      	adds	r3, #4
900256f4:	eb08 0c03 	add.w	ip, r8, r3
900256f8:	f858 3003 	ldr.w	r3, [r8, r3]
900256fc:	9308      	str	r3, [sp, #32]
900256fe:	0e1b      	lsrs	r3, r3, #24
90025700:	9310      	str	r3, [sp, #64]	@ 0x40
90025702:	f8dc 3004 	ldr.w	r3, [ip, #4]
90025706:	930c      	str	r3, [sp, #48]	@ 0x30
90025708:	0e1b      	lsrs	r3, r3, #24
9002570a:	9313      	str	r3, [sp, #76]	@ 0x4c
9002570c:	b289      	uxth	r1, r1
9002570e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90025710:	b280      	uxth	r0, r0
90025712:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90025714:	fb01 f900 	mul.w	r9, r1, r0
90025718:	0109      	lsls	r1, r1, #4
9002571a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002571e:	eba1 0809 	sub.w	r8, r1, r9
90025722:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90025726:	b280      	uxth	r0, r0
90025728:	fa1f f888 	uxth.w	r8, r8
9002572c:	1a09      	subs	r1, r1, r0
9002572e:	fb08 f303 	mul.w	r3, r8, r3
90025732:	b289      	uxth	r1, r1
90025734:	fb01 330e 	mla	r3, r1, lr, r3
90025738:	fb00 3305 	mla	r3, r0, r5, r3
9002573c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002573e:	fb09 3305 	mla	r3, r9, r5, r3
90025742:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025746:	2b00      	cmp	r3, #0
90025748:	f000 80d2 	beq.w	900258f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002574c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90025750:	d01b      	beq.n	9002578a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90025752:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90025756:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002575a:	fb0e fa0a 	mul.w	sl, lr, sl
9002575e:	fb0e fe02 	mul.w	lr, lr, r2
90025762:	ea4f 221a 	mov.w	r2, sl, lsr #8
90025766:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002576a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002576e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025772:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025776:	4452      	add	r2, sl
90025778:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002577c:	0a12      	lsrs	r2, r2, #8
9002577e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025782:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025786:	ea42 020c 	orr.w	r2, r2, ip
9002578a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002578c:	2dff      	cmp	r5, #255	@ 0xff
9002578e:	d021      	beq.n	900257d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90025790:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90025792:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025796:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90025798:	fb05 fb0b 	mul.w	fp, r5, fp
9002579c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002579e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900257a2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900257a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900257a8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900257ac:	fb05 fa0a 	mul.w	sl, r5, sl
900257b0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900257b4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900257b8:	44de      	add	lr, fp
900257ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900257be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900257c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900257c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900257ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900257ce:	ea4e 050a 	orr.w	r5, lr, sl
900257d2:	950b      	str	r5, [sp, #44]	@ 0x2c
900257d4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900257d6:	2dff      	cmp	r5, #255	@ 0xff
900257d8:	d021      	beq.n	9002581e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
900257da:	9d08      	ldr	r5, [sp, #32]
900257dc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900257e0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900257e2:	fb05 fb0b 	mul.w	fp, r5, fp
900257e6:	9d08      	ldr	r5, [sp, #32]
900257e8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900257ec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900257ee:	fb05 fa0e 	mul.w	sl, r5, lr
900257f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900257f6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900257fa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900257fe:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025802:	44de      	add	lr, fp
90025804:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025808:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002580c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025810:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025814:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025818:	ea4e 050a 	orr.w	r5, lr, sl
9002581c:	9508      	str	r5, [sp, #32]
9002581e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025820:	2dff      	cmp	r5, #255	@ 0xff
90025822:	d021      	beq.n	90025868 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90025824:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025826:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002582a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002582c:	fb05 fb0b 	mul.w	fp, r5, fp
90025830:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025832:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025836:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025838:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002583c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025840:	fb05 fa0a 	mul.w	sl, r5, sl
90025844:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025848:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002584c:	44de      	add	lr, fp
9002584e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025852:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025856:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002585a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002585e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025862:	ea4e 050a 	orr.w	r5, lr, sl
90025866:	950c      	str	r5, [sp, #48]	@ 0x30
90025868:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002586a:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
9002586e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025872:	2bff      	cmp	r3, #255	@ 0xff
90025874:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025878:	9d08      	ldr	r5, [sp, #32]
9002587a:	fb08 fc0c 	mul.w	ip, r8, ip
9002587e:	fb01 cc0e 	mla	ip, r1, lr, ip
90025882:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90025886:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025888:	fb00 cc0e 	mla	ip, r0, lr, ip
9002588c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90025890:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90025892:	fb09 cc0e 	mla	ip, r9, lr, ip
90025896:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
9002589a:	fb08 f80e 	mul.w	r8, r8, lr
9002589e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900258a2:	fb01 8202 	mla	r2, r1, r2, r8
900258a6:	9908      	ldr	r1, [sp, #32]
900258a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900258ac:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900258b0:	990c      	ldr	r1, [sp, #48]	@ 0x30
900258b2:	fb00 220a 	mla	r2, r0, sl, r2
900258b6:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
900258ba:	fb09 2900 	mla	r9, r9, r0, r2
900258be:	ea4f 2919 	mov.w	r9, r9, lsr #8
900258c2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900258c6:	ea4c 0c09 	orr.w	ip, ip, r9
900258ca:	ea4f 221c 	mov.w	r2, ip, lsr #8
900258ce:	f040 8091 	bne.w	900259f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900258d2:	ea4f 135c 	mov.w	r3, ip, lsr #5
900258d6:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
900258da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900258de:	f022 0207 	bic.w	r2, r2, #7
900258e2:	431a      	orrs	r2, r3
900258e4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900258e8:	ea4c 0c02 	orr.w	ip, ip, r2
900258ec:	f8a7 c000 	strh.w	ip, [r7]
900258f0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900258f2:	3702      	adds	r7, #2
900258f4:	441c      	add	r4, r3
900258f6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900258f8:	441e      	add	r6, r3
900258fa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900258fc:	3b01      	subs	r3, #1
900258fe:	9317      	str	r3, [sp, #92]	@ 0x5c
90025900:	e6c0      	b.n	90025684 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90025902:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025904:	441c      	add	r4, r3
90025906:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025908:	441e      	add	r6, r3
9002590a:	9b07      	ldr	r3, [sp, #28]
9002590c:	3b01      	subs	r3, #1
9002590e:	9307      	str	r3, [sp, #28]
90025910:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025912:	3302      	adds	r3, #2
90025914:	930a      	str	r3, [sp, #40]	@ 0x28
90025916:	e695      	b.n	90025644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025918:	d024      	beq.n	90025964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9002591a:	9b07      	ldr	r3, [sp, #28]
9002591c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002591e:	3b01      	subs	r3, #1
90025920:	fb00 4003 	mla	r0, r0, r3, r4
90025924:	1400      	asrs	r0, r0, #16
90025926:	f53f aeaa 	bmi.w	9002567e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002592a:	3901      	subs	r1, #1
9002592c:	4288      	cmp	r0, r1
9002592e:	f6bf aea6 	bge.w	9002567e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025932:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90025934:	fb01 6303 	mla	r3, r1, r3, r6
90025938:	141b      	asrs	r3, r3, #16
9002593a:	f53f aea0 	bmi.w	9002567e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002593e:	3a01      	subs	r2, #1
90025940:	4293      	cmp	r3, r2
90025942:	f6bf ae9c 	bge.w	9002567e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025946:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002594a:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
9002594e:	f1bb 0f00 	cmp.w	fp, #0
90025952:	f300 809a 	bgt.w	90025a8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90025956:	9b07      	ldr	r3, [sp, #28]
90025958:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002595c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002595e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025962:	930a      	str	r3, [sp, #40]	@ 0x28
90025964:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025966:	2b00      	cmp	r3, #0
90025968:	f340 81ec 	ble.w	90025d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
9002596c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025970:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025972:	ee30 0a04 	vadd.f32	s0, s0, s8
90025976:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002597a:	eef0 6a62 	vmov.f32	s13, s5
9002597e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025982:	ee31 1a05 	vadd.f32	s2, s2, s10
90025986:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002598a:	ee16 4a90 	vmov	r4, s13
9002598e:	eef0 6a43 	vmov.f32	s13, s6
90025992:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025996:	ee16 6a90 	vmov	r6, s13
9002599a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002599e:	ee61 7a27 	vmul.f32	s15, s2, s15
900259a2:	ee77 2a62 	vsub.f32	s5, s14, s5
900259a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900259aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900259ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900259b2:	ee12 2a90 	vmov	r2, s5
900259b6:	eef0 2a47 	vmov.f32	s5, s14
900259ba:	fb92 f3f3 	sdiv	r3, r2, r3
900259be:	ee13 2a10 	vmov	r2, s6
900259c2:	9327      	str	r3, [sp, #156]	@ 0x9c
900259c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900259c6:	eeb0 3a67 	vmov.f32	s6, s15
900259ca:	fb92 f3f3 	sdiv	r3, r2, r3
900259ce:	9328      	str	r3, [sp, #160]	@ 0xa0
900259d0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900259d2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900259d4:	3b01      	subs	r3, #1
900259d6:	9316      	str	r3, [sp, #88]	@ 0x58
900259d8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900259da:	bf08      	it	eq
900259dc:	4613      	moveq	r3, r2
900259de:	9307      	str	r3, [sp, #28]
900259e0:	e622      	b.n	90025628 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
900259e2:	2800      	cmp	r0, #0
900259e4:	f43f ae92 	beq.w	9002570c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900259e8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900259ec:	9308      	str	r3, [sp, #32]
900259ee:	0e1b      	lsrs	r3, r3, #24
900259f0:	9310      	str	r3, [sp, #64]	@ 0x40
900259f2:	e68b      	b.n	9002570c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900259f4:	8839      	ldrh	r1, [r7, #0]
900259f6:	43db      	mvns	r3, r3
900259f8:	4dd4      	ldr	r5, [pc, #848]	@ (90025d4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900259fa:	ea4f 2e21 	mov.w	lr, r1, asr #8
900259fe:	fa5f f883 	uxtb.w	r8, r3
90025a02:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90025a06:	10c8      	asrs	r0, r1, #3
90025a08:	00cb      	lsls	r3, r1, #3
90025a0a:	fb0e fe08 	mul.w	lr, lr, r8
90025a0e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025a12:	b2db      	uxtb	r3, r3
90025a14:	f10e 0101 	add.w	r1, lr, #1
90025a18:	fb00 f008 	mul.w	r0, r0, r8
90025a1c:	fb03 f308 	mul.w	r3, r3, r8
90025a20:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90025a24:	ea4f 411c 	mov.w	r1, ip, lsr #16
90025a28:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90025a2c:	f100 0e01 	add.w	lr, r0, #1
90025a30:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90025a34:	b2c9      	uxtb	r1, r1
90025a36:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90025a3a:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90025a3e:	00d2      	lsls	r2, r2, #3
90025a40:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025a44:	430a      	orrs	r2, r1
90025a46:	1c59      	adds	r1, r3, #1
90025a48:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90025a4c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90025a50:	e748      	b.n	900258e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90025a52:	f112 0801 	adds.w	r8, r2, #1
90025a56:	f53f af4b 	bmi.w	900258f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025a5a:	4543      	cmp	r3, r8
90025a5c:	f6ff af48 	blt.w	900258f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025a60:	f11c 0801 	adds.w	r8, ip, #1
90025a64:	f53f af44 	bmi.w	900258f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025a68:	45c6      	cmp	lr, r8
90025a6a:	f6ff af41 	blt.w	900258f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025a6e:	b21b      	sxth	r3, r3
90025a70:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90025a74:	fa0f f28e 	sxth.w	r2, lr
90025a78:	e9cd 1003 	strd	r1, r0, [sp, #12]
90025a7c:	9200      	str	r2, [sp, #0]
90025a7e:	4639      	mov	r1, r7
90025a80:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90025a82:	9819      	ldr	r0, [sp, #100]	@ 0x64
90025a84:	f7ff fc88 	bl	90025398 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90025a88:	e732      	b.n	900258f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025a8a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025a8c:	1421      	asrs	r1, r4, #16
90025a8e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90025a90:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025a94:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90025a98:	1433      	asrs	r3, r6, #16
90025a9a:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025a9e:	fb07 1303 	mla	r3, r7, r3, r1
90025aa2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90025aa4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90025aa8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90025aac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025ab0:	2a00      	cmp	r2, #0
90025ab2:	f000 8108 	beq.w	90025cc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90025ab6:	684d      	ldr	r5, [r1, #4]
90025ab8:	950d      	str	r5, [sp, #52]	@ 0x34
90025aba:	0e2d      	lsrs	r5, r5, #24
90025abc:	9514      	str	r5, [sp, #80]	@ 0x50
90025abe:	b178      	cbz	r0, 90025ae0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025ac0:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90025ac4:	3f01      	subs	r7, #1
90025ac6:	00bf      	lsls	r7, r7, #2
90025ac8:	3704      	adds	r7, #4
90025aca:	eb01 0e07 	add.w	lr, r1, r7
90025ace:	59c9      	ldr	r1, [r1, r7]
90025ad0:	9109      	str	r1, [sp, #36]	@ 0x24
90025ad2:	0e09      	lsrs	r1, r1, #24
90025ad4:	9111      	str	r1, [sp, #68]	@ 0x44
90025ad6:	f8de 1004 	ldr.w	r1, [lr, #4]
90025ada:	910e      	str	r1, [sp, #56]	@ 0x38
90025adc:	0e09      	lsrs	r1, r1, #24
90025ade:	9115      	str	r1, [sp, #84]	@ 0x54
90025ae0:	b292      	uxth	r2, r2
90025ae2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025ae4:	b280      	uxth	r0, r0
90025ae6:	fb02 f900 	mul.w	r9, r2, r0
90025aea:	0112      	lsls	r2, r2, #4
90025aec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025af0:	eba2 0e09 	sub.w	lr, r2, r9
90025af4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90025af8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90025afa:	b280      	uxth	r0, r0
90025afc:	fa1f fe8e 	uxth.w	lr, lr
90025b00:	1a09      	subs	r1, r1, r0
90025b02:	fb0e f202 	mul.w	r2, lr, r2
90025b06:	b289      	uxth	r1, r1
90025b08:	fb01 220c 	mla	r2, r1, ip, r2
90025b0c:	fb00 2205 	mla	r2, r0, r5, r2
90025b10:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90025b12:	fb09 2205 	mla	r2, r9, r5, r2
90025b16:	f3c2 2207 	ubfx	r2, r2, #8, #8
90025b1a:	2a00      	cmp	r2, #0
90025b1c:	f000 80ca 	beq.w	90025cb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025b20:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90025b24:	d019      	beq.n	90025b5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90025b26:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025b2a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025b2e:	fb0c fa0a 	mul.w	sl, ip, sl
90025b32:	fb0c fc03 	mul.w	ip, ip, r3
90025b36:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025b3a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025b3e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90025b42:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025b46:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90025b4a:	4453      	add	r3, sl
90025b4c:	0a3f      	lsrs	r7, r7, #8
90025b4e:	0a1b      	lsrs	r3, r3, #8
90025b50:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90025b54:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025b58:	433b      	orrs	r3, r7
90025b5a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025b5c:	2dff      	cmp	r5, #255	@ 0xff
90025b5e:	d020      	beq.n	90025ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90025b60:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025b62:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90025b66:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025b68:	436f      	muls	r7, r5
90025b6a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025b6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025b70:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025b74:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025b76:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025b7a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025b7e:	fb05 fa0a 	mul.w	sl, r5, sl
90025b82:	44bc      	add	ip, r7
90025b84:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025b88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025b8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025b90:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025b94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025b98:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025b9c:	ea4c 050a 	orr.w	r5, ip, sl
90025ba0:	950d      	str	r5, [sp, #52]	@ 0x34
90025ba2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025ba4:	2dff      	cmp	r5, #255	@ 0xff
90025ba6:	d020      	beq.n	90025bea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90025ba8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90025baa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90025bae:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025bb0:	436f      	muls	r7, r5
90025bb2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90025bb4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90025bb8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025bba:	fb05 fa0c 	mul.w	sl, r5, ip
90025bbe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025bc2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025bc6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025bca:	44bc      	add	ip, r7
90025bcc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025bd0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025bd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025bd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025bdc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025be0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025be4:	ea4c 050a 	orr.w	r5, ip, sl
90025be8:	9509      	str	r5, [sp, #36]	@ 0x24
90025bea:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90025bec:	2dff      	cmp	r5, #255	@ 0xff
90025bee:	d020      	beq.n	90025c32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90025bf0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90025bf2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90025bf6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90025bf8:	436f      	muls	r7, r5
90025bfa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90025bfc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025c00:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025c04:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90025c06:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025c0a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025c0e:	fb05 fa0a 	mul.w	sl, r5, sl
90025c12:	44bc      	add	ip, r7
90025c14:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025c18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025c1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025c20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025c24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025c28:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025c2c:	ea4c 050a 	orr.w	r5, ip, sl
90025c30:	950e      	str	r5, [sp, #56]	@ 0x38
90025c32:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025c34:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90025c38:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025c3c:	2aff      	cmp	r2, #255	@ 0xff
90025c3e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90025c42:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90025c44:	fb0e f707 	mul.w	r7, lr, r7
90025c48:	fb01 770c 	mla	r7, r1, ip, r7
90025c4c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025c50:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90025c52:	fb00 770c 	mla	r7, r0, ip, r7
90025c56:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025c5a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025c5c:	fb09 770c 	mla	r7, r9, ip, r7
90025c60:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90025c64:	fb0e fe0c 	mul.w	lr, lr, ip
90025c68:	ea4f 2717 	mov.w	r7, r7, lsr #8
90025c6c:	fb01 e303 	mla	r3, r1, r3, lr
90025c70:	9909      	ldr	r1, [sp, #36]	@ 0x24
90025c72:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90025c76:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90025c7a:	990e      	ldr	r1, [sp, #56]	@ 0x38
90025c7c:	fb00 330a 	mla	r3, r0, sl, r3
90025c80:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90025c84:	fb09 3c0c 	mla	ip, r9, ip, r3
90025c88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025c8c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025c90:	ea47 070c 	orr.w	r7, r7, ip
90025c94:	ea4f 2317 	mov.w	r3, r7, lsr #8
90025c98:	d11e      	bne.n	90025cd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90025c9a:	097a      	lsrs	r2, r7, #5
90025c9c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90025ca0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90025ca4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025ca8:	f023 0307 	bic.w	r3, r3, #7
90025cac:	4313      	orrs	r3, r2
90025cae:	431f      	orrs	r7, r3
90025cb0:	f8a8 7000 	strh.w	r7, [r8]
90025cb4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025cb6:	f108 0802 	add.w	r8, r8, #2
90025cba:	f10b 3bff 	add.w	fp, fp, #4294967295
90025cbe:	441c      	add	r4, r3
90025cc0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025cc2:	441e      	add	r6, r3
90025cc4:	e643      	b.n	9002594e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90025cc6:	2800      	cmp	r0, #0
90025cc8:	f43f af0a 	beq.w	90025ae0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025ccc:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90025cd0:	9109      	str	r1, [sp, #36]	@ 0x24
90025cd2:	0e09      	lsrs	r1, r1, #24
90025cd4:	9111      	str	r1, [sp, #68]	@ 0x44
90025cd6:	e703      	b.n	90025ae0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025cd8:	f8b8 1000 	ldrh.w	r1, [r8]
90025cdc:	43d2      	mvns	r2, r2
90025cde:	ea4f 2c21 	mov.w	ip, r1, asr #8
90025ce2:	fa5f fe82 	uxtb.w	lr, r2
90025ce6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90025cea:	10c8      	asrs	r0, r1, #3
90025cec:	00ca      	lsls	r2, r1, #3
90025cee:	fb0c fc0e 	mul.w	ip, ip, lr
90025cf2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025cf6:	b2d2      	uxtb	r2, r2
90025cf8:	f10c 0101 	add.w	r1, ip, #1
90025cfc:	fb00 f00e 	mul.w	r0, r0, lr
90025d00:	fb02 f20e 	mul.w	r2, r2, lr
90025d04:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025d08:	0c39      	lsrs	r1, r7, #16
90025d0a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025d0e:	490f      	ldr	r1, [pc, #60]	@ (90025d4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90025d10:	fa5f fc8c 	uxtb.w	ip, ip
90025d14:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90025d18:	1c41      	adds	r1, r0, #1
90025d1a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025d1e:	1c51      	adds	r1, r2, #1
90025d20:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025d24:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025d28:	00c0      	lsls	r0, r0, #3
90025d2a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90025d2e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025d32:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90025d36:	ea4c 0c00 	orr.w	ip, ip, r0
90025d3a:	ea47 0c0c 	orr.w	ip, r7, ip
90025d3e:	f8a8 c000 	strh.w	ip, [r8]
90025d42:	e7b7      	b.n	90025cb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025d44:	b01b      	add	sp, #108	@ 0x6c
90025d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025d4a:	bf00      	nop
90025d4c:	fffff800 	.word	0xfffff800

90025d50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90025d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025d54:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90025d58:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90025d5c:	2d00      	cmp	r5, #0
90025d5e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90025d62:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90025d66:	fb05 0e03 	mla	lr, r5, r3, r0
90025d6a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90025d6e:	f2c0 808c 	blt.w	90025e8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90025d72:	45a9      	cmp	r9, r5
90025d74:	f340 8089 	ble.w	90025e8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90025d78:	2800      	cmp	r0, #0
90025d7a:	f2c0 8084 	blt.w	90025e86 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90025d7e:	4580      	cmp	r8, r0
90025d80:	f340 8081 	ble.w	90025e86 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90025d84:	ea4f 045e 	mov.w	r4, lr, lsr #1
90025d88:	f01e 0f01 	tst.w	lr, #1
90025d8c:	5d16      	ldrb	r6, [r2, r4]
90025d8e:	bf0c      	ite	eq
90025d90:	f006 060f 	andeq.w	r6, r6, #15
90025d94:	1136      	asrne	r6, r6, #4
90025d96:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90025d9a:	b2f6      	uxtb	r6, r6
90025d9c:	1c44      	adds	r4, r0, #1
90025d9e:	d477      	bmi.n	90025e90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90025da0:	45a0      	cmp	r8, r4
90025da2:	dd75      	ble.n	90025e90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90025da4:	2f00      	cmp	r7, #0
90025da6:	d075      	beq.n	90025e94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90025da8:	f10e 0a01 	add.w	sl, lr, #1
90025dac:	ea4f 045a 	mov.w	r4, sl, lsr #1
90025db0:	f01a 0f01 	tst.w	sl, #1
90025db4:	5d14      	ldrb	r4, [r2, r4]
90025db6:	bf0c      	ite	eq
90025db8:	f004 040f 	andeq.w	r4, r4, #15
90025dbc:	1124      	asrne	r4, r4, #4
90025dbe:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90025dc2:	b2e4      	uxtb	r4, r4
90025dc4:	3501      	adds	r5, #1
90025dc6:	d469      	bmi.n	90025e9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90025dc8:	45a9      	cmp	r9, r5
90025dca:	dd67      	ble.n	90025e9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90025dcc:	f1bc 0f00 	cmp.w	ip, #0
90025dd0:	d067      	beq.n	90025ea2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90025dd2:	2800      	cmp	r0, #0
90025dd4:	db60      	blt.n	90025e98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90025dd6:	4580      	cmp	r8, r0
90025dd8:	dd5e      	ble.n	90025e98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90025dda:	eb03 090e 	add.w	r9, r3, lr
90025dde:	ea4f 0559 	mov.w	r5, r9, lsr #1
90025de2:	f019 0f01 	tst.w	r9, #1
90025de6:	5d55      	ldrb	r5, [r2, r5]
90025de8:	bf0c      	ite	eq
90025dea:	f005 050f 	andeq.w	r5, r5, #15
90025dee:	112d      	asrne	r5, r5, #4
90025df0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90025df4:	b2ed      	uxtb	r5, r5
90025df6:	3001      	adds	r0, #1
90025df8:	d456      	bmi.n	90025ea8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90025dfa:	4580      	cmp	r8, r0
90025dfc:	dd54      	ble.n	90025ea8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90025dfe:	2f00      	cmp	r7, #0
90025e00:	d054      	beq.n	90025eac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90025e02:	3301      	adds	r3, #1
90025e04:	449e      	add	lr, r3
90025e06:	ea4f 035e 	mov.w	r3, lr, lsr #1
90025e0a:	f01e 0f01 	tst.w	lr, #1
90025e0e:	5cd0      	ldrb	r0, [r2, r3]
90025e10:	bf0c      	ite	eq
90025e12:	f000 000f 	andeq.w	r0, r0, #15
90025e16:	1100      	asrne	r0, r0, #4
90025e18:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025e1c:	b2c3      	uxtb	r3, r0
90025e1e:	b2ba      	uxth	r2, r7
90025e20:	fa1f fc8c 	uxth.w	ip, ip
90025e24:	fb02 f00c 	mul.w	r0, r2, ip
90025e28:	0112      	lsls	r2, r2, #4
90025e2a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90025e2e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90025e32:	1a12      	subs	r2, r2, r0
90025e34:	fa1f fc8c 	uxth.w	ip, ip
90025e38:	b292      	uxth	r2, r2
90025e3a:	eba7 070c 	sub.w	r7, r7, ip
90025e3e:	4362      	muls	r2, r4
90025e40:	b2bf      	uxth	r7, r7
90025e42:	fb06 2207 	mla	r2, r6, r7, r2
90025e46:	fb0c 2505 	mla	r5, ip, r5, r2
90025e4a:	fb00 5303 	mla	r3, r0, r3, r5
90025e4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025e52:	b1b3      	cbz	r3, 90025e82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025e54:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90025e58:	435a      	muls	r2, r3
90025e5a:	1c53      	adds	r3, r2, #1
90025e5c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025e60:	4a2d      	ldr	r2, [pc, #180]	@ (90025f18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90025e62:	121b      	asrs	r3, r3, #8
90025e64:	6812      	ldr	r2, [r2, #0]
90025e66:	2bff      	cmp	r3, #255	@ 0xff
90025e68:	ea4f 2612 	mov.w	r6, r2, lsr #8
90025e6c:	d120      	bne.n	90025eb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90025e6e:	0950      	lsrs	r0, r2, #5
90025e70:	4b2a      	ldr	r3, [pc, #168]	@ (90025f1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90025e72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025e76:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025e7a:	4033      	ands	r3, r6
90025e7c:	4318      	orrs	r0, r3
90025e7e:	4302      	orrs	r2, r0
90025e80:	800a      	strh	r2, [r1, #0]
90025e82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025e86:	2600      	movs	r6, #0
90025e88:	e788      	b.n	90025d9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90025e8a:	2400      	movs	r4, #0
90025e8c:	4626      	mov	r6, r4
90025e8e:	e799      	b.n	90025dc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025e90:	2400      	movs	r4, #0
90025e92:	e797      	b.n	90025dc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025e94:	463c      	mov	r4, r7
90025e96:	e795      	b.n	90025dc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025e98:	2500      	movs	r5, #0
90025e9a:	e7ac      	b.n	90025df6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90025e9c:	2300      	movs	r3, #0
90025e9e:	461d      	mov	r5, r3
90025ea0:	e7bd      	b.n	90025e1e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025ea2:	4663      	mov	r3, ip
90025ea4:	4665      	mov	r5, ip
90025ea6:	e7ba      	b.n	90025e1e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025ea8:	2300      	movs	r3, #0
90025eaa:	e7b8      	b.n	90025e1e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025eac:	463b      	mov	r3, r7
90025eae:	e7b6      	b.n	90025e1e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025eb0:	880d      	ldrh	r5, [r1, #0]
90025eb2:	b29f      	uxth	r7, r3
90025eb4:	f3c2 4007 	ubfx	r0, r2, #16, #8
90025eb8:	43db      	mvns	r3, r3
90025eba:	122c      	asrs	r4, r5, #8
90025ebc:	fb10 f007 	smulbb	r0, r0, r7
90025ec0:	b2db      	uxtb	r3, r3
90025ec2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90025ec6:	b2f6      	uxtb	r6, r6
90025ec8:	b2d2      	uxtb	r2, r2
90025eca:	fb04 0403 	mla	r4, r4, r3, r0
90025ece:	10e8      	asrs	r0, r5, #3
90025ed0:	fb12 f207 	smulbb	r2, r2, r7
90025ed4:	00ed      	lsls	r5, r5, #3
90025ed6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025eda:	b2a4      	uxth	r4, r4
90025edc:	fb16 f607 	smulbb	r6, r6, r7
90025ee0:	b2ed      	uxtb	r5, r5
90025ee2:	fb00 6603 	mla	r6, r0, r3, r6
90025ee6:	fb05 2303 	mla	r3, r5, r3, r2
90025eea:	b2b0      	uxth	r0, r6
90025eec:	b29a      	uxth	r2, r3
90025eee:	1c63      	adds	r3, r4, #1
90025ef0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90025ef4:	1c53      	adds	r3, r2, #1
90025ef6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025efa:	1c42      	adds	r2, r0, #1
90025efc:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90025f00:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025f04:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025f08:	0940      	lsrs	r0, r0, #5
90025f0a:	4323      	orrs	r3, r4
90025f0c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025f10:	4303      	orrs	r3, r0
90025f12:	800b      	strh	r3, [r1, #0]
90025f14:	e7b5      	b.n	90025e82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025f16:	bf00      	nop
90025f18:	24021bec 	.word	0x24021bec
90025f1c:	00fff800 	.word	0x00fff800

90025f20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025f24:	b097      	sub	sp, #92	@ 0x5c
90025f26:	9214      	str	r2, [sp, #80]	@ 0x50
90025f28:	9309      	str	r3, [sp, #36]	@ 0x24
90025f2a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90025f2c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90025f30:	9015      	str	r0, [sp, #84]	@ 0x54
90025f32:	910d      	str	r1, [sp, #52]	@ 0x34
90025f34:	6850      	ldr	r0, [r2, #4]
90025f36:	930f      	str	r3, [sp, #60]	@ 0x3c
90025f38:	6812      	ldr	r2, [r2, #0]
90025f3a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90025f3e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90025f42:	fb00 1303 	mla	r3, r0, r3, r1
90025f46:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90025f4a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025f4c:	689b      	ldr	r3, [r3, #8]
90025f4e:	3301      	adds	r3, #1
90025f50:	f023 0301 	bic.w	r3, r3, #1
90025f54:	930a      	str	r3, [sp, #40]	@ 0x28
90025f56:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025f58:	681f      	ldr	r7, [r3, #0]
90025f5a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025f5c:	2b00      	cmp	r3, #0
90025f5e:	dc03      	bgt.n	90025f68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025f60:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90025f62:	2b00      	cmp	r3, #0
90025f64:	f340 8289 	ble.w	9002647a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90025f68:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025f6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025f6e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025f72:	1e48      	subs	r0, r1, #1
90025f74:	f102 3cff 	add.w	ip, r2, #4294967295
90025f78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025f7a:	2b00      	cmp	r3, #0
90025f7c:	f340 80c5 	ble.w	9002610a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90025f80:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025f84:	ea4f 4326 	mov.w	r3, r6, asr #16
90025f88:	d406      	bmi.n	90025f98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025f8a:	4586      	cmp	lr, r0
90025f8c:	da04      	bge.n	90025f98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025f8e:	2b00      	cmp	r3, #0
90025f90:	db02      	blt.n	90025f98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025f92:	4563      	cmp	r3, ip
90025f94:	f2c0 80ba 	blt.w	9002610c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90025f98:	f11e 0e01 	adds.w	lr, lr, #1
90025f9c:	f100 80ab 	bmi.w	900260f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025fa0:	4571      	cmp	r1, lr
90025fa2:	f2c0 80a8 	blt.w	900260f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025fa6:	3301      	adds	r3, #1
90025fa8:	f100 80a5 	bmi.w	900260f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025fac:	429a      	cmp	r2, r3
90025fae:	f2c0 80a2 	blt.w	900260f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025fb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025fb4:	46c8      	mov	r8, r9
90025fb6:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90025fba:	930e      	str	r3, [sp, #56]	@ 0x38
90025fbc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025fbe:	2b00      	cmp	r3, #0
90025fc0:	f340 80c4 	ble.w	9002614c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90025fc4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025fc6:	1430      	asrs	r0, r6, #16
90025fc8:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025fcc:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025fd0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90025fd4:	1423      	asrs	r3, r4, #16
90025fd6:	f100 814f 	bmi.w	90026278 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025fda:	f10c 3bff 	add.w	fp, ip, #4294967295
90025fde:	455b      	cmp	r3, fp
90025fe0:	f280 814a 	bge.w	90026278 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025fe4:	2800      	cmp	r0, #0
90025fe6:	f2c0 8147 	blt.w	90026278 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025fea:	f10e 3bff 	add.w	fp, lr, #4294967295
90025fee:	4558      	cmp	r0, fp
90025ff0:	f280 8142 	bge.w	90026278 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025ff4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90025ff6:	fb00 3305 	mla	r3, r0, r5, r3
90025ffa:	0858      	lsrs	r0, r3, #1
90025ffc:	07dd      	lsls	r5, r3, #31
90025ffe:	f817 c000 	ldrb.w	ip, [r7, r0]
90026002:	bf54      	ite	pl
90026004:	f00c 0c0f 	andpl.w	ip, ip, #15
90026008:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002600c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026010:	fa5f fc8c 	uxtb.w	ip, ip
90026014:	2a00      	cmp	r2, #0
90026016:	f000 80dd 	beq.w	900261d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002601a:	1c58      	adds	r0, r3, #1
9002601c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90026020:	07c0      	lsls	r0, r0, #31
90026022:	f817 e00e 	ldrb.w	lr, [r7, lr]
90026026:	bf54      	ite	pl
90026028:	f00e 0e0f 	andpl.w	lr, lr, #15
9002602c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90026030:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90026034:	fa5f f08e 	uxtb.w	r0, lr
90026038:	9010      	str	r0, [sp, #64]	@ 0x40
9002603a:	b1d9      	cbz	r1, 90026074 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002603c:	4453      	add	r3, sl
9002603e:	0858      	lsrs	r0, r3, #1
90026040:	07dd      	lsls	r5, r3, #31
90026042:	f103 0301 	add.w	r3, r3, #1
90026046:	5c38      	ldrb	r0, [r7, r0]
90026048:	bf54      	ite	pl
9002604a:	f000 000f 	andpl.w	r0, r0, #15
9002604e:	1100      	asrmi	r0, r0, #4
90026050:	07dd      	lsls	r5, r3, #31
90026052:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026056:	b2c0      	uxtb	r0, r0
90026058:	900b      	str	r0, [sp, #44]	@ 0x2c
9002605a:	ea4f 0053 	mov.w	r0, r3, lsr #1
9002605e:	f817 e000 	ldrb.w	lr, [r7, r0]
90026062:	bf54      	ite	pl
90026064:	f00e 030f 	andpl.w	r3, lr, #15
90026068:	ea4f 132e 	movmi.w	r3, lr, asr #4
9002606c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026070:	b2db      	uxtb	r3, r3
90026072:	9311      	str	r3, [sp, #68]	@ 0x44
90026074:	b292      	uxth	r2, r2
90026076:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026078:	b289      	uxth	r1, r1
9002607a:	fb02 f301 	mul.w	r3, r2, r1
9002607e:	0112      	lsls	r2, r2, #4
90026080:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90026084:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90026088:	1ad2      	subs	r2, r2, r3
9002608a:	b289      	uxth	r1, r1
9002608c:	b292      	uxth	r2, r2
9002608e:	1a40      	subs	r0, r0, r1
90026090:	436a      	muls	r2, r5
90026092:	b280      	uxth	r0, r0
90026094:	fb0c 2c00 	mla	ip, ip, r0, r2
90026098:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002609a:	fb01 c102 	mla	r1, r1, r2, ip
9002609e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900260a0:	fb03 1302 	mla	r3, r3, r2, r1
900260a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900260a8:	b1db      	cbz	r3, 900260e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900260aa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900260ac:	4353      	muls	r3, r2
900260ae:	1c5a      	adds	r2, r3, #1
900260b0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900260b4:	4ac6      	ldr	r2, [pc, #792]	@ (900263d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900260b6:	121b      	asrs	r3, r3, #8
900260b8:	6812      	ldr	r2, [r2, #0]
900260ba:	2bff      	cmp	r3, #255	@ 0xff
900260bc:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900260c0:	f040 8099 	bne.w	900261f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900260c4:	0953      	lsrs	r3, r2, #5
900260c6:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900260ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900260ce:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900260d2:	f02c 0c07 	bic.w	ip, ip, #7
900260d6:	ea43 0c0c 	orr.w	ip, r3, ip
900260da:	ea4c 0202 	orr.w	r2, ip, r2
900260de:	f8a8 2000 	strh.w	r2, [r8]
900260e2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900260e4:	f108 0802 	add.w	r8, r8, #2
900260e8:	441c      	add	r4, r3
900260ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900260ec:	441e      	add	r6, r3
900260ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900260f0:	3b01      	subs	r3, #1
900260f2:	930e      	str	r3, [sp, #56]	@ 0x38
900260f4:	e762      	b.n	90025fbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900260f6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900260f8:	f109 0902 	add.w	r9, r9, #2
900260fc:	441c      	add	r4, r3
900260fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026100:	441e      	add	r6, r3
90026102:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026104:	3b01      	subs	r3, #1
90026106:	9309      	str	r3, [sp, #36]	@ 0x24
90026108:	e736      	b.n	90025f78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002610a:	d024      	beq.n	90026156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002610c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002610e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90026110:	3b01      	subs	r3, #1
90026112:	fb00 4003 	mla	r0, r0, r3, r4
90026116:	1400      	asrs	r0, r0, #16
90026118:	f53f af4b 	bmi.w	90025fb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002611c:	3901      	subs	r1, #1
9002611e:	4288      	cmp	r0, r1
90026120:	f6bf af47 	bge.w	90025fb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026124:	9924      	ldr	r1, [sp, #144]	@ 0x90
90026126:	fb01 6303 	mla	r3, r1, r3, r6
9002612a:	141b      	asrs	r3, r3, #16
9002612c:	f53f af41 	bmi.w	90025fb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026130:	3a01      	subs	r2, #1
90026132:	4293      	cmp	r3, r2
90026134:	f6bf af3d 	bge.w	90025fb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026138:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9002613c:	46c8      	mov	r8, r9
9002613e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90026142:	930e      	str	r3, [sp, #56]	@ 0x38
90026144:	f1bb 0f00 	cmp.w	fp, #0
90026148:	f300 80b7 	bgt.w	900262ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
9002614c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002614e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026152:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90026156:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026158:	2b00      	cmp	r3, #0
9002615a:	f340 818e 	ble.w	9002647a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002615e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026162:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026164:	ee30 0a04 	vadd.f32	s0, s0, s8
90026168:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002616c:	eef0 6a62 	vmov.f32	s13, s5
90026170:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026174:	ee31 1a05 	vadd.f32	s2, s2, s10
90026178:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002617c:	ee16 4a90 	vmov	r4, s13
90026180:	eef0 6a43 	vmov.f32	s13, s6
90026184:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026188:	ee16 6a90 	vmov	r6, s13
9002618c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026190:	ee61 7a27 	vmul.f32	s15, s2, s15
90026194:	ee77 2a62 	vsub.f32	s5, s14, s5
90026198:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002619c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900261a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900261a4:	ee12 2a90 	vmov	r2, s5
900261a8:	eef0 2a47 	vmov.f32	s5, s14
900261ac:	fb92 f3f3 	sdiv	r3, r2, r3
900261b0:	ee13 2a10 	vmov	r2, s6
900261b4:	9323      	str	r3, [sp, #140]	@ 0x8c
900261b6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900261b8:	eeb0 3a67 	vmov.f32	s6, s15
900261bc:	fb92 f3f3 	sdiv	r3, r2, r3
900261c0:	9324      	str	r3, [sp, #144]	@ 0x90
900261c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900261c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900261c6:	3b01      	subs	r3, #1
900261c8:	930d      	str	r3, [sp, #52]	@ 0x34
900261ca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900261cc:	bf08      	it	eq
900261ce:	4613      	moveq	r3, r2
900261d0:	9309      	str	r3, [sp, #36]	@ 0x24
900261d2:	e6c2      	b.n	90025f5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900261d4:	2900      	cmp	r1, #0
900261d6:	f43f af4d 	beq.w	90026074 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900261da:	eb0a 0003 	add.w	r0, sl, r3
900261de:	0843      	lsrs	r3, r0, #1
900261e0:	07c0      	lsls	r0, r0, #31
900261e2:	5cfb      	ldrb	r3, [r7, r3]
900261e4:	bf54      	ite	pl
900261e6:	f003 030f 	andpl.w	r3, r3, #15
900261ea:	111b      	asrmi	r3, r3, #4
900261ec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900261f0:	b2db      	uxtb	r3, r3
900261f2:	930b      	str	r3, [sp, #44]	@ 0x2c
900261f4:	e73e      	b.n	90026074 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900261f6:	f8b8 e000 	ldrh.w	lr, [r8]
900261fa:	fa1f fb83 	uxth.w	fp, r3
900261fe:	f3c2 4107 	ubfx	r1, r2, #16, #8
90026202:	43db      	mvns	r3, r3
90026204:	ea4f 202e 	mov.w	r0, lr, asr #8
90026208:	fb11 f10b 	smulbb	r1, r1, fp
9002620c:	b2db      	uxtb	r3, r3
9002620e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026212:	fa5f fc8c 	uxtb.w	ip, ip
90026216:	b2d2      	uxtb	r2, r2
90026218:	fb00 1003 	mla	r0, r0, r3, r1
9002621c:	ea4f 01ee 	mov.w	r1, lr, asr #3
90026220:	fb1c fc0b 	smulbb	ip, ip, fp
90026224:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90026228:	b280      	uxth	r0, r0
9002622a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002622e:	fb12 fb0b 	smulbb	fp, r2, fp
90026232:	fa5f fe8e 	uxtb.w	lr, lr
90026236:	fb01 cc03 	mla	ip, r1, r3, ip
9002623a:	fb0e bb03 	mla	fp, lr, r3, fp
9002623e:	1c43      	adds	r3, r0, #1
90026240:	fa1f fc8c 	uxth.w	ip, ip
90026244:	fa1f fb8b 	uxth.w	fp, fp
90026248:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002624c:	f10c 0101 	add.w	r1, ip, #1
90026250:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90026254:	f10b 0001 	add.w	r0, fp, #1
90026258:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002625c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90026260:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90026264:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026268:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002626c:	4318      	orrs	r0, r3
9002626e:	ea40 000c 	orr.w	r0, r0, ip
90026272:	f8a8 0000 	strh.w	r0, [r8]
90026276:	e734      	b.n	900260e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026278:	f113 0b01 	adds.w	fp, r3, #1
9002627c:	f53f af31 	bmi.w	900260e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026280:	45dc      	cmp	ip, fp
90026282:	f6ff af2e 	blt.w	900260e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026286:	f110 0b01 	adds.w	fp, r0, #1
9002628a:	f53f af2a 	bmi.w	900260e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002628e:	45de      	cmp	lr, fp
90026290:	f6ff af27 	blt.w	900260e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026294:	9302      	str	r3, [sp, #8]
90026296:	fa0f f38e 	sxth.w	r3, lr
9002629a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002629c:	9301      	str	r3, [sp, #4]
9002629e:	fa0f f38c 	sxth.w	r3, ip
900262a2:	e9cd 0203 	strd	r0, r2, [sp, #12]
900262a6:	e9cd 1505 	strd	r1, r5, [sp, #20]
900262aa:	9300      	str	r3, [sp, #0]
900262ac:	463a      	mov	r2, r7
900262ae:	4653      	mov	r3, sl
900262b0:	4641      	mov	r1, r8
900262b2:	9815      	ldr	r0, [sp, #84]	@ 0x54
900262b4:	f7ff fd4c 	bl	90025d50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900262b8:	e713      	b.n	900260e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900262ba:	1422      	asrs	r2, r4, #16
900262bc:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900262be:	1433      	asrs	r3, r6, #16
900262c0:	f3c4 3103 	ubfx	r1, r4, #12, #4
900262c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900262c8:	fb05 2303 	mla	r3, r5, r3, r2
900262cc:	085a      	lsrs	r2, r3, #1
900262ce:	07dd      	lsls	r5, r3, #31
900262d0:	5cba      	ldrb	r2, [r7, r2]
900262d2:	bf54      	ite	pl
900262d4:	f002 020f 	andpl.w	r2, r2, #15
900262d8:	1112      	asrmi	r2, r2, #4
900262da:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900262de:	b2d2      	uxtb	r2, r2
900262e0:	2900      	cmp	r1, #0
900262e2:	d077      	beq.n	900263d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900262e4:	f103 0e01 	add.w	lr, r3, #1
900262e8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
900262ec:	f01e 0f01 	tst.w	lr, #1
900262f0:	f817 c00c 	ldrb.w	ip, [r7, ip]
900262f4:	bf0c      	ite	eq
900262f6:	f00c 0c0f 	andeq.w	ip, ip, #15
900262fa:	ea4f 1c2c 	movne.w	ip, ip, asr #4
900262fe:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026302:	fa5f f58c 	uxtb.w	r5, ip
90026306:	9512      	str	r5, [sp, #72]	@ 0x48
90026308:	b308      	cbz	r0, 9002634e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002630a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002630c:	442b      	add	r3, r5
9002630e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90026312:	07dd      	lsls	r5, r3, #31
90026314:	f103 0301 	add.w	r3, r3, #1
90026318:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002631c:	bf54      	ite	pl
9002631e:	f00c 0c0f 	andpl.w	ip, ip, #15
90026322:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026326:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002632a:	fa5f f58c 	uxtb.w	r5, ip
9002632e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90026332:	950c      	str	r5, [sp, #48]	@ 0x30
90026334:	07dd      	lsls	r5, r3, #31
90026336:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002633a:	bf54      	ite	pl
9002633c:	f00c 0c0f 	andpl.w	ip, ip, #15
90026340:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026344:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026348:	fa5f f38c 	uxtb.w	r3, ip
9002634c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002634e:	b289      	uxth	r1, r1
90026350:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026352:	b280      	uxth	r0, r0
90026354:	fb01 f300 	mul.w	r3, r1, r0
90026358:	0109      	lsls	r1, r1, #4
9002635a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
9002635e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90026362:	1ac9      	subs	r1, r1, r3
90026364:	b280      	uxth	r0, r0
90026366:	b289      	uxth	r1, r1
90026368:	ebac 0c00 	sub.w	ip, ip, r0
9002636c:	4369      	muls	r1, r5
9002636e:	fa1f fc8c 	uxth.w	ip, ip
90026372:	fb02 120c 	mla	r2, r2, ip, r1
90026376:	990c      	ldr	r1, [sp, #48]	@ 0x30
90026378:	fb00 2001 	mla	r0, r0, r1, r2
9002637c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9002637e:	fb03 0302 	mla	r3, r3, r2, r0
90026382:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026386:	b1d3      	cbz	r3, 900263be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90026388:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002638a:	4353      	muls	r3, r2
9002638c:	1c5a      	adds	r2, r3, #1
9002638e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90026392:	4a0f      	ldr	r2, [pc, #60]	@ (900263d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90026394:	121b      	asrs	r3, r3, #8
90026396:	6812      	ldr	r2, [r2, #0]
90026398:	2bff      	cmp	r3, #255	@ 0xff
9002639a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
9002639e:	d12d      	bne.n	900263fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900263a0:	0953      	lsrs	r3, r2, #5
900263a2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900263a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900263aa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900263ae:	f02c 0c07 	bic.w	ip, ip, #7
900263b2:	ea43 0c0c 	orr.w	ip, r3, ip
900263b6:	ea4c 0202 	orr.w	r2, ip, r2
900263ba:	f8a8 2000 	strh.w	r2, [r8]
900263be:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900263c0:	f108 0802 	add.w	r8, r8, #2
900263c4:	f10b 3bff 	add.w	fp, fp, #4294967295
900263c8:	441c      	add	r4, r3
900263ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900263cc:	441e      	add	r6, r3
900263ce:	e6b9      	b.n	90026144 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
900263d0:	24021bec 	.word	0x24021bec
900263d4:	2800      	cmp	r0, #0
900263d6:	d0ba      	beq.n	9002634e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900263d8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900263da:	442b      	add	r3, r5
900263dc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900263e0:	07db      	lsls	r3, r3, #31
900263e2:	f817 c00c 	ldrb.w	ip, [r7, ip]
900263e6:	bf54      	ite	pl
900263e8:	f00c 0c0f 	andpl.w	ip, ip, #15
900263ec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900263f0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900263f4:	fa5f f38c 	uxtb.w	r3, ip
900263f8:	930c      	str	r3, [sp, #48]	@ 0x30
900263fa:	e7a8      	b.n	9002634e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900263fc:	f8b8 e000 	ldrh.w	lr, [r8]
90026400:	fa1f fa83 	uxth.w	sl, r3
90026404:	f3c2 4107 	ubfx	r1, r2, #16, #8
90026408:	43db      	mvns	r3, r3
9002640a:	ea4f 202e 	mov.w	r0, lr, asr #8
9002640e:	fb11 f10a 	smulbb	r1, r1, sl
90026412:	b2db      	uxtb	r3, r3
90026414:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026418:	b2d2      	uxtb	r2, r2
9002641a:	fa5f fc8c 	uxtb.w	ip, ip
9002641e:	fb00 1003 	mla	r0, r0, r3, r1
90026422:	ea4f 01ee 	mov.w	r1, lr, asr #3
90026426:	fb12 f20a 	smulbb	r2, r2, sl
9002642a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002642e:	b280      	uxth	r0, r0
90026430:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90026434:	fb1c fc0a 	smulbb	ip, ip, sl
90026438:	fa5f fe8e 	uxtb.w	lr, lr
9002643c:	fb0e 2203 	mla	r2, lr, r3, r2
90026440:	fb01 cc03 	mla	ip, r1, r3, ip
90026444:	1c43      	adds	r3, r0, #1
90026446:	b292      	uxth	r2, r2
90026448:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002644c:	1c51      	adds	r1, r2, #1
9002644e:	fa1f fc8c 	uxth.w	ip, ip
90026452:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90026456:	eb01 2112 	add.w	r1, r1, r2, lsr #8
9002645a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002645e:	4308      	orrs	r0, r1
90026460:	f10c 0101 	add.w	r1, ip, #1
90026464:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90026468:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002646c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90026470:	ea40 000c 	orr.w	r0, r0, ip
90026474:	f8a8 0000 	strh.w	r0, [r8]
90026478:	e7a1      	b.n	900263be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002647a:	b017      	add	sp, #92	@ 0x5c
9002647c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026480 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90026480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026484:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90026488:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9002648c:	2d00      	cmp	r5, #0
9002648e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90026492:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90026496:	fb05 0e03 	mla	lr, r5, r3, r0
9002649a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002649e:	f2c0 80b0 	blt.w	90026602 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900264a2:	45a9      	cmp	r9, r5
900264a4:	f340 80ad 	ble.w	90026602 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900264a8:	2800      	cmp	r0, #0
900264aa:	f2c0 80a8 	blt.w	900265fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900264ae:	4580      	cmp	r8, r0
900264b0:	f340 80a5 	ble.w	900265fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900264b4:	ea4f 045e 	mov.w	r4, lr, lsr #1
900264b8:	f01e 0f01 	tst.w	lr, #1
900264bc:	5d16      	ldrb	r6, [r2, r4]
900264be:	bf0c      	ite	eq
900264c0:	f006 060f 	andeq.w	r6, r6, #15
900264c4:	1136      	asrne	r6, r6, #4
900264c6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900264ca:	b2f6      	uxtb	r6, r6
900264cc:	1c44      	adds	r4, r0, #1
900264ce:	f100 809b 	bmi.w	90026608 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900264d2:	45a0      	cmp	r8, r4
900264d4:	f340 8098 	ble.w	90026608 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900264d8:	2f00      	cmp	r7, #0
900264da:	f000 8097 	beq.w	9002660c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
900264de:	f10e 0a01 	add.w	sl, lr, #1
900264e2:	ea4f 045a 	mov.w	r4, sl, lsr #1
900264e6:	f01a 0f01 	tst.w	sl, #1
900264ea:	5d14      	ldrb	r4, [r2, r4]
900264ec:	bf0c      	ite	eq
900264ee:	f004 040f 	andeq.w	r4, r4, #15
900264f2:	1124      	asrne	r4, r4, #4
900264f4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900264f8:	b2e4      	uxtb	r4, r4
900264fa:	3501      	adds	r5, #1
900264fc:	f100 808a 	bmi.w	90026614 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90026500:	45a9      	cmp	r9, r5
90026502:	f340 8087 	ble.w	90026614 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90026506:	f1bc 0f00 	cmp.w	ip, #0
9002650a:	f000 8086 	beq.w	9002661a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002650e:	2800      	cmp	r0, #0
90026510:	db7e      	blt.n	90026610 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90026512:	4580      	cmp	r8, r0
90026514:	dd7c      	ble.n	90026610 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90026516:	eb03 090e 	add.w	r9, r3, lr
9002651a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002651e:	f019 0f01 	tst.w	r9, #1
90026522:	5d55      	ldrb	r5, [r2, r5]
90026524:	bf0c      	ite	eq
90026526:	f005 050f 	andeq.w	r5, r5, #15
9002652a:	112d      	asrne	r5, r5, #4
9002652c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90026530:	b2ed      	uxtb	r5, r5
90026532:	3001      	adds	r0, #1
90026534:	d474      	bmi.n	90026620 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90026536:	4580      	cmp	r8, r0
90026538:	dd72      	ble.n	90026620 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002653a:	2f00      	cmp	r7, #0
9002653c:	d072      	beq.n	90026624 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002653e:	3301      	adds	r3, #1
90026540:	449e      	add	lr, r3
90026542:	ea4f 035e 	mov.w	r3, lr, lsr #1
90026546:	f01e 0f01 	tst.w	lr, #1
9002654a:	5cd0      	ldrb	r0, [r2, r3]
9002654c:	bf0c      	ite	eq
9002654e:	f000 000f 	andeq.w	r0, r0, #15
90026552:	1100      	asrne	r0, r0, #4
90026554:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026558:	b2c3      	uxtb	r3, r0
9002655a:	b2ba      	uxth	r2, r7
9002655c:	fa1f fc8c 	uxth.w	ip, ip
90026560:	fb02 f00c 	mul.w	r0, r2, ip
90026564:	0112      	lsls	r2, r2, #4
90026566:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002656a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
9002656e:	1a12      	subs	r2, r2, r0
90026570:	fa1f fc8c 	uxth.w	ip, ip
90026574:	b292      	uxth	r2, r2
90026576:	eba7 070c 	sub.w	r7, r7, ip
9002657a:	4362      	muls	r2, r4
9002657c:	b2bf      	uxth	r7, r7
9002657e:	fb06 2207 	mla	r2, r6, r7, r2
90026582:	fb0c 2505 	mla	r5, ip, r5, r2
90026586:	fb00 5303 	mla	r3, r0, r3, r5
9002658a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002658e:	b3a3      	cbz	r3, 900265fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90026590:	4a25      	ldr	r2, [pc, #148]	@ (90026628 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90026592:	880e      	ldrh	r6, [r1, #0]
90026594:	6815      	ldr	r5, [r2, #0]
90026596:	b29a      	uxth	r2, r3
90026598:	1234      	asrs	r4, r6, #8
9002659a:	43db      	mvns	r3, r3
9002659c:	f3c5 4007 	ubfx	r0, r5, #16, #8
900265a0:	f3c5 2707 	ubfx	r7, r5, #8, #8
900265a4:	b2db      	uxtb	r3, r3
900265a6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900265aa:	fb10 f002 	smulbb	r0, r0, r2
900265ae:	b2ed      	uxtb	r5, r5
900265b0:	fb17 f702 	smulbb	r7, r7, r2
900265b4:	fb04 0403 	mla	r4, r4, r3, r0
900265b8:	10f0      	asrs	r0, r6, #3
900265ba:	fb15 f202 	smulbb	r2, r5, r2
900265be:	00f6      	lsls	r6, r6, #3
900265c0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900265c4:	b2a4      	uxth	r4, r4
900265c6:	b2f6      	uxtb	r6, r6
900265c8:	fb00 7003 	mla	r0, r0, r3, r7
900265cc:	fb06 2303 	mla	r3, r6, r3, r2
900265d0:	b280      	uxth	r0, r0
900265d2:	b29a      	uxth	r2, r3
900265d4:	1c63      	adds	r3, r4, #1
900265d6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900265da:	1c53      	adds	r3, r2, #1
900265dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900265e0:	1c42      	adds	r2, r0, #1
900265e2:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
900265e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900265ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900265ee:	0940      	lsrs	r0, r0, #5
900265f0:	4323      	orrs	r3, r4
900265f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900265f6:	4303      	orrs	r3, r0
900265f8:	800b      	strh	r3, [r1, #0]
900265fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900265fe:	2600      	movs	r6, #0
90026600:	e764      	b.n	900264cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90026602:	2400      	movs	r4, #0
90026604:	4626      	mov	r6, r4
90026606:	e778      	b.n	900264fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026608:	2400      	movs	r4, #0
9002660a:	e776      	b.n	900264fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002660c:	463c      	mov	r4, r7
9002660e:	e774      	b.n	900264fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026610:	2500      	movs	r5, #0
90026612:	e78e      	b.n	90026532 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90026614:	2300      	movs	r3, #0
90026616:	461d      	mov	r5, r3
90026618:	e79f      	b.n	9002655a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002661a:	4663      	mov	r3, ip
9002661c:	4665      	mov	r5, ip
9002661e:	e79c      	b.n	9002655a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026620:	2300      	movs	r3, #0
90026622:	e79a      	b.n	9002655a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026624:	463b      	mov	r3, r7
90026626:	e798      	b.n	9002655a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026628:	24021bec 	.word	0x24021bec

9002662c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002662c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026630:	b093      	sub	sp, #76	@ 0x4c
90026632:	461d      	mov	r5, r3
90026634:	920c      	str	r2, [sp, #48]	@ 0x30
90026636:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90026638:	9011      	str	r0, [sp, #68]	@ 0x44
9002663a:	9107      	str	r1, [sp, #28]
9002663c:	6850      	ldr	r0, [r2, #4]
9002663e:	6812      	ldr	r2, [r2, #0]
90026640:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90026644:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90026648:	fb00 1303 	mla	r3, r0, r3, r1
9002664c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90026650:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026652:	689b      	ldr	r3, [r3, #8]
90026654:	3301      	adds	r3, #1
90026656:	f023 0301 	bic.w	r3, r3, #1
9002665a:	9306      	str	r3, [sp, #24]
9002665c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002665e:	681f      	ldr	r7, [r3, #0]
90026660:	9b07      	ldr	r3, [sp, #28]
90026662:	2b00      	cmp	r3, #0
90026664:	dc03      	bgt.n	9002666e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90026666:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90026668:	2b00      	cmp	r3, #0
9002666a:	f340 8267 	ble.w	90026b3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002666e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026670:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026674:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026678:	1e48      	subs	r0, r1, #1
9002667a:	f102 3cff 	add.w	ip, r2, #4294967295
9002667e:	2d00      	cmp	r5, #0
90026680:	f340 80b7 	ble.w	900267f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90026684:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026688:	ea4f 4326 	mov.w	r3, r6, asr #16
9002668c:	d406      	bmi.n	9002669c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002668e:	4586      	cmp	lr, r0
90026690:	da04      	bge.n	9002669c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026692:	2b00      	cmp	r3, #0
90026694:	db02      	blt.n	9002669c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026696:	4563      	cmp	r3, ip
90026698:	f2c0 80ac 	blt.w	900267f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9002669c:	f11e 0e01 	adds.w	lr, lr, #1
900266a0:	f100 809f 	bmi.w	900267e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900266a4:	4571      	cmp	r1, lr
900266a6:	f2c0 809c 	blt.w	900267e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900266aa:	3301      	adds	r3, #1
900266ac:	f100 8099 	bmi.w	900267e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900266b0:	429a      	cmp	r2, r3
900266b2:	f2c0 8096 	blt.w	900267e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900266b6:	46c8      	mov	r8, r9
900266b8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
900266bc:	9509      	str	r5, [sp, #36]	@ 0x24
900266be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900266c0:	2b00      	cmp	r3, #0
900266c2:	f340 80b5 	ble.w	90026830 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900266c6:	f3c4 3303 	ubfx	r3, r4, #12, #4
900266ca:	1430      	asrs	r0, r6, #16
900266cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
900266d0:	9308      	str	r3, [sp, #32]
900266d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900266d4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900266d8:	1423      	asrs	r3, r4, #16
900266da:	f100 813f 	bmi.w	9002695c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900266de:	f10c 3bff 	add.w	fp, ip, #4294967295
900266e2:	455b      	cmp	r3, fp
900266e4:	f280 813a 	bge.w	9002695c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900266e8:	2800      	cmp	r0, #0
900266ea:	f2c0 8137 	blt.w	9002695c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900266ee:	f10e 3bff 	add.w	fp, lr, #4294967295
900266f2:	4558      	cmp	r0, fp
900266f4:	f280 8132 	bge.w	9002695c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900266f8:	9a06      	ldr	r2, [sp, #24]
900266fa:	fb00 3302 	mla	r3, r0, r2, r3
900266fe:	0858      	lsrs	r0, r3, #1
90026700:	07da      	lsls	r2, r3, #31
90026702:	9a08      	ldr	r2, [sp, #32]
90026704:	f817 c000 	ldrb.w	ip, [r7, r0]
90026708:	bf54      	ite	pl
9002670a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002670e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026712:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026716:	fa5f fc8c 	uxtb.w	ip, ip
9002671a:	2a00      	cmp	r2, #0
9002671c:	f000 80cc 	beq.w	900268b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90026720:	1c58      	adds	r0, r3, #1
90026722:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90026726:	07c0      	lsls	r0, r0, #31
90026728:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002672c:	bf54      	ite	pl
9002672e:	f00e 0e0f 	andpl.w	lr, lr, #15
90026732:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90026736:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002673a:	fa5f fe8e 	uxtb.w	lr, lr
9002673e:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90026742:	b1b9      	cbz	r1, 90026774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90026744:	4453      	add	r3, sl
90026746:	0858      	lsrs	r0, r3, #1
90026748:	07da      	lsls	r2, r3, #31
9002674a:	5c38      	ldrb	r0, [r7, r0]
9002674c:	bf54      	ite	pl
9002674e:	f000 000f 	andpl.w	r0, r0, #15
90026752:	1100      	asrmi	r0, r0, #4
90026754:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026758:	b2c0      	uxtb	r0, r0
9002675a:	900a      	str	r0, [sp, #40]	@ 0x28
9002675c:	1c58      	adds	r0, r3, #1
9002675e:	0843      	lsrs	r3, r0, #1
90026760:	07c2      	lsls	r2, r0, #31
90026762:	5cfb      	ldrb	r3, [r7, r3]
90026764:	bf54      	ite	pl
90026766:	f003 030f 	andpl.w	r3, r3, #15
9002676a:	111b      	asrmi	r3, r3, #4
9002676c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026770:	b2db      	uxtb	r3, r3
90026772:	930e      	str	r3, [sp, #56]	@ 0x38
90026774:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90026778:	b289      	uxth	r1, r1
9002677a:	fb02 f301 	mul.w	r3, r2, r1
9002677e:	0112      	lsls	r2, r2, #4
90026780:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90026784:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90026788:	1ad2      	subs	r2, r2, r3
9002678a:	b289      	uxth	r1, r1
9002678c:	b292      	uxth	r2, r2
9002678e:	1a40      	subs	r0, r0, r1
90026790:	fa1f fe80 	uxth.w	lr, r0
90026794:	980d      	ldr	r0, [sp, #52]	@ 0x34
90026796:	4342      	muls	r2, r0
90026798:	fb0c 2c0e 	mla	ip, ip, lr, r2
9002679c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002679e:	fb01 c102 	mla	r1, r1, r2, ip
900267a2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900267a4:	fb03 1302 	mla	r3, r3, r2, r1
900267a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900267ac:	2bff      	cmp	r3, #255	@ 0xff
900267ae:	f040 8094 	bne.w	900268da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900267b2:	4bbf      	ldr	r3, [pc, #764]	@ (90026ab0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900267b4:	681a      	ldr	r2, [r3, #0]
900267b6:	4bbf      	ldr	r3, [pc, #764]	@ (90026ab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900267b8:	0951      	lsrs	r1, r2, #5
900267ba:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900267be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900267c2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900267c6:	430b      	orrs	r3, r1
900267c8:	4313      	orrs	r3, r2
900267ca:	f8a8 3000 	strh.w	r3, [r8]
900267ce:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900267d0:	f108 0802 	add.w	r8, r8, #2
900267d4:	441c      	add	r4, r3
900267d6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900267d8:	441e      	add	r6, r3
900267da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900267dc:	3b01      	subs	r3, #1
900267de:	9309      	str	r3, [sp, #36]	@ 0x24
900267e0:	e76d      	b.n	900266be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900267e2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900267e4:	3d01      	subs	r5, #1
900267e6:	f109 0902 	add.w	r9, r9, #2
900267ea:	441c      	add	r4, r3
900267ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900267ee:	441e      	add	r6, r3
900267f0:	e745      	b.n	9002667e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900267f2:	d021      	beq.n	90026838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900267f4:	1e6b      	subs	r3, r5, #1
900267f6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900267f8:	fb00 4003 	mla	r0, r0, r3, r4
900267fc:	1400      	asrs	r0, r0, #16
900267fe:	f53f af5a 	bmi.w	900266b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026802:	3901      	subs	r1, #1
90026804:	4288      	cmp	r0, r1
90026806:	f6bf af56 	bge.w	900266b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002680a:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002680c:	fb01 6303 	mla	r3, r1, r3, r6
90026810:	141b      	asrs	r3, r3, #16
90026812:	f53f af50 	bmi.w	900266b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026816:	3a01      	subs	r2, #1
90026818:	4293      	cmp	r3, r2
9002681a:	f6bf af4c 	bge.w	900266b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002681e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90026822:	46a8      	mov	r8, r5
90026824:	46ce      	mov	lr, r9
90026826:	9308      	str	r3, [sp, #32]
90026828:	f1b8 0f00 	cmp.w	r8, #0
9002682c:	f300 80b6 	bgt.w	9002699c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026830:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026834:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90026838:	9b07      	ldr	r3, [sp, #28]
9002683a:	2b00      	cmp	r3, #0
9002683c:	f340 817e 	ble.w	90026b3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90026840:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026844:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026846:	ee30 0a04 	vadd.f32	s0, s0, s8
9002684a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002684e:	eef0 6a62 	vmov.f32	s13, s5
90026852:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026856:	ee31 1a05 	vadd.f32	s2, s2, s10
9002685a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002685e:	ee16 4a90 	vmov	r4, s13
90026862:	eef0 6a43 	vmov.f32	s13, s6
90026866:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002686a:	ee16 6a90 	vmov	r6, s13
9002686e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026872:	ee61 7a27 	vmul.f32	s15, s2, s15
90026876:	ee77 2a62 	vsub.f32	s5, s14, s5
9002687a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002687e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026882:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026886:	ee12 2a90 	vmov	r2, s5
9002688a:	eef0 2a47 	vmov.f32	s5, s14
9002688e:	fb92 f3f3 	sdiv	r3, r2, r3
90026892:	ee13 2a10 	vmov	r2, s6
90026896:	931f      	str	r3, [sp, #124]	@ 0x7c
90026898:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002689a:	eeb0 3a67 	vmov.f32	s6, s15
9002689e:	fb92 f3f3 	sdiv	r3, r2, r3
900268a2:	9320      	str	r3, [sp, #128]	@ 0x80
900268a4:	9b07      	ldr	r3, [sp, #28]
900268a6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900268a8:	3b01      	subs	r3, #1
900268aa:	9307      	str	r3, [sp, #28]
900268ac:	bf08      	it	eq
900268ae:	4615      	moveq	r5, r2
900268b0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900268b2:	bf18      	it	ne
900268b4:	461d      	movne	r5, r3
900268b6:	e6d3      	b.n	90026660 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900268b8:	2900      	cmp	r1, #0
900268ba:	f43f af5b 	beq.w	90026774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900268be:	eb0a 0003 	add.w	r0, sl, r3
900268c2:	0843      	lsrs	r3, r0, #1
900268c4:	07c0      	lsls	r0, r0, #31
900268c6:	5cfb      	ldrb	r3, [r7, r3]
900268c8:	bf54      	ite	pl
900268ca:	f003 030f 	andpl.w	r3, r3, #15
900268ce:	111b      	asrmi	r3, r3, #4
900268d0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900268d4:	b2db      	uxtb	r3, r3
900268d6:	930a      	str	r3, [sp, #40]	@ 0x28
900268d8:	e74c      	b.n	90026774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900268da:	2b00      	cmp	r3, #0
900268dc:	f43f af77 	beq.w	900267ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900268e0:	4a73      	ldr	r2, [pc, #460]	@ (90026ab0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900268e2:	fa1f fe83 	uxth.w	lr, r3
900268e6:	f8b8 c000 	ldrh.w	ip, [r8]
900268ea:	43db      	mvns	r3, r3
900268ec:	6810      	ldr	r0, [r2, #0]
900268ee:	ea4f 212c 	mov.w	r1, ip, asr #8
900268f2:	f3c0 4207 	ubfx	r2, r0, #16, #8
900268f6:	b2db      	uxtb	r3, r3
900268f8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900268fc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026900:	fb12 f20e 	smulbb	r2, r2, lr
90026904:	b2c0      	uxtb	r0, r0
90026906:	fb1b fb0e 	smulbb	fp, fp, lr
9002690a:	fb01 2103 	mla	r1, r1, r3, r2
9002690e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026912:	fb10 fe0e 	smulbb	lr, r0, lr
90026916:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002691a:	b289      	uxth	r1, r1
9002691c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026920:	fa5f fc8c 	uxtb.w	ip, ip
90026924:	fb02 b203 	mla	r2, r2, r3, fp
90026928:	1c48      	adds	r0, r1, #1
9002692a:	fb0c e303 	mla	r3, ip, r3, lr
9002692e:	b292      	uxth	r2, r2
90026930:	b29b      	uxth	r3, r3
90026932:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90026936:	f102 0b01 	add.w	fp, r2, #1
9002693a:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002693e:	1c59      	adds	r1, r3, #1
90026940:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90026944:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90026948:	0952      	lsrs	r2, r2, #5
9002694a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002694e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026952:	4301      	orrs	r1, r0
90026954:	4311      	orrs	r1, r2
90026956:	f8a8 1000 	strh.w	r1, [r8]
9002695a:	e738      	b.n	900267ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002695c:	f113 0b01 	adds.w	fp, r3, #1
90026960:	f53f af35 	bmi.w	900267ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026964:	45dc      	cmp	ip, fp
90026966:	f6ff af32 	blt.w	900267ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002696a:	f110 0b01 	adds.w	fp, r0, #1
9002696e:	f53f af2e 	bmi.w	900267ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026972:	45de      	cmp	lr, fp
90026974:	f6ff af2b 	blt.w	900267ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026978:	9302      	str	r3, [sp, #8]
9002697a:	fa0f f38e 	sxth.w	r3, lr
9002697e:	9a08      	ldr	r2, [sp, #32]
90026980:	9301      	str	r3, [sp, #4]
90026982:	fa0f f38c 	sxth.w	r3, ip
90026986:	9105      	str	r1, [sp, #20]
90026988:	4641      	mov	r1, r8
9002698a:	9300      	str	r3, [sp, #0]
9002698c:	4653      	mov	r3, sl
9002698e:	e9cd 0203 	strd	r0, r2, [sp, #12]
90026992:	463a      	mov	r2, r7
90026994:	9811      	ldr	r0, [sp, #68]	@ 0x44
90026996:	f7ff fd73 	bl	90026480 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002699a:	e718      	b.n	900267ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002699c:	1422      	asrs	r2, r4, #16
9002699e:	9906      	ldr	r1, [sp, #24]
900269a0:	1433      	asrs	r3, r6, #16
900269a2:	f3c4 3003 	ubfx	r0, r4, #12, #4
900269a6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900269aa:	fb01 2303 	mla	r3, r1, r3, r2
900269ae:	085a      	lsrs	r2, r3, #1
900269b0:	07d9      	lsls	r1, r3, #31
900269b2:	5cba      	ldrb	r2, [r7, r2]
900269b4:	bf54      	ite	pl
900269b6:	f002 020f 	andpl.w	r2, r2, #15
900269ba:	1112      	asrmi	r2, r2, #4
900269bc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900269c0:	b2d2      	uxtb	r2, r2
900269c2:	2800      	cmp	r0, #0
900269c4:	d063      	beq.n	90026a8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
900269c6:	f103 0a01 	add.w	sl, r3, #1
900269ca:	ea4f 015a 	mov.w	r1, sl, lsr #1
900269ce:	f01a 0f01 	tst.w	sl, #1
900269d2:	5c79      	ldrb	r1, [r7, r1]
900269d4:	bf0c      	ite	eq
900269d6:	f001 010f 	andeq.w	r1, r1, #15
900269da:	1109      	asrne	r1, r1, #4
900269dc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900269e0:	b2c9      	uxtb	r1, r1
900269e2:	910f      	str	r1, [sp, #60]	@ 0x3c
900269e4:	f1bc 0f00 	cmp.w	ip, #0
900269e8:	d01a      	beq.n	90026a20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900269ea:	9908      	ldr	r1, [sp, #32]
900269ec:	440b      	add	r3, r1
900269ee:	0859      	lsrs	r1, r3, #1
900269f0:	f013 0f01 	tst.w	r3, #1
900269f4:	f103 0301 	add.w	r3, r3, #1
900269f8:	5c79      	ldrb	r1, [r7, r1]
900269fa:	bf0c      	ite	eq
900269fc:	f001 010f 	andeq.w	r1, r1, #15
90026a00:	1109      	asrne	r1, r1, #4
90026a02:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026a06:	b2c9      	uxtb	r1, r1
90026a08:	910b      	str	r1, [sp, #44]	@ 0x2c
90026a0a:	0859      	lsrs	r1, r3, #1
90026a0c:	07db      	lsls	r3, r3, #31
90026a0e:	5c79      	ldrb	r1, [r7, r1]
90026a10:	bf54      	ite	pl
90026a12:	f001 010f 	andpl.w	r1, r1, #15
90026a16:	1109      	asrmi	r1, r1, #4
90026a18:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026a1c:	b2c9      	uxtb	r1, r1
90026a1e:	9110      	str	r1, [sp, #64]	@ 0x40
90026a20:	b280      	uxth	r0, r0
90026a22:	fa1f fc8c 	uxth.w	ip, ip
90026a26:	fb00 f30c 	mul.w	r3, r0, ip
90026a2a:	0100      	lsls	r0, r0, #4
90026a2c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90026a30:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90026a34:	1ac0      	subs	r0, r0, r3
90026a36:	fa1f fc8c 	uxth.w	ip, ip
90026a3a:	b280      	uxth	r0, r0
90026a3c:	eba1 010c 	sub.w	r1, r1, ip
90026a40:	fa1f fa81 	uxth.w	sl, r1
90026a44:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90026a46:	4348      	muls	r0, r1
90026a48:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90026a4a:	fb02 020a 	mla	r2, r2, sl, r0
90026a4e:	fb0c 2c01 	mla	ip, ip, r1, r2
90026a52:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026a54:	fb03 c302 	mla	r3, r3, r2, ip
90026a58:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026a5c:	2bff      	cmp	r3, #255	@ 0xff
90026a5e:	d12b      	bne.n	90026ab8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90026a60:	4b13      	ldr	r3, [pc, #76]	@ (90026ab0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026a62:	681a      	ldr	r2, [r3, #0]
90026a64:	4b13      	ldr	r3, [pc, #76]	@ (90026ab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90026a66:	0951      	lsrs	r1, r2, #5
90026a68:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90026a6c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026a70:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026a74:	430b      	orrs	r3, r1
90026a76:	4313      	orrs	r3, r2
90026a78:	f8ae 3000 	strh.w	r3, [lr]
90026a7c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90026a7e:	f10e 0e02 	add.w	lr, lr, #2
90026a82:	f108 38ff 	add.w	r8, r8, #4294967295
90026a86:	441c      	add	r4, r3
90026a88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026a8a:	441e      	add	r6, r3
90026a8c:	e6cc      	b.n	90026828 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90026a8e:	f1bc 0f00 	cmp.w	ip, #0
90026a92:	d0c5      	beq.n	90026a20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026a94:	9908      	ldr	r1, [sp, #32]
90026a96:	440b      	add	r3, r1
90026a98:	0859      	lsrs	r1, r3, #1
90026a9a:	07db      	lsls	r3, r3, #31
90026a9c:	5c79      	ldrb	r1, [r7, r1]
90026a9e:	bf54      	ite	pl
90026aa0:	f001 010f 	andpl.w	r1, r1, #15
90026aa4:	1109      	asrmi	r1, r1, #4
90026aa6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026aaa:	b2c9      	uxtb	r1, r1
90026aac:	910b      	str	r1, [sp, #44]	@ 0x2c
90026aae:	e7b7      	b.n	90026a20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026ab0:	24021bec 	.word	0x24021bec
90026ab4:	fffff800 	.word	0xfffff800
90026ab8:	2b00      	cmp	r3, #0
90026aba:	d0df      	beq.n	90026a7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90026abc:	4a21      	ldr	r2, [pc, #132]	@ (90026b44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90026abe:	fa1f fa83 	uxth.w	sl, r3
90026ac2:	f8be c000 	ldrh.w	ip, [lr]
90026ac6:	43db      	mvns	r3, r3
90026ac8:	6810      	ldr	r0, [r2, #0]
90026aca:	ea4f 212c 	mov.w	r1, ip, asr #8
90026ace:	f3c0 4207 	ubfx	r2, r0, #16, #8
90026ad2:	b2db      	uxtb	r3, r3
90026ad4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90026ad8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026adc:	fb12 f20a 	smulbb	r2, r2, sl
90026ae0:	b2c0      	uxtb	r0, r0
90026ae2:	fb1b fb0a 	smulbb	fp, fp, sl
90026ae6:	fb01 2103 	mla	r1, r1, r3, r2
90026aea:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026aee:	fb10 f00a 	smulbb	r0, r0, sl
90026af2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90026af6:	b289      	uxth	r1, r1
90026af8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026afc:	fa5f fc8c 	uxtb.w	ip, ip
90026b00:	fb02 b203 	mla	r2, r2, r3, fp
90026b04:	fb0c 0003 	mla	r0, ip, r3, r0
90026b08:	1c4b      	adds	r3, r1, #1
90026b0a:	b292      	uxth	r2, r2
90026b0c:	b280      	uxth	r0, r0
90026b0e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026b12:	f100 0b01 	add.w	fp, r0, #1
90026b16:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90026b1a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90026b1e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90026b22:	ea4b 0101 	orr.w	r1, fp, r1
90026b26:	f102 0b01 	add.w	fp, r2, #1
90026b2a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90026b2e:	0952      	lsrs	r2, r2, #5
90026b30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026b34:	4311      	orrs	r1, r2
90026b36:	f8ae 1000 	strh.w	r1, [lr]
90026b3a:	e79f      	b.n	90026a7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90026b3c:	b013      	add	sp, #76	@ 0x4c
90026b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026b42:	bf00      	nop
90026b44:	24021bec 	.word	0x24021bec

90026b48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90026b48:	b570      	push	{r4, r5, r6, lr}
90026b4a:	1208      	asrs	r0, r1, #8
90026b4c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90026b50:	b29e      	uxth	r6, r3
90026b52:	1213      	asrs	r3, r2, #8
90026b54:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026b58:	10cc      	asrs	r4, r1, #3
90026b5a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90026b5e:	00c9      	lsls	r1, r1, #3
90026b60:	fb10 f006 	smulbb	r0, r0, r6
90026b64:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90026b68:	fb13 f305 	smulbb	r3, r3, r5
90026b6c:	fb14 f406 	smulbb	r4, r4, r6
90026b70:	4418      	add	r0, r3
90026b72:	10d3      	asrs	r3, r2, #3
90026b74:	00d2      	lsls	r2, r2, #3
90026b76:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90026b7a:	b280      	uxth	r0, r0
90026b7c:	b2d2      	uxtb	r2, r2
90026b7e:	fb13 f305 	smulbb	r3, r3, r5
90026b82:	fb12 f205 	smulbb	r2, r2, r5
90026b86:	441c      	add	r4, r3
90026b88:	b2cb      	uxtb	r3, r1
90026b8a:	fb13 f306 	smulbb	r3, r3, r6
90026b8e:	b2a4      	uxth	r4, r4
90026b90:	4413      	add	r3, r2
90026b92:	1c42      	adds	r2, r0, #1
90026b94:	b29b      	uxth	r3, r3
90026b96:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026b9a:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
90026b9e:	1c58      	adds	r0, r3, #1
90026ba0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026ba4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026ba8:	4310      	orrs	r0, r2
90026baa:	1c62      	adds	r2, r4, #1
90026bac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026bb0:	0964      	lsrs	r4, r4, #5
90026bb2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90026bb6:	4320      	orrs	r0, r4
90026bb8:	bd70      	pop	{r4, r5, r6, pc}
	...

90026bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90026bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026bc0:	b08f      	sub	sp, #60	@ 0x3c
90026bc2:	461c      	mov	r4, r3
90026bc4:	460d      	mov	r5, r1
90026bc6:	4616      	mov	r6, r2
90026bc8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90026bcc:	9004      	str	r0, [sp, #16]
90026bce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026bd0:	2f00      	cmp	r7, #0
90026bd2:	f000 80f6 	beq.w	90026dc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90026bd6:	6820      	ldr	r0, [r4, #0]
90026bd8:	aa0a      	add	r2, sp, #40	@ 0x28
90026bda:	6861      	ldr	r1, [r4, #4]
90026bdc:	f04f 0802 	mov.w	r8, #2
90026be0:	3604      	adds	r6, #4
90026be2:	c203      	stmia	r2!, {r0, r1}
90026be4:	6818      	ldr	r0, [r3, #0]
90026be6:	aa0c      	add	r2, sp, #48	@ 0x30
90026be8:	6859      	ldr	r1, [r3, #4]
90026bea:	c203      	stmia	r2!, {r0, r1}
90026bec:	a80a      	add	r0, sp, #40	@ 0x28
90026bee:	f7ee fcc3 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026bf2:	4621      	mov	r1, r4
90026bf4:	a80c      	add	r0, sp, #48	@ 0x30
90026bf6:	f7ee fce7 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026bfa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90026bfe:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90026c02:	f002 0301 	and.w	r3, r2, #1
90026c06:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90026c0a:	9306      	str	r3, [sp, #24]
90026c0c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026c10:	f003 0101 	and.w	r1, r3, #1
90026c14:	9105      	str	r1, [sp, #20]
90026c16:	9805      	ldr	r0, [sp, #20]
90026c18:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90026c1c:	4403      	add	r3, r0
90026c1e:	fb01 2303 	mla	r3, r1, r3, r2
90026c22:	fb93 f3f8 	sdiv	r3, r3, r8
90026c26:	441d      	add	r5, r3
90026c28:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90026c2c:	441a      	add	r2, r3
90026c2e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90026c32:	4419      	add	r1, r3
90026c34:	4b64      	ldr	r3, [pc, #400]	@ (90026dc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90026c36:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90026c3a:	6818      	ldr	r0, [r3, #0]
90026c3c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90026c40:	6803      	ldr	r3, [r0, #0]
90026c42:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90026c44:	4798      	blx	r3
90026c46:	4a61      	ldr	r2, [pc, #388]	@ (90026dcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90026c48:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90026c4c:	2fff      	cmp	r7, #255	@ 0xff
90026c4e:	8813      	ldrh	r3, [r2, #0]
90026c50:	4611      	mov	r1, r2
90026c52:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90026c56:	fb03 fb0b 	mul.w	fp, r3, fp
90026c5a:	fb03 a404 	mla	r4, r3, r4, sl
90026c5e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026c62:	d06b      	beq.n	90026d3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90026c64:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90026c68:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90026c6c:	9303      	str	r3, [sp, #12]
90026c6e:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90026c72:	e9cd 3207 	strd	r3, r2, [sp, #28]
90026c76:	9b07      	ldr	r3, [sp, #28]
90026c78:	42a3      	cmp	r3, r4
90026c7a:	f240 809d 	bls.w	90026db8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90026c7e:	9b06      	ldr	r3, [sp, #24]
90026c80:	2b00      	cmp	r3, #0
90026c82:	d039      	beq.n	90026cf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90026c84:	782b      	ldrb	r3, [r5, #0]
90026c86:	f105 0801 	add.w	r8, r5, #1
90026c8a:	f109 3bff 	add.w	fp, r9, #4294967295
90026c8e:	8822      	ldrh	r2, [r4, #0]
90026c90:	f003 030f 	and.w	r3, r3, #15
90026c94:	9804      	ldr	r0, [sp, #16]
90026c96:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026c9a:	9b03      	ldr	r3, [sp, #12]
90026c9c:	9300      	str	r3, [sp, #0]
90026c9e:	463b      	mov	r3, r7
90026ca0:	f7ff ff52 	bl	90026b48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026ca4:	f824 0b02 	strh.w	r0, [r4], #2
90026ca8:	f1bb 0f01 	cmp.w	fp, #1
90026cac:	46a2      	mov	sl, r4
90026cae:	f104 0404 	add.w	r4, r4, #4
90026cb2:	dd24      	ble.n	90026cfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90026cb4:	f898 3000 	ldrb.w	r3, [r8]
90026cb8:	f1ab 0b02 	sub.w	fp, fp, #2
90026cbc:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90026cc0:	091b      	lsrs	r3, r3, #4
90026cc2:	9804      	ldr	r0, [sp, #16]
90026cc4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026cc8:	9b03      	ldr	r3, [sp, #12]
90026cca:	9300      	str	r3, [sp, #0]
90026ccc:	463b      	mov	r3, r7
90026cce:	f7ff ff3b 	bl	90026b48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026cd2:	f824 0c04 	strh.w	r0, [r4, #-4]
90026cd6:	f818 3b01 	ldrb.w	r3, [r8], #1
90026cda:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90026cde:	f003 030f 	and.w	r3, r3, #15
90026ce2:	9804      	ldr	r0, [sp, #16]
90026ce4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026ce8:	9b03      	ldr	r3, [sp, #12]
90026cea:	9300      	str	r3, [sp, #0]
90026cec:	463b      	mov	r3, r7
90026cee:	f7ff ff2b 	bl	90026b48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026cf2:	f824 0c02 	strh.w	r0, [r4, #-2]
90026cf6:	e7d7      	b.n	90026ca8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90026cf8:	46a8      	mov	r8, r5
90026cfa:	46cb      	mov	fp, r9
90026cfc:	e7d4      	b.n	90026ca8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90026cfe:	d10e      	bne.n	90026d1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90026d00:	f898 3000 	ldrb.w	r3, [r8]
90026d04:	f8ba 2000 	ldrh.w	r2, [sl]
90026d08:	091b      	lsrs	r3, r3, #4
90026d0a:	9804      	ldr	r0, [sp, #16]
90026d0c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026d10:	9b03      	ldr	r3, [sp, #12]
90026d12:	9300      	str	r3, [sp, #0]
90026d14:	463b      	mov	r3, r7
90026d16:	f7ff ff17 	bl	90026b48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026d1a:	f82a 0b02 	strh.w	r0, [sl], #2
90026d1e:	9b08      	ldr	r3, [sp, #32]
90026d20:	9a05      	ldr	r2, [sp, #20]
90026d22:	881c      	ldrh	r4, [r3, #0]
90026d24:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026d28:	eba4 0409 	sub.w	r4, r4, r9
90026d2c:	4413      	add	r3, r2
90026d2e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026d30:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90026d34:	fb93 f3f2 	sdiv	r3, r3, r2
90026d38:	441d      	add	r5, r3
90026d3a:	e79c      	b.n	90026c76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90026d3c:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90026d40:	45a3      	cmp	fp, r4
90026d42:	d939      	bls.n	90026db8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90026d44:	9b06      	ldr	r3, [sp, #24]
90026d46:	b1fb      	cbz	r3, 90026d88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90026d48:	782b      	ldrb	r3, [r5, #0]
90026d4a:	1c6a      	adds	r2, r5, #1
90026d4c:	f109 30ff 	add.w	r0, r9, #4294967295
90026d50:	3402      	adds	r4, #2
90026d52:	f003 030f 	and.w	r3, r3, #15
90026d56:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026d5a:	f824 3c02 	strh.w	r3, [r4, #-2]
90026d5e:	2801      	cmp	r0, #1
90026d60:	4623      	mov	r3, r4
90026d62:	f104 0404 	add.w	r4, r4, #4
90026d66:	dd12      	ble.n	90026d8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90026d68:	7813      	ldrb	r3, [r2, #0]
90026d6a:	3802      	subs	r0, #2
90026d6c:	091b      	lsrs	r3, r3, #4
90026d6e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026d72:	f824 3c04 	strh.w	r3, [r4, #-4]
90026d76:	f812 3b01 	ldrb.w	r3, [r2], #1
90026d7a:	f003 030f 	and.w	r3, r3, #15
90026d7e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026d82:	f824 3c02 	strh.w	r3, [r4, #-2]
90026d86:	e7ea      	b.n	90026d5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90026d88:	462a      	mov	r2, r5
90026d8a:	4648      	mov	r0, r9
90026d8c:	e7e7      	b.n	90026d5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90026d8e:	d106      	bne.n	90026d9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90026d90:	7812      	ldrb	r2, [r2, #0]
90026d92:	3302      	adds	r3, #2
90026d94:	0912      	lsrs	r2, r2, #4
90026d96:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90026d9a:	f823 2c02 	strh.w	r2, [r3, #-2]
90026d9e:	880c      	ldrh	r4, [r1, #0]
90026da0:	9a05      	ldr	r2, [sp, #20]
90026da2:	eba4 0409 	sub.w	r4, r4, r9
90026da6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90026daa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026dae:	4413      	add	r3, r2
90026db0:	fb93 f3f8 	sdiv	r3, r3, r8
90026db4:	441d      	add	r5, r3
90026db6:	e7c3      	b.n	90026d40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90026db8:	4b03      	ldr	r3, [pc, #12]	@ (90026dc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90026dba:	6818      	ldr	r0, [r3, #0]
90026dbc:	6803      	ldr	r3, [r0, #0]
90026dbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90026dc0:	4798      	blx	r3
90026dc2:	b00f      	add	sp, #60	@ 0x3c
90026dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026dc8:	24021bdc 	.word	0x24021bdc
90026dcc:	24021bd6 	.word	0x24021bd6

90026dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90026dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
90026dd2:	f89d 5014 	ldrb.w	r5, [sp, #20]
90026dd6:	0a0f      	lsrs	r7, r1, #8
90026dd8:	2dff      	cmp	r5, #255	@ 0xff
90026dda:	d10c      	bne.n	90026df6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90026ddc:	2bff      	cmp	r3, #255	@ 0xff
90026dde:	d10a      	bne.n	90026df6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90026de0:	0948      	lsrs	r0, r1, #5
90026de2:	4b25      	ldr	r3, [pc, #148]	@ (90026e78 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90026de4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026de8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026dec:	403b      	ands	r3, r7
90026dee:	4318      	orrs	r0, r3
90026df0:	4308      	orrs	r0, r1
90026df2:	b280      	uxth	r0, r0
90026df4:	bdf0      	pop	{r4, r5, r6, r7, pc}
90026df6:	fb15 f503 	smulbb	r5, r5, r3
90026dfa:	1214      	asrs	r4, r2, #8
90026dfc:	10d6      	asrs	r6, r2, #3
90026dfe:	b2ab      	uxth	r3, r5
90026e00:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90026e04:	00d0      	lsls	r0, r2, #3
90026e06:	f3c1 4207 	ubfx	r2, r1, #16, #8
90026e0a:	1c5d      	adds	r5, r3, #1
90026e0c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026e10:	b2c0      	uxtb	r0, r0
90026e12:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90026e16:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90026e1a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90026e1e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90026e22:	fa1f fc85 	uxth.w	ip, r5
90026e26:	43ed      	mvns	r5, r5
90026e28:	fb12 f20c 	smulbb	r2, r2, ip
90026e2c:	b2eb      	uxtb	r3, r5
90026e2e:	b2fd      	uxtb	r5, r7
90026e30:	fb04 2403 	mla	r4, r4, r3, r2
90026e34:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90026e38:	fb15 f50c 	smulbb	r5, r5, ip
90026e3c:	b2c8      	uxtb	r0, r1
90026e3e:	b2a4      	uxth	r4, r4
90026e40:	fb10 f00c 	smulbb	r0, r0, ip
90026e44:	fb06 5503 	mla	r5, r6, r3, r5
90026e48:	fb02 0003 	mla	r0, r2, r3, r0
90026e4c:	b2ad      	uxth	r5, r5
90026e4e:	b283      	uxth	r3, r0
90026e50:	1c60      	adds	r0, r4, #1
90026e52:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90026e56:	1c58      	adds	r0, r3, #1
90026e58:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026e5c:	1c6b      	adds	r3, r5, #1
90026e5e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90026e62:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026e66:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026e6a:	096d      	lsrs	r5, r5, #5
90026e6c:	4320      	orrs	r0, r4
90026e6e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026e72:	4328      	orrs	r0, r5
90026e74:	e7be      	b.n	90026df4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90026e76:	bf00      	nop
90026e78:	00fff800 	.word	0x00fff800

90026e7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90026e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026e80:	461c      	mov	r4, r3
90026e82:	b08d      	sub	sp, #52	@ 0x34
90026e84:	460d      	mov	r5, r1
90026e86:	4616      	mov	r6, r2
90026e88:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026e8a:	4680      	mov	r8, r0
90026e8c:	6861      	ldr	r1, [r4, #4]
90026e8e:	aa08      	add	r2, sp, #32
90026e90:	6820      	ldr	r0, [r4, #0]
90026e92:	f04f 0a02 	mov.w	sl, #2
90026e96:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90026e9a:	3604      	adds	r6, #4
90026e9c:	c203      	stmia	r2!, {r0, r1}
90026e9e:	6818      	ldr	r0, [r3, #0]
90026ea0:	aa0a      	add	r2, sp, #40	@ 0x28
90026ea2:	6859      	ldr	r1, [r3, #4]
90026ea4:	c203      	stmia	r2!, {r0, r1}
90026ea6:	a808      	add	r0, sp, #32
90026ea8:	f7ee fb66 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026eac:	4621      	mov	r1, r4
90026eae:	a80a      	add	r0, sp, #40	@ 0x28
90026eb0:	f7ee fb8a 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026eb4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90026eb8:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90026ebc:	f002 0301 	and.w	r3, r2, #1
90026ec0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90026ec4:	9303      	str	r3, [sp, #12]
90026ec6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90026eca:	f003 0101 	and.w	r1, r3, #1
90026ece:	9102      	str	r1, [sp, #8]
90026ed0:	9802      	ldr	r0, [sp, #8]
90026ed2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90026ed6:	4403      	add	r3, r0
90026ed8:	fb01 2303 	mla	r3, r1, r3, r2
90026edc:	fb93 f3fa 	sdiv	r3, r3, sl
90026ee0:	441d      	add	r5, r3
90026ee2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90026ee6:	441a      	add	r2, r3
90026ee8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90026eec:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90026ef0:	4419      	add	r1, r3
90026ef2:	4a3e      	ldr	r2, [pc, #248]	@ (90026fec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90026ef4:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90026ef8:	6810      	ldr	r0, [r2, #0]
90026efa:	9205      	str	r2, [sp, #20]
90026efc:	6803      	ldr	r3, [r0, #0]
90026efe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90026f00:	4798      	blx	r3
90026f02:	4b3b      	ldr	r3, [pc, #236]	@ (90026ff0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90026f04:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90026f08:	8819      	ldrh	r1, [r3, #0]
90026f0a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90026f0e:	434f      	muls	r7, r1
90026f10:	fb01 c404 	mla	r4, r1, r4, ip
90026f14:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026f18:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90026f1c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90026f20:	9204      	str	r2, [sp, #16]
90026f22:	9b04      	ldr	r3, [sp, #16]
90026f24:	429c      	cmp	r4, r3
90026f26:	d258      	bcs.n	90026fda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90026f28:	9b03      	ldr	r3, [sp, #12]
90026f2a:	2b00      	cmp	r3, #0
90026f2c:	d034      	beq.n	90026f98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90026f2e:	782b      	ldrb	r3, [r5, #0]
90026f30:	1c6f      	adds	r7, r5, #1
90026f32:	f003 030f 	and.w	r3, r3, #15
90026f36:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026f3a:	0e0b      	lsrs	r3, r1, #24
90026f3c:	d006      	beq.n	90026f4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90026f3e:	8822      	ldrh	r2, [r4, #0]
90026f40:	4640      	mov	r0, r8
90026f42:	9300      	str	r3, [sp, #0]
90026f44:	464b      	mov	r3, r9
90026f46:	f7ff ff43 	bl	90026dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026f4a:	8020      	strh	r0, [r4, #0]
90026f4c:	3402      	adds	r4, #2
90026f4e:	f10b 3aff 	add.w	sl, fp, #4294967295
90026f52:	f1ba 0f01 	cmp.w	sl, #1
90026f56:	dd22      	ble.n	90026f9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90026f58:	783b      	ldrb	r3, [r7, #0]
90026f5a:	091b      	lsrs	r3, r3, #4
90026f5c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026f60:	0e0b      	lsrs	r3, r1, #24
90026f62:	d006      	beq.n	90026f72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90026f64:	8822      	ldrh	r2, [r4, #0]
90026f66:	4640      	mov	r0, r8
90026f68:	9300      	str	r3, [sp, #0]
90026f6a:	464b      	mov	r3, r9
90026f6c:	f7ff ff30 	bl	90026dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026f70:	8020      	strh	r0, [r4, #0]
90026f72:	f817 3b01 	ldrb.w	r3, [r7], #1
90026f76:	f003 030f 	and.w	r3, r3, #15
90026f7a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026f7e:	0e0b      	lsrs	r3, r1, #24
90026f80:	d006      	beq.n	90026f90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90026f82:	8862      	ldrh	r2, [r4, #2]
90026f84:	4640      	mov	r0, r8
90026f86:	9300      	str	r3, [sp, #0]
90026f88:	464b      	mov	r3, r9
90026f8a:	f7ff ff21 	bl	90026dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026f8e:	8060      	strh	r0, [r4, #2]
90026f90:	3404      	adds	r4, #4
90026f92:	f1aa 0a02 	sub.w	sl, sl, #2
90026f96:	e7dc      	b.n	90026f52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026f98:	462f      	mov	r7, r5
90026f9a:	46da      	mov	sl, fp
90026f9c:	e7d9      	b.n	90026f52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026f9e:	d10d      	bne.n	90026fbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90026fa0:	783b      	ldrb	r3, [r7, #0]
90026fa2:	091b      	lsrs	r3, r3, #4
90026fa4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026fa8:	0e0b      	lsrs	r3, r1, #24
90026faa:	d006      	beq.n	90026fba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90026fac:	8822      	ldrh	r2, [r4, #0]
90026fae:	4640      	mov	r0, r8
90026fb0:	9300      	str	r3, [sp, #0]
90026fb2:	464b      	mov	r3, r9
90026fb4:	f7ff ff0c 	bl	90026dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026fb8:	8020      	strh	r0, [r4, #0]
90026fba:	3402      	adds	r4, #2
90026fbc:	9b06      	ldr	r3, [sp, #24]
90026fbe:	9a02      	ldr	r2, [sp, #8]
90026fc0:	881b      	ldrh	r3, [r3, #0]
90026fc2:	eba3 030b 	sub.w	r3, r3, fp
90026fc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90026fca:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90026fce:	4413      	add	r3, r2
90026fd0:	9a07      	ldr	r2, [sp, #28]
90026fd2:	fb93 f3f2 	sdiv	r3, r3, r2
90026fd6:	441d      	add	r5, r3
90026fd8:	e7a3      	b.n	90026f22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90026fda:	9b05      	ldr	r3, [sp, #20]
90026fdc:	6818      	ldr	r0, [r3, #0]
90026fde:	6803      	ldr	r3, [r0, #0]
90026fe0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90026fe2:	4798      	blx	r3
90026fe4:	b00d      	add	sp, #52	@ 0x34
90026fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026fea:	bf00      	nop
90026fec:	24021bdc 	.word	0x24021bdc
90026ff0:	24021bd6 	.word	0x24021bd6

90026ff4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90026ff4:	b570      	push	{r4, r5, r6, lr}
90026ff6:	1214      	asrs	r4, r2, #8
90026ff8:	788d      	ldrb	r5, [r1, #2]
90026ffa:	f89d 6010 	ldrb.w	r6, [sp, #16]
90026ffe:	10d0      	asrs	r0, r2, #3
90027000:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027004:	00d2      	lsls	r2, r2, #3
90027006:	fb15 f503 	smulbb	r5, r5, r3
9002700a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002700e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90027012:	b2d2      	uxtb	r2, r2
90027014:	fb04 5506 	mla	r5, r4, r6, r5
90027018:	784c      	ldrb	r4, [r1, #1]
9002701a:	7809      	ldrb	r1, [r1, #0]
9002701c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90027020:	fb14 f403 	smulbb	r4, r4, r3
90027024:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90027028:	fb11 f303 	smulbb	r3, r1, r3
9002702c:	b2ad      	uxth	r5, r5
9002702e:	fb00 4406 	mla	r4, r0, r6, r4
90027032:	fb02 3306 	mla	r3, r2, r6, r3
90027036:	1c68      	adds	r0, r5, #1
90027038:	b2a4      	uxth	r4, r4
9002703a:	b29b      	uxth	r3, r3
9002703c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90027040:	1c62      	adds	r2, r4, #1
90027042:	1c58      	adds	r0, r3, #1
90027044:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90027048:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002704c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90027050:	0964      	lsrs	r4, r4, #5
90027052:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027056:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002705a:	4328      	orrs	r0, r5
9002705c:	4320      	orrs	r0, r4
9002705e:	bd70      	pop	{r4, r5, r6, pc}

90027060 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90027060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027064:	b08f      	sub	sp, #60	@ 0x3c
90027066:	461c      	mov	r4, r3
90027068:	4682      	mov	sl, r0
9002706a:	460e      	mov	r6, r1
9002706c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90027070:	4615      	mov	r5, r2
90027072:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027074:	2f00      	cmp	r7, #0
90027076:	f000 8141 	beq.w	900272fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002707a:	6820      	ldr	r0, [r4, #0]
9002707c:	aa0a      	add	r2, sp, #40	@ 0x28
9002707e:	6861      	ldr	r1, [r4, #4]
90027080:	f04f 0802 	mov.w	r8, #2
90027084:	3504      	adds	r5, #4
90027086:	c203      	stmia	r2!, {r0, r1}
90027088:	6818      	ldr	r0, [r3, #0]
9002708a:	aa0c      	add	r2, sp, #48	@ 0x30
9002708c:	6859      	ldr	r1, [r3, #4]
9002708e:	c203      	stmia	r2!, {r0, r1}
90027090:	a80a      	add	r0, sp, #40	@ 0x28
90027092:	f7ee fa71 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027096:	4621      	mov	r1, r4
90027098:	a80c      	add	r0, sp, #48	@ 0x30
9002709a:	f7ee fa95 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002709e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900270a2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
900270a6:	f002 0301 	and.w	r3, r2, #1
900270aa:	9306      	str	r3, [sp, #24]
900270ac:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900270b0:	f003 0101 	and.w	r1, r3, #1
900270b4:	9105      	str	r1, [sp, #20]
900270b6:	9805      	ldr	r0, [sp, #20]
900270b8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
900270bc:	4403      	add	r3, r0
900270be:	fb01 2303 	mla	r3, r1, r3, r2
900270c2:	fb93 f3f8 	sdiv	r3, r3, r8
900270c6:	441e      	add	r6, r3
900270c8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900270cc:	441a      	add	r2, r3
900270ce:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900270d2:	4419      	add	r1, r3
900270d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900270d8:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900270dc:	9303      	str	r3, [sp, #12]
900270de:	4b89      	ldr	r3, [pc, #548]	@ (90027304 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900270e0:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
900270e4:	6818      	ldr	r0, [r3, #0]
900270e6:	6803      	ldr	r3, [r0, #0]
900270e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900270ea:	4798      	blx	r3
900270ec:	4a86      	ldr	r2, [pc, #536]	@ (90027308 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
900270ee:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
900270f2:	2fff      	cmp	r7, #255	@ 0xff
900270f4:	8813      	ldrh	r3, [r2, #0]
900270f6:	4694      	mov	ip, r2
900270f8:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
900270fc:	fb03 9404 	mla	r4, r3, r4, r9
90027100:	fb03 f30b 	mul.w	r3, r3, fp
90027104:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90027108:	d071      	beq.n	900271ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002710a:	43f9      	mvns	r1, r7
9002710c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90027110:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90027114:	b2c9      	uxtb	r1, r1
90027116:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002711a:	9104      	str	r1, [sp, #16]
9002711c:	9b07      	ldr	r3, [sp, #28]
9002711e:	42a3      	cmp	r3, r4
90027120:	f240 80e7 	bls.w	900272f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90027124:	9b06      	ldr	r3, [sp, #24]
90027126:	2b00      	cmp	r3, #0
90027128:	d03d      	beq.n	900271a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002712a:	7831      	ldrb	r1, [r6, #0]
9002712c:	4650      	mov	r0, sl
9002712e:	9b04      	ldr	r3, [sp, #16]
90027130:	f106 0801 	add.w	r8, r6, #1
90027134:	f001 010f 	and.w	r1, r1, #15
90027138:	8822      	ldrh	r2, [r4, #0]
9002713a:	9300      	str	r3, [sp, #0]
9002713c:	463b      	mov	r3, r7
9002713e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90027142:	4429      	add	r1, r5
90027144:	f7ff ff56 	bl	90026ff4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90027148:	9b03      	ldr	r3, [sp, #12]
9002714a:	f824 0b02 	strh.w	r0, [r4], #2
9002714e:	f103 3bff 	add.w	fp, r3, #4294967295
90027152:	f1bb 0f01 	cmp.w	fp, #1
90027156:	46a1      	mov	r9, r4
90027158:	f104 0404 	add.w	r4, r4, #4
9002715c:	dd27      	ble.n	900271ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002715e:	f898 1000 	ldrb.w	r1, [r8]
90027162:	4650      	mov	r0, sl
90027164:	9b04      	ldr	r3, [sp, #16]
90027166:	f1ab 0b02 	sub.w	fp, fp, #2
9002716a:	0909      	lsrs	r1, r1, #4
9002716c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90027170:	9300      	str	r3, [sp, #0]
90027172:	463b      	mov	r3, r7
90027174:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90027178:	4429      	add	r1, r5
9002717a:	f7ff ff3b 	bl	90026ff4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002717e:	f824 0c04 	strh.w	r0, [r4, #-4]
90027182:	f818 1b01 	ldrb.w	r1, [r8], #1
90027186:	4650      	mov	r0, sl
90027188:	9b04      	ldr	r3, [sp, #16]
9002718a:	f001 010f 	and.w	r1, r1, #15
9002718e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90027192:	9300      	str	r3, [sp, #0]
90027194:	463b      	mov	r3, r7
90027196:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002719a:	4429      	add	r1, r5
9002719c:	f7ff ff2a 	bl	90026ff4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900271a0:	f824 0c02 	strh.w	r0, [r4, #-2]
900271a4:	e7d5      	b.n	90027152 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900271a6:	46b0      	mov	r8, r6
900271a8:	f8dd b00c 	ldr.w	fp, [sp, #12]
900271ac:	e7d1      	b.n	90027152 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900271ae:	d10f      	bne.n	900271d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900271b0:	f898 1000 	ldrb.w	r1, [r8]
900271b4:	4650      	mov	r0, sl
900271b6:	9b04      	ldr	r3, [sp, #16]
900271b8:	0909      	lsrs	r1, r1, #4
900271ba:	f8b9 2000 	ldrh.w	r2, [r9]
900271be:	9300      	str	r3, [sp, #0]
900271c0:	463b      	mov	r3, r7
900271c2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900271c6:	4429      	add	r1, r5
900271c8:	f7ff ff14 	bl	90026ff4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900271cc:	f829 0b02 	strh.w	r0, [r9], #2
900271d0:	9b08      	ldr	r3, [sp, #32]
900271d2:	9a05      	ldr	r2, [sp, #20]
900271d4:	881c      	ldrh	r4, [r3, #0]
900271d6:	9b03      	ldr	r3, [sp, #12]
900271d8:	1ae4      	subs	r4, r4, r3
900271da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900271de:	4413      	add	r3, r2
900271e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900271e2:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900271e6:	fb93 f3f2 	sdiv	r3, r3, r2
900271ea:	441e      	add	r6, r3
900271ec:	e796      	b.n	9002711c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
900271ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900271f2:	4f46      	ldr	r7, [pc, #280]	@ (9002730c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
900271f4:	42a3      	cmp	r3, r4
900271f6:	d97c      	bls.n	900272f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900271f8:	9a06      	ldr	r2, [sp, #24]
900271fa:	2a00      	cmp	r2, #0
900271fc:	d054      	beq.n	900272a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
900271fe:	7830      	ldrb	r0, [r6, #0]
90027200:	1c71      	adds	r1, r6, #1
90027202:	f000 000f 	and.w	r0, r0, #15
90027206:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002720a:	eb05 0e00 	add.w	lr, r5, r0
9002720e:	5c28      	ldrb	r0, [r5, r0]
90027210:	f89e 2002 	ldrb.w	r2, [lr, #2]
90027214:	f89e e001 	ldrb.w	lr, [lr, #1]
90027218:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002721c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027220:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90027224:	ea42 020e 	orr.w	r2, r2, lr
90027228:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
9002722c:	f824 2b02 	strh.w	r2, [r4], #2
90027230:	9a03      	ldr	r2, [sp, #12]
90027232:	f102 3eff 	add.w	lr, r2, #4294967295
90027236:	f1be 0f01 	cmp.w	lr, #1
9002723a:	4620      	mov	r0, r4
9002723c:	f104 0404 	add.w	r4, r4, #4
90027240:	dd36      	ble.n	900272b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90027242:	7808      	ldrb	r0, [r1, #0]
90027244:	f1ae 0e02 	sub.w	lr, lr, #2
90027248:	0900      	lsrs	r0, r0, #4
9002724a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002724e:	eb05 0a00 	add.w	sl, r5, r0
90027252:	f89a 2001 	ldrb.w	r2, [sl, #1]
90027256:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002725a:	00d2      	lsls	r2, r2, #3
9002725c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90027260:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027264:	ea49 0202 	orr.w	r2, r9, r2
90027268:	f815 9000 	ldrb.w	r9, [r5, r0]
9002726c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90027270:	f824 2c04 	strh.w	r2, [r4, #-4]
90027274:	f811 0b01 	ldrb.w	r0, [r1], #1
90027278:	f000 000f 	and.w	r0, r0, #15
9002727c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90027280:	eb05 0a00 	add.w	sl, r5, r0
90027284:	f89a 2001 	ldrb.w	r2, [sl, #1]
90027288:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002728c:	00d2      	lsls	r2, r2, #3
9002728e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90027292:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027296:	ea49 0202 	orr.w	r2, r9, r2
9002729a:	f815 9000 	ldrb.w	r9, [r5, r0]
9002729e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900272a2:	f824 2c02 	strh.w	r2, [r4, #-2]
900272a6:	e7c6      	b.n	90027236 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900272a8:	4631      	mov	r1, r6
900272aa:	f8dd e00c 	ldr.w	lr, [sp, #12]
900272ae:	e7c2      	b.n	90027236 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900272b0:	d111      	bne.n	900272d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900272b2:	7809      	ldrb	r1, [r1, #0]
900272b4:	0909      	lsrs	r1, r1, #4
900272b6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900272ba:	186c      	adds	r4, r5, r1
900272bc:	5c69      	ldrb	r1, [r5, r1]
900272be:	78a2      	ldrb	r2, [r4, #2]
900272c0:	7864      	ldrb	r4, [r4, #1]
900272c2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900272c6:	00e4      	lsls	r4, r4, #3
900272c8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900272cc:	4322      	orrs	r2, r4
900272ce:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
900272d2:	f820 2b02 	strh.w	r2, [r0], #2
900272d6:	9a03      	ldr	r2, [sp, #12]
900272d8:	f8bc 4000 	ldrh.w	r4, [ip]
900272dc:	9905      	ldr	r1, [sp, #20]
900272de:	1aa4      	subs	r4, r4, r2
900272e0:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900272e4:	440a      	add	r2, r1
900272e6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900272ea:	fb92 f2f8 	sdiv	r2, r2, r8
900272ee:	4416      	add	r6, r2
900272f0:	e780      	b.n	900271f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
900272f2:	4b04      	ldr	r3, [pc, #16]	@ (90027304 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900272f4:	6818      	ldr	r0, [r3, #0]
900272f6:	6803      	ldr	r3, [r0, #0]
900272f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900272fa:	4798      	blx	r3
900272fc:	b00f      	add	sp, #60	@ 0x3c
900272fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027302:	bf00      	nop
90027304:	24021bdc 	.word	0x24021bdc
90027308:	24021bd6 	.word	0x24021bd6
9002730c:	fffff800 	.word	0xfffff800

90027310 <CRC_Lock>:
90027310:	4a2d      	ldr	r2, [pc, #180]	@ (900273c8 <CRC_Lock+0xb8>)
90027312:	b530      	push	{r4, r5, lr}
90027314:	6813      	ldr	r3, [r2, #0]
90027316:	f24c 2540 	movw	r5, #49728	@ 0xc240
9002731a:	f023 0301 	bic.w	r3, r3, #1
9002731e:	6013      	str	r3, [r2, #0]
90027320:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90027324:	4b29      	ldr	r3, [pc, #164]	@ (900273cc <CRC_Lock+0xbc>)
90027326:	681c      	ldr	r4, [r3, #0]
90027328:	4014      	ands	r4, r2
9002732a:	42ac      	cmp	r4, r5
9002732c:	d005      	beq.n	9002733a <CRC_Lock+0x2a>
9002732e:	681c      	ldr	r4, [r3, #0]
90027330:	f24c 2570 	movw	r5, #49776	@ 0xc270
90027334:	4014      	ands	r4, r2
90027336:	42ac      	cmp	r4, r5
90027338:	d125      	bne.n	90027386 <CRC_Lock+0x76>
9002733a:	4b25      	ldr	r3, [pc, #148]	@ (900273d0 <CRC_Lock+0xc0>)
9002733c:	681b      	ldr	r3, [r3, #0]
9002733e:	2b00      	cmp	r3, #0
90027340:	d139      	bne.n	900273b6 <CRC_Lock+0xa6>
90027342:	4b24      	ldr	r3, [pc, #144]	@ (900273d4 <CRC_Lock+0xc4>)
90027344:	681a      	ldr	r2, [r3, #0]
90027346:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002734a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002734e:	d00d      	beq.n	9002736c <CRC_Lock+0x5c>
90027350:	681a      	ldr	r2, [r3, #0]
90027352:	f240 4483 	movw	r4, #1155	@ 0x483
90027356:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002735a:	42a2      	cmp	r2, r4
9002735c:	d006      	beq.n	9002736c <CRC_Lock+0x5c>
9002735e:	681b      	ldr	r3, [r3, #0]
90027360:	f240 4285 	movw	r2, #1157	@ 0x485
90027364:	f3c3 030b 	ubfx	r3, r3, #0, #12
90027368:	4293      	cmp	r3, r2
9002736a:	d124      	bne.n	900273b6 <CRC_Lock+0xa6>
9002736c:	4b1a      	ldr	r3, [pc, #104]	@ (900273d8 <CRC_Lock+0xc8>)
9002736e:	2201      	movs	r2, #1
90027370:	601a      	str	r2, [r3, #0]
90027372:	681a      	ldr	r2, [r3, #0]
90027374:	2a00      	cmp	r2, #0
90027376:	d1fc      	bne.n	90027372 <CRC_Lock+0x62>
90027378:	4b18      	ldr	r3, [pc, #96]	@ (900273dc <CRC_Lock+0xcc>)
9002737a:	6018      	str	r0, [r3, #0]
9002737c:	6818      	ldr	r0, [r3, #0]
9002737e:	1a43      	subs	r3, r0, r1
90027380:	4258      	negs	r0, r3
90027382:	4158      	adcs	r0, r3
90027384:	e00e      	b.n	900273a4 <CRC_Lock+0x94>
90027386:	681b      	ldr	r3, [r3, #0]
90027388:	4013      	ands	r3, r2
9002738a:	f24d 2220 	movw	r2, #53792	@ 0xd220
9002738e:	4293      	cmp	r3, r2
90027390:	d111      	bne.n	900273b6 <CRC_Lock+0xa6>
90027392:	4b13      	ldr	r3, [pc, #76]	@ (900273e0 <CRC_Lock+0xd0>)
90027394:	f240 4286 	movw	r2, #1158	@ 0x486
90027398:	681b      	ldr	r3, [r3, #0]
9002739a:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002739e:	4293      	cmp	r3, r2
900273a0:	d001      	beq.n	900273a6 <CRC_Lock+0x96>
900273a2:	2000      	movs	r0, #0
900273a4:	bd30      	pop	{r4, r5, pc}
900273a6:	4b0f      	ldr	r3, [pc, #60]	@ (900273e4 <CRC_Lock+0xd4>)
900273a8:	2201      	movs	r2, #1
900273aa:	601a      	str	r2, [r3, #0]
900273ac:	681a      	ldr	r2, [r3, #0]
900273ae:	2a00      	cmp	r2, #0
900273b0:	d1fc      	bne.n	900273ac <CRC_Lock+0x9c>
900273b2:	4b0d      	ldr	r3, [pc, #52]	@ (900273e8 <CRC_Lock+0xd8>)
900273b4:	e7e1      	b.n	9002737a <CRC_Lock+0x6a>
900273b6:	4b0d      	ldr	r3, [pc, #52]	@ (900273ec <CRC_Lock+0xdc>)
900273b8:	2201      	movs	r2, #1
900273ba:	601a      	str	r2, [r3, #0]
900273bc:	681a      	ldr	r2, [r3, #0]
900273be:	2a00      	cmp	r2, #0
900273c0:	d1fc      	bne.n	900273bc <CRC_Lock+0xac>
900273c2:	4b0b      	ldr	r3, [pc, #44]	@ (900273f0 <CRC_Lock+0xe0>)
900273c4:	e7d9      	b.n	9002737a <CRC_Lock+0x6a>
900273c6:	bf00      	nop
900273c8:	e0002000 	.word	0xe0002000
900273cc:	e000ed00 	.word	0xe000ed00
900273d0:	e0042000 	.word	0xe0042000
900273d4:	5c001000 	.word	0x5c001000
900273d8:	58024c08 	.word	0x58024c08
900273dc:	58024c00 	.word	0x58024c00
900273e0:	46008ff0 	.word	0x46008ff0
900273e4:	46024c08 	.word	0x46024c08
900273e8:	46024c00 	.word	0x46024c00
900273ec:	40023008 	.word	0x40023008
900273f0:	40023000 	.word	0x40023000

900273f4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
900273f4:	6101      	str	r1, [r0, #16]
900273f6:	4770      	bx	lr

900273f8 <_ZN8touchgfx8Gestures4tickEv>:
900273f8:	7b83      	ldrb	r3, [r0, #14]
900273fa:	b14b      	cbz	r3, 90027410 <_ZN8touchgfx8Gestures4tickEv+0x18>
900273fc:	8903      	ldrh	r3, [r0, #8]
900273fe:	3301      	adds	r3, #1
90027400:	b29b      	uxth	r3, r3
90027402:	2b07      	cmp	r3, #7
90027404:	8103      	strh	r3, [r0, #8]
90027406:	bf81      	itttt	hi
90027408:	2300      	movhi	r3, #0
9002740a:	8143      	strhhi	r3, [r0, #10]
9002740c:	8183      	strhhi	r3, [r0, #12]
9002740e:	7383      	strbhi	r3, [r0, #14]
90027410:	4770      	bx	lr
	...

90027414 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90027414:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90027418:	4698      	mov	r8, r3
9002741a:	8883      	ldrh	r3, [r0, #4]
9002741c:	4604      	mov	r4, r0
9002741e:	4617      	mov	r7, r2
90027420:	f8ad 3006 	strh.w	r3, [sp, #6]
90027424:	eba8 0303 	sub.w	r3, r8, r3
90027428:	4a19      	ldr	r2, [pc, #100]	@ (90027490 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002742a:	460e      	mov	r6, r1
9002742c:	b21b      	sxth	r3, r3
9002742e:	88c1      	ldrh	r1, [r0, #6]
90027430:	9200      	str	r2, [sp, #0]
90027432:	2000      	movs	r0, #0
90027434:	2b00      	cmp	r3, #0
90027436:	8aa2      	ldrh	r2, [r4, #20]
90027438:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
9002743c:	bfb8      	it	lt
9002743e:	425b      	neglt	r3, r3
90027440:	f88d 0004 	strb.w	r0, [sp, #4]
90027444:	f8ad 1008 	strh.w	r1, [sp, #8]
90027448:	b21b      	sxth	r3, r3
9002744a:	f8ad 800a 	strh.w	r8, [sp, #10]
9002744e:	f8ad 500c 	strh.w	r5, [sp, #12]
90027452:	4293      	cmp	r3, r2
90027454:	dc07      	bgt.n	90027466 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90027456:	1a69      	subs	r1, r5, r1
90027458:	b209      	sxth	r1, r1
9002745a:	2900      	cmp	r1, #0
9002745c:	bfb8      	it	lt
9002745e:	4249      	neglt	r1, r1
90027460:	b209      	sxth	r1, r1
90027462:	428a      	cmp	r2, r1
90027464:	da10      	bge.n	90027488 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90027466:	6920      	ldr	r0, [r4, #16]
90027468:	4669      	mov	r1, sp
9002746a:	eba8 0606 	sub.w	r6, r8, r6
9002746e:	1bef      	subs	r7, r5, r7
90027470:	6803      	ldr	r3, [r0, #0]
90027472:	685b      	ldr	r3, [r3, #4]
90027474:	4798      	blx	r3
90027476:	2300      	movs	r3, #0
90027478:	2001      	movs	r0, #1
9002747a:	8166      	strh	r6, [r4, #10]
9002747c:	8123      	strh	r3, [r4, #8]
9002747e:	81a7      	strh	r7, [r4, #12]
90027480:	f8a4 8004 	strh.w	r8, [r4, #4]
90027484:	80e5      	strh	r5, [r4, #6]
90027486:	73a0      	strb	r0, [r4, #14]
90027488:	b004      	add	sp, #16
9002748a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002748e:	bf00      	nop
90027490:	9002da88 	.word	0x9002da88

90027494 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90027494:	b5f0      	push	{r4, r5, r6, r7, lr}
90027496:	461e      	mov	r6, r3
90027498:	1e4b      	subs	r3, r1, #1
9002749a:	b085      	sub	sp, #20
9002749c:	4604      	mov	r4, r0
9002749e:	2b01      	cmp	r3, #1
900274a0:	460d      	mov	r5, r1
900274a2:	4617      	mov	r7, r2
900274a4:	d84b      	bhi.n	9002753e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900274a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900274aa:	1cd3      	adds	r3, r2, #3
900274ac:	b29b      	uxth	r3, r3
900274ae:	2b06      	cmp	r3, #6
900274b0:	d916      	bls.n	900274e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900274b2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90027554 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900274b6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900274ba:	f8cd c004 	str.w	ip, [sp, #4]
900274be:	f04f 0c00 	mov.w	ip, #0
900274c2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900274c6:	6900      	ldr	r0, [r0, #16]
900274c8:	f8ad 100c 	strh.w	r1, [sp, #12]
900274cc:	a901      	add	r1, sp, #4
900274ce:	f88d c008 	strb.w	ip, [sp, #8]
900274d2:	f8ad 200a 	strh.w	r2, [sp, #10]
900274d6:	f8ad 300e 	strh.w	r3, [sp, #14]
900274da:	6803      	ldr	r3, [r0, #0]
900274dc:	689b      	ldr	r3, [r3, #8]
900274de:	4798      	blx	r3
900274e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900274e4:	1cd3      	adds	r3, r2, #3
900274e6:	b29b      	uxth	r3, r3
900274e8:	2b06      	cmp	r3, #6
900274ea:	d916      	bls.n	9002751a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900274ec:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90027554 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900274f0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900274f4:	f8cd c004 	str.w	ip, [sp, #4]
900274f8:	f04f 0c01 	mov.w	ip, #1
900274fc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90027500:	6920      	ldr	r0, [r4, #16]
90027502:	f8ad 100c 	strh.w	r1, [sp, #12]
90027506:	a901      	add	r1, sp, #4
90027508:	f88d c008 	strb.w	ip, [sp, #8]
9002750c:	f8ad 200a 	strh.w	r2, [sp, #10]
90027510:	f8ad 300e 	strh.w	r3, [sp, #14]
90027514:	6803      	ldr	r3, [r0, #0]
90027516:	689b      	ldr	r3, [r3, #8]
90027518:	4798      	blx	r3
9002751a:	4b0d      	ldr	r3, [pc, #52]	@ (90027550 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9002751c:	a901      	add	r1, sp, #4
9002751e:	6920      	ldr	r0, [r4, #16]
90027520:	9301      	str	r3, [sp, #4]
90027522:	2300      	movs	r3, #0
90027524:	f88d 5008 	strb.w	r5, [sp, #8]
90027528:	f8ad 700a 	strh.w	r7, [sp, #10]
9002752c:	f8ad 600c 	strh.w	r6, [sp, #12]
90027530:	f8ad 300e 	strh.w	r3, [sp, #14]
90027534:	6803      	ldr	r3, [r0, #0]
90027536:	681b      	ldr	r3, [r3, #0]
90027538:	4798      	blx	r3
9002753a:	b005      	add	sp, #20
9002753c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002753e:	2900      	cmp	r1, #0
90027540:	d1eb      	bne.n	9002751a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90027542:	80a2      	strh	r2, [r4, #4]
90027544:	80c6      	strh	r6, [r0, #6]
90027546:	60a1      	str	r1, [r4, #8]
90027548:	81a1      	strh	r1, [r4, #12]
9002754a:	73a1      	strb	r1, [r4, #14]
9002754c:	e7e5      	b.n	9002751a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002754e:	bf00      	nop
90027550:	9002da74 	.word	0x9002da74
90027554:	9002da9c 	.word	0x9002da9c

90027558 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90027558:	10c9      	asrs	r1, r1, #3
9002755a:	2900      	cmp	r1, #0
9002755c:	bfb8      	it	lt
9002755e:	4249      	neglt	r1, r1
90027560:	2801      	cmp	r0, #1
90027562:	d108      	bne.n	90027576 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90027564:	f3c1 0008 	ubfx	r0, r1, #0, #9
90027568:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9002756c:	4601      	mov	r1, r0
9002756e:	dd02      	ble.n	90027576 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90027570:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
90027574:	4770      	bx	lr
90027576:	29ff      	cmp	r1, #255	@ 0xff
90027578:	bfa8      	it	ge
9002757a:	21ff      	movge	r1, #255	@ 0xff
9002757c:	4608      	mov	r0, r1
9002757e:	4770      	bx	lr

90027580 <_ZN8touchgfx10Rasterizer6lineToEii>:
90027580:	b410      	push	{r4}
90027582:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90027586:	429c      	cmp	r4, r3
90027588:	d803      	bhi.n	90027592 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
9002758a:	f85d 4b04 	ldr.w	r4, [sp], #4
9002758e:	f7ec bafd 	b.w	90013b8c <_ZN8touchgfx7Outline6lineToEii>
90027592:	f85d 4b04 	ldr.w	r4, [sp], #4
90027596:	4770      	bx	lr

90027598 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90027598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002759c:	b08b      	sub	sp, #44	@ 0x2c
9002759e:	4606      	mov	r6, r0
900275a0:	468a      	mov	sl, r1
900275a2:	e9cd 2306 	strd	r2, r3, [sp, #24]
900275a6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900275aa:	9308      	str	r3, [sp, #32]
900275ac:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900275b0:	9309      	str	r3, [sp, #36]	@ 0x24
900275b2:	f7ec fc56 	bl	90013e62 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900275b6:	68b5      	ldr	r5, [r6, #8]
900275b8:	4604      	mov	r4, r0
900275ba:	2d00      	cmp	r5, #0
900275bc:	d044      	beq.n	90027648 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900275be:	6873      	ldr	r3, [r6, #4]
900275c0:	42ab      	cmp	r3, r5
900275c2:	d33d      	bcc.n	90027640 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
900275c4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900275c8:	f04f 0800 	mov.w	r8, #0
900275cc:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
900275d0:	eb02 0b03 	add.w	fp, r2, r3
900275d4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
900275d8:	fb02 1203 	mla	r2, r2, r3, r1
900275dc:	9205      	str	r2, [sp, #20]
900275de:	1e6a      	subs	r2, r5, #1
900275e0:	9204      	str	r2, [sp, #16]
900275e2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
900275e6:	f9b4 7000 	ldrsh.w	r7, [r4]
900275ea:	454b      	cmp	r3, r9
900275ec:	463a      	mov	r2, r7
900275ee:	d008      	beq.n	90027602 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
900275f0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
900275f4:	eb03 0b09 	add.w	fp, r3, r9
900275f8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
900275fc:	fb03 1309 	mla	r3, r3, r9, r1
90027600:	9305      	str	r3, [sp, #20]
90027602:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90027606:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002760a:	4498      	add	r8, r3
9002760c:	9b04      	ldr	r3, [sp, #16]
9002760e:	3b01      	subs	r3, #1
90027610:	9304      	str	r3, [sp, #16]
90027612:	9b04      	ldr	r3, [sp, #16]
90027614:	3301      	adds	r3, #1
90027616:	d015      	beq.n	90027644 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90027618:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002761c:	42bb      	cmp	r3, r7
9002761e:	d117      	bne.n	90027650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90027620:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90027624:	9b04      	ldr	r3, [sp, #16]
90027626:	4548      	cmp	r0, r9
90027628:	f103 33ff 	add.w	r3, r3, #4294967295
9002762c:	d17d      	bne.n	9002772a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002762e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90027632:	4401      	add	r1, r0
90027634:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90027638:	4480      	add	r8, r0
9002763a:	e7e9      	b.n	90027610 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002763c:	461f      	mov	r7, r3
9002763e:	e042      	b.n	900276c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90027640:	2000      	movs	r0, #0
90027642:	e002      	b.n	9002764a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90027644:	2900      	cmp	r1, #0
90027646:	d16d      	bne.n	90027724 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90027648:	2001      	movs	r0, #1
9002764a:	b00b      	add	sp, #44	@ 0x2c
9002764c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027650:	b379      	cbz	r1, 900276b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90027652:	2f00      	cmp	r7, #0
90027654:	db29      	blt.n	900276aa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90027656:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002765a:	42bb      	cmp	r3, r7
9002765c:	dd25      	ble.n	900276aa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002765e:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90027662:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90027666:	f7ff ff77 	bl	90027558 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002766a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002766c:	fb10 f003 	smulbb	r0, r0, r3
90027670:	b280      	uxth	r0, r0
90027672:	1c41      	adds	r1, r0, #1
90027674:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027678:	1209      	asrs	r1, r1, #8
9002767a:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002767e:	d014      	beq.n	900276aa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90027680:	b2c9      	uxtb	r1, r1
90027682:	9808      	ldr	r0, [sp, #32]
90027684:	b2ba      	uxth	r2, r7
90027686:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90027688:	9102      	str	r1, [sp, #8]
9002768a:	2101      	movs	r1, #1
9002768c:	4413      	add	r3, r2
9002768e:	4402      	add	r2, r0
90027690:	9101      	str	r1, [sp, #4]
90027692:	fa0f f18b 	sxth.w	r1, fp
90027696:	f8da 0000 	ldr.w	r0, [sl]
9002769a:	b21b      	sxth	r3, r3
9002769c:	9100      	str	r1, [sp, #0]
9002769e:	b212      	sxth	r2, r2
900276a0:	6941      	ldr	r1, [r0, #20]
900276a2:	4650      	mov	r0, sl
900276a4:	460d      	mov	r5, r1
900276a6:	9905      	ldr	r1, [sp, #20]
900276a8:	47a8      	blx	r5
900276aa:	9b04      	ldr	r3, [sp, #16]
900276ac:	1c7a      	adds	r2, r7, #1
900276ae:	3301      	adds	r3, #1
900276b0:	d0ca      	beq.n	90027648 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900276b2:	f9b4 7000 	ldrsh.w	r7, [r4]
900276b6:	1abb      	subs	r3, r7, r2
900276b8:	2b00      	cmp	r3, #0
900276ba:	dd31      	ble.n	90027720 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900276bc:	2a00      	cmp	r2, #0
900276be:	dabd      	bge.n	9002763c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
900276c0:	2f00      	cmp	r7, #0
900276c2:	dd2d      	ble.n	90027720 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900276c4:	2200      	movs	r2, #0
900276c6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
900276ca:	19d1      	adds	r1, r2, r7
900276cc:	4299      	cmp	r1, r3
900276ce:	db02      	blt.n	900276d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
900276d0:	1a9f      	subs	r7, r3, r2
900276d2:	2f00      	cmp	r7, #0
900276d4:	dd24      	ble.n	90027720 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900276d6:	ea4f 1188 	mov.w	r1, r8, lsl #6
900276da:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
900276de:	f7ff ff3b 	bl	90027558 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900276e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900276e4:	fb10 f003 	smulbb	r0, r0, r3
900276e8:	b280      	uxth	r0, r0
900276ea:	1c41      	adds	r1, r0, #1
900276ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900276f0:	1209      	asrs	r1, r1, #8
900276f2:	f011 0fff 	tst.w	r1, #255	@ 0xff
900276f6:	d013      	beq.n	90027720 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900276f8:	b292      	uxth	r2, r2
900276fa:	9808      	ldr	r0, [sp, #32]
900276fc:	b2c9      	uxtb	r1, r1
900276fe:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90027700:	b23f      	sxth	r7, r7
90027702:	4413      	add	r3, r2
90027704:	9102      	str	r1, [sp, #8]
90027706:	4402      	add	r2, r0
90027708:	fa0f f18b 	sxth.w	r1, fp
9002770c:	f8da 0000 	ldr.w	r0, [sl]
90027710:	b21b      	sxth	r3, r3
90027712:	9100      	str	r1, [sp, #0]
90027714:	b212      	sxth	r2, r2
90027716:	9701      	str	r7, [sp, #4]
90027718:	9905      	ldr	r1, [sp, #20]
9002771a:	6947      	ldr	r7, [r0, #20]
9002771c:	4650      	mov	r0, sl
9002771e:	47b8      	blx	r7
90027720:	464b      	mov	r3, r9
90027722:	e75e      	b.n	900275e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90027724:	2f00      	cmp	r7, #0
90027726:	da96      	bge.n	90027656 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90027728:	e78e      	b.n	90027648 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002772a:	2900      	cmp	r1, #0
9002772c:	d0f8      	beq.n	90027720 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002772e:	e790      	b.n	90027652 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90027730 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90027730:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90027734:	461e      	mov	r6, r3
90027736:	4b36      	ldr	r3, [pc, #216]	@ (90027810 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90027738:	2500      	movs	r5, #0
9002773a:	f100 0814 	add.w	r8, r0, #20
9002773e:	4604      	mov	r4, r0
90027740:	4617      	mov	r7, r2
90027742:	e9c0 3100 	strd	r3, r1, [r0]
90027746:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9002774a:	8185      	strh	r5, [r0, #12]
9002774c:	8103      	strh	r3, [r0, #8]
9002774e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90027752:	81c5      	strh	r5, [r0, #14]
90027754:	7283      	strb	r3, [r0, #10]
90027756:	8205      	strh	r5, [r0, #16]
90027758:	8245      	strh	r5, [r0, #18]
9002775a:	4640      	mov	r0, r8
9002775c:	f7eb fd5c 	bl	90013218 <_ZN8touchgfx7OutlineC1Ev>
90027760:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90027764:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
90027768:	466b      	mov	r3, sp
9002776a:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
9002776e:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
90027772:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
90027776:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
9002777a:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
9002777e:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
90027782:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
90027786:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
9002778a:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
9002778e:	6830      	ldr	r0, [r6, #0]
90027790:	6871      	ldr	r1, [r6, #4]
90027792:	8872      	ldrh	r2, [r6, #2]
90027794:	8835      	ldrh	r5, [r6, #0]
90027796:	c303      	stmia	r3!, {r0, r1}
90027798:	887b      	ldrh	r3, [r7, #2]
9002779a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
9002779e:	4413      	add	r3, r2
900277a0:	883a      	ldrh	r2, [r7, #0]
900277a2:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
900277a6:	442a      	add	r2, r5
900277a8:	81e3      	strh	r3, [r4, #14]
900277aa:	8220      	strh	r0, [r4, #16]
900277ac:	4668      	mov	r0, sp
900277ae:	81a2      	strh	r2, [r4, #12]
900277b0:	8261      	strh	r1, [r4, #18]
900277b2:	4639      	mov	r1, r7
900277b4:	f7ed ff08 	bl	900155c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900277b8:	f104 000c 	add.w	r0, r4, #12
900277bc:	f7ed fedc 	bl	90015578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900277c0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900277c4:	f8bd 2000 	ldrh.w	r2, [sp]
900277c8:	4640      	mov	r0, r8
900277ca:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
900277ce:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
900277d2:	f7eb fd05 	bl	900131e0 <_ZN8touchgfx7Outline5resetEv>
900277d6:	f9bd 3000 	ldrsh.w	r3, [sp]
900277da:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
900277de:	4620      	mov	r0, r4
900277e0:	015b      	lsls	r3, r3, #5
900277e2:	64e3      	str	r3, [r4, #76]	@ 0x4c
900277e4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900277e8:	015b      	lsls	r3, r3, #5
900277ea:	6523      	str	r3, [r4, #80]	@ 0x50
900277ec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900277f0:	015b      	lsls	r3, r3, #5
900277f2:	6563      	str	r3, [r4, #84]	@ 0x54
900277f4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900277f8:	015b      	lsls	r3, r3, #5
900277fa:	65a3      	str	r3, [r4, #88]	@ 0x58
900277fc:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90027800:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90027804:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90027808:	b002      	add	sp, #8
9002780a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002780e:	bf00      	nop
90027810:	9002ddd8 	.word	0x9002ddd8

90027814 <_ZN8touchgfx6Canvas5closeEv>:
90027814:	b538      	push	{r3, r4, r5, lr}
90027816:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002781a:	4604      	mov	r4, r0
9002781c:	b193      	cbz	r3, 90027844 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002781e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
90027822:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90027826:	4213      	tst	r3, r2
90027828:	d10c      	bne.n	90027844 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002782a:	f100 0514 	add.w	r5, r0, #20
9002782e:	b123      	cbz	r3, 9002783a <_ZN8touchgfx6Canvas5closeEv+0x26>
90027830:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90027834:	4628      	mov	r0, r5
90027836:	f7ff fea3 	bl	90027580 <_ZN8touchgfx10Rasterizer6lineToEii>
9002783a:	4628      	mov	r0, r5
9002783c:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
90027840:	f7ff fe9e 	bl	90027580 <_ZN8touchgfx10Rasterizer6lineToEii>
90027844:	2300      	movs	r3, #0
90027846:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002784a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002784e:	4298      	cmp	r0, r3
90027850:	bf34      	ite	cc
90027852:	2000      	movcc	r0, #0
90027854:	2001      	movcs	r0, #1
90027856:	bd38      	pop	{r3, r4, r5, pc}

90027858 <_ZN8touchgfx6Canvas6renderEh>:
90027858:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002785c:	7a85      	ldrb	r5, [r0, #10]
9002785e:	4604      	mov	r4, r0
90027860:	4369      	muls	r1, r5
90027862:	1c4d      	adds	r5, r1, #1
90027864:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90027868:	122d      	asrs	r5, r5, #8
9002786a:	f000 8098 	beq.w	9002799e <_ZN8touchgfx6Canvas6renderEh+0x146>
9002786e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
90027872:	2b00      	cmp	r3, #0
90027874:	f000 8093 	beq.w	9002799e <_ZN8touchgfx6Canvas6renderEh+0x146>
90027878:	f7ff ffcc 	bl	90027814 <_ZN8touchgfx6Canvas5closeEv>
9002787c:	4607      	mov	r7, r0
9002787e:	2800      	cmp	r0, #0
90027880:	d045      	beq.n	9002790e <_ZN8touchgfx6Canvas6renderEh+0xb6>
90027882:	6860      	ldr	r0, [r4, #4]
90027884:	4e47      	ldr	r6, [pc, #284]	@ (900279a4 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90027886:	6803      	ldr	r3, [r0, #0]
90027888:	6837      	ldr	r7, [r6, #0]
9002788a:	689b      	ldr	r3, [r3, #8]
9002788c:	4798      	blx	r3
9002788e:	4601      	mov	r1, r0
90027890:	4638      	mov	r0, r7
90027892:	f7e9 fab9 	bl	90010e08 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90027896:	4607      	mov	r7, r0
90027898:	f7e8 fe7a 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
9002789c:	6803      	ldr	r3, [r0, #0]
9002789e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900278a0:	4798      	blx	r3
900278a2:	4680      	mov	r8, r0
900278a4:	f7e8 fe74 	bl	90010590 <_ZN8touchgfx3HAL3lcdEv>
900278a8:	6803      	ldr	r3, [r0, #0]
900278aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900278ac:	4798      	blx	r3
900278ae:	280b      	cmp	r0, #11
900278b0:	d85a      	bhi.n	90027968 <_ZN8touchgfx6Canvas6renderEh+0x110>
900278b2:	e8df f000 	tbb	[pc, r0]
900278b6:	5b50      	.short	0x5b50
900278b8:	3059066b 	.word	0x3059066b
900278bc:	64646440 	.word	0x64646440
900278c0:	6464      	.short	0x6464
900278c2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900278c6:	2208      	movs	r2, #8
900278c8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900278cc:	fb91 f2f2 	sdiv	r2, r1, r2
900278d0:	fb08 2303 	mla	r3, r8, r3, r2
900278d4:	441f      	add	r7, r3
900278d6:	424b      	negs	r3, r1
900278d8:	f001 0107 	and.w	r1, r1, #7
900278dc:	f003 0307 	and.w	r3, r3, #7
900278e0:	bf58      	it	pl
900278e2:	4259      	negpl	r1, r3
900278e4:	b2c9      	uxtb	r1, r1
900278e6:	b2ed      	uxtb	r5, r5
900278e8:	463a      	mov	r2, r7
900278ea:	fa0f f388 	sxth.w	r3, r8
900278ee:	f104 0014 	add.w	r0, r4, #20
900278f2:	e9cd 1500 	strd	r1, r5, [sp]
900278f6:	6861      	ldr	r1, [r4, #4]
900278f8:	f7ff fe4e 	bl	90027598 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
900278fc:	4607      	mov	r7, r0
900278fe:	6860      	ldr	r0, [r4, #4]
90027900:	6803      	ldr	r3, [r0, #0]
90027902:	691b      	ldr	r3, [r3, #16]
90027904:	4798      	blx	r3
90027906:	6830      	ldr	r0, [r6, #0]
90027908:	6803      	ldr	r3, [r0, #0]
9002790a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002790c:	4798      	blx	r3
9002790e:	4638      	mov	r0, r7
90027910:	b002      	add	sp, #8
90027912:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90027916:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002791a:	2204      	movs	r2, #4
9002791c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90027920:	fb91 f2f2 	sdiv	r2, r1, r2
90027924:	fb08 2303 	mla	r3, r8, r3, r2
90027928:	441f      	add	r7, r3
9002792a:	424b      	negs	r3, r1
9002792c:	f001 0103 	and.w	r1, r1, #3
90027930:	f003 0303 	and.w	r3, r3, #3
90027934:	e7d4      	b.n	900278e0 <_ZN8touchgfx6Canvas6renderEh+0x88>
90027936:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002793a:	2202      	movs	r2, #2
9002793c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90027940:	2900      	cmp	r1, #0
90027942:	fb91 f2f2 	sdiv	r2, r1, r2
90027946:	f001 0101 	and.w	r1, r1, #1
9002794a:	fb08 2303 	mla	r3, r8, r3, r2
9002794e:	bfb8      	it	lt
90027950:	4249      	neglt	r1, r1
90027952:	441f      	add	r7, r3
90027954:	e7c6      	b.n	900278e4 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90027956:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002795a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002795e:	fb08 f303 	mul.w	r3, r8, r3
90027962:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90027966:	441f      	add	r7, r3
90027968:	2100      	movs	r1, #0
9002796a:	e7bc      	b.n	900278e6 <_ZN8touchgfx6Canvas6renderEh+0x8e>
9002796c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90027970:	2103      	movs	r1, #3
90027972:	fb08 f203 	mul.w	r2, r8, r3
90027976:	89a3      	ldrh	r3, [r4, #12]
90027978:	fb13 2301 	smlabb	r3, r3, r1, r2
9002797c:	e7f3      	b.n	90027966 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002797e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90027982:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90027986:	fb08 2303 	mla	r3, r8, r3, r2
9002798a:	e7ec      	b.n	90027966 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002798c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90027990:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90027994:	fb08 f303 	mul.w	r3, r8, r3
90027998:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9002799c:	e7e3      	b.n	90027966 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002799e:	2701      	movs	r7, #1
900279a0:	e7b5      	b.n	9002790e <_ZN8touchgfx6Canvas6renderEh+0xb6>
900279a2:	bf00      	nop
900279a4:	24021bdc 	.word	0x24021bdc

900279a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
900279a8:	4b06      	ldr	r3, [pc, #24]	@ (900279c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
900279aa:	b510      	push	{r4, lr}
900279ac:	781b      	ldrb	r3, [r3, #0]
900279ae:	2b01      	cmp	r3, #1
900279b0:	d107      	bne.n	900279c2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
900279b2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900279b6:	680b      	ldr	r3, [r1, #0]
900279b8:	6814      	ldr	r4, [r2, #0]
900279ba:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
900279be:	6013      	str	r3, [r2, #0]
900279c0:	600c      	str	r4, [r1, #0]
900279c2:	bd10      	pop	{r4, pc}
900279c4:	24021bd4 	.word	0x24021bd4

900279c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
900279c8:	b513      	push	{r0, r1, r4, lr}
900279ca:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
900279ce:	4604      	mov	r4, r0
900279d0:	e9cd 2100 	strd	r2, r1, [sp]
900279d4:	b9a3      	cbnz	r3, 90027a00 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
900279d6:	466a      	mov	r2, sp
900279d8:	a901      	add	r1, sp, #4
900279da:	4620      	mov	r0, r4
900279dc:	f7ff ffe4 	bl	900279a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900279e0:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900279e2:	9901      	ldr	r1, [sp, #4]
900279e4:	9a00      	ldr	r2, [sp, #0]
900279e6:	1ac9      	subs	r1, r1, r3
900279e8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900279ea:	1ad2      	subs	r2, r2, r3
900279ec:	9101      	str	r1, [sp, #4]
900279ee:	2a00      	cmp	r2, #0
900279f0:	9200      	str	r2, [sp, #0]
900279f2:	da0b      	bge.n	90027a0c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
900279f4:	2301      	movs	r3, #1
900279f6:	2900      	cmp	r1, #0
900279f8:	da0e      	bge.n	90027a18 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
900279fa:	f043 0304 	orr.w	r3, r3, #4
900279fe:	e013      	b.n	90027a28 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90027a00:	f7ff ff08 	bl	90027814 <_ZN8touchgfx6Canvas5closeEv>
90027a04:	2800      	cmp	r0, #0
90027a06:	d1e6      	bne.n	900279d6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90027a08:	b002      	add	sp, #8
90027a0a:	bd10      	pop	{r4, pc}
90027a0c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90027a0e:	429a      	cmp	r2, r3
90027a10:	bfac      	ite	ge
90027a12:	2302      	movge	r3, #2
90027a14:	2300      	movlt	r3, #0
90027a16:	e7ee      	b.n	900279f6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90027a18:	6d60      	ldr	r0, [r4, #84]	@ 0x54
90027a1a:	4281      	cmp	r1, r0
90027a1c:	bfac      	ite	ge
90027a1e:	2008      	movge	r0, #8
90027a20:	2000      	movlt	r0, #0
90027a22:	4318      	orrs	r0, r3
90027a24:	b2c3      	uxtb	r3, r0
90027a26:	b158      	cbz	r0, 90027a40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90027a28:	2200      	movs	r2, #0
90027a2a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
90027a2e:	9901      	ldr	r1, [sp, #4]
90027a30:	9a00      	ldr	r2, [sp, #0]
90027a32:	66e1      	str	r1, [r4, #108]	@ 0x6c
90027a34:	6722      	str	r2, [r4, #112]	@ 0x70
90027a36:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90027a3a:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
90027a3e:	e7e3      	b.n	90027a08 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90027a40:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90027a44:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90027a48:	4298      	cmp	r0, r3
90027a4a:	d803      	bhi.n	90027a54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90027a4c:	f104 0014 	add.w	r0, r4, #20
90027a50:	f7ec f8b6 	bl	90013bc0 <_ZN8touchgfx7Outline6moveToEii>
90027a54:	2301      	movs	r3, #1
90027a56:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90027a5a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90027a5e:	2300      	movs	r3, #0
90027a60:	e7e5      	b.n	90027a2e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90027a62 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90027a62:	b573      	push	{r0, r1, r4, r5, r6, lr}
90027a64:	ab02      	add	r3, sp, #8
90027a66:	4604      	mov	r4, r0
90027a68:	9101      	str	r1, [sp, #4]
90027a6a:	a901      	add	r1, sp, #4
90027a6c:	f843 2d08 	str.w	r2, [r3, #-8]!
90027a70:	461a      	mov	r2, r3
90027a72:	f7ff ff99 	bl	900279a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90027a76:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90027a78:	9901      	ldr	r1, [sp, #4]
90027a7a:	9a00      	ldr	r2, [sp, #0]
90027a7c:	1ac9      	subs	r1, r1, r3
90027a7e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90027a80:	1ad2      	subs	r2, r2, r3
90027a82:	9101      	str	r1, [sp, #4]
90027a84:	2a00      	cmp	r2, #0
90027a86:	9200      	str	r2, [sp, #0]
90027a88:	db1c      	blt.n	90027ac4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90027a8a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90027a8c:	429a      	cmp	r2, r3
90027a8e:	bfac      	ite	ge
90027a90:	2002      	movge	r0, #2
90027a92:	2000      	movlt	r0, #0
90027a94:	2900      	cmp	r1, #0
90027a96:	db17      	blt.n	90027ac8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90027a98:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90027a9a:	4299      	cmp	r1, r3
90027a9c:	bfac      	ite	ge
90027a9e:	2308      	movge	r3, #8
90027aa0:	2300      	movlt	r3, #0
90027aa2:	4303      	orrs	r3, r0
90027aa4:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
90027aa8:	b2dd      	uxtb	r5, r3
90027aaa:	b978      	cbnz	r0, 90027acc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90027aac:	f104 0014 	add.w	r0, r4, #20
90027ab0:	f7ff fd66 	bl	90027580 <_ZN8touchgfx10Rasterizer6lineToEii>
90027ab4:	9b01      	ldr	r3, [sp, #4]
90027ab6:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90027aba:	6623      	str	r3, [r4, #96]	@ 0x60
90027abc:	9b00      	ldr	r3, [sp, #0]
90027abe:	6663      	str	r3, [r4, #100]	@ 0x64
90027ac0:	b002      	add	sp, #8
90027ac2:	bd70      	pop	{r4, r5, r6, pc}
90027ac4:	2001      	movs	r0, #1
90027ac6:	e7e5      	b.n	90027a94 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90027ac8:	2304      	movs	r3, #4
90027aca:	e7ea      	b.n	90027aa2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90027acc:	b113      	cbz	r3, 90027ad4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90027ace:	ea10 0305 	ands.w	r3, r0, r5
90027ad2:	d11c      	bne.n	90027b0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90027ad4:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90027ad8:	f104 0614 	add.w	r6, r4, #20
90027adc:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
90027ae0:	b98b      	cbnz	r3, 90027b06 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90027ae2:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90027ae6:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90027aea:	4298      	cmp	r0, r3
90027aec:	d802      	bhi.n	90027af4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90027aee:	4630      	mov	r0, r6
90027af0:	f7ec f866 	bl	90013bc0 <_ZN8touchgfx7Outline6moveToEii>
90027af4:	2301      	movs	r3, #1
90027af6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90027afa:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90027afe:	4630      	mov	r0, r6
90027b00:	e9dd 2100 	ldrd	r2, r1, [sp]
90027b04:	e7d4      	b.n	90027ab0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90027b06:	4630      	mov	r0, r6
90027b08:	f7ff fd3a 	bl	90027580 <_ZN8touchgfx10Rasterizer6lineToEii>
90027b0c:	e7f7      	b.n	90027afe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90027b0e:	461d      	mov	r5, r3
90027b10:	e7d0      	b.n	90027ab4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90027b14 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90027b14:	b538      	push	{r3, r4, r5, lr}
90027b16:	ed2d 8b10 	vpush	{d8-d15}
90027b1a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
90027b1e:	4605      	mov	r5, r0
90027b20:	eeb0 ca40 	vmov.f32	s24, s0
90027b24:	460c      	mov	r4, r1
90027b26:	eef0 ca60 	vmov.f32	s25, s1
90027b2a:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90027c88 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
90027b2e:	eeb0 da41 	vmov.f32	s26, s2
90027b32:	eef0 da61 	vmov.f32	s27, s3
90027b36:	eeb0 ea42 	vmov.f32	s28, s4
90027b3a:	eef0 ea62 	vmov.f32	s29, s5
90027b3e:	eef0 aa6b 	vmov.f32	s21, s23
90027b42:	2c08      	cmp	r4, #8
90027b44:	d86e      	bhi.n	90027c24 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90027b46:	ee7e 6a4c 	vsub.f32	s13, s28, s24
90027b4a:	ee7d 7aee 	vsub.f32	s15, s27, s29
90027b4e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
90027b52:	ee3e 7aec 	vsub.f32	s14, s29, s25
90027b56:	ee66 7ae7 	vnmul.f32	s15, s13, s15
90027b5a:	ee3c fa0d 	vadd.f32	s30, s24, s26
90027b5e:	ee7c faad 	vadd.f32	s31, s25, s27
90027b62:	eee6 7a07 	vfma.f32	s15, s12, s14
90027b66:	ee7d 9a0e 	vadd.f32	s19, s26, s28
90027b6a:	ee3d aaae 	vadd.f32	s20, s27, s29
90027b6e:	ee2f fa2b 	vmul.f32	s30, s30, s23
90027b72:	ee6f faab 	vmul.f32	s31, s31, s23
90027b76:	ee69 9aab 	vmul.f32	s19, s19, s23
90027b7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90027b7e:	ee2a aa2b 	vmul.f32	s20, s20, s23
90027b82:	ee7f 8a29 	vadd.f32	s17, s30, s19
90027b86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027b8a:	ee3f 9a8a 	vadd.f32	s18, s31, s20
90027b8e:	ee68 8aab 	vmul.f32	s17, s17, s23
90027b92:	bf48      	it	mi
90027b94:	eef1 7a67 	vnegmi.f32	s15, s15
90027b98:	ee29 9a2b 	vmul.f32	s18, s18, s23
90027b9c:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
90027ba0:	eef4 7acb 	vcmpe.f32	s15, s22
90027ba4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027ba8:	dd3f      	ble.n	90027c2a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
90027baa:	ee27 7a07 	vmul.f32	s14, s14, s14
90027bae:	ee67 7aa7 	vmul.f32	s15, s15, s15
90027bb2:	eea6 7aa6 	vfma.f32	s14, s13, s13
90027bb6:	ee27 7a06 	vmul.f32	s14, s14, s12
90027bba:	eef4 7ac7 	vcmpe.f32	s15, s14
90027bbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027bc2:	d847      	bhi.n	90027c54 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90027bc4:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90027bc8:	ee3e 0aed 	vsub.f32	s0, s29, s27
90027bcc:	f000 fa57 	bl	9002807e <atan2f>
90027bd0:	eeb0 8a40 	vmov.f32	s16, s0
90027bd4:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90027bd8:	ee3d 0aec 	vsub.f32	s0, s27, s25
90027bdc:	f000 fa4f 	bl	9002807e <atan2f>
90027be0:	ee38 0a40 	vsub.f32	s0, s16, s0
90027be4:	eddf 7a29 	vldr	s15, [pc, #164]	@ 90027c8c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90027be8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90027bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027bf0:	bf48      	it	mi
90027bf2:	eeb1 0a40 	vnegmi.f32	s0, s0
90027bf6:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027bfe:	bfa4      	itt	ge
90027c00:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 90027c90 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
90027c04:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90027c08:	eddf 7a22 	vldr	s15, [pc, #136]	@ 90027c94 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
90027c0c:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027c10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027c14:	d51e      	bpl.n	90027c54 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90027c16:	eef0 0a49 	vmov.f32	s1, s18
90027c1a:	4628      	mov	r0, r5
90027c1c:	eeb0 0a68 	vmov.f32	s0, s17
90027c20:	f7ea fa64 	bl	900120ec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90027c24:	ecbd 8b10 	vpop	{d8-d15}
90027c28:	bd38      	pop	{r3, r4, r5, pc}
90027c2a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
90027c2e:	eeb0 7a68 	vmov.f32	s14, s17
90027c32:	eef0 6a49 	vmov.f32	s13, s18
90027c36:	eea7 7aea 	vfms.f32	s14, s15, s21
90027c3a:	ee7c 7aae 	vadd.f32	s15, s25, s29
90027c3e:	eee7 6aea 	vfms.f32	s13, s15, s21
90027c42:	ee66 7aa6 	vmul.f32	s15, s13, s13
90027c46:	eee7 7a07 	vfma.f32	s15, s14, s14
90027c4a:	eef4 7ac6 	vcmpe.f32	s15, s12
90027c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027c52:	d9e0      	bls.n	90027c16 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90027c54:	3401      	adds	r4, #1
90027c56:	eef0 0a6c 	vmov.f32	s1, s25
90027c5a:	eeb0 0a4c 	vmov.f32	s0, s24
90027c5e:	4628      	mov	r0, r5
90027c60:	4621      	mov	r1, r4
90027c62:	eef0 2a49 	vmov.f32	s5, s18
90027c66:	eeb0 2a68 	vmov.f32	s4, s17
90027c6a:	eef0 1a6f 	vmov.f32	s3, s31
90027c6e:	eeb0 1a4f 	vmov.f32	s2, s30
90027c72:	f7ff ff4f 	bl	90027b14 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90027c76:	eef0 da4a 	vmov.f32	s27, s20
90027c7a:	eeb0 da69 	vmov.f32	s26, s19
90027c7e:	eef0 ca49 	vmov.f32	s25, s18
90027c82:	eeb0 ca68 	vmov.f32	s24, s17
90027c86:	e75c      	b.n	90027b42 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90027c88:	2edbe6ff 	.word	0x2edbe6ff
90027c8c:	40490fdb 	.word	0x40490fdb
90027c90:	40c90fdb 	.word	0x40c90fdb
90027c94:	3dcccccd 	.word	0x3dcccccd

90027c98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90027c98:	b530      	push	{r4, r5, lr}
90027c9a:	ed2d 8b10 	vpush	{d8-d15}
90027c9e:	eef0 8a40 	vmov.f32	s17, s0
90027ca2:	b085      	sub	sp, #20
90027ca4:	eef0 9a60 	vmov.f32	s19, s1
90027ca8:	4604      	mov	r4, r0
90027caa:	eef0 fa41 	vmov.f32	s31, s2
90027cae:	460d      	mov	r5, r1
90027cb0:	eeb0 fa61 	vmov.f32	s30, s3
90027cb4:	eef0 ba42 	vmov.f32	s23, s4
90027cb8:	eeb0 ca62 	vmov.f32	s24, s5
90027cbc:	eef0 aa43 	vmov.f32	s21, s6
90027cc0:	eeb0 ba63 	vmov.f32	s22, s7
90027cc4:	2d08      	cmp	r5, #8
90027cc6:	f200 8113 	bhi.w	90027ef0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90027cca:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90027cce:	ee3b 6aaa 	vadd.f32	s12, s23, s21
90027cd2:	ee7f 6aab 	vadd.f32	s13, s31, s23
90027cd6:	ee38 daaf 	vadd.f32	s26, s17, s31
90027cda:	ee26 6a27 	vmul.f32	s12, s12, s15
90027cde:	ee7c ca0b 	vadd.f32	s25, s24, s22
90027ce2:	ee2d da27 	vmul.f32	s26, s26, s15
90027ce6:	ed8d 6a01 	vstr	s12, [sp, #4]
90027cea:	eea6 6aa7 	vfma.f32	s12, s13, s15
90027cee:	ee6c caa7 	vmul.f32	s25, s25, s15
90027cf2:	eeb0 ea4d 	vmov.f32	s28, s26
90027cf6:	ee79 da8f 	vadd.f32	s27, s19, s30
90027cfa:	ee3f 7a0c 	vadd.f32	s14, s30, s24
90027cfe:	eea6 eaa7 	vfma.f32	s28, s13, s15
90027d02:	ee66 6a27 	vmul.f32	s13, s12, s15
90027d06:	ee6d daa7 	vmul.f32	s27, s27, s15
90027d0a:	edcd 6a03 	vstr	s13, [sp, #12]
90027d0e:	eef0 6a6c 	vmov.f32	s13, s25
90027d12:	eef0 ea6d 	vmov.f32	s29, s27
90027d16:	ee2e ea27 	vmul.f32	s28, s28, s15
90027d1a:	eee7 6a27 	vfma.f32	s13, s14, s15
90027d1e:	eee7 ea27 	vfma.f32	s29, s14, s15
90027d22:	ee26 7aa7 	vmul.f32	s14, s13, s15
90027d26:	ee6e eaa7 	vmul.f32	s29, s29, s15
90027d2a:	eef0 6a67 	vmov.f32	s13, s15
90027d2e:	ed8d 7a02 	vstr	s14, [sp, #8]
90027d32:	ed9d 7a03 	vldr	s14, [sp, #12]
90027d36:	ee3e 9a07 	vadd.f32	s18, s28, s14
90027d3a:	ed9d 7a02 	vldr	s14, [sp, #8]
90027d3e:	ee3e aa87 	vadd.f32	s20, s29, s14
90027d42:	ee29 9a27 	vmul.f32	s18, s18, s15
90027d46:	ee2a aa27 	vmul.f32	s20, s20, s15
90027d4a:	2d00      	cmp	r5, #0
90027d4c:	f000 810b 	beq.w	90027f66 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027d50:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90027d54:	eddf 4a95 	vldr	s9, [pc, #596]	@ 90027fac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90027d58:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90027d5c:	ee7b 7a69 	vsub.f32	s15, s22, s19
90027d60:	ee3f 6aea 	vsub.f32	s12, s31, s21
90027d64:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90027d68:	ee3b 5aea 	vsub.f32	s10, s23, s21
90027d6c:	eea6 7a27 	vfma.f32	s14, s12, s15
90027d70:	ee3c 6a4b 	vsub.f32	s12, s24, s22
90027d74:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90027d78:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90027d7c:	eea5 6a27 	vfma.f32	s12, s10, s15
90027d80:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
90027d84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027d88:	bf48      	it	mi
90027d8a:	eeb1 7a47 	vnegmi.f32	s14, s14
90027d8e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
90027d92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027d96:	eeb4 7ae4 	vcmpe.f32	s14, s9
90027d9a:	bf48      	it	mi
90027d9c:	eeb1 6a46 	vnegmi.f32	s12, s12
90027da0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027da4:	f340 80a8 	ble.w	90027ef8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90027da8:	eeb4 6ae4 	vcmpe.f32	s12, s9
90027dac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027db0:	dd5a      	ble.n	90027e68 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
90027db2:	ee65 5aa5 	vmul.f32	s11, s11, s11
90027db6:	ee37 7a06 	vadd.f32	s14, s14, s12
90027dba:	eee7 5aa7 	vfma.f32	s11, s15, s15
90027dbe:	ee27 7a07 	vmul.f32	s14, s14, s14
90027dc2:	ee65 7a85 	vmul.f32	s15, s11, s10
90027dc6:	eeb4 7ae7 	vcmpe.f32	s14, s15
90027dca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027dce:	f200 80ca 	bhi.w	90027f66 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027dd2:	ee7b 0aef 	vsub.f32	s1, s23, s31
90027dd6:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90027dda:	f000 f950 	bl	9002807e <atan2f>
90027dde:	eeb0 8a40 	vmov.f32	s16, s0
90027de2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90027de6:	ee3f 0a69 	vsub.f32	s0, s30, s19
90027dea:	f000 f948 	bl	9002807e <atan2f>
90027dee:	ee38 fa40 	vsub.f32	s30, s16, s0
90027df2:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90027df6:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90027dfa:	eeb5 fac0 	vcmpe.f32	s30, #0.0
90027dfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027e02:	bf48      	it	mi
90027e04:	eeb1 fa4f 	vnegmi.f32	s30, s30
90027e08:	f000 f939 	bl	9002807e <atan2f>
90027e0c:	ee30 0a48 	vsub.f32	s0, s0, s16
90027e10:	eddf 7a67 	vldr	s15, [pc, #412]	@ 90027fb0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027e14:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90027e18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027e1c:	eeb4 fae7 	vcmpe.f32	s30, s15
90027e20:	eddf 7a63 	vldr	s15, [pc, #396]	@ 90027fb0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027e24:	bf48      	it	mi
90027e26:	eeb1 0a40 	vnegmi.f32	s0, s0
90027e2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027e2e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027e32:	eddf 7a60 	vldr	s15, [pc, #384]	@ 90027fb4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90027e36:	bfa4      	itt	ge
90027e38:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 90027fb8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90027e3c:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90027e40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027e44:	bfa4      	itt	ge
90027e46:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 90027fb8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90027e4a:	ee37 0a40 	vsubge.f32	s0, s14, s0
90027e4e:	ee3f 0a00 	vadd.f32	s0, s30, s0
90027e52:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027e56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027e5a:	f140 8084 	bpl.w	90027f66 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027e5e:	eef0 0a4a 	vmov.f32	s1, s20
90027e62:	eeb0 0a49 	vmov.f32	s0, s18
90027e66:	e040      	b.n	90027eea <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90027e68:	ee67 7aa7 	vmul.f32	s15, s15, s15
90027e6c:	ee27 7a07 	vmul.f32	s14, s14, s14
90027e70:	eee5 7aa5 	vfma.f32	s15, s11, s11
90027e74:	ee67 7a85 	vmul.f32	s15, s15, s10
90027e78:	eeb4 7ae7 	vcmpe.f32	s14, s15
90027e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027e80:	d871      	bhi.n	90027f66 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027e82:	ee7b 0aef 	vsub.f32	s1, s23, s31
90027e86:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90027e8a:	f000 f8f8 	bl	9002807e <atan2f>
90027e8e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90027e92:	eeb0 8a40 	vmov.f32	s16, s0
90027e96:	ee3f 0a69 	vsub.f32	s0, s30, s19
90027e9a:	f000 f8f0 	bl	9002807e <atan2f>
90027e9e:	ee38 0a40 	vsub.f32	s0, s16, s0
90027ea2:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90027fb0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027ea6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90027eaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027eae:	bf48      	it	mi
90027eb0:	eeb1 0a40 	vnegmi.f32	s0, s0
90027eb4:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027eb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027ebc:	bfa4      	itt	ge
90027ebe:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 90027fb8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90027ec2:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90027ec6:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90027fb4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90027eca:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027ece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027ed2:	d548      	bpl.n	90027f66 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027ed4:	eef0 0a4f 	vmov.f32	s1, s30
90027ed8:	4620      	mov	r0, r4
90027eda:	eeb0 0a6f 	vmov.f32	s0, s31
90027ede:	f7ea f905 	bl	900120ec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90027ee2:	eef0 0a4c 	vmov.f32	s1, s24
90027ee6:	eeb0 0a6b 	vmov.f32	s0, s23
90027eea:	4620      	mov	r0, r4
90027eec:	f7ea f8fe 	bl	900120ec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90027ef0:	b005      	add	sp, #20
90027ef2:	ecbd 8b10 	vpop	{d8-d15}
90027ef6:	bd30      	pop	{r4, r5, pc}
90027ef8:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 90027fac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90027efc:	eeb4 6ac7 	vcmpe.f32	s12, s14
90027f00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027f04:	dd19      	ble.n	90027f3a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90027f06:	ee67 7aa7 	vmul.f32	s15, s15, s15
90027f0a:	ee26 7a06 	vmul.f32	s14, s12, s12
90027f0e:	eee5 7aa5 	vfma.f32	s15, s11, s11
90027f12:	ee67 7a85 	vmul.f32	s15, s15, s10
90027f16:	eeb4 7ae7 	vcmpe.f32	s14, s15
90027f1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027f1e:	d822      	bhi.n	90027f66 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027f20:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90027f24:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90027f28:	f000 f8a9 	bl	9002807e <atan2f>
90027f2c:	ee7b 0aef 	vsub.f32	s1, s23, s31
90027f30:	eeb0 8a40 	vmov.f32	s16, s0
90027f34:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90027f38:	e7af      	b.n	90027e9a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90027f3a:	ee78 7aaa 	vadd.f32	s15, s17, s21
90027f3e:	eeb0 7a49 	vmov.f32	s14, s18
90027f42:	eeb0 6a4a 	vmov.f32	s12, s20
90027f46:	eea7 7ae6 	vfms.f32	s14, s15, s13
90027f4a:	ee79 7a8b 	vadd.f32	s15, s19, s22
90027f4e:	eea7 6ae6 	vfms.f32	s12, s15, s13
90027f52:	ee66 7a06 	vmul.f32	s15, s12, s12
90027f56:	eee7 7a07 	vfma.f32	s15, s14, s14
90027f5a:	eef4 7ac5 	vcmpe.f32	s15, s10
90027f5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027f62:	f67f af7c 	bls.w	90027e5e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90027f66:	3501      	adds	r5, #1
90027f68:	eef0 0a69 	vmov.f32	s1, s19
90027f6c:	eeb0 0a68 	vmov.f32	s0, s17
90027f70:	4620      	mov	r0, r4
90027f72:	4629      	mov	r1, r5
90027f74:	eef0 3a4a 	vmov.f32	s7, s20
90027f78:	eeb0 3a49 	vmov.f32	s6, s18
90027f7c:	eef0 2a6e 	vmov.f32	s5, s29
90027f80:	eeb0 2a4e 	vmov.f32	s4, s28
90027f84:	eef0 1a6d 	vmov.f32	s3, s27
90027f88:	eeb0 1a4d 	vmov.f32	s2, s26
90027f8c:	f7ff fe84 	bl	90027c98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90027f90:	eeb0 ca6c 	vmov.f32	s24, s25
90027f94:	eddd ba01 	vldr	s23, [sp, #4]
90027f98:	eef0 9a4a 	vmov.f32	s19, s20
90027f9c:	ed9d fa02 	vldr	s30, [sp, #8]
90027fa0:	eef0 8a49 	vmov.f32	s17, s18
90027fa4:	eddd fa03 	vldr	s31, [sp, #12]
90027fa8:	e68c      	b.n	90027cc4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
90027faa:	bf00      	nop
90027fac:	2edbe6ff 	.word	0x2edbe6ff
90027fb0:	40490fdb 	.word	0x40490fdb
90027fb4:	3dcccccd 	.word	0x3dcccccd
90027fb8:	40c90fdb 	.word	0x40c90fdb

90027fbc <_ZN8touchgfx6CanvasD1Ev>:
90027fbc:	4b04      	ldr	r3, [pc, #16]	@ (90027fd0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
90027fbe:	b510      	push	{r4, lr}
90027fc0:	4604      	mov	r4, r0
90027fc2:	f840 3b14 	str.w	r3, [r0], #20
90027fc6:	f7eb f903 	bl	900131d0 <_ZN8touchgfx7OutlineD1Ev>
90027fca:	4620      	mov	r0, r4
90027fcc:	bd10      	pop	{r4, pc}
90027fce:	bf00      	nop
90027fd0:	9002ddd8 	.word	0x9002ddd8

90027fd4 <_ZN8touchgfx6CanvasD0Ev>:
90027fd4:	b510      	push	{r4, lr}
90027fd6:	4604      	mov	r4, r0
90027fd8:	f7ff fff0 	bl	90027fbc <_ZN8touchgfx6CanvasD1Ev>
90027fdc:	2174      	movs	r1, #116	@ 0x74
90027fde:	4620      	mov	r0, r4
90027fe0:	f000 f826 	bl	90028030 <_ZdlPvj>
90027fe4:	4620      	mov	r0, r4
90027fe6:	bd10      	pop	{r4, pc}

90027fe8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90027fe8:	790b      	ldrb	r3, [r1, #4]
90027fea:	2b00      	cmp	r3, #0
90027fec:	bf0c      	ite	eq
90027fee:	2301      	moveq	r3, #1
90027ff0:	2300      	movne	r3, #0
90027ff2:	b570      	push	{r4, r5, r6, lr}
90027ff4:	4604      	mov	r4, r0
90027ff6:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
90027ffa:	460e      	mov	r6, r1
90027ffc:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
90028000:	d109      	bne.n	90028016 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90028002:	b14d      	cbz	r5, 90028018 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90028004:	7933      	ldrb	r3, [r6, #4]
90028006:	2b01      	cmp	r3, #1
90028008:	d10c      	bne.n	90028024 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002800a:	6823      	ldr	r3, [r4, #0]
9002800c:	4620      	mov	r0, r4
9002800e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90028010:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90028014:	4718      	bx	r3
90028016:	b12d      	cbz	r5, 90028024 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90028018:	6823      	ldr	r3, [r4, #0]
9002801a:	4620      	mov	r0, r4
9002801c:	695b      	ldr	r3, [r3, #20]
9002801e:	4798      	blx	r3
90028020:	2d00      	cmp	r5, #0
90028022:	d1ef      	bne.n	90028004 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90028024:	bd70      	pop	{r4, r5, r6, pc}

90028026 <__aeabi_atexit>:
90028026:	460b      	mov	r3, r1
90028028:	4601      	mov	r1, r0
9002802a:	4618      	mov	r0, r3
9002802c:	f000 bc5a 	b.w	900288e4 <__cxa_atexit>

90028030 <_ZdlPvj>:
90028030:	f000 b812 	b.w	90028058 <_ZdlPv>

90028034 <__cxa_guard_acquire>:
90028034:	6802      	ldr	r2, [r0, #0]
90028036:	07d2      	lsls	r2, r2, #31
90028038:	4603      	mov	r3, r0
9002803a:	d405      	bmi.n	90028048 <__cxa_guard_acquire+0x14>
9002803c:	7842      	ldrb	r2, [r0, #1]
9002803e:	b102      	cbz	r2, 90028042 <__cxa_guard_acquire+0xe>
90028040:	deff      	udf	#255	@ 0xff
90028042:	2001      	movs	r0, #1
90028044:	7058      	strb	r0, [r3, #1]
90028046:	4770      	bx	lr
90028048:	2000      	movs	r0, #0
9002804a:	4770      	bx	lr

9002804c <__cxa_guard_release>:
9002804c:	2301      	movs	r3, #1
9002804e:	6003      	str	r3, [r0, #0]
90028050:	4770      	bx	lr

90028052 <__cxa_pure_virtual>:
90028052:	b508      	push	{r3, lr}
90028054:	f000 f80e 	bl	90028074 <_ZSt9terminatev>

90028058 <_ZdlPv>:
90028058:	f000 bb8e 	b.w	90028778 <free>

9002805c <_ZN10__cxxabiv111__terminateEPFvvE>:
9002805c:	b508      	push	{r3, lr}
9002805e:	4780      	blx	r0
90028060:	f000 fb57 	bl	90028712 <abort>

90028064 <_ZSt13get_terminatev>:
90028064:	4b02      	ldr	r3, [pc, #8]	@ (90028070 <_ZSt13get_terminatev+0xc>)
90028066:	6818      	ldr	r0, [r3, #0]
90028068:	f3bf 8f5b 	dmb	ish
9002806c:	4770      	bx	lr
9002806e:	bf00      	nop
90028070:	24000114 	.word	0x24000114

90028074 <_ZSt9terminatev>:
90028074:	b508      	push	{r3, lr}
90028076:	f7ff fff5 	bl	90028064 <_ZSt13get_terminatev>
9002807a:	f7ff ffef 	bl	9002805c <_ZN10__cxxabiv111__terminateEPFvvE>

9002807e <atan2f>:
9002807e:	f000 b9cf 	b.w	90028420 <__ieee754_atan2f>
	...

90028084 <sqrtf>:
90028084:	b508      	push	{r3, lr}
90028086:	ed2d 8b02 	vpush	{d8}
9002808a:	eeb0 8a40 	vmov.f32	s16, s0
9002808e:	f000 f9c4 	bl	9002841a <__ieee754_sqrtf>
90028092:	eeb4 8a48 	vcmp.f32	s16, s16
90028096:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002809a:	d60c      	bvs.n	900280b6 <sqrtf+0x32>
9002809c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 900280bc <sqrtf+0x38>
900280a0:	eeb4 8ae8 	vcmpe.f32	s16, s17
900280a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900280a8:	d505      	bpl.n	900280b6 <sqrtf+0x32>
900280aa:	f000 fe89 	bl	90028dc0 <__errno>
900280ae:	ee88 0aa8 	vdiv.f32	s0, s17, s17
900280b2:	2321      	movs	r3, #33	@ 0x21
900280b4:	6003      	str	r3, [r0, #0]
900280b6:	ecbd 8b02 	vpop	{d8}
900280ba:	bd08      	pop	{r3, pc}
900280bc:	00000000 	.word	0x00000000

900280c0 <sinf_poly>:
900280c0:	07cb      	lsls	r3, r1, #31
900280c2:	d412      	bmi.n	900280ea <sinf_poly+0x2a>
900280c4:	ee21 5b00 	vmul.f64	d5, d1, d0
900280c8:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
900280cc:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
900280d0:	eea6 7b01 	vfma.f64	d7, d6, d1
900280d4:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
900280d8:	ee21 1b05 	vmul.f64	d1, d1, d5
900280dc:	eea6 0b05 	vfma.f64	d0, d6, d5
900280e0:	eea7 0b01 	vfma.f64	d0, d7, d1
900280e4:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
900280e8:	4770      	bx	lr
900280ea:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
900280ee:	ee21 5b01 	vmul.f64	d5, d1, d1
900280f2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
900280f6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
900280fa:	eea1 7b06 	vfma.f64	d7, d1, d6
900280fe:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90028102:	eea1 0b06 	vfma.f64	d0, d1, d6
90028106:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002810a:	ee21 1b05 	vmul.f64	d1, d1, d5
9002810e:	eea5 0b06 	vfma.f64	d0, d5, d6
90028112:	e7e5      	b.n	900280e0 <sinf_poly+0x20>
90028114:	0000      	movs	r0, r0
	...

90028118 <sinf>:
90028118:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002811a:	ee10 4a10 	vmov	r4, s0
9002811e:	f3c4 530a 	ubfx	r3, r4, #20, #11
90028122:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90028126:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002812a:	eef0 7a40 	vmov.f32	s15, s0
9002812e:	ea4f 5214 	mov.w	r2, r4, lsr #20
90028132:	d218      	bcs.n	90028166 <sinf+0x4e>
90028134:	ee26 1b06 	vmul.f64	d1, d6, d6
90028138:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002813c:	d20a      	bcs.n	90028154 <sinf+0x3c>
9002813e:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
90028142:	d103      	bne.n	9002814c <sinf+0x34>
90028144:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
90028148:	ed8d 1a01 	vstr	s2, [sp, #4]
9002814c:	eeb0 0a67 	vmov.f32	s0, s15
90028150:	b003      	add	sp, #12
90028152:	bd30      	pop	{r4, r5, pc}
90028154:	483a      	ldr	r0, [pc, #232]	@ (90028240 <sinf+0x128>)
90028156:	eeb0 0b46 	vmov.f64	d0, d6
9002815a:	2100      	movs	r1, #0
9002815c:	b003      	add	sp, #12
9002815e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90028162:	f7ff bfad 	b.w	900280c0 <sinf_poly>
90028166:	f240 422e 	movw	r2, #1070	@ 0x42e
9002816a:	4293      	cmp	r3, r2
9002816c:	d824      	bhi.n	900281b8 <sinf+0xa0>
9002816e:	4b34      	ldr	r3, [pc, #208]	@ (90028240 <sinf+0x128>)
90028170:	ed93 7b08 	vldr	d7, [r3, #32]
90028174:	ee26 7b07 	vmul.f64	d7, d6, d7
90028178:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002817c:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90028180:	ee17 1a90 	vmov	r1, s15
90028184:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90028188:	1609      	asrs	r1, r1, #24
9002818a:	ee07 1a90 	vmov	s15, r1
9002818e:	f001 0203 	and.w	r2, r1, #3
90028192:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90028196:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002819a:	ed92 0b00 	vldr	d0, [r2]
9002819e:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
900281a2:	f011 0f02 	tst.w	r1, #2
900281a6:	eea5 6b47 	vfms.f64	d6, d5, d7
900281aa:	bf08      	it	eq
900281ac:	4618      	moveq	r0, r3
900281ae:	ee26 1b06 	vmul.f64	d1, d6, d6
900281b2:	ee20 0b06 	vmul.f64	d0, d0, d6
900281b6:	e7d1      	b.n	9002815c <sinf+0x44>
900281b8:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
900281bc:	d237      	bcs.n	9002822e <sinf+0x116>
900281be:	4921      	ldr	r1, [pc, #132]	@ (90028244 <sinf+0x12c>)
900281c0:	f3c4 6083 	ubfx	r0, r4, #26, #4
900281c4:	eb01 0280 	add.w	r2, r1, r0, lsl #2
900281c8:	f3c4 0316 	ubfx	r3, r4, #0, #23
900281cc:	f3c4 55c2 	ubfx	r5, r4, #23, #3
900281d0:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
900281d4:	6a10      	ldr	r0, [r2, #32]
900281d6:	6912      	ldr	r2, [r2, #16]
900281d8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
900281dc:	40ab      	lsls	r3, r5
900281de:	fba0 5003 	umull	r5, r0, r0, r3
900281e2:	4359      	muls	r1, r3
900281e4:	fbe3 0102 	umlal	r0, r1, r3, r2
900281e8:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
900281ec:	0f9d      	lsrs	r5, r3, #30
900281ee:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
900281f2:	1ac9      	subs	r1, r1, r3
900281f4:	f7d8 fa52 	bl	9000069c <__aeabi_l2d>
900281f8:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
900281fc:	4b10      	ldr	r3, [pc, #64]	@ (90028240 <sinf+0x128>)
900281fe:	f004 0203 	and.w	r2, r4, #3
90028202:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90028206:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 90028238 <sinf+0x120>
9002820a:	ed92 0b00 	vldr	d0, [r2]
9002820e:	ec41 0b17 	vmov	d7, r0, r1
90028212:	f014 0f02 	tst.w	r4, #2
90028216:	ee27 7b06 	vmul.f64	d7, d7, d6
9002821a:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002821e:	4629      	mov	r1, r5
90028220:	bf08      	it	eq
90028222:	4618      	moveq	r0, r3
90028224:	ee27 1b07 	vmul.f64	d1, d7, d7
90028228:	ee20 0b07 	vmul.f64	d0, d0, d7
9002822c:	e796      	b.n	9002815c <sinf+0x44>
9002822e:	b003      	add	sp, #12
90028230:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90028234:	f000 b8e2 	b.w	900283fc <__math_invalidf>
90028238:	54442d18 	.word	0x54442d18
9002823c:	3c1921fb 	.word	0x3c1921fb
90028240:	9002de48 	.word	0x9002de48
90028244:	9002dde4 	.word	0x9002dde4

90028248 <sinf_poly>:
90028248:	07cb      	lsls	r3, r1, #31
9002824a:	d412      	bmi.n	90028272 <sinf_poly+0x2a>
9002824c:	ee21 5b00 	vmul.f64	d5, d1, d0
90028250:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90028254:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90028258:	eea6 7b01 	vfma.f64	d7, d6, d1
9002825c:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90028260:	ee21 1b05 	vmul.f64	d1, d1, d5
90028264:	eea6 0b05 	vfma.f64	d0, d6, d5
90028268:	eea7 0b01 	vfma.f64	d0, d7, d1
9002826c:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90028270:	4770      	bx	lr
90028272:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90028276:	ee21 5b01 	vmul.f64	d5, d1, d1
9002827a:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002827e:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90028282:	eea1 7b06 	vfma.f64	d7, d1, d6
90028286:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002828a:	eea1 0b06 	vfma.f64	d0, d1, d6
9002828e:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90028292:	ee21 1b05 	vmul.f64	d1, d1, d5
90028296:	eea5 0b06 	vfma.f64	d0, d5, d6
9002829a:	e7e5      	b.n	90028268 <sinf_poly+0x20>
9002829c:	0000      	movs	r0, r0
	...

900282a0 <cosf>:
900282a0:	b538      	push	{r3, r4, r5, lr}
900282a2:	ee10 4a10 	vmov	r4, s0
900282a6:	f3c4 530a 	ubfx	r3, r4, #20, #11
900282aa:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
900282ae:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
900282b2:	d21f      	bcs.n	900282f4 <cosf+0x54>
900282b4:	ee27 7b07 	vmul.f64	d7, d7, d7
900282b8:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
900282bc:	f0c0 8082 	bcc.w	900283c4 <cosf+0x124>
900282c0:	ee27 4b07 	vmul.f64	d4, d7, d7
900282c4:	4b44      	ldr	r3, [pc, #272]	@ (900283d8 <cosf+0x138>)
900282c6:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
900282ca:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
900282ce:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
900282d2:	eea7 6b05 	vfma.f64	d6, d7, d5
900282d6:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
900282da:	eea7 0b05 	vfma.f64	d0, d7, d5
900282de:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
900282e2:	ee27 7b04 	vmul.f64	d7, d7, d4
900282e6:	eea4 0b05 	vfma.f64	d0, d4, d5
900282ea:	eea6 0b07 	vfma.f64	d0, d6, d7
900282ee:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
900282f2:	bd38      	pop	{r3, r4, r5, pc}
900282f4:	f240 422e 	movw	r2, #1070	@ 0x42e
900282f8:	4293      	cmp	r3, r2
900282fa:	d829      	bhi.n	90028350 <cosf+0xb0>
900282fc:	4b36      	ldr	r3, [pc, #216]	@ (900283d8 <cosf+0x138>)
900282fe:	ed93 6b08 	vldr	d6, [r3, #32]
90028302:	ee27 6b06 	vmul.f64	d6, d7, d6
90028306:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002830a:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002830e:	ee16 1a90 	vmov	r1, s13
90028312:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90028316:	1609      	asrs	r1, r1, #24
90028318:	ee06 1a90 	vmov	s13, r1
9002831c:	f001 0203 	and.w	r2, r1, #3
90028320:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90028324:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90028328:	ed92 0b00 	vldr	d0, [r2]
9002832c:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90028330:	f011 0f02 	tst.w	r1, #2
90028334:	f081 0101 	eor.w	r1, r1, #1
90028338:	eea5 7b46 	vfms.f64	d7, d5, d6
9002833c:	bf08      	it	eq
9002833e:	4618      	moveq	r0, r3
90028340:	ee27 1b07 	vmul.f64	d1, d7, d7
90028344:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90028348:	ee20 0b07 	vmul.f64	d0, d0, d7
9002834c:	f7ff bf7c 	b.w	90028248 <sinf_poly>
90028350:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90028354:	d232      	bcs.n	900283bc <cosf+0x11c>
90028356:	4921      	ldr	r1, [pc, #132]	@ (900283dc <cosf+0x13c>)
90028358:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002835c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90028360:	f3c4 0316 	ubfx	r3, r4, #0, #23
90028364:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90028368:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002836c:	6a10      	ldr	r0, [r2, #32]
9002836e:	6912      	ldr	r2, [r2, #16]
90028370:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90028374:	40ab      	lsls	r3, r5
90028376:	fba0 5003 	umull	r5, r0, r0, r3
9002837a:	4359      	muls	r1, r3
9002837c:	fbe3 0102 	umlal	r0, r1, r3, r2
90028380:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90028384:	0f9d      	lsrs	r5, r3, #30
90028386:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002838a:	1ac9      	subs	r1, r1, r3
9002838c:	f7d8 f986 	bl	9000069c <__aeabi_l2d>
90028390:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90028394:	4b10      	ldr	r3, [pc, #64]	@ (900283d8 <cosf+0x138>)
90028396:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 900283d0 <cosf+0x130>
9002839a:	ec41 0b17 	vmov	d7, r0, r1
9002839e:	f004 0203 	and.w	r2, r4, #3
900283a2:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
900283a6:	ed92 0b00 	vldr	d0, [r2]
900283aa:	ee27 7b06 	vmul.f64	d7, d7, d6
900283ae:	f103 0070 	add.w	r0, r3, #112	@ 0x70
900283b2:	f014 0f02 	tst.w	r4, #2
900283b6:	f085 0101 	eor.w	r1, r5, #1
900283ba:	e7bf      	b.n	9002833c <cosf+0x9c>
900283bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900283c0:	f000 b81c 	b.w	900283fc <__math_invalidf>
900283c4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
900283c8:	e793      	b.n	900282f2 <cosf+0x52>
900283ca:	bf00      	nop
900283cc:	f3af 8000 	nop.w
900283d0:	54442d18 	.word	0x54442d18
900283d4:	3c1921fb 	.word	0x3c1921fb
900283d8:	9002de48 	.word	0x9002de48
900283dc:	9002dde4 	.word	0x9002dde4

900283e0 <with_errnof>:
900283e0:	b510      	push	{r4, lr}
900283e2:	ed2d 8b02 	vpush	{d8}
900283e6:	eeb0 8a40 	vmov.f32	s16, s0
900283ea:	4604      	mov	r4, r0
900283ec:	f000 fce8 	bl	90028dc0 <__errno>
900283f0:	eeb0 0a48 	vmov.f32	s0, s16
900283f4:	ecbd 8b02 	vpop	{d8}
900283f8:	6004      	str	r4, [r0, #0]
900283fa:	bd10      	pop	{r4, pc}

900283fc <__math_invalidf>:
900283fc:	eef0 7a40 	vmov.f32	s15, s0
90028400:	ee30 7a40 	vsub.f32	s14, s0, s0
90028404:	eef4 7a67 	vcmp.f32	s15, s15
90028408:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002840c:	ee87 0a07 	vdiv.f32	s0, s14, s14
90028410:	d602      	bvs.n	90028418 <__math_invalidf+0x1c>
90028412:	2021      	movs	r0, #33	@ 0x21
90028414:	f7ff bfe4 	b.w	900283e0 <with_errnof>
90028418:	4770      	bx	lr

9002841a <__ieee754_sqrtf>:
9002841a:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002841e:	4770      	bx	lr

90028420 <__ieee754_atan2f>:
90028420:	ee10 2a90 	vmov	r2, s1
90028424:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90028428:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002842c:	b510      	push	{r4, lr}
9002842e:	eef0 7a40 	vmov.f32	s15, s0
90028432:	d806      	bhi.n	90028442 <__ieee754_atan2f+0x22>
90028434:	ee10 0a10 	vmov	r0, s0
90028438:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
9002843c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90028440:	d904      	bls.n	9002844c <__ieee754_atan2f+0x2c>
90028442:	ee77 7aa0 	vadd.f32	s15, s15, s1
90028446:	eeb0 0a67 	vmov.f32	s0, s15
9002844a:	bd10      	pop	{r4, pc}
9002844c:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
90028450:	d103      	bne.n	9002845a <__ieee754_atan2f+0x3a>
90028452:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028456:	f000 b881 	b.w	9002855c <atanf>
9002845a:	1794      	asrs	r4, r2, #30
9002845c:	f004 0402 	and.w	r4, r4, #2
90028460:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
90028464:	b93b      	cbnz	r3, 90028476 <__ieee754_atan2f+0x56>
90028466:	2c02      	cmp	r4, #2
90028468:	d05c      	beq.n	90028524 <__ieee754_atan2f+0x104>
9002846a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90028538 <__ieee754_atan2f+0x118>
9002846e:	2c03      	cmp	r4, #3
90028470:	fe47 7a00 	vseleq.f32	s15, s14, s0
90028474:	e7e7      	b.n	90028446 <__ieee754_atan2f+0x26>
90028476:	b939      	cbnz	r1, 90028488 <__ieee754_atan2f+0x68>
90028478:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002853c <__ieee754_atan2f+0x11c>
9002847c:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90028540 <__ieee754_atan2f+0x120>
90028480:	2800      	cmp	r0, #0
90028482:	fe67 7a87 	vselge.f32	s15, s15, s14
90028486:	e7de      	b.n	90028446 <__ieee754_atan2f+0x26>
90028488:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002848c:	d110      	bne.n	900284b0 <__ieee754_atan2f+0x90>
9002848e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90028492:	f104 34ff 	add.w	r4, r4, #4294967295
90028496:	d107      	bne.n	900284a8 <__ieee754_atan2f+0x88>
90028498:	2c02      	cmp	r4, #2
9002849a:	d846      	bhi.n	9002852a <__ieee754_atan2f+0x10a>
9002849c:	4b29      	ldr	r3, [pc, #164]	@ (90028544 <__ieee754_atan2f+0x124>)
9002849e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
900284a2:	edd3 7a00 	vldr	s15, [r3]
900284a6:	e7ce      	b.n	90028446 <__ieee754_atan2f+0x26>
900284a8:	2c02      	cmp	r4, #2
900284aa:	d841      	bhi.n	90028530 <__ieee754_atan2f+0x110>
900284ac:	4b26      	ldr	r3, [pc, #152]	@ (90028548 <__ieee754_atan2f+0x128>)
900284ae:	e7f6      	b.n	9002849e <__ieee754_atan2f+0x7e>
900284b0:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900284b4:	d0e0      	beq.n	90028478 <__ieee754_atan2f+0x58>
900284b6:	1a5b      	subs	r3, r3, r1
900284b8:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
900284bc:	ea4f 51e3 	mov.w	r1, r3, asr #23
900284c0:	da1a      	bge.n	900284f8 <__ieee754_atan2f+0xd8>
900284c2:	2a00      	cmp	r2, #0
900284c4:	da01      	bge.n	900284ca <__ieee754_atan2f+0xaa>
900284c6:	313c      	adds	r1, #60	@ 0x3c
900284c8:	db19      	blt.n	900284fe <__ieee754_atan2f+0xde>
900284ca:	ee87 0aa0 	vdiv.f32	s0, s15, s1
900284ce:	f000 f919 	bl	90028704 <fabsf>
900284d2:	f000 f843 	bl	9002855c <atanf>
900284d6:	eef0 7a40 	vmov.f32	s15, s0
900284da:	2c01      	cmp	r4, #1
900284dc:	d012      	beq.n	90028504 <__ieee754_atan2f+0xe4>
900284de:	2c02      	cmp	r4, #2
900284e0:	d017      	beq.n	90028512 <__ieee754_atan2f+0xf2>
900284e2:	2c00      	cmp	r4, #0
900284e4:	d0af      	beq.n	90028446 <__ieee754_atan2f+0x26>
900284e6:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002854c <__ieee754_atan2f+0x12c>
900284ea:	ee77 7a87 	vadd.f32	s15, s15, s14
900284ee:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 90028550 <__ieee754_atan2f+0x130>
900284f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
900284f6:	e7a6      	b.n	90028446 <__ieee754_atan2f+0x26>
900284f8:	eddf 7a10 	vldr	s15, [pc, #64]	@ 9002853c <__ieee754_atan2f+0x11c>
900284fc:	e7ed      	b.n	900284da <__ieee754_atan2f+0xba>
900284fe:	eddf 7a15 	vldr	s15, [pc, #84]	@ 90028554 <__ieee754_atan2f+0x134>
90028502:	e7ea      	b.n	900284da <__ieee754_atan2f+0xba>
90028504:	ee17 3a90 	vmov	r3, s15
90028508:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002850c:	ee07 3a90 	vmov	s15, r3
90028510:	e799      	b.n	90028446 <__ieee754_atan2f+0x26>
90028512:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002854c <__ieee754_atan2f+0x12c>
90028516:	ee77 7a87 	vadd.f32	s15, s15, s14
9002851a:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 90028550 <__ieee754_atan2f+0x130>
9002851e:	ee77 7a67 	vsub.f32	s15, s14, s15
90028522:	e790      	b.n	90028446 <__ieee754_atan2f+0x26>
90028524:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 90028550 <__ieee754_atan2f+0x130>
90028528:	e78d      	b.n	90028446 <__ieee754_atan2f+0x26>
9002852a:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 90028558 <__ieee754_atan2f+0x138>
9002852e:	e78a      	b.n	90028446 <__ieee754_atan2f+0x26>
90028530:	eddf 7a08 	vldr	s15, [pc, #32]	@ 90028554 <__ieee754_atan2f+0x134>
90028534:	e787      	b.n	90028446 <__ieee754_atan2f+0x26>
90028536:	bf00      	nop
90028538:	c0490fdb 	.word	0xc0490fdb
9002853c:	3fc90fdb 	.word	0x3fc90fdb
90028540:	bfc90fdb 	.word	0xbfc90fdb
90028544:	9002df34 	.word	0x9002df34
90028548:	9002df28 	.word	0x9002df28
9002854c:	33bbbd2e 	.word	0x33bbbd2e
90028550:	40490fdb 	.word	0x40490fdb
90028554:	00000000 	.word	0x00000000
90028558:	3f490fdb 	.word	0x3f490fdb

9002855c <atanf>:
9002855c:	b538      	push	{r3, r4, r5, lr}
9002855e:	ee10 5a10 	vmov	r5, s0
90028562:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
90028566:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002856a:	eef0 7a40 	vmov.f32	s15, s0
9002856e:	d30f      	bcc.n	90028590 <atanf+0x34>
90028570:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
90028574:	d904      	bls.n	90028580 <atanf+0x24>
90028576:	ee70 7a00 	vadd.f32	s15, s0, s0
9002857a:	eeb0 0a67 	vmov.f32	s0, s15
9002857e:	bd38      	pop	{r3, r4, r5, pc}
90028580:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 900286b8 <atanf+0x15c>
90028584:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 900286bc <atanf+0x160>
90028588:	2d00      	cmp	r5, #0
9002858a:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002858e:	e7f4      	b.n	9002857a <atanf+0x1e>
90028590:	4b4b      	ldr	r3, [pc, #300]	@ (900286c0 <atanf+0x164>)
90028592:	429c      	cmp	r4, r3
90028594:	d810      	bhi.n	900285b8 <atanf+0x5c>
90028596:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002859a:	d20a      	bcs.n	900285b2 <atanf+0x56>
9002859c:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 900286c4 <atanf+0x168>
900285a0:	ee30 7a07 	vadd.f32	s14, s0, s14
900285a4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900285a8:	eeb4 7ae6 	vcmpe.f32	s14, s13
900285ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900285b0:	dce3      	bgt.n	9002857a <atanf+0x1e>
900285b2:	f04f 33ff 	mov.w	r3, #4294967295
900285b6:	e013      	b.n	900285e0 <atanf+0x84>
900285b8:	f000 f8a4 	bl	90028704 <fabsf>
900285bc:	4b42      	ldr	r3, [pc, #264]	@ (900286c8 <atanf+0x16c>)
900285be:	429c      	cmp	r4, r3
900285c0:	d84f      	bhi.n	90028662 <atanf+0x106>
900285c2:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
900285c6:	429c      	cmp	r4, r3
900285c8:	d841      	bhi.n	9002864e <atanf+0xf2>
900285ca:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
900285ce:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
900285d2:	eea0 7a27 	vfma.f32	s14, s0, s15
900285d6:	2300      	movs	r3, #0
900285d8:	ee30 0a27 	vadd.f32	s0, s0, s15
900285dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
900285e0:	1c5a      	adds	r2, r3, #1
900285e2:	ee27 6aa7 	vmul.f32	s12, s15, s15
900285e6:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 900286cc <atanf+0x170>
900285ea:	eddf 5a39 	vldr	s11, [pc, #228]	@ 900286d0 <atanf+0x174>
900285ee:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 900286d4 <atanf+0x178>
900285f2:	ee66 6a06 	vmul.f32	s13, s12, s12
900285f6:	eee6 5a87 	vfma.f32	s11, s13, s14
900285fa:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 900286d8 <atanf+0x17c>
900285fe:	eea5 7aa6 	vfma.f32	s14, s11, s13
90028602:	eddf 5a36 	vldr	s11, [pc, #216]	@ 900286dc <atanf+0x180>
90028606:	eee7 5a26 	vfma.f32	s11, s14, s13
9002860a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 900286e0 <atanf+0x184>
9002860e:	eea5 7aa6 	vfma.f32	s14, s11, s13
90028612:	eddf 5a34 	vldr	s11, [pc, #208]	@ 900286e4 <atanf+0x188>
90028616:	eee7 5a26 	vfma.f32	s11, s14, s13
9002861a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 900286e8 <atanf+0x18c>
9002861e:	eea6 5a87 	vfma.f32	s10, s13, s14
90028622:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 900286ec <atanf+0x190>
90028626:	eea5 7a26 	vfma.f32	s14, s10, s13
9002862a:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 900286f0 <atanf+0x194>
9002862e:	eea7 5a26 	vfma.f32	s10, s14, s13
90028632:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 900286f4 <atanf+0x198>
90028636:	eea5 7a26 	vfma.f32	s14, s10, s13
9002863a:	ee27 7a26 	vmul.f32	s14, s14, s13
9002863e:	eea5 7a86 	vfma.f32	s14, s11, s12
90028642:	ee27 7a87 	vmul.f32	s14, s15, s14
90028646:	d121      	bne.n	9002868c <atanf+0x130>
90028648:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002864c:	e795      	b.n	9002857a <atanf+0x1e>
9002864e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90028652:	ee30 7a67 	vsub.f32	s14, s0, s15
90028656:	ee30 0a27 	vadd.f32	s0, s0, s15
9002865a:	2301      	movs	r3, #1
9002865c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028660:	e7be      	b.n	900285e0 <atanf+0x84>
90028662:	4b25      	ldr	r3, [pc, #148]	@ (900286f8 <atanf+0x19c>)
90028664:	429c      	cmp	r4, r3
90028666:	d80b      	bhi.n	90028680 <atanf+0x124>
90028668:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002866c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028670:	eea0 7a27 	vfma.f32	s14, s0, s15
90028674:	2302      	movs	r3, #2
90028676:	ee70 6a67 	vsub.f32	s13, s0, s15
9002867a:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002867e:	e7af      	b.n	900285e0 <atanf+0x84>
90028680:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90028684:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028688:	2303      	movs	r3, #3
9002868a:	e7a9      	b.n	900285e0 <atanf+0x84>
9002868c:	4a1b      	ldr	r2, [pc, #108]	@ (900286fc <atanf+0x1a0>)
9002868e:	491c      	ldr	r1, [pc, #112]	@ (90028700 <atanf+0x1a4>)
90028690:	eb02 0283 	add.w	r2, r2, r3, lsl #2
90028694:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90028698:	edd3 6a00 	vldr	s13, [r3]
9002869c:	ee37 7a66 	vsub.f32	s14, s14, s13
900286a0:	2d00      	cmp	r5, #0
900286a2:	ee37 7a67 	vsub.f32	s14, s14, s15
900286a6:	edd2 7a00 	vldr	s15, [r2]
900286aa:	ee77 7ac7 	vsub.f32	s15, s15, s14
900286ae:	bfb8      	it	lt
900286b0:	eef1 7a67 	vneglt.f32	s15, s15
900286b4:	e761      	b.n	9002857a <atanf+0x1e>
900286b6:	bf00      	nop
900286b8:	bfc90fdb 	.word	0xbfc90fdb
900286bc:	3fc90fdb 	.word	0x3fc90fdb
900286c0:	3edfffff 	.word	0x3edfffff
900286c4:	7149f2ca 	.word	0x7149f2ca
900286c8:	3f97ffff 	.word	0x3f97ffff
900286cc:	3c8569d7 	.word	0x3c8569d7
900286d0:	3d4bda59 	.word	0x3d4bda59
900286d4:	bd6ef16b 	.word	0xbd6ef16b
900286d8:	3d886b35 	.word	0x3d886b35
900286dc:	3dba2e6e 	.word	0x3dba2e6e
900286e0:	3e124925 	.word	0x3e124925
900286e4:	3eaaaaab 	.word	0x3eaaaaab
900286e8:	bd15a221 	.word	0xbd15a221
900286ec:	bd9d8795 	.word	0xbd9d8795
900286f0:	bde38e38 	.word	0xbde38e38
900286f4:	be4ccccd 	.word	0xbe4ccccd
900286f8:	401bffff 	.word	0x401bffff
900286fc:	9002df50 	.word	0x9002df50
90028700:	9002df40 	.word	0x9002df40

90028704 <fabsf>:
90028704:	ee10 3a10 	vmov	r3, s0
90028708:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002870c:	ee00 3a10 	vmov	s0, r3
90028710:	4770      	bx	lr

90028712 <abort>:
90028712:	b508      	push	{r3, lr}
90028714:	2006      	movs	r0, #6
90028716:	f000 fae1 	bl	90028cdc <raise>
9002871a:	2001      	movs	r0, #1
9002871c:	f7dc f820 	bl	90004760 <_exit>

90028720 <__assert_func>:
90028720:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90028722:	4614      	mov	r4, r2
90028724:	461a      	mov	r2, r3
90028726:	4b09      	ldr	r3, [pc, #36]	@ (9002874c <__assert_func+0x2c>)
90028728:	681b      	ldr	r3, [r3, #0]
9002872a:	4605      	mov	r5, r0
9002872c:	68d8      	ldr	r0, [r3, #12]
9002872e:	b954      	cbnz	r4, 90028746 <__assert_func+0x26>
90028730:	4b07      	ldr	r3, [pc, #28]	@ (90028750 <__assert_func+0x30>)
90028732:	461c      	mov	r4, r3
90028734:	e9cd 3401 	strd	r3, r4, [sp, #4]
90028738:	9100      	str	r1, [sp, #0]
9002873a:	462b      	mov	r3, r5
9002873c:	4905      	ldr	r1, [pc, #20]	@ (90028754 <__assert_func+0x34>)
9002873e:	f000 f983 	bl	90028a48 <fiprintf>
90028742:	f7ff ffe6 	bl	90028712 <abort>
90028746:	4b04      	ldr	r3, [pc, #16]	@ (90028758 <__assert_func+0x38>)
90028748:	e7f4      	b.n	90028734 <__assert_func+0x14>
9002874a:	bf00      	nop
9002874c:	24000124 	.word	0x24000124
90028750:	9002df9b 	.word	0x9002df9b
90028754:	9002df6d 	.word	0x9002df6d
90028758:	9002df60 	.word	0x9002df60

9002875c <atexit>:
9002875c:	2300      	movs	r3, #0
9002875e:	4601      	mov	r1, r0
90028760:	461a      	mov	r2, r3
90028762:	4618      	mov	r0, r3
90028764:	f000 bb68 	b.w	90028e38 <__register_exitproc>

90028768 <malloc>:
90028768:	4b02      	ldr	r3, [pc, #8]	@ (90028774 <malloc+0xc>)
9002876a:	4601      	mov	r1, r0
9002876c:	6818      	ldr	r0, [r3, #0]
9002876e:	f000 b82d 	b.w	900287cc <_malloc_r>
90028772:	bf00      	nop
90028774:	24000124 	.word	0x24000124

90028778 <free>:
90028778:	4b02      	ldr	r3, [pc, #8]	@ (90028784 <free+0xc>)
9002877a:	4601      	mov	r1, r0
9002877c:	6818      	ldr	r0, [r3, #0]
9002877e:	f000 bbb7 	b.w	90028ef0 <_free_r>
90028782:	bf00      	nop
90028784:	24000124 	.word	0x24000124

90028788 <sbrk_aligned>:
90028788:	b570      	push	{r4, r5, r6, lr}
9002878a:	4e0f      	ldr	r6, [pc, #60]	@ (900287c8 <sbrk_aligned+0x40>)
9002878c:	460c      	mov	r4, r1
9002878e:	6831      	ldr	r1, [r6, #0]
90028790:	4605      	mov	r5, r0
90028792:	b911      	cbnz	r1, 9002879a <sbrk_aligned+0x12>
90028794:	f000 faf2 	bl	90028d7c <_sbrk_r>
90028798:	6030      	str	r0, [r6, #0]
9002879a:	4621      	mov	r1, r4
9002879c:	4628      	mov	r0, r5
9002879e:	f000 faed 	bl	90028d7c <_sbrk_r>
900287a2:	1c43      	adds	r3, r0, #1
900287a4:	d103      	bne.n	900287ae <sbrk_aligned+0x26>
900287a6:	f04f 34ff 	mov.w	r4, #4294967295
900287aa:	4620      	mov	r0, r4
900287ac:	bd70      	pop	{r4, r5, r6, pc}
900287ae:	1cc4      	adds	r4, r0, #3
900287b0:	f024 0403 	bic.w	r4, r4, #3
900287b4:	42a0      	cmp	r0, r4
900287b6:	d0f8      	beq.n	900287aa <sbrk_aligned+0x22>
900287b8:	1a21      	subs	r1, r4, r0
900287ba:	4628      	mov	r0, r5
900287bc:	f000 fade 	bl	90028d7c <_sbrk_r>
900287c0:	3001      	adds	r0, #1
900287c2:	d1f2      	bne.n	900287aa <sbrk_aligned+0x22>
900287c4:	e7ef      	b.n	900287a6 <sbrk_aligned+0x1e>
900287c6:	bf00      	nop
900287c8:	24022638 	.word	0x24022638

900287cc <_malloc_r>:
900287cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900287d0:	1ccd      	adds	r5, r1, #3
900287d2:	f025 0503 	bic.w	r5, r5, #3
900287d6:	3508      	adds	r5, #8
900287d8:	2d0c      	cmp	r5, #12
900287da:	bf38      	it	cc
900287dc:	250c      	movcc	r5, #12
900287de:	2d00      	cmp	r5, #0
900287e0:	4606      	mov	r6, r0
900287e2:	db01      	blt.n	900287e8 <_malloc_r+0x1c>
900287e4:	42a9      	cmp	r1, r5
900287e6:	d904      	bls.n	900287f2 <_malloc_r+0x26>
900287e8:	230c      	movs	r3, #12
900287ea:	6033      	str	r3, [r6, #0]
900287ec:	2000      	movs	r0, #0
900287ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900287f2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 900288c8 <_malloc_r+0xfc>
900287f6:	f000 f869 	bl	900288cc <__malloc_lock>
900287fa:	f8d8 3000 	ldr.w	r3, [r8]
900287fe:	461c      	mov	r4, r3
90028800:	bb44      	cbnz	r4, 90028854 <_malloc_r+0x88>
90028802:	4629      	mov	r1, r5
90028804:	4630      	mov	r0, r6
90028806:	f7ff ffbf 	bl	90028788 <sbrk_aligned>
9002880a:	1c43      	adds	r3, r0, #1
9002880c:	4604      	mov	r4, r0
9002880e:	d158      	bne.n	900288c2 <_malloc_r+0xf6>
90028810:	f8d8 4000 	ldr.w	r4, [r8]
90028814:	4627      	mov	r7, r4
90028816:	2f00      	cmp	r7, #0
90028818:	d143      	bne.n	900288a2 <_malloc_r+0xd6>
9002881a:	2c00      	cmp	r4, #0
9002881c:	d04b      	beq.n	900288b6 <_malloc_r+0xea>
9002881e:	6823      	ldr	r3, [r4, #0]
90028820:	4639      	mov	r1, r7
90028822:	4630      	mov	r0, r6
90028824:	eb04 0903 	add.w	r9, r4, r3
90028828:	f000 faa8 	bl	90028d7c <_sbrk_r>
9002882c:	4581      	cmp	r9, r0
9002882e:	d142      	bne.n	900288b6 <_malloc_r+0xea>
90028830:	6821      	ldr	r1, [r4, #0]
90028832:	1a6d      	subs	r5, r5, r1
90028834:	4629      	mov	r1, r5
90028836:	4630      	mov	r0, r6
90028838:	f7ff ffa6 	bl	90028788 <sbrk_aligned>
9002883c:	3001      	adds	r0, #1
9002883e:	d03a      	beq.n	900288b6 <_malloc_r+0xea>
90028840:	6823      	ldr	r3, [r4, #0]
90028842:	442b      	add	r3, r5
90028844:	6023      	str	r3, [r4, #0]
90028846:	f8d8 3000 	ldr.w	r3, [r8]
9002884a:	685a      	ldr	r2, [r3, #4]
9002884c:	bb62      	cbnz	r2, 900288a8 <_malloc_r+0xdc>
9002884e:	f8c8 7000 	str.w	r7, [r8]
90028852:	e00f      	b.n	90028874 <_malloc_r+0xa8>
90028854:	6822      	ldr	r2, [r4, #0]
90028856:	1b52      	subs	r2, r2, r5
90028858:	d420      	bmi.n	9002889c <_malloc_r+0xd0>
9002885a:	2a0b      	cmp	r2, #11
9002885c:	d917      	bls.n	9002888e <_malloc_r+0xc2>
9002885e:	1961      	adds	r1, r4, r5
90028860:	42a3      	cmp	r3, r4
90028862:	6025      	str	r5, [r4, #0]
90028864:	bf18      	it	ne
90028866:	6059      	strne	r1, [r3, #4]
90028868:	6863      	ldr	r3, [r4, #4]
9002886a:	bf08      	it	eq
9002886c:	f8c8 1000 	streq.w	r1, [r8]
90028870:	5162      	str	r2, [r4, r5]
90028872:	604b      	str	r3, [r1, #4]
90028874:	4630      	mov	r0, r6
90028876:	f000 f82f 	bl	900288d8 <__malloc_unlock>
9002887a:	f104 000b 	add.w	r0, r4, #11
9002887e:	1d23      	adds	r3, r4, #4
90028880:	f020 0007 	bic.w	r0, r0, #7
90028884:	1ac2      	subs	r2, r0, r3
90028886:	bf1c      	itt	ne
90028888:	1a1b      	subne	r3, r3, r0
9002888a:	50a3      	strne	r3, [r4, r2]
9002888c:	e7af      	b.n	900287ee <_malloc_r+0x22>
9002888e:	6862      	ldr	r2, [r4, #4]
90028890:	42a3      	cmp	r3, r4
90028892:	bf0c      	ite	eq
90028894:	f8c8 2000 	streq.w	r2, [r8]
90028898:	605a      	strne	r2, [r3, #4]
9002889a:	e7eb      	b.n	90028874 <_malloc_r+0xa8>
9002889c:	4623      	mov	r3, r4
9002889e:	6864      	ldr	r4, [r4, #4]
900288a0:	e7ae      	b.n	90028800 <_malloc_r+0x34>
900288a2:	463c      	mov	r4, r7
900288a4:	687f      	ldr	r7, [r7, #4]
900288a6:	e7b6      	b.n	90028816 <_malloc_r+0x4a>
900288a8:	461a      	mov	r2, r3
900288aa:	685b      	ldr	r3, [r3, #4]
900288ac:	42a3      	cmp	r3, r4
900288ae:	d1fb      	bne.n	900288a8 <_malloc_r+0xdc>
900288b0:	2300      	movs	r3, #0
900288b2:	6053      	str	r3, [r2, #4]
900288b4:	e7de      	b.n	90028874 <_malloc_r+0xa8>
900288b6:	230c      	movs	r3, #12
900288b8:	6033      	str	r3, [r6, #0]
900288ba:	4630      	mov	r0, r6
900288bc:	f000 f80c 	bl	900288d8 <__malloc_unlock>
900288c0:	e794      	b.n	900287ec <_malloc_r+0x20>
900288c2:	6005      	str	r5, [r0, #0]
900288c4:	e7d6      	b.n	90028874 <_malloc_r+0xa8>
900288c6:	bf00      	nop
900288c8:	2402263c 	.word	0x2402263c

900288cc <__malloc_lock>:
900288cc:	4801      	ldr	r0, [pc, #4]	@ (900288d4 <__malloc_lock+0x8>)
900288ce:	f000 baa2 	b.w	90028e16 <__retarget_lock_acquire_recursive>
900288d2:	bf00      	nop
900288d4:	24022780 	.word	0x24022780

900288d8 <__malloc_unlock>:
900288d8:	4801      	ldr	r0, [pc, #4]	@ (900288e0 <__malloc_unlock+0x8>)
900288da:	f000 ba9d 	b.w	90028e18 <__retarget_lock_release_recursive>
900288de:	bf00      	nop
900288e0:	24022780 	.word	0x24022780

900288e4 <__cxa_atexit>:
900288e4:	b510      	push	{r4, lr}
900288e6:	4604      	mov	r4, r0
900288e8:	4804      	ldr	r0, [pc, #16]	@ (900288fc <__cxa_atexit+0x18>)
900288ea:	4613      	mov	r3, r2
900288ec:	b120      	cbz	r0, 900288f8 <__cxa_atexit+0x14>
900288ee:	460a      	mov	r2, r1
900288f0:	2002      	movs	r0, #2
900288f2:	4621      	mov	r1, r4
900288f4:	f000 faa0 	bl	90028e38 <__register_exitproc>
900288f8:	bd10      	pop	{r4, pc}
900288fa:	bf00      	nop
900288fc:	90028e39 	.word	0x90028e39

90028900 <std>:
90028900:	2300      	movs	r3, #0
90028902:	b510      	push	{r4, lr}
90028904:	4604      	mov	r4, r0
90028906:	e9c0 3300 	strd	r3, r3, [r0]
9002890a:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002890e:	6083      	str	r3, [r0, #8]
90028910:	8181      	strh	r1, [r0, #12]
90028912:	6643      	str	r3, [r0, #100]	@ 0x64
90028914:	81c2      	strh	r2, [r0, #14]
90028916:	6183      	str	r3, [r0, #24]
90028918:	4619      	mov	r1, r3
9002891a:	2208      	movs	r2, #8
9002891c:	305c      	adds	r0, #92	@ 0x5c
9002891e:	f000 f99b 	bl	90028c58 <memset>
90028922:	4b0d      	ldr	r3, [pc, #52]	@ (90028958 <std+0x58>)
90028924:	6263      	str	r3, [r4, #36]	@ 0x24
90028926:	4b0d      	ldr	r3, [pc, #52]	@ (9002895c <std+0x5c>)
90028928:	62a3      	str	r3, [r4, #40]	@ 0x28
9002892a:	4b0d      	ldr	r3, [pc, #52]	@ (90028960 <std+0x60>)
9002892c:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002892e:	4b0d      	ldr	r3, [pc, #52]	@ (90028964 <std+0x64>)
90028930:	6323      	str	r3, [r4, #48]	@ 0x30
90028932:	4b0d      	ldr	r3, [pc, #52]	@ (90028968 <std+0x68>)
90028934:	6224      	str	r4, [r4, #32]
90028936:	429c      	cmp	r4, r3
90028938:	d006      	beq.n	90028948 <std+0x48>
9002893a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002893e:	4294      	cmp	r4, r2
90028940:	d002      	beq.n	90028948 <std+0x48>
90028942:	33d0      	adds	r3, #208	@ 0xd0
90028944:	429c      	cmp	r4, r3
90028946:	d105      	bne.n	90028954 <std+0x54>
90028948:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002894c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028950:	f000 ba60 	b.w	90028e14 <__retarget_lock_init_recursive>
90028954:	bd10      	pop	{r4, pc}
90028956:	bf00      	nop
90028958:	90028aa9 	.word	0x90028aa9
9002895c:	90028acb 	.word	0x90028acb
90028960:	90028b03 	.word	0x90028b03
90028964:	90028b27 	.word	0x90028b27
90028968:	24022640 	.word	0x24022640

9002896c <stdio_exit_handler>:
9002896c:	4a02      	ldr	r2, [pc, #8]	@ (90028978 <stdio_exit_handler+0xc>)
9002896e:	4903      	ldr	r1, [pc, #12]	@ (9002897c <stdio_exit_handler+0x10>)
90028970:	4803      	ldr	r0, [pc, #12]	@ (90028980 <stdio_exit_handler+0x14>)
90028972:	f000 b87b 	b.w	90028a6c <_fwalk_sglue>
90028976:	bf00      	nop
90028978:	24000118 	.word	0x24000118
9002897c:	9002962d 	.word	0x9002962d
90028980:	24000128 	.word	0x24000128

90028984 <cleanup_stdio>:
90028984:	6841      	ldr	r1, [r0, #4]
90028986:	4b0c      	ldr	r3, [pc, #48]	@ (900289b8 <cleanup_stdio+0x34>)
90028988:	4299      	cmp	r1, r3
9002898a:	b510      	push	{r4, lr}
9002898c:	4604      	mov	r4, r0
9002898e:	d001      	beq.n	90028994 <cleanup_stdio+0x10>
90028990:	f000 fe4c 	bl	9002962c <_fflush_r>
90028994:	68a1      	ldr	r1, [r4, #8]
90028996:	4b09      	ldr	r3, [pc, #36]	@ (900289bc <cleanup_stdio+0x38>)
90028998:	4299      	cmp	r1, r3
9002899a:	d002      	beq.n	900289a2 <cleanup_stdio+0x1e>
9002899c:	4620      	mov	r0, r4
9002899e:	f000 fe45 	bl	9002962c <_fflush_r>
900289a2:	68e1      	ldr	r1, [r4, #12]
900289a4:	4b06      	ldr	r3, [pc, #24]	@ (900289c0 <cleanup_stdio+0x3c>)
900289a6:	4299      	cmp	r1, r3
900289a8:	d004      	beq.n	900289b4 <cleanup_stdio+0x30>
900289aa:	4620      	mov	r0, r4
900289ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900289b0:	f000 be3c 	b.w	9002962c <_fflush_r>
900289b4:	bd10      	pop	{r4, pc}
900289b6:	bf00      	nop
900289b8:	24022640 	.word	0x24022640
900289bc:	240226a8 	.word	0x240226a8
900289c0:	24022710 	.word	0x24022710

900289c4 <global_stdio_init.part.0>:
900289c4:	b510      	push	{r4, lr}
900289c6:	4b0b      	ldr	r3, [pc, #44]	@ (900289f4 <global_stdio_init.part.0+0x30>)
900289c8:	4c0b      	ldr	r4, [pc, #44]	@ (900289f8 <global_stdio_init.part.0+0x34>)
900289ca:	4a0c      	ldr	r2, [pc, #48]	@ (900289fc <global_stdio_init.part.0+0x38>)
900289cc:	601a      	str	r2, [r3, #0]
900289ce:	4620      	mov	r0, r4
900289d0:	2200      	movs	r2, #0
900289d2:	2104      	movs	r1, #4
900289d4:	f7ff ff94 	bl	90028900 <std>
900289d8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
900289dc:	2201      	movs	r2, #1
900289de:	2109      	movs	r1, #9
900289e0:	f7ff ff8e 	bl	90028900 <std>
900289e4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
900289e8:	2202      	movs	r2, #2
900289ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900289ee:	2112      	movs	r1, #18
900289f0:	f7ff bf86 	b.w	90028900 <std>
900289f4:	24022778 	.word	0x24022778
900289f8:	24022640 	.word	0x24022640
900289fc:	9002896d 	.word	0x9002896d

90028a00 <__sfp_lock_acquire>:
90028a00:	4801      	ldr	r0, [pc, #4]	@ (90028a08 <__sfp_lock_acquire+0x8>)
90028a02:	f000 ba08 	b.w	90028e16 <__retarget_lock_acquire_recursive>
90028a06:	bf00      	nop
90028a08:	24022782 	.word	0x24022782

90028a0c <__sfp_lock_release>:
90028a0c:	4801      	ldr	r0, [pc, #4]	@ (90028a14 <__sfp_lock_release+0x8>)
90028a0e:	f000 ba03 	b.w	90028e18 <__retarget_lock_release_recursive>
90028a12:	bf00      	nop
90028a14:	24022782 	.word	0x24022782

90028a18 <__sinit>:
90028a18:	b510      	push	{r4, lr}
90028a1a:	4604      	mov	r4, r0
90028a1c:	f7ff fff0 	bl	90028a00 <__sfp_lock_acquire>
90028a20:	6a23      	ldr	r3, [r4, #32]
90028a22:	b11b      	cbz	r3, 90028a2c <__sinit+0x14>
90028a24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028a28:	f7ff bff0 	b.w	90028a0c <__sfp_lock_release>
90028a2c:	4b04      	ldr	r3, [pc, #16]	@ (90028a40 <__sinit+0x28>)
90028a2e:	6223      	str	r3, [r4, #32]
90028a30:	4b04      	ldr	r3, [pc, #16]	@ (90028a44 <__sinit+0x2c>)
90028a32:	681b      	ldr	r3, [r3, #0]
90028a34:	2b00      	cmp	r3, #0
90028a36:	d1f5      	bne.n	90028a24 <__sinit+0xc>
90028a38:	f7ff ffc4 	bl	900289c4 <global_stdio_init.part.0>
90028a3c:	e7f2      	b.n	90028a24 <__sinit+0xc>
90028a3e:	bf00      	nop
90028a40:	90028985 	.word	0x90028985
90028a44:	24022778 	.word	0x24022778

90028a48 <fiprintf>:
90028a48:	b40e      	push	{r1, r2, r3}
90028a4a:	b503      	push	{r0, r1, lr}
90028a4c:	4601      	mov	r1, r0
90028a4e:	ab03      	add	r3, sp, #12
90028a50:	4805      	ldr	r0, [pc, #20]	@ (90028a68 <fiprintf+0x20>)
90028a52:	f853 2b04 	ldr.w	r2, [r3], #4
90028a56:	6800      	ldr	r0, [r0, #0]
90028a58:	9301      	str	r3, [sp, #4]
90028a5a:	f000 fabd 	bl	90028fd8 <_vfiprintf_r>
90028a5e:	b002      	add	sp, #8
90028a60:	f85d eb04 	ldr.w	lr, [sp], #4
90028a64:	b003      	add	sp, #12
90028a66:	4770      	bx	lr
90028a68:	24000124 	.word	0x24000124

90028a6c <_fwalk_sglue>:
90028a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90028a70:	4607      	mov	r7, r0
90028a72:	4688      	mov	r8, r1
90028a74:	4614      	mov	r4, r2
90028a76:	2600      	movs	r6, #0
90028a78:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90028a7c:	f1b9 0901 	subs.w	r9, r9, #1
90028a80:	d505      	bpl.n	90028a8e <_fwalk_sglue+0x22>
90028a82:	6824      	ldr	r4, [r4, #0]
90028a84:	2c00      	cmp	r4, #0
90028a86:	d1f7      	bne.n	90028a78 <_fwalk_sglue+0xc>
90028a88:	4630      	mov	r0, r6
90028a8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90028a8e:	89ab      	ldrh	r3, [r5, #12]
90028a90:	2b01      	cmp	r3, #1
90028a92:	d907      	bls.n	90028aa4 <_fwalk_sglue+0x38>
90028a94:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90028a98:	3301      	adds	r3, #1
90028a9a:	d003      	beq.n	90028aa4 <_fwalk_sglue+0x38>
90028a9c:	4629      	mov	r1, r5
90028a9e:	4638      	mov	r0, r7
90028aa0:	47c0      	blx	r8
90028aa2:	4306      	orrs	r6, r0
90028aa4:	3568      	adds	r5, #104	@ 0x68
90028aa6:	e7e9      	b.n	90028a7c <_fwalk_sglue+0x10>

90028aa8 <__sread>:
90028aa8:	b510      	push	{r4, lr}
90028aaa:	460c      	mov	r4, r1
90028aac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028ab0:	f000 f93e 	bl	90028d30 <_read_r>
90028ab4:	2800      	cmp	r0, #0
90028ab6:	bfab      	itete	ge
90028ab8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
90028aba:	89a3      	ldrhlt	r3, [r4, #12]
90028abc:	181b      	addge	r3, r3, r0
90028abe:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
90028ac2:	bfac      	ite	ge
90028ac4:	6563      	strge	r3, [r4, #84]	@ 0x54
90028ac6:	81a3      	strhlt	r3, [r4, #12]
90028ac8:	bd10      	pop	{r4, pc}

90028aca <__swrite>:
90028aca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90028ace:	461f      	mov	r7, r3
90028ad0:	898b      	ldrh	r3, [r1, #12]
90028ad2:	05db      	lsls	r3, r3, #23
90028ad4:	4605      	mov	r5, r0
90028ad6:	460c      	mov	r4, r1
90028ad8:	4616      	mov	r6, r2
90028ada:	d505      	bpl.n	90028ae8 <__swrite+0x1e>
90028adc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028ae0:	2302      	movs	r3, #2
90028ae2:	2200      	movs	r2, #0
90028ae4:	f000 f912 	bl	90028d0c <_lseek_r>
90028ae8:	89a3      	ldrh	r3, [r4, #12]
90028aea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90028aee:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90028af2:	81a3      	strh	r3, [r4, #12]
90028af4:	4632      	mov	r2, r6
90028af6:	463b      	mov	r3, r7
90028af8:	4628      	mov	r0, r5
90028afa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90028afe:	f000 b94d 	b.w	90028d9c <_write_r>

90028b02 <__sseek>:
90028b02:	b510      	push	{r4, lr}
90028b04:	460c      	mov	r4, r1
90028b06:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028b0a:	f000 f8ff 	bl	90028d0c <_lseek_r>
90028b0e:	1c43      	adds	r3, r0, #1
90028b10:	89a3      	ldrh	r3, [r4, #12]
90028b12:	bf15      	itete	ne
90028b14:	6560      	strne	r0, [r4, #84]	@ 0x54
90028b16:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
90028b1a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
90028b1e:	81a3      	strheq	r3, [r4, #12]
90028b20:	bf18      	it	ne
90028b22:	81a3      	strhne	r3, [r4, #12]
90028b24:	bd10      	pop	{r4, pc}

90028b26 <__sclose>:
90028b26:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028b2a:	f000 b8df 	b.w	90028cec <_close_r>

90028b2e <__swbuf_r>:
90028b2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028b30:	460e      	mov	r6, r1
90028b32:	4614      	mov	r4, r2
90028b34:	4605      	mov	r5, r0
90028b36:	b118      	cbz	r0, 90028b40 <__swbuf_r+0x12>
90028b38:	6a03      	ldr	r3, [r0, #32]
90028b3a:	b90b      	cbnz	r3, 90028b40 <__swbuf_r+0x12>
90028b3c:	f7ff ff6c 	bl	90028a18 <__sinit>
90028b40:	69a3      	ldr	r3, [r4, #24]
90028b42:	60a3      	str	r3, [r4, #8]
90028b44:	89a3      	ldrh	r3, [r4, #12]
90028b46:	071a      	lsls	r2, r3, #28
90028b48:	d501      	bpl.n	90028b4e <__swbuf_r+0x20>
90028b4a:	6923      	ldr	r3, [r4, #16]
90028b4c:	b943      	cbnz	r3, 90028b60 <__swbuf_r+0x32>
90028b4e:	4621      	mov	r1, r4
90028b50:	4628      	mov	r0, r5
90028b52:	f000 f82b 	bl	90028bac <__swsetup_r>
90028b56:	b118      	cbz	r0, 90028b60 <__swbuf_r+0x32>
90028b58:	f04f 37ff 	mov.w	r7, #4294967295
90028b5c:	4638      	mov	r0, r7
90028b5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90028b60:	6823      	ldr	r3, [r4, #0]
90028b62:	6922      	ldr	r2, [r4, #16]
90028b64:	1a98      	subs	r0, r3, r2
90028b66:	6963      	ldr	r3, [r4, #20]
90028b68:	b2f6      	uxtb	r6, r6
90028b6a:	4283      	cmp	r3, r0
90028b6c:	4637      	mov	r7, r6
90028b6e:	dc05      	bgt.n	90028b7c <__swbuf_r+0x4e>
90028b70:	4621      	mov	r1, r4
90028b72:	4628      	mov	r0, r5
90028b74:	f000 fd5a 	bl	9002962c <_fflush_r>
90028b78:	2800      	cmp	r0, #0
90028b7a:	d1ed      	bne.n	90028b58 <__swbuf_r+0x2a>
90028b7c:	68a3      	ldr	r3, [r4, #8]
90028b7e:	3b01      	subs	r3, #1
90028b80:	60a3      	str	r3, [r4, #8]
90028b82:	6823      	ldr	r3, [r4, #0]
90028b84:	1c5a      	adds	r2, r3, #1
90028b86:	6022      	str	r2, [r4, #0]
90028b88:	701e      	strb	r6, [r3, #0]
90028b8a:	6962      	ldr	r2, [r4, #20]
90028b8c:	1c43      	adds	r3, r0, #1
90028b8e:	429a      	cmp	r2, r3
90028b90:	d004      	beq.n	90028b9c <__swbuf_r+0x6e>
90028b92:	89a3      	ldrh	r3, [r4, #12]
90028b94:	07db      	lsls	r3, r3, #31
90028b96:	d5e1      	bpl.n	90028b5c <__swbuf_r+0x2e>
90028b98:	2e0a      	cmp	r6, #10
90028b9a:	d1df      	bne.n	90028b5c <__swbuf_r+0x2e>
90028b9c:	4621      	mov	r1, r4
90028b9e:	4628      	mov	r0, r5
90028ba0:	f000 fd44 	bl	9002962c <_fflush_r>
90028ba4:	2800      	cmp	r0, #0
90028ba6:	d0d9      	beq.n	90028b5c <__swbuf_r+0x2e>
90028ba8:	e7d6      	b.n	90028b58 <__swbuf_r+0x2a>
	...

90028bac <__swsetup_r>:
90028bac:	b538      	push	{r3, r4, r5, lr}
90028bae:	4b29      	ldr	r3, [pc, #164]	@ (90028c54 <__swsetup_r+0xa8>)
90028bb0:	4605      	mov	r5, r0
90028bb2:	6818      	ldr	r0, [r3, #0]
90028bb4:	460c      	mov	r4, r1
90028bb6:	b118      	cbz	r0, 90028bc0 <__swsetup_r+0x14>
90028bb8:	6a03      	ldr	r3, [r0, #32]
90028bba:	b90b      	cbnz	r3, 90028bc0 <__swsetup_r+0x14>
90028bbc:	f7ff ff2c 	bl	90028a18 <__sinit>
90028bc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90028bc4:	0719      	lsls	r1, r3, #28
90028bc6:	d422      	bmi.n	90028c0e <__swsetup_r+0x62>
90028bc8:	06da      	lsls	r2, r3, #27
90028bca:	d407      	bmi.n	90028bdc <__swsetup_r+0x30>
90028bcc:	2209      	movs	r2, #9
90028bce:	602a      	str	r2, [r5, #0]
90028bd0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90028bd4:	81a3      	strh	r3, [r4, #12]
90028bd6:	f04f 30ff 	mov.w	r0, #4294967295
90028bda:	e033      	b.n	90028c44 <__swsetup_r+0x98>
90028bdc:	0758      	lsls	r0, r3, #29
90028bde:	d512      	bpl.n	90028c06 <__swsetup_r+0x5a>
90028be0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90028be2:	b141      	cbz	r1, 90028bf6 <__swsetup_r+0x4a>
90028be4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
90028be8:	4299      	cmp	r1, r3
90028bea:	d002      	beq.n	90028bf2 <__swsetup_r+0x46>
90028bec:	4628      	mov	r0, r5
90028bee:	f000 f97f 	bl	90028ef0 <_free_r>
90028bf2:	2300      	movs	r3, #0
90028bf4:	6363      	str	r3, [r4, #52]	@ 0x34
90028bf6:	89a3      	ldrh	r3, [r4, #12]
90028bf8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
90028bfc:	81a3      	strh	r3, [r4, #12]
90028bfe:	2300      	movs	r3, #0
90028c00:	6063      	str	r3, [r4, #4]
90028c02:	6923      	ldr	r3, [r4, #16]
90028c04:	6023      	str	r3, [r4, #0]
90028c06:	89a3      	ldrh	r3, [r4, #12]
90028c08:	f043 0308 	orr.w	r3, r3, #8
90028c0c:	81a3      	strh	r3, [r4, #12]
90028c0e:	6923      	ldr	r3, [r4, #16]
90028c10:	b94b      	cbnz	r3, 90028c26 <__swsetup_r+0x7a>
90028c12:	89a3      	ldrh	r3, [r4, #12]
90028c14:	f403 7320 	and.w	r3, r3, #640	@ 0x280
90028c18:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90028c1c:	d003      	beq.n	90028c26 <__swsetup_r+0x7a>
90028c1e:	4621      	mov	r1, r4
90028c20:	4628      	mov	r0, r5
90028c22:	f000 fd51 	bl	900296c8 <__smakebuf_r>
90028c26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90028c2a:	f013 0201 	ands.w	r2, r3, #1
90028c2e:	d00a      	beq.n	90028c46 <__swsetup_r+0x9a>
90028c30:	2200      	movs	r2, #0
90028c32:	60a2      	str	r2, [r4, #8]
90028c34:	6962      	ldr	r2, [r4, #20]
90028c36:	4252      	negs	r2, r2
90028c38:	61a2      	str	r2, [r4, #24]
90028c3a:	6922      	ldr	r2, [r4, #16]
90028c3c:	b942      	cbnz	r2, 90028c50 <__swsetup_r+0xa4>
90028c3e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
90028c42:	d1c5      	bne.n	90028bd0 <__swsetup_r+0x24>
90028c44:	bd38      	pop	{r3, r4, r5, pc}
90028c46:	0799      	lsls	r1, r3, #30
90028c48:	bf58      	it	pl
90028c4a:	6962      	ldrpl	r2, [r4, #20]
90028c4c:	60a2      	str	r2, [r4, #8]
90028c4e:	e7f4      	b.n	90028c3a <__swsetup_r+0x8e>
90028c50:	2000      	movs	r0, #0
90028c52:	e7f7      	b.n	90028c44 <__swsetup_r+0x98>
90028c54:	24000124 	.word	0x24000124

90028c58 <memset>:
90028c58:	4402      	add	r2, r0
90028c5a:	4603      	mov	r3, r0
90028c5c:	4293      	cmp	r3, r2
90028c5e:	d100      	bne.n	90028c62 <memset+0xa>
90028c60:	4770      	bx	lr
90028c62:	f803 1b01 	strb.w	r1, [r3], #1
90028c66:	e7f9      	b.n	90028c5c <memset+0x4>

90028c68 <strncmp>:
90028c68:	b510      	push	{r4, lr}
90028c6a:	b16a      	cbz	r2, 90028c88 <strncmp+0x20>
90028c6c:	3901      	subs	r1, #1
90028c6e:	1884      	adds	r4, r0, r2
90028c70:	f810 2b01 	ldrb.w	r2, [r0], #1
90028c74:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90028c78:	429a      	cmp	r2, r3
90028c7a:	d103      	bne.n	90028c84 <strncmp+0x1c>
90028c7c:	42a0      	cmp	r0, r4
90028c7e:	d001      	beq.n	90028c84 <strncmp+0x1c>
90028c80:	2a00      	cmp	r2, #0
90028c82:	d1f5      	bne.n	90028c70 <strncmp+0x8>
90028c84:	1ad0      	subs	r0, r2, r3
90028c86:	bd10      	pop	{r4, pc}
90028c88:	4610      	mov	r0, r2
90028c8a:	e7fc      	b.n	90028c86 <strncmp+0x1e>

90028c8c <_raise_r>:
90028c8c:	291f      	cmp	r1, #31
90028c8e:	b538      	push	{r3, r4, r5, lr}
90028c90:	4605      	mov	r5, r0
90028c92:	460c      	mov	r4, r1
90028c94:	d904      	bls.n	90028ca0 <_raise_r+0x14>
90028c96:	2316      	movs	r3, #22
90028c98:	6003      	str	r3, [r0, #0]
90028c9a:	f04f 30ff 	mov.w	r0, #4294967295
90028c9e:	bd38      	pop	{r3, r4, r5, pc}
90028ca0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
90028ca2:	b112      	cbz	r2, 90028caa <_raise_r+0x1e>
90028ca4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90028ca8:	b94b      	cbnz	r3, 90028cbe <_raise_r+0x32>
90028caa:	4628      	mov	r0, r5
90028cac:	f000 f864 	bl	90028d78 <_getpid_r>
90028cb0:	4622      	mov	r2, r4
90028cb2:	4601      	mov	r1, r0
90028cb4:	4628      	mov	r0, r5
90028cb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90028cba:	f000 b84b 	b.w	90028d54 <_kill_r>
90028cbe:	2b01      	cmp	r3, #1
90028cc0:	d00a      	beq.n	90028cd8 <_raise_r+0x4c>
90028cc2:	1c59      	adds	r1, r3, #1
90028cc4:	d103      	bne.n	90028cce <_raise_r+0x42>
90028cc6:	2316      	movs	r3, #22
90028cc8:	6003      	str	r3, [r0, #0]
90028cca:	2001      	movs	r0, #1
90028ccc:	e7e7      	b.n	90028c9e <_raise_r+0x12>
90028cce:	2100      	movs	r1, #0
90028cd0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
90028cd4:	4620      	mov	r0, r4
90028cd6:	4798      	blx	r3
90028cd8:	2000      	movs	r0, #0
90028cda:	e7e0      	b.n	90028c9e <_raise_r+0x12>

90028cdc <raise>:
90028cdc:	4b02      	ldr	r3, [pc, #8]	@ (90028ce8 <raise+0xc>)
90028cde:	4601      	mov	r1, r0
90028ce0:	6818      	ldr	r0, [r3, #0]
90028ce2:	f7ff bfd3 	b.w	90028c8c <_raise_r>
90028ce6:	bf00      	nop
90028ce8:	24000124 	.word	0x24000124

90028cec <_close_r>:
90028cec:	b538      	push	{r3, r4, r5, lr}
90028cee:	4d06      	ldr	r5, [pc, #24]	@ (90028d08 <_close_r+0x1c>)
90028cf0:	2300      	movs	r3, #0
90028cf2:	4604      	mov	r4, r0
90028cf4:	4608      	mov	r0, r1
90028cf6:	602b      	str	r3, [r5, #0]
90028cf8:	f7db fd54 	bl	900047a4 <_close>
90028cfc:	1c43      	adds	r3, r0, #1
90028cfe:	d102      	bne.n	90028d06 <_close_r+0x1a>
90028d00:	682b      	ldr	r3, [r5, #0]
90028d02:	b103      	cbz	r3, 90028d06 <_close_r+0x1a>
90028d04:	6023      	str	r3, [r4, #0]
90028d06:	bd38      	pop	{r3, r4, r5, pc}
90028d08:	2402277c 	.word	0x2402277c

90028d0c <_lseek_r>:
90028d0c:	b538      	push	{r3, r4, r5, lr}
90028d0e:	4d07      	ldr	r5, [pc, #28]	@ (90028d2c <_lseek_r+0x20>)
90028d10:	4604      	mov	r4, r0
90028d12:	4608      	mov	r0, r1
90028d14:	4611      	mov	r1, r2
90028d16:	2200      	movs	r2, #0
90028d18:	602a      	str	r2, [r5, #0]
90028d1a:	461a      	mov	r2, r3
90028d1c:	f7db fd4e 	bl	900047bc <_lseek>
90028d20:	1c43      	adds	r3, r0, #1
90028d22:	d102      	bne.n	90028d2a <_lseek_r+0x1e>
90028d24:	682b      	ldr	r3, [r5, #0]
90028d26:	b103      	cbz	r3, 90028d2a <_lseek_r+0x1e>
90028d28:	6023      	str	r3, [r4, #0]
90028d2a:	bd38      	pop	{r3, r4, r5, pc}
90028d2c:	2402277c 	.word	0x2402277c

90028d30 <_read_r>:
90028d30:	b538      	push	{r3, r4, r5, lr}
90028d32:	4d07      	ldr	r5, [pc, #28]	@ (90028d50 <_read_r+0x20>)
90028d34:	4604      	mov	r4, r0
90028d36:	4608      	mov	r0, r1
90028d38:	4611      	mov	r1, r2
90028d3a:	2200      	movs	r2, #0
90028d3c:	602a      	str	r2, [r5, #0]
90028d3e:	461a      	mov	r2, r3
90028d40:	f7db fd14 	bl	9000476c <_read>
90028d44:	1c43      	adds	r3, r0, #1
90028d46:	d102      	bne.n	90028d4e <_read_r+0x1e>
90028d48:	682b      	ldr	r3, [r5, #0]
90028d4a:	b103      	cbz	r3, 90028d4e <_read_r+0x1e>
90028d4c:	6023      	str	r3, [r4, #0]
90028d4e:	bd38      	pop	{r3, r4, r5, pc}
90028d50:	2402277c 	.word	0x2402277c

90028d54 <_kill_r>:
90028d54:	b538      	push	{r3, r4, r5, lr}
90028d56:	4d07      	ldr	r5, [pc, #28]	@ (90028d74 <_kill_r+0x20>)
90028d58:	2300      	movs	r3, #0
90028d5a:	4604      	mov	r4, r0
90028d5c:	4608      	mov	r0, r1
90028d5e:	4611      	mov	r1, r2
90028d60:	602b      	str	r3, [r5, #0]
90028d62:	f7db fcf3 	bl	9000474c <_kill>
90028d66:	1c43      	adds	r3, r0, #1
90028d68:	d102      	bne.n	90028d70 <_kill_r+0x1c>
90028d6a:	682b      	ldr	r3, [r5, #0]
90028d6c:	b103      	cbz	r3, 90028d70 <_kill_r+0x1c>
90028d6e:	6023      	str	r3, [r4, #0]
90028d70:	bd38      	pop	{r3, r4, r5, pc}
90028d72:	bf00      	nop
90028d74:	2402277c 	.word	0x2402277c

90028d78 <_getpid_r>:
90028d78:	f7db bce6 	b.w	90004748 <_getpid>

90028d7c <_sbrk_r>:
90028d7c:	b538      	push	{r3, r4, r5, lr}
90028d7e:	4d06      	ldr	r5, [pc, #24]	@ (90028d98 <_sbrk_r+0x1c>)
90028d80:	2300      	movs	r3, #0
90028d82:	4604      	mov	r4, r0
90028d84:	4608      	mov	r0, r1
90028d86:	602b      	str	r3, [r5, #0]
90028d88:	f7db fd1a 	bl	900047c0 <_sbrk>
90028d8c:	1c43      	adds	r3, r0, #1
90028d8e:	d102      	bne.n	90028d96 <_sbrk_r+0x1a>
90028d90:	682b      	ldr	r3, [r5, #0]
90028d92:	b103      	cbz	r3, 90028d96 <_sbrk_r+0x1a>
90028d94:	6023      	str	r3, [r4, #0]
90028d96:	bd38      	pop	{r3, r4, r5, pc}
90028d98:	2402277c 	.word	0x2402277c

90028d9c <_write_r>:
90028d9c:	b538      	push	{r3, r4, r5, lr}
90028d9e:	4d07      	ldr	r5, [pc, #28]	@ (90028dbc <_write_r+0x20>)
90028da0:	4604      	mov	r4, r0
90028da2:	4608      	mov	r0, r1
90028da4:	4611      	mov	r1, r2
90028da6:	2200      	movs	r2, #0
90028da8:	602a      	str	r2, [r5, #0]
90028daa:	461a      	mov	r2, r3
90028dac:	f7db fcec 	bl	90004788 <_write>
90028db0:	1c43      	adds	r3, r0, #1
90028db2:	d102      	bne.n	90028dba <_write_r+0x1e>
90028db4:	682b      	ldr	r3, [r5, #0]
90028db6:	b103      	cbz	r3, 90028dba <_write_r+0x1e>
90028db8:	6023      	str	r3, [r4, #0]
90028dba:	bd38      	pop	{r3, r4, r5, pc}
90028dbc:	2402277c 	.word	0x2402277c

90028dc0 <__errno>:
90028dc0:	4b01      	ldr	r3, [pc, #4]	@ (90028dc8 <__errno+0x8>)
90028dc2:	6818      	ldr	r0, [r3, #0]
90028dc4:	4770      	bx	lr
90028dc6:	bf00      	nop
90028dc8:	24000124 	.word	0x24000124

90028dcc <__libc_init_array>:
90028dcc:	b570      	push	{r4, r5, r6, lr}
90028dce:	4d0d      	ldr	r5, [pc, #52]	@ (90028e04 <__libc_init_array+0x38>)
90028dd0:	4c0d      	ldr	r4, [pc, #52]	@ (90028e08 <__libc_init_array+0x3c>)
90028dd2:	1b64      	subs	r4, r4, r5
90028dd4:	10a4      	asrs	r4, r4, #2
90028dd6:	2600      	movs	r6, #0
90028dd8:	42a6      	cmp	r6, r4
90028dda:	d109      	bne.n	90028df0 <__libc_init_array+0x24>
90028ddc:	4d0b      	ldr	r5, [pc, #44]	@ (90028e0c <__libc_init_array+0x40>)
90028dde:	4c0c      	ldr	r4, [pc, #48]	@ (90028e10 <__libc_init_array+0x44>)
90028de0:	f000 fcd0 	bl	90029784 <_init>
90028de4:	1b64      	subs	r4, r4, r5
90028de6:	10a4      	asrs	r4, r4, #2
90028de8:	2600      	movs	r6, #0
90028dea:	42a6      	cmp	r6, r4
90028dec:	d105      	bne.n	90028dfa <__libc_init_array+0x2e>
90028dee:	bd70      	pop	{r4, r5, r6, pc}
90028df0:	f855 3b04 	ldr.w	r3, [r5], #4
90028df4:	4798      	blx	r3
90028df6:	3601      	adds	r6, #1
90028df8:	e7ee      	b.n	90028dd8 <__libc_init_array+0xc>
90028dfa:	f855 3b04 	ldr.w	r3, [r5], #4
90028dfe:	4798      	blx	r3
90028e00:	3601      	adds	r6, #1
90028e02:	e7f2      	b.n	90028dea <__libc_init_array+0x1e>
90028e04:	9002e2d4 	.word	0x9002e2d4
90028e08:	9002e2d4 	.word	0x9002e2d4
90028e0c:	9002e2d4 	.word	0x9002e2d4
90028e10:	9002e2ec 	.word	0x9002e2ec

90028e14 <__retarget_lock_init_recursive>:
90028e14:	4770      	bx	lr

90028e16 <__retarget_lock_acquire_recursive>:
90028e16:	4770      	bx	lr

90028e18 <__retarget_lock_release_recursive>:
90028e18:	4770      	bx	lr

90028e1a <memcpy>:
90028e1a:	440a      	add	r2, r1
90028e1c:	4291      	cmp	r1, r2
90028e1e:	f100 33ff 	add.w	r3, r0, #4294967295
90028e22:	d100      	bne.n	90028e26 <memcpy+0xc>
90028e24:	4770      	bx	lr
90028e26:	b510      	push	{r4, lr}
90028e28:	f811 4b01 	ldrb.w	r4, [r1], #1
90028e2c:	f803 4f01 	strb.w	r4, [r3, #1]!
90028e30:	4291      	cmp	r1, r2
90028e32:	d1f9      	bne.n	90028e28 <memcpy+0xe>
90028e34:	bd10      	pop	{r4, pc}
	...

90028e38 <__register_exitproc>:
90028e38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90028e3c:	4d27      	ldr	r5, [pc, #156]	@ (90028edc <__register_exitproc+0xa4>)
90028e3e:	4607      	mov	r7, r0
90028e40:	6828      	ldr	r0, [r5, #0]
90028e42:	4691      	mov	r9, r2
90028e44:	460e      	mov	r6, r1
90028e46:	4698      	mov	r8, r3
90028e48:	f7ff ffe5 	bl	90028e16 <__retarget_lock_acquire_recursive>
90028e4c:	4a24      	ldr	r2, [pc, #144]	@ (90028ee0 <__register_exitproc+0xa8>)
90028e4e:	6814      	ldr	r4, [r2, #0]
90028e50:	b93c      	cbnz	r4, 90028e62 <__register_exitproc+0x2a>
90028e52:	4b24      	ldr	r3, [pc, #144]	@ (90028ee4 <__register_exitproc+0xac>)
90028e54:	6013      	str	r3, [r2, #0]
90028e56:	4a24      	ldr	r2, [pc, #144]	@ (90028ee8 <__register_exitproc+0xb0>)
90028e58:	b112      	cbz	r2, 90028e60 <__register_exitproc+0x28>
90028e5a:	6812      	ldr	r2, [r2, #0]
90028e5c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
90028e60:	4c20      	ldr	r4, [pc, #128]	@ (90028ee4 <__register_exitproc+0xac>)
90028e62:	6863      	ldr	r3, [r4, #4]
90028e64:	2b1f      	cmp	r3, #31
90028e66:	dd06      	ble.n	90028e76 <__register_exitproc+0x3e>
90028e68:	6828      	ldr	r0, [r5, #0]
90028e6a:	f7ff ffd5 	bl	90028e18 <__retarget_lock_release_recursive>
90028e6e:	f04f 30ff 	mov.w	r0, #4294967295
90028e72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90028e76:	b32f      	cbz	r7, 90028ec4 <__register_exitproc+0x8c>
90028e78:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
90028e7c:	b968      	cbnz	r0, 90028e9a <__register_exitproc+0x62>
90028e7e:	4b1b      	ldr	r3, [pc, #108]	@ (90028eec <__register_exitproc+0xb4>)
90028e80:	2b00      	cmp	r3, #0
90028e82:	d0f1      	beq.n	90028e68 <__register_exitproc+0x30>
90028e84:	f44f 7084 	mov.w	r0, #264	@ 0x108
90028e88:	f7ff fc6e 	bl	90028768 <malloc>
90028e8c:	2800      	cmp	r0, #0
90028e8e:	d0eb      	beq.n	90028e68 <__register_exitproc+0x30>
90028e90:	2300      	movs	r3, #0
90028e92:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
90028e96:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
90028e9a:	6863      	ldr	r3, [r4, #4]
90028e9c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90028ea0:	2201      	movs	r2, #1
90028ea2:	409a      	lsls	r2, r3
90028ea4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90028ea8:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
90028eac:	4313      	orrs	r3, r2
90028eae:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
90028eb2:	2f02      	cmp	r7, #2
90028eb4:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
90028eb8:	bf02      	ittt	eq
90028eba:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
90028ebe:	4313      	orreq	r3, r2
90028ec0:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
90028ec4:	6863      	ldr	r3, [r4, #4]
90028ec6:	6828      	ldr	r0, [r5, #0]
90028ec8:	1c5a      	adds	r2, r3, #1
90028eca:	3302      	adds	r3, #2
90028ecc:	6062      	str	r2, [r4, #4]
90028ece:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
90028ed2:	f7ff ffa1 	bl	90028e18 <__retarget_lock_release_recursive>
90028ed6:	2000      	movs	r0, #0
90028ed8:	e7cb      	b.n	90028e72 <__register_exitproc+0x3a>
90028eda:	bf00      	nop
90028edc:	24000174 	.word	0x24000174
90028ee0:	24022810 	.word	0x24022810
90028ee4:	24022784 	.word	0x24022784
90028ee8:	9002df9c 	.word	0x9002df9c
90028eec:	90028769 	.word	0x90028769

90028ef0 <_free_r>:
90028ef0:	b538      	push	{r3, r4, r5, lr}
90028ef2:	4605      	mov	r5, r0
90028ef4:	2900      	cmp	r1, #0
90028ef6:	d041      	beq.n	90028f7c <_free_r+0x8c>
90028ef8:	f851 3c04 	ldr.w	r3, [r1, #-4]
90028efc:	1f0c      	subs	r4, r1, #4
90028efe:	2b00      	cmp	r3, #0
90028f00:	bfb8      	it	lt
90028f02:	18e4      	addlt	r4, r4, r3
90028f04:	f7ff fce2 	bl	900288cc <__malloc_lock>
90028f08:	4a1d      	ldr	r2, [pc, #116]	@ (90028f80 <_free_r+0x90>)
90028f0a:	6813      	ldr	r3, [r2, #0]
90028f0c:	b933      	cbnz	r3, 90028f1c <_free_r+0x2c>
90028f0e:	6063      	str	r3, [r4, #4]
90028f10:	6014      	str	r4, [r2, #0]
90028f12:	4628      	mov	r0, r5
90028f14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90028f18:	f7ff bcde 	b.w	900288d8 <__malloc_unlock>
90028f1c:	42a3      	cmp	r3, r4
90028f1e:	d908      	bls.n	90028f32 <_free_r+0x42>
90028f20:	6820      	ldr	r0, [r4, #0]
90028f22:	1821      	adds	r1, r4, r0
90028f24:	428b      	cmp	r3, r1
90028f26:	bf01      	itttt	eq
90028f28:	6819      	ldreq	r1, [r3, #0]
90028f2a:	685b      	ldreq	r3, [r3, #4]
90028f2c:	1809      	addeq	r1, r1, r0
90028f2e:	6021      	streq	r1, [r4, #0]
90028f30:	e7ed      	b.n	90028f0e <_free_r+0x1e>
90028f32:	461a      	mov	r2, r3
90028f34:	685b      	ldr	r3, [r3, #4]
90028f36:	b10b      	cbz	r3, 90028f3c <_free_r+0x4c>
90028f38:	42a3      	cmp	r3, r4
90028f3a:	d9fa      	bls.n	90028f32 <_free_r+0x42>
90028f3c:	6811      	ldr	r1, [r2, #0]
90028f3e:	1850      	adds	r0, r2, r1
90028f40:	42a0      	cmp	r0, r4
90028f42:	d10b      	bne.n	90028f5c <_free_r+0x6c>
90028f44:	6820      	ldr	r0, [r4, #0]
90028f46:	4401      	add	r1, r0
90028f48:	1850      	adds	r0, r2, r1
90028f4a:	4283      	cmp	r3, r0
90028f4c:	6011      	str	r1, [r2, #0]
90028f4e:	d1e0      	bne.n	90028f12 <_free_r+0x22>
90028f50:	6818      	ldr	r0, [r3, #0]
90028f52:	685b      	ldr	r3, [r3, #4]
90028f54:	6053      	str	r3, [r2, #4]
90028f56:	4408      	add	r0, r1
90028f58:	6010      	str	r0, [r2, #0]
90028f5a:	e7da      	b.n	90028f12 <_free_r+0x22>
90028f5c:	d902      	bls.n	90028f64 <_free_r+0x74>
90028f5e:	230c      	movs	r3, #12
90028f60:	602b      	str	r3, [r5, #0]
90028f62:	e7d6      	b.n	90028f12 <_free_r+0x22>
90028f64:	6820      	ldr	r0, [r4, #0]
90028f66:	1821      	adds	r1, r4, r0
90028f68:	428b      	cmp	r3, r1
90028f6a:	bf04      	itt	eq
90028f6c:	6819      	ldreq	r1, [r3, #0]
90028f6e:	685b      	ldreq	r3, [r3, #4]
90028f70:	6063      	str	r3, [r4, #4]
90028f72:	bf04      	itt	eq
90028f74:	1809      	addeq	r1, r1, r0
90028f76:	6021      	streq	r1, [r4, #0]
90028f78:	6054      	str	r4, [r2, #4]
90028f7a:	e7ca      	b.n	90028f12 <_free_r+0x22>
90028f7c:	bd38      	pop	{r3, r4, r5, pc}
90028f7e:	bf00      	nop
90028f80:	2402263c 	.word	0x2402263c

90028f84 <__sfputc_r>:
90028f84:	6893      	ldr	r3, [r2, #8]
90028f86:	3b01      	subs	r3, #1
90028f88:	2b00      	cmp	r3, #0
90028f8a:	b410      	push	{r4}
90028f8c:	6093      	str	r3, [r2, #8]
90028f8e:	da08      	bge.n	90028fa2 <__sfputc_r+0x1e>
90028f90:	6994      	ldr	r4, [r2, #24]
90028f92:	42a3      	cmp	r3, r4
90028f94:	db01      	blt.n	90028f9a <__sfputc_r+0x16>
90028f96:	290a      	cmp	r1, #10
90028f98:	d103      	bne.n	90028fa2 <__sfputc_r+0x1e>
90028f9a:	f85d 4b04 	ldr.w	r4, [sp], #4
90028f9e:	f7ff bdc6 	b.w	90028b2e <__swbuf_r>
90028fa2:	6813      	ldr	r3, [r2, #0]
90028fa4:	1c58      	adds	r0, r3, #1
90028fa6:	6010      	str	r0, [r2, #0]
90028fa8:	7019      	strb	r1, [r3, #0]
90028faa:	4608      	mov	r0, r1
90028fac:	f85d 4b04 	ldr.w	r4, [sp], #4
90028fb0:	4770      	bx	lr

90028fb2 <__sfputs_r>:
90028fb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028fb4:	4606      	mov	r6, r0
90028fb6:	460f      	mov	r7, r1
90028fb8:	4614      	mov	r4, r2
90028fba:	18d5      	adds	r5, r2, r3
90028fbc:	42ac      	cmp	r4, r5
90028fbe:	d101      	bne.n	90028fc4 <__sfputs_r+0x12>
90028fc0:	2000      	movs	r0, #0
90028fc2:	e007      	b.n	90028fd4 <__sfputs_r+0x22>
90028fc4:	f814 1b01 	ldrb.w	r1, [r4], #1
90028fc8:	463a      	mov	r2, r7
90028fca:	4630      	mov	r0, r6
90028fcc:	f7ff ffda 	bl	90028f84 <__sfputc_r>
90028fd0:	1c43      	adds	r3, r0, #1
90028fd2:	d1f3      	bne.n	90028fbc <__sfputs_r+0xa>
90028fd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90028fd8 <_vfiprintf_r>:
90028fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028fdc:	460d      	mov	r5, r1
90028fde:	b09d      	sub	sp, #116	@ 0x74
90028fe0:	4614      	mov	r4, r2
90028fe2:	4698      	mov	r8, r3
90028fe4:	4606      	mov	r6, r0
90028fe6:	b118      	cbz	r0, 90028ff0 <_vfiprintf_r+0x18>
90028fe8:	6a03      	ldr	r3, [r0, #32]
90028fea:	b90b      	cbnz	r3, 90028ff0 <_vfiprintf_r+0x18>
90028fec:	f7ff fd14 	bl	90028a18 <__sinit>
90028ff0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90028ff2:	07d9      	lsls	r1, r3, #31
90028ff4:	d405      	bmi.n	90029002 <_vfiprintf_r+0x2a>
90028ff6:	89ab      	ldrh	r3, [r5, #12]
90028ff8:	059a      	lsls	r2, r3, #22
90028ffa:	d402      	bmi.n	90029002 <_vfiprintf_r+0x2a>
90028ffc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90028ffe:	f7ff ff0a 	bl	90028e16 <__retarget_lock_acquire_recursive>
90029002:	89ab      	ldrh	r3, [r5, #12]
90029004:	071b      	lsls	r3, r3, #28
90029006:	d501      	bpl.n	9002900c <_vfiprintf_r+0x34>
90029008:	692b      	ldr	r3, [r5, #16]
9002900a:	b99b      	cbnz	r3, 90029034 <_vfiprintf_r+0x5c>
9002900c:	4629      	mov	r1, r5
9002900e:	4630      	mov	r0, r6
90029010:	f7ff fdcc 	bl	90028bac <__swsetup_r>
90029014:	b170      	cbz	r0, 90029034 <_vfiprintf_r+0x5c>
90029016:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90029018:	07dc      	lsls	r4, r3, #31
9002901a:	d504      	bpl.n	90029026 <_vfiprintf_r+0x4e>
9002901c:	f04f 30ff 	mov.w	r0, #4294967295
90029020:	b01d      	add	sp, #116	@ 0x74
90029022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029026:	89ab      	ldrh	r3, [r5, #12]
90029028:	0598      	lsls	r0, r3, #22
9002902a:	d4f7      	bmi.n	9002901c <_vfiprintf_r+0x44>
9002902c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002902e:	f7ff fef3 	bl	90028e18 <__retarget_lock_release_recursive>
90029032:	e7f3      	b.n	9002901c <_vfiprintf_r+0x44>
90029034:	2300      	movs	r3, #0
90029036:	9309      	str	r3, [sp, #36]	@ 0x24
90029038:	2320      	movs	r3, #32
9002903a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002903e:	f8cd 800c 	str.w	r8, [sp, #12]
90029042:	2330      	movs	r3, #48	@ 0x30
90029044:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 900291f4 <_vfiprintf_r+0x21c>
90029048:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002904c:	f04f 0901 	mov.w	r9, #1
90029050:	4623      	mov	r3, r4
90029052:	469a      	mov	sl, r3
90029054:	f813 2b01 	ldrb.w	r2, [r3], #1
90029058:	b10a      	cbz	r2, 9002905e <_vfiprintf_r+0x86>
9002905a:	2a25      	cmp	r2, #37	@ 0x25
9002905c:	d1f9      	bne.n	90029052 <_vfiprintf_r+0x7a>
9002905e:	ebba 0b04 	subs.w	fp, sl, r4
90029062:	d00b      	beq.n	9002907c <_vfiprintf_r+0xa4>
90029064:	465b      	mov	r3, fp
90029066:	4622      	mov	r2, r4
90029068:	4629      	mov	r1, r5
9002906a:	4630      	mov	r0, r6
9002906c:	f7ff ffa1 	bl	90028fb2 <__sfputs_r>
90029070:	3001      	adds	r0, #1
90029072:	f000 80a7 	beq.w	900291c4 <_vfiprintf_r+0x1ec>
90029076:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90029078:	445a      	add	r2, fp
9002907a:	9209      	str	r2, [sp, #36]	@ 0x24
9002907c:	f89a 3000 	ldrb.w	r3, [sl]
90029080:	2b00      	cmp	r3, #0
90029082:	f000 809f 	beq.w	900291c4 <_vfiprintf_r+0x1ec>
90029086:	2300      	movs	r3, #0
90029088:	f04f 32ff 	mov.w	r2, #4294967295
9002908c:	e9cd 2305 	strd	r2, r3, [sp, #20]
90029090:	f10a 0a01 	add.w	sl, sl, #1
90029094:	9304      	str	r3, [sp, #16]
90029096:	9307      	str	r3, [sp, #28]
90029098:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002909c:	931a      	str	r3, [sp, #104]	@ 0x68
9002909e:	4654      	mov	r4, sl
900290a0:	2205      	movs	r2, #5
900290a2:	f814 1b01 	ldrb.w	r1, [r4], #1
900290a6:	4853      	ldr	r0, [pc, #332]	@ (900291f4 <_vfiprintf_r+0x21c>)
900290a8:	f7d7 f91a 	bl	900002e0 <memchr>
900290ac:	9a04      	ldr	r2, [sp, #16]
900290ae:	b9d8      	cbnz	r0, 900290e8 <_vfiprintf_r+0x110>
900290b0:	06d1      	lsls	r1, r2, #27
900290b2:	bf44      	itt	mi
900290b4:	2320      	movmi	r3, #32
900290b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
900290ba:	0713      	lsls	r3, r2, #28
900290bc:	bf44      	itt	mi
900290be:	232b      	movmi	r3, #43	@ 0x2b
900290c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
900290c4:	f89a 3000 	ldrb.w	r3, [sl]
900290c8:	2b2a      	cmp	r3, #42	@ 0x2a
900290ca:	d015      	beq.n	900290f8 <_vfiprintf_r+0x120>
900290cc:	9a07      	ldr	r2, [sp, #28]
900290ce:	4654      	mov	r4, sl
900290d0:	2000      	movs	r0, #0
900290d2:	f04f 0c0a 	mov.w	ip, #10
900290d6:	4621      	mov	r1, r4
900290d8:	f811 3b01 	ldrb.w	r3, [r1], #1
900290dc:	3b30      	subs	r3, #48	@ 0x30
900290de:	2b09      	cmp	r3, #9
900290e0:	d94b      	bls.n	9002917a <_vfiprintf_r+0x1a2>
900290e2:	b1b0      	cbz	r0, 90029112 <_vfiprintf_r+0x13a>
900290e4:	9207      	str	r2, [sp, #28]
900290e6:	e014      	b.n	90029112 <_vfiprintf_r+0x13a>
900290e8:	eba0 0308 	sub.w	r3, r0, r8
900290ec:	fa09 f303 	lsl.w	r3, r9, r3
900290f0:	4313      	orrs	r3, r2
900290f2:	9304      	str	r3, [sp, #16]
900290f4:	46a2      	mov	sl, r4
900290f6:	e7d2      	b.n	9002909e <_vfiprintf_r+0xc6>
900290f8:	9b03      	ldr	r3, [sp, #12]
900290fa:	1d19      	adds	r1, r3, #4
900290fc:	681b      	ldr	r3, [r3, #0]
900290fe:	9103      	str	r1, [sp, #12]
90029100:	2b00      	cmp	r3, #0
90029102:	bfbb      	ittet	lt
90029104:	425b      	neglt	r3, r3
90029106:	f042 0202 	orrlt.w	r2, r2, #2
9002910a:	9307      	strge	r3, [sp, #28]
9002910c:	9307      	strlt	r3, [sp, #28]
9002910e:	bfb8      	it	lt
90029110:	9204      	strlt	r2, [sp, #16]
90029112:	7823      	ldrb	r3, [r4, #0]
90029114:	2b2e      	cmp	r3, #46	@ 0x2e
90029116:	d10a      	bne.n	9002912e <_vfiprintf_r+0x156>
90029118:	7863      	ldrb	r3, [r4, #1]
9002911a:	2b2a      	cmp	r3, #42	@ 0x2a
9002911c:	d132      	bne.n	90029184 <_vfiprintf_r+0x1ac>
9002911e:	9b03      	ldr	r3, [sp, #12]
90029120:	1d1a      	adds	r2, r3, #4
90029122:	681b      	ldr	r3, [r3, #0]
90029124:	9203      	str	r2, [sp, #12]
90029126:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002912a:	3402      	adds	r4, #2
9002912c:	9305      	str	r3, [sp, #20]
9002912e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 90029204 <_vfiprintf_r+0x22c>
90029132:	7821      	ldrb	r1, [r4, #0]
90029134:	2203      	movs	r2, #3
90029136:	4650      	mov	r0, sl
90029138:	f7d7 f8d2 	bl	900002e0 <memchr>
9002913c:	b138      	cbz	r0, 9002914e <_vfiprintf_r+0x176>
9002913e:	9b04      	ldr	r3, [sp, #16]
90029140:	eba0 000a 	sub.w	r0, r0, sl
90029144:	2240      	movs	r2, #64	@ 0x40
90029146:	4082      	lsls	r2, r0
90029148:	4313      	orrs	r3, r2
9002914a:	3401      	adds	r4, #1
9002914c:	9304      	str	r3, [sp, #16]
9002914e:	f814 1b01 	ldrb.w	r1, [r4], #1
90029152:	4829      	ldr	r0, [pc, #164]	@ (900291f8 <_vfiprintf_r+0x220>)
90029154:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
90029158:	2206      	movs	r2, #6
9002915a:	f7d7 f8c1 	bl	900002e0 <memchr>
9002915e:	2800      	cmp	r0, #0
90029160:	d03f      	beq.n	900291e2 <_vfiprintf_r+0x20a>
90029162:	4b26      	ldr	r3, [pc, #152]	@ (900291fc <_vfiprintf_r+0x224>)
90029164:	bb1b      	cbnz	r3, 900291ae <_vfiprintf_r+0x1d6>
90029166:	9b03      	ldr	r3, [sp, #12]
90029168:	3307      	adds	r3, #7
9002916a:	f023 0307 	bic.w	r3, r3, #7
9002916e:	3308      	adds	r3, #8
90029170:	9303      	str	r3, [sp, #12]
90029172:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029174:	443b      	add	r3, r7
90029176:	9309      	str	r3, [sp, #36]	@ 0x24
90029178:	e76a      	b.n	90029050 <_vfiprintf_r+0x78>
9002917a:	fb0c 3202 	mla	r2, ip, r2, r3
9002917e:	460c      	mov	r4, r1
90029180:	2001      	movs	r0, #1
90029182:	e7a8      	b.n	900290d6 <_vfiprintf_r+0xfe>
90029184:	2300      	movs	r3, #0
90029186:	3401      	adds	r4, #1
90029188:	9305      	str	r3, [sp, #20]
9002918a:	4619      	mov	r1, r3
9002918c:	f04f 0c0a 	mov.w	ip, #10
90029190:	4620      	mov	r0, r4
90029192:	f810 2b01 	ldrb.w	r2, [r0], #1
90029196:	3a30      	subs	r2, #48	@ 0x30
90029198:	2a09      	cmp	r2, #9
9002919a:	d903      	bls.n	900291a4 <_vfiprintf_r+0x1cc>
9002919c:	2b00      	cmp	r3, #0
9002919e:	d0c6      	beq.n	9002912e <_vfiprintf_r+0x156>
900291a0:	9105      	str	r1, [sp, #20]
900291a2:	e7c4      	b.n	9002912e <_vfiprintf_r+0x156>
900291a4:	fb0c 2101 	mla	r1, ip, r1, r2
900291a8:	4604      	mov	r4, r0
900291aa:	2301      	movs	r3, #1
900291ac:	e7f0      	b.n	90029190 <_vfiprintf_r+0x1b8>
900291ae:	ab03      	add	r3, sp, #12
900291b0:	9300      	str	r3, [sp, #0]
900291b2:	462a      	mov	r2, r5
900291b4:	4b12      	ldr	r3, [pc, #72]	@ (90029200 <_vfiprintf_r+0x228>)
900291b6:	a904      	add	r1, sp, #16
900291b8:	4630      	mov	r0, r6
900291ba:	f3af 8000 	nop.w
900291be:	4607      	mov	r7, r0
900291c0:	1c78      	adds	r0, r7, #1
900291c2:	d1d6      	bne.n	90029172 <_vfiprintf_r+0x19a>
900291c4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
900291c6:	07d9      	lsls	r1, r3, #31
900291c8:	d405      	bmi.n	900291d6 <_vfiprintf_r+0x1fe>
900291ca:	89ab      	ldrh	r3, [r5, #12]
900291cc:	059a      	lsls	r2, r3, #22
900291ce:	d402      	bmi.n	900291d6 <_vfiprintf_r+0x1fe>
900291d0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
900291d2:	f7ff fe21 	bl	90028e18 <__retarget_lock_release_recursive>
900291d6:	89ab      	ldrh	r3, [r5, #12]
900291d8:	065b      	lsls	r3, r3, #25
900291da:	f53f af1f 	bmi.w	9002901c <_vfiprintf_r+0x44>
900291de:	9809      	ldr	r0, [sp, #36]	@ 0x24
900291e0:	e71e      	b.n	90029020 <_vfiprintf_r+0x48>
900291e2:	ab03      	add	r3, sp, #12
900291e4:	9300      	str	r3, [sp, #0]
900291e6:	462a      	mov	r2, r5
900291e8:	4b05      	ldr	r3, [pc, #20]	@ (90029200 <_vfiprintf_r+0x228>)
900291ea:	a904      	add	r1, sp, #16
900291ec:	4630      	mov	r0, r6
900291ee:	f000 f879 	bl	900292e4 <_printf_i>
900291f2:	e7e4      	b.n	900291be <_vfiprintf_r+0x1e6>
900291f4:	9002dfa0 	.word	0x9002dfa0
900291f8:	9002dfaa 	.word	0x9002dfaa
900291fc:	00000000 	.word	0x00000000
90029200:	90028fb3 	.word	0x90028fb3
90029204:	9002dfa6 	.word	0x9002dfa6

90029208 <_printf_common>:
90029208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002920c:	4616      	mov	r6, r2
9002920e:	4698      	mov	r8, r3
90029210:	688a      	ldr	r2, [r1, #8]
90029212:	690b      	ldr	r3, [r1, #16]
90029214:	f8dd 9020 	ldr.w	r9, [sp, #32]
90029218:	4293      	cmp	r3, r2
9002921a:	bfb8      	it	lt
9002921c:	4613      	movlt	r3, r2
9002921e:	6033      	str	r3, [r6, #0]
90029220:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
90029224:	4607      	mov	r7, r0
90029226:	460c      	mov	r4, r1
90029228:	b10a      	cbz	r2, 9002922e <_printf_common+0x26>
9002922a:	3301      	adds	r3, #1
9002922c:	6033      	str	r3, [r6, #0]
9002922e:	6823      	ldr	r3, [r4, #0]
90029230:	0699      	lsls	r1, r3, #26
90029232:	bf42      	ittt	mi
90029234:	6833      	ldrmi	r3, [r6, #0]
90029236:	3302      	addmi	r3, #2
90029238:	6033      	strmi	r3, [r6, #0]
9002923a:	6825      	ldr	r5, [r4, #0]
9002923c:	f015 0506 	ands.w	r5, r5, #6
90029240:	d106      	bne.n	90029250 <_printf_common+0x48>
90029242:	f104 0a19 	add.w	sl, r4, #25
90029246:	68e3      	ldr	r3, [r4, #12]
90029248:	6832      	ldr	r2, [r6, #0]
9002924a:	1a9b      	subs	r3, r3, r2
9002924c:	42ab      	cmp	r3, r5
9002924e:	dc26      	bgt.n	9002929e <_printf_common+0x96>
90029250:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
90029254:	6822      	ldr	r2, [r4, #0]
90029256:	3b00      	subs	r3, #0
90029258:	bf18      	it	ne
9002925a:	2301      	movne	r3, #1
9002925c:	0692      	lsls	r2, r2, #26
9002925e:	d42b      	bmi.n	900292b8 <_printf_common+0xb0>
90029260:	f104 0243 	add.w	r2, r4, #67	@ 0x43
90029264:	4641      	mov	r1, r8
90029266:	4638      	mov	r0, r7
90029268:	47c8      	blx	r9
9002926a:	3001      	adds	r0, #1
9002926c:	d01e      	beq.n	900292ac <_printf_common+0xa4>
9002926e:	6823      	ldr	r3, [r4, #0]
90029270:	6922      	ldr	r2, [r4, #16]
90029272:	f003 0306 	and.w	r3, r3, #6
90029276:	2b04      	cmp	r3, #4
90029278:	bf02      	ittt	eq
9002927a:	68e5      	ldreq	r5, [r4, #12]
9002927c:	6833      	ldreq	r3, [r6, #0]
9002927e:	1aed      	subeq	r5, r5, r3
90029280:	68a3      	ldr	r3, [r4, #8]
90029282:	bf0c      	ite	eq
90029284:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90029288:	2500      	movne	r5, #0
9002928a:	4293      	cmp	r3, r2
9002928c:	bfc4      	itt	gt
9002928e:	1a9b      	subgt	r3, r3, r2
90029290:	18ed      	addgt	r5, r5, r3
90029292:	2600      	movs	r6, #0
90029294:	341a      	adds	r4, #26
90029296:	42b5      	cmp	r5, r6
90029298:	d11a      	bne.n	900292d0 <_printf_common+0xc8>
9002929a:	2000      	movs	r0, #0
9002929c:	e008      	b.n	900292b0 <_printf_common+0xa8>
9002929e:	2301      	movs	r3, #1
900292a0:	4652      	mov	r2, sl
900292a2:	4641      	mov	r1, r8
900292a4:	4638      	mov	r0, r7
900292a6:	47c8      	blx	r9
900292a8:	3001      	adds	r0, #1
900292aa:	d103      	bne.n	900292b4 <_printf_common+0xac>
900292ac:	f04f 30ff 	mov.w	r0, #4294967295
900292b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900292b4:	3501      	adds	r5, #1
900292b6:	e7c6      	b.n	90029246 <_printf_common+0x3e>
900292b8:	18e1      	adds	r1, r4, r3
900292ba:	1c5a      	adds	r2, r3, #1
900292bc:	2030      	movs	r0, #48	@ 0x30
900292be:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
900292c2:	4422      	add	r2, r4
900292c4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
900292c8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
900292cc:	3302      	adds	r3, #2
900292ce:	e7c7      	b.n	90029260 <_printf_common+0x58>
900292d0:	2301      	movs	r3, #1
900292d2:	4622      	mov	r2, r4
900292d4:	4641      	mov	r1, r8
900292d6:	4638      	mov	r0, r7
900292d8:	47c8      	blx	r9
900292da:	3001      	adds	r0, #1
900292dc:	d0e6      	beq.n	900292ac <_printf_common+0xa4>
900292de:	3601      	adds	r6, #1
900292e0:	e7d9      	b.n	90029296 <_printf_common+0x8e>
	...

900292e4 <_printf_i>:
900292e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
900292e8:	7e0f      	ldrb	r7, [r1, #24]
900292ea:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
900292ec:	2f78      	cmp	r7, #120	@ 0x78
900292ee:	4691      	mov	r9, r2
900292f0:	4680      	mov	r8, r0
900292f2:	460c      	mov	r4, r1
900292f4:	469a      	mov	sl, r3
900292f6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
900292fa:	d807      	bhi.n	9002930c <_printf_i+0x28>
900292fc:	2f62      	cmp	r7, #98	@ 0x62
900292fe:	d80a      	bhi.n	90029316 <_printf_i+0x32>
90029300:	2f00      	cmp	r7, #0
90029302:	f000 80d2 	beq.w	900294aa <_printf_i+0x1c6>
90029306:	2f58      	cmp	r7, #88	@ 0x58
90029308:	f000 80b9 	beq.w	9002947e <_printf_i+0x19a>
9002930c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
90029310:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
90029314:	e03a      	b.n	9002938c <_printf_i+0xa8>
90029316:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002931a:	2b15      	cmp	r3, #21
9002931c:	d8f6      	bhi.n	9002930c <_printf_i+0x28>
9002931e:	a101      	add	r1, pc, #4	@ (adr r1, 90029324 <_printf_i+0x40>)
90029320:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90029324:	9002937d 	.word	0x9002937d
90029328:	90029391 	.word	0x90029391
9002932c:	9002930d 	.word	0x9002930d
90029330:	9002930d 	.word	0x9002930d
90029334:	9002930d 	.word	0x9002930d
90029338:	9002930d 	.word	0x9002930d
9002933c:	90029391 	.word	0x90029391
90029340:	9002930d 	.word	0x9002930d
90029344:	9002930d 	.word	0x9002930d
90029348:	9002930d 	.word	0x9002930d
9002934c:	9002930d 	.word	0x9002930d
90029350:	90029491 	.word	0x90029491
90029354:	900293bb 	.word	0x900293bb
90029358:	9002944b 	.word	0x9002944b
9002935c:	9002930d 	.word	0x9002930d
90029360:	9002930d 	.word	0x9002930d
90029364:	900294b3 	.word	0x900294b3
90029368:	9002930d 	.word	0x9002930d
9002936c:	900293bb 	.word	0x900293bb
90029370:	9002930d 	.word	0x9002930d
90029374:	9002930d 	.word	0x9002930d
90029378:	90029453 	.word	0x90029453
9002937c:	6833      	ldr	r3, [r6, #0]
9002937e:	1d1a      	adds	r2, r3, #4
90029380:	681b      	ldr	r3, [r3, #0]
90029382:	6032      	str	r2, [r6, #0]
90029384:	f104 0642 	add.w	r6, r4, #66	@ 0x42
90029388:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002938c:	2301      	movs	r3, #1
9002938e:	e09d      	b.n	900294cc <_printf_i+0x1e8>
90029390:	6833      	ldr	r3, [r6, #0]
90029392:	6820      	ldr	r0, [r4, #0]
90029394:	1d19      	adds	r1, r3, #4
90029396:	6031      	str	r1, [r6, #0]
90029398:	0606      	lsls	r6, r0, #24
9002939a:	d501      	bpl.n	900293a0 <_printf_i+0xbc>
9002939c:	681d      	ldr	r5, [r3, #0]
9002939e:	e003      	b.n	900293a8 <_printf_i+0xc4>
900293a0:	0645      	lsls	r5, r0, #25
900293a2:	d5fb      	bpl.n	9002939c <_printf_i+0xb8>
900293a4:	f9b3 5000 	ldrsh.w	r5, [r3]
900293a8:	2d00      	cmp	r5, #0
900293aa:	da03      	bge.n	900293b4 <_printf_i+0xd0>
900293ac:	232d      	movs	r3, #45	@ 0x2d
900293ae:	426d      	negs	r5, r5
900293b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
900293b4:	4859      	ldr	r0, [pc, #356]	@ (9002951c <_printf_i+0x238>)
900293b6:	230a      	movs	r3, #10
900293b8:	e011      	b.n	900293de <_printf_i+0xfa>
900293ba:	6821      	ldr	r1, [r4, #0]
900293bc:	6833      	ldr	r3, [r6, #0]
900293be:	0608      	lsls	r0, r1, #24
900293c0:	f853 5b04 	ldr.w	r5, [r3], #4
900293c4:	d402      	bmi.n	900293cc <_printf_i+0xe8>
900293c6:	0649      	lsls	r1, r1, #25
900293c8:	bf48      	it	mi
900293ca:	b2ad      	uxthmi	r5, r5
900293cc:	2f6f      	cmp	r7, #111	@ 0x6f
900293ce:	4853      	ldr	r0, [pc, #332]	@ (9002951c <_printf_i+0x238>)
900293d0:	6033      	str	r3, [r6, #0]
900293d2:	bf14      	ite	ne
900293d4:	230a      	movne	r3, #10
900293d6:	2308      	moveq	r3, #8
900293d8:	2100      	movs	r1, #0
900293da:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
900293de:	6866      	ldr	r6, [r4, #4]
900293e0:	60a6      	str	r6, [r4, #8]
900293e2:	2e00      	cmp	r6, #0
900293e4:	bfa2      	ittt	ge
900293e6:	6821      	ldrge	r1, [r4, #0]
900293e8:	f021 0104 	bicge.w	r1, r1, #4
900293ec:	6021      	strge	r1, [r4, #0]
900293ee:	b90d      	cbnz	r5, 900293f4 <_printf_i+0x110>
900293f0:	2e00      	cmp	r6, #0
900293f2:	d04b      	beq.n	9002948c <_printf_i+0x1a8>
900293f4:	4616      	mov	r6, r2
900293f6:	fbb5 f1f3 	udiv	r1, r5, r3
900293fa:	fb03 5711 	mls	r7, r3, r1, r5
900293fe:	5dc7      	ldrb	r7, [r0, r7]
90029400:	f806 7d01 	strb.w	r7, [r6, #-1]!
90029404:	462f      	mov	r7, r5
90029406:	42bb      	cmp	r3, r7
90029408:	460d      	mov	r5, r1
9002940a:	d9f4      	bls.n	900293f6 <_printf_i+0x112>
9002940c:	2b08      	cmp	r3, #8
9002940e:	d10b      	bne.n	90029428 <_printf_i+0x144>
90029410:	6823      	ldr	r3, [r4, #0]
90029412:	07df      	lsls	r7, r3, #31
90029414:	d508      	bpl.n	90029428 <_printf_i+0x144>
90029416:	6923      	ldr	r3, [r4, #16]
90029418:	6861      	ldr	r1, [r4, #4]
9002941a:	4299      	cmp	r1, r3
9002941c:	bfde      	ittt	le
9002941e:	2330      	movle	r3, #48	@ 0x30
90029420:	f806 3c01 	strble.w	r3, [r6, #-1]
90029424:	f106 36ff 	addle.w	r6, r6, #4294967295
90029428:	1b92      	subs	r2, r2, r6
9002942a:	6122      	str	r2, [r4, #16]
9002942c:	f8cd a000 	str.w	sl, [sp]
90029430:	464b      	mov	r3, r9
90029432:	aa03      	add	r2, sp, #12
90029434:	4621      	mov	r1, r4
90029436:	4640      	mov	r0, r8
90029438:	f7ff fee6 	bl	90029208 <_printf_common>
9002943c:	3001      	adds	r0, #1
9002943e:	d14a      	bne.n	900294d6 <_printf_i+0x1f2>
90029440:	f04f 30ff 	mov.w	r0, #4294967295
90029444:	b004      	add	sp, #16
90029446:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002944a:	6823      	ldr	r3, [r4, #0]
9002944c:	f043 0320 	orr.w	r3, r3, #32
90029450:	6023      	str	r3, [r4, #0]
90029452:	4833      	ldr	r0, [pc, #204]	@ (90029520 <_printf_i+0x23c>)
90029454:	2778      	movs	r7, #120	@ 0x78
90029456:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002945a:	6823      	ldr	r3, [r4, #0]
9002945c:	6831      	ldr	r1, [r6, #0]
9002945e:	061f      	lsls	r7, r3, #24
90029460:	f851 5b04 	ldr.w	r5, [r1], #4
90029464:	d402      	bmi.n	9002946c <_printf_i+0x188>
90029466:	065f      	lsls	r7, r3, #25
90029468:	bf48      	it	mi
9002946a:	b2ad      	uxthmi	r5, r5
9002946c:	6031      	str	r1, [r6, #0]
9002946e:	07d9      	lsls	r1, r3, #31
90029470:	bf44      	itt	mi
90029472:	f043 0320 	orrmi.w	r3, r3, #32
90029476:	6023      	strmi	r3, [r4, #0]
90029478:	b11d      	cbz	r5, 90029482 <_printf_i+0x19e>
9002947a:	2310      	movs	r3, #16
9002947c:	e7ac      	b.n	900293d8 <_printf_i+0xf4>
9002947e:	4827      	ldr	r0, [pc, #156]	@ (9002951c <_printf_i+0x238>)
90029480:	e7e9      	b.n	90029456 <_printf_i+0x172>
90029482:	6823      	ldr	r3, [r4, #0]
90029484:	f023 0320 	bic.w	r3, r3, #32
90029488:	6023      	str	r3, [r4, #0]
9002948a:	e7f6      	b.n	9002947a <_printf_i+0x196>
9002948c:	4616      	mov	r6, r2
9002948e:	e7bd      	b.n	9002940c <_printf_i+0x128>
90029490:	6833      	ldr	r3, [r6, #0]
90029492:	6825      	ldr	r5, [r4, #0]
90029494:	6961      	ldr	r1, [r4, #20]
90029496:	1d18      	adds	r0, r3, #4
90029498:	6030      	str	r0, [r6, #0]
9002949a:	062e      	lsls	r6, r5, #24
9002949c:	681b      	ldr	r3, [r3, #0]
9002949e:	d501      	bpl.n	900294a4 <_printf_i+0x1c0>
900294a0:	6019      	str	r1, [r3, #0]
900294a2:	e002      	b.n	900294aa <_printf_i+0x1c6>
900294a4:	0668      	lsls	r0, r5, #25
900294a6:	d5fb      	bpl.n	900294a0 <_printf_i+0x1bc>
900294a8:	8019      	strh	r1, [r3, #0]
900294aa:	2300      	movs	r3, #0
900294ac:	6123      	str	r3, [r4, #16]
900294ae:	4616      	mov	r6, r2
900294b0:	e7bc      	b.n	9002942c <_printf_i+0x148>
900294b2:	6833      	ldr	r3, [r6, #0]
900294b4:	1d1a      	adds	r2, r3, #4
900294b6:	6032      	str	r2, [r6, #0]
900294b8:	681e      	ldr	r6, [r3, #0]
900294ba:	6862      	ldr	r2, [r4, #4]
900294bc:	2100      	movs	r1, #0
900294be:	4630      	mov	r0, r6
900294c0:	f7d6 ff0e 	bl	900002e0 <memchr>
900294c4:	b108      	cbz	r0, 900294ca <_printf_i+0x1e6>
900294c6:	1b80      	subs	r0, r0, r6
900294c8:	6060      	str	r0, [r4, #4]
900294ca:	6863      	ldr	r3, [r4, #4]
900294cc:	6123      	str	r3, [r4, #16]
900294ce:	2300      	movs	r3, #0
900294d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
900294d4:	e7aa      	b.n	9002942c <_printf_i+0x148>
900294d6:	6923      	ldr	r3, [r4, #16]
900294d8:	4632      	mov	r2, r6
900294da:	4649      	mov	r1, r9
900294dc:	4640      	mov	r0, r8
900294de:	47d0      	blx	sl
900294e0:	3001      	adds	r0, #1
900294e2:	d0ad      	beq.n	90029440 <_printf_i+0x15c>
900294e4:	6823      	ldr	r3, [r4, #0]
900294e6:	079b      	lsls	r3, r3, #30
900294e8:	d413      	bmi.n	90029512 <_printf_i+0x22e>
900294ea:	68e0      	ldr	r0, [r4, #12]
900294ec:	9b03      	ldr	r3, [sp, #12]
900294ee:	4298      	cmp	r0, r3
900294f0:	bfb8      	it	lt
900294f2:	4618      	movlt	r0, r3
900294f4:	e7a6      	b.n	90029444 <_printf_i+0x160>
900294f6:	2301      	movs	r3, #1
900294f8:	4632      	mov	r2, r6
900294fa:	4649      	mov	r1, r9
900294fc:	4640      	mov	r0, r8
900294fe:	47d0      	blx	sl
90029500:	3001      	adds	r0, #1
90029502:	d09d      	beq.n	90029440 <_printf_i+0x15c>
90029504:	3501      	adds	r5, #1
90029506:	68e3      	ldr	r3, [r4, #12]
90029508:	9903      	ldr	r1, [sp, #12]
9002950a:	1a5b      	subs	r3, r3, r1
9002950c:	42ab      	cmp	r3, r5
9002950e:	dcf2      	bgt.n	900294f6 <_printf_i+0x212>
90029510:	e7eb      	b.n	900294ea <_printf_i+0x206>
90029512:	2500      	movs	r5, #0
90029514:	f104 0619 	add.w	r6, r4, #25
90029518:	e7f5      	b.n	90029506 <_printf_i+0x222>
9002951a:	bf00      	nop
9002951c:	9002dfb1 	.word	0x9002dfb1
90029520:	9002dfc2 	.word	0x9002dfc2

90029524 <__sflush_r>:
90029524:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
90029528:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002952c:	0716      	lsls	r6, r2, #28
9002952e:	4605      	mov	r5, r0
90029530:	460c      	mov	r4, r1
90029532:	d454      	bmi.n	900295de <__sflush_r+0xba>
90029534:	684b      	ldr	r3, [r1, #4]
90029536:	2b00      	cmp	r3, #0
90029538:	dc02      	bgt.n	90029540 <__sflush_r+0x1c>
9002953a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002953c:	2b00      	cmp	r3, #0
9002953e:	dd48      	ble.n	900295d2 <__sflush_r+0xae>
90029540:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90029542:	2e00      	cmp	r6, #0
90029544:	d045      	beq.n	900295d2 <__sflush_r+0xae>
90029546:	2300      	movs	r3, #0
90029548:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002954c:	682f      	ldr	r7, [r5, #0]
9002954e:	6a21      	ldr	r1, [r4, #32]
90029550:	602b      	str	r3, [r5, #0]
90029552:	d030      	beq.n	900295b6 <__sflush_r+0x92>
90029554:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90029556:	89a3      	ldrh	r3, [r4, #12]
90029558:	0759      	lsls	r1, r3, #29
9002955a:	d505      	bpl.n	90029568 <__sflush_r+0x44>
9002955c:	6863      	ldr	r3, [r4, #4]
9002955e:	1ad2      	subs	r2, r2, r3
90029560:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90029562:	b10b      	cbz	r3, 90029568 <__sflush_r+0x44>
90029564:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90029566:	1ad2      	subs	r2, r2, r3
90029568:	2300      	movs	r3, #0
9002956a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002956c:	6a21      	ldr	r1, [r4, #32]
9002956e:	4628      	mov	r0, r5
90029570:	47b0      	blx	r6
90029572:	1c43      	adds	r3, r0, #1
90029574:	89a3      	ldrh	r3, [r4, #12]
90029576:	d106      	bne.n	90029586 <__sflush_r+0x62>
90029578:	6829      	ldr	r1, [r5, #0]
9002957a:	291d      	cmp	r1, #29
9002957c:	d82b      	bhi.n	900295d6 <__sflush_r+0xb2>
9002957e:	4a2a      	ldr	r2, [pc, #168]	@ (90029628 <__sflush_r+0x104>)
90029580:	410a      	asrs	r2, r1
90029582:	07d6      	lsls	r6, r2, #31
90029584:	d427      	bmi.n	900295d6 <__sflush_r+0xb2>
90029586:	2200      	movs	r2, #0
90029588:	6062      	str	r2, [r4, #4]
9002958a:	04d9      	lsls	r1, r3, #19
9002958c:	6922      	ldr	r2, [r4, #16]
9002958e:	6022      	str	r2, [r4, #0]
90029590:	d504      	bpl.n	9002959c <__sflush_r+0x78>
90029592:	1c42      	adds	r2, r0, #1
90029594:	d101      	bne.n	9002959a <__sflush_r+0x76>
90029596:	682b      	ldr	r3, [r5, #0]
90029598:	b903      	cbnz	r3, 9002959c <__sflush_r+0x78>
9002959a:	6560      	str	r0, [r4, #84]	@ 0x54
9002959c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002959e:	602f      	str	r7, [r5, #0]
900295a0:	b1b9      	cbz	r1, 900295d2 <__sflush_r+0xae>
900295a2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
900295a6:	4299      	cmp	r1, r3
900295a8:	d002      	beq.n	900295b0 <__sflush_r+0x8c>
900295aa:	4628      	mov	r0, r5
900295ac:	f7ff fca0 	bl	90028ef0 <_free_r>
900295b0:	2300      	movs	r3, #0
900295b2:	6363      	str	r3, [r4, #52]	@ 0x34
900295b4:	e00d      	b.n	900295d2 <__sflush_r+0xae>
900295b6:	2301      	movs	r3, #1
900295b8:	4628      	mov	r0, r5
900295ba:	47b0      	blx	r6
900295bc:	4602      	mov	r2, r0
900295be:	1c50      	adds	r0, r2, #1
900295c0:	d1c9      	bne.n	90029556 <__sflush_r+0x32>
900295c2:	682b      	ldr	r3, [r5, #0]
900295c4:	2b00      	cmp	r3, #0
900295c6:	d0c6      	beq.n	90029556 <__sflush_r+0x32>
900295c8:	2b1d      	cmp	r3, #29
900295ca:	d001      	beq.n	900295d0 <__sflush_r+0xac>
900295cc:	2b16      	cmp	r3, #22
900295ce:	d11e      	bne.n	9002960e <__sflush_r+0xea>
900295d0:	602f      	str	r7, [r5, #0]
900295d2:	2000      	movs	r0, #0
900295d4:	e022      	b.n	9002961c <__sflush_r+0xf8>
900295d6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
900295da:	b21b      	sxth	r3, r3
900295dc:	e01b      	b.n	90029616 <__sflush_r+0xf2>
900295de:	690f      	ldr	r7, [r1, #16]
900295e0:	2f00      	cmp	r7, #0
900295e2:	d0f6      	beq.n	900295d2 <__sflush_r+0xae>
900295e4:	0793      	lsls	r3, r2, #30
900295e6:	680e      	ldr	r6, [r1, #0]
900295e8:	bf08      	it	eq
900295ea:	694b      	ldreq	r3, [r1, #20]
900295ec:	600f      	str	r7, [r1, #0]
900295ee:	bf18      	it	ne
900295f0:	2300      	movne	r3, #0
900295f2:	eba6 0807 	sub.w	r8, r6, r7
900295f6:	608b      	str	r3, [r1, #8]
900295f8:	f1b8 0f00 	cmp.w	r8, #0
900295fc:	dde9      	ble.n	900295d2 <__sflush_r+0xae>
900295fe:	6a21      	ldr	r1, [r4, #32]
90029600:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
90029602:	4643      	mov	r3, r8
90029604:	463a      	mov	r2, r7
90029606:	4628      	mov	r0, r5
90029608:	47b0      	blx	r6
9002960a:	2800      	cmp	r0, #0
9002960c:	dc08      	bgt.n	90029620 <__sflush_r+0xfc>
9002960e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029612:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90029616:	81a3      	strh	r3, [r4, #12]
90029618:	f04f 30ff 	mov.w	r0, #4294967295
9002961c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029620:	4407      	add	r7, r0
90029622:	eba8 0800 	sub.w	r8, r8, r0
90029626:	e7e7      	b.n	900295f8 <__sflush_r+0xd4>
90029628:	dfbffffe 	.word	0xdfbffffe

9002962c <_fflush_r>:
9002962c:	b538      	push	{r3, r4, r5, lr}
9002962e:	690b      	ldr	r3, [r1, #16]
90029630:	4605      	mov	r5, r0
90029632:	460c      	mov	r4, r1
90029634:	b913      	cbnz	r3, 9002963c <_fflush_r+0x10>
90029636:	2500      	movs	r5, #0
90029638:	4628      	mov	r0, r5
9002963a:	bd38      	pop	{r3, r4, r5, pc}
9002963c:	b118      	cbz	r0, 90029646 <_fflush_r+0x1a>
9002963e:	6a03      	ldr	r3, [r0, #32]
90029640:	b90b      	cbnz	r3, 90029646 <_fflush_r+0x1a>
90029642:	f7ff f9e9 	bl	90028a18 <__sinit>
90029646:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002964a:	2b00      	cmp	r3, #0
9002964c:	d0f3      	beq.n	90029636 <_fflush_r+0xa>
9002964e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
90029650:	07d0      	lsls	r0, r2, #31
90029652:	d404      	bmi.n	9002965e <_fflush_r+0x32>
90029654:	0599      	lsls	r1, r3, #22
90029656:	d402      	bmi.n	9002965e <_fflush_r+0x32>
90029658:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002965a:	f7ff fbdc 	bl	90028e16 <__retarget_lock_acquire_recursive>
9002965e:	4628      	mov	r0, r5
90029660:	4621      	mov	r1, r4
90029662:	f7ff ff5f 	bl	90029524 <__sflush_r>
90029666:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90029668:	07da      	lsls	r2, r3, #31
9002966a:	4605      	mov	r5, r0
9002966c:	d4e4      	bmi.n	90029638 <_fflush_r+0xc>
9002966e:	89a3      	ldrh	r3, [r4, #12]
90029670:	059b      	lsls	r3, r3, #22
90029672:	d4e1      	bmi.n	90029638 <_fflush_r+0xc>
90029674:	6da0      	ldr	r0, [r4, #88]	@ 0x58
90029676:	f7ff fbcf 	bl	90028e18 <__retarget_lock_release_recursive>
9002967a:	e7dd      	b.n	90029638 <_fflush_r+0xc>

9002967c <__swhatbuf_r>:
9002967c:	b570      	push	{r4, r5, r6, lr}
9002967e:	460c      	mov	r4, r1
90029680:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029684:	2900      	cmp	r1, #0
90029686:	b096      	sub	sp, #88	@ 0x58
90029688:	4615      	mov	r5, r2
9002968a:	461e      	mov	r6, r3
9002968c:	da0d      	bge.n	900296aa <__swhatbuf_r+0x2e>
9002968e:	89a3      	ldrh	r3, [r4, #12]
90029690:	f013 0f80 	tst.w	r3, #128	@ 0x80
90029694:	f04f 0100 	mov.w	r1, #0
90029698:	bf14      	ite	ne
9002969a:	2340      	movne	r3, #64	@ 0x40
9002969c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
900296a0:	2000      	movs	r0, #0
900296a2:	6031      	str	r1, [r6, #0]
900296a4:	602b      	str	r3, [r5, #0]
900296a6:	b016      	add	sp, #88	@ 0x58
900296a8:	bd70      	pop	{r4, r5, r6, pc}
900296aa:	466a      	mov	r2, sp
900296ac:	f000 f848 	bl	90029740 <_fstat_r>
900296b0:	2800      	cmp	r0, #0
900296b2:	dbec      	blt.n	9002968e <__swhatbuf_r+0x12>
900296b4:	9901      	ldr	r1, [sp, #4]
900296b6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
900296ba:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
900296be:	4259      	negs	r1, r3
900296c0:	4159      	adcs	r1, r3
900296c2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
900296c6:	e7eb      	b.n	900296a0 <__swhatbuf_r+0x24>

900296c8 <__smakebuf_r>:
900296c8:	898b      	ldrh	r3, [r1, #12]
900296ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900296cc:	079d      	lsls	r5, r3, #30
900296ce:	4606      	mov	r6, r0
900296d0:	460c      	mov	r4, r1
900296d2:	d507      	bpl.n	900296e4 <__smakebuf_r+0x1c>
900296d4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
900296d8:	6023      	str	r3, [r4, #0]
900296da:	6123      	str	r3, [r4, #16]
900296dc:	2301      	movs	r3, #1
900296de:	6163      	str	r3, [r4, #20]
900296e0:	b003      	add	sp, #12
900296e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900296e4:	ab01      	add	r3, sp, #4
900296e6:	466a      	mov	r2, sp
900296e8:	f7ff ffc8 	bl	9002967c <__swhatbuf_r>
900296ec:	9f00      	ldr	r7, [sp, #0]
900296ee:	4605      	mov	r5, r0
900296f0:	4639      	mov	r1, r7
900296f2:	4630      	mov	r0, r6
900296f4:	f7ff f86a 	bl	900287cc <_malloc_r>
900296f8:	b948      	cbnz	r0, 9002970e <__smakebuf_r+0x46>
900296fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
900296fe:	059a      	lsls	r2, r3, #22
90029700:	d4ee      	bmi.n	900296e0 <__smakebuf_r+0x18>
90029702:	f023 0303 	bic.w	r3, r3, #3
90029706:	f043 0302 	orr.w	r3, r3, #2
9002970a:	81a3      	strh	r3, [r4, #12]
9002970c:	e7e2      	b.n	900296d4 <__smakebuf_r+0xc>
9002970e:	89a3      	ldrh	r3, [r4, #12]
90029710:	6020      	str	r0, [r4, #0]
90029712:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90029716:	81a3      	strh	r3, [r4, #12]
90029718:	9b01      	ldr	r3, [sp, #4]
9002971a:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002971e:	b15b      	cbz	r3, 90029738 <__smakebuf_r+0x70>
90029720:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90029724:	4630      	mov	r0, r6
90029726:	f000 f81d 	bl	90029764 <_isatty_r>
9002972a:	b128      	cbz	r0, 90029738 <__smakebuf_r+0x70>
9002972c:	89a3      	ldrh	r3, [r4, #12]
9002972e:	f023 0303 	bic.w	r3, r3, #3
90029732:	f043 0301 	orr.w	r3, r3, #1
90029736:	81a3      	strh	r3, [r4, #12]
90029738:	89a3      	ldrh	r3, [r4, #12]
9002973a:	431d      	orrs	r5, r3
9002973c:	81a5      	strh	r5, [r4, #12]
9002973e:	e7cf      	b.n	900296e0 <__smakebuf_r+0x18>

90029740 <_fstat_r>:
90029740:	b538      	push	{r3, r4, r5, lr}
90029742:	4d07      	ldr	r5, [pc, #28]	@ (90029760 <_fstat_r+0x20>)
90029744:	2300      	movs	r3, #0
90029746:	4604      	mov	r4, r0
90029748:	4608      	mov	r0, r1
9002974a:	4611      	mov	r1, r2
9002974c:	602b      	str	r3, [r5, #0]
9002974e:	f7db f82d 	bl	900047ac <_fstat>
90029752:	1c43      	adds	r3, r0, #1
90029754:	d102      	bne.n	9002975c <_fstat_r+0x1c>
90029756:	682b      	ldr	r3, [r5, #0]
90029758:	b103      	cbz	r3, 9002975c <_fstat_r+0x1c>
9002975a:	6023      	str	r3, [r4, #0]
9002975c:	bd38      	pop	{r3, r4, r5, pc}
9002975e:	bf00      	nop
90029760:	2402277c 	.word	0x2402277c

90029764 <_isatty_r>:
90029764:	b538      	push	{r3, r4, r5, lr}
90029766:	4d06      	ldr	r5, [pc, #24]	@ (90029780 <_isatty_r+0x1c>)
90029768:	2300      	movs	r3, #0
9002976a:	4604      	mov	r4, r0
9002976c:	4608      	mov	r0, r1
9002976e:	602b      	str	r3, [r5, #0]
90029770:	f7db f822 	bl	900047b8 <_isatty>
90029774:	1c43      	adds	r3, r0, #1
90029776:	d102      	bne.n	9002977e <_isatty_r+0x1a>
90029778:	682b      	ldr	r3, [r5, #0]
9002977a:	b103      	cbz	r3, 9002977e <_isatty_r+0x1a>
9002977c:	6023      	str	r3, [r4, #0]
9002977e:	bd38      	pop	{r3, r4, r5, pc}
90029780:	2402277c 	.word	0x2402277c

90029784 <_init>:
90029784:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029786:	bf00      	nop
90029788:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002978a:	bc08      	pop	{r3}
9002978c:	469e      	mov	lr, r3
9002978e:	4770      	bx	lr

90029790 <_fini>:
90029790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029792:	bf00      	nop
90029794:	bcf8      	pop	{r3, r4, r5, r6, r7}
90029796:	bc08      	pop	{r3}
90029798:	469e      	mov	lr, r3
9002979a:	4770      	bx	lr
