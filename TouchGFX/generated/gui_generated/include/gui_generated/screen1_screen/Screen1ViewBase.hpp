/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void playC()
    {
        // Override and implement this function in Screen1
    }
    virtual void playCIS()
    {
        // Override and implement this function in Screen1
    }
    virtual void playD()
    {
        // Override and implement this function in Screen1
    }
    virtual void playDIS()
    {
        // Override and implement this function in Screen1
    }
    virtual void playE()
    {
        // Override and implement this function in Screen1
    }
    virtual void playF()
    {
        // Override and implement this function in Screen1
    }
    virtual void playFIS()
    {
        // Override and implement this function in Screen1
    }
    virtual void playG()
    {
        // Override and implement this function in Screen1
    }
    virtual void playGIS()
    {
        // Override and implement this function in Screen1
    }
    virtual void playA()
    {
        // Override and implement this function in Screen1
    }
    virtual void playAIS()
    {
        // Override and implement this function in Screen1
    }
    virtual void playH()
    {
        // Override and implement this function in Screen1
    }
    virtual void playNone()
    {
        // Override and implement this function in Screen1
    }
    virtual void functionLEFT()
    {
        // Override and implement this function in Screen1
    }
    virtual void functionRIGHT()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::ButtonWithLabel buttonWithLabelC;
    touchgfx::ButtonWithLabel buttonWithLabelCIS;
    touchgfx::ButtonWithLabel buttonWithLabelDIS;
    touchgfx::ButtonWithLabel buttonWithLabelFIS;
    touchgfx::ButtonWithLabel buttonWithLabelGIS;
    touchgfx::ButtonWithLabel buttonWithLabelAIS;
    touchgfx::ButtonWithLabel buttonWithLabelD;
    touchgfx::ButtonWithLabel buttonWithLabelE;
    touchgfx::ButtonWithLabel buttonWithLabelF;
    touchgfx::ButtonWithLabel buttonWithLabelG;
    touchgfx::ButtonWithLabel buttonWithLabelH;
    touchgfx::ButtonWithLabel buttonWithLabelA;
    touchgfx::ButtonWithIcon buttonRIGHT;
    touchgfx::ButtonWithIcon buttonLEFT;
    touchgfx::TextAreaWithOneWildcard textArea1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN1VIEWBASE_HPP
